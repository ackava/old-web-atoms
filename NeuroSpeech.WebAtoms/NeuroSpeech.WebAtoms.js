/*Line 0 - 'jquery-1.5.1-vsdoc.js' *//*
/*Line 1 - 'jquery-1.5.1-vsdoc.js' */ * This file has been commented to support Visual Studio Intellisense.
/*Line 2 - 'jquery-1.5.1-vsdoc.js' */ * You should not use this file at runtime inside the browser--it is only
/*Line 3 - 'jquery-1.5.1-vsdoc.js' */ * intended to be used only for design-time IntelliSense.  Please use the
/*Line 4 - 'jquery-1.5.1-vsdoc.js' */ * standard jQuery library for all production use.
/*Line 5 - 'jquery-1.5.1-vsdoc.js' */ *
/*Line 6 - 'jquery-1.5.1-vsdoc.js' */ * Comment version: 1.5.1
/*Line 7 - 'jquery-1.5.1-vsdoc.js' */ */

/*Line 9 - 'jquery-1.5.1-vsdoc.js' *//*!
/*Line 10 - 'jquery-1.5.1-vsdoc.js' */ * Note: While Microsoft is not the author of this file, Microsoft is
/*Line 11 - 'jquery-1.5.1-vsdoc.js' */ * offering you a license subject to the terms of the Microsoft Software
/*Line 12 - 'jquery-1.5.1-vsdoc.js' */ * License Terms for Microsoft ASP.NET Model View Controller 3.
/*Line 13 - 'jquery-1.5.1-vsdoc.js' */ * Microsoft reserves all other rights. The notices below are provided
/*Line 14 - 'jquery-1.5.1-vsdoc.js' */ * for informational purposes only and are not the license terms under
/*Line 15 - 'jquery-1.5.1-vsdoc.js' */ * which Microsoft distributed this file.
/*Line 16 - 'jquery-1.5.1-vsdoc.js' */ *
/*Line 17 - 'jquery-1.5.1-vsdoc.js' */ * jQuery JavaScript Library v1.5.1
/*Line 18 - 'jquery-1.5.1-vsdoc.js' */ * http://jquery.com/
/*Line 19 - 'jquery-1.5.1-vsdoc.js' */ *
/*Line 20 - 'jquery-1.5.1-vsdoc.js' */ * Copyright 2010, John Resig
/*Line 21 - 'jquery-1.5.1-vsdoc.js' */ *
/*Line 22 - 'jquery-1.5.1-vsdoc.js' */ * Includes Sizzle.js
/*Line 23 - 'jquery-1.5.1-vsdoc.js' */ * http://sizzlejs.com/
/*Line 24 - 'jquery-1.5.1-vsdoc.js' */ * Copyright 2010, The Dojo Foundation
/*Line 25 - 'jquery-1.5.1-vsdoc.js' */ *
/*Line 26 - 'jquery-1.5.1-vsdoc.js' */ */
/*Line 27 - 'jquery-1.5.1-vsdoc.js' */(function( window, undefined ) {

/*Line 29 - 'jquery-1.5.1-vsdoc.js' */// Use the correct document accordingly with window argument (sandbox)
/*Line 30 - 'jquery-1.5.1-vsdoc.js' */var document = window.document;
/*Line 31 - 'jquery-1.5.1-vsdoc.js' */var jQuery = (function() {

/*Line 33 - 'jquery-1.5.1-vsdoc.js' */// Define a local copy of jQuery
/*Line 34 - 'jquery-1.5.1-vsdoc.js' */var jQuery = function( selector, context ) {
/*Line 35 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 36 - 'jquery-1.5.1-vsdoc.js' */		///     1: $(expression, context) - This function accepts a string containing a CSS selector which is then used to match a set of elements.
/*Line 37 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;2: $(html) - Create DOM elements on-the-fly from the provided String of raw HTML.
/*Line 38 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;3: $(elements) - Wrap jQuery functionality around a single or multiple DOM Element(s).
/*Line 39 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;4: $(callback) - A shorthand for $(document).ready().
/*Line 40 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;5: $() - As of jQuery 1.4, if you pass no arguments in to the jQuery() method, an empty jQuery set will be returned.
/*Line 41 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 42 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="selector" type="String">
/*Line 43 - 'jquery-1.5.1-vsdoc.js' */		///     1: expression - An expression to search with.
/*Line 44 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;2: html - A string of HTML to create on the fly.
/*Line 45 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;3: elements - DOM element(s) to be encapsulated by a jQuery object.
/*Line 46 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;4: callback - The function to execute when the DOM is ready.
/*Line 47 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 48 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="context" type="jQuery">
/*Line 49 - 'jquery-1.5.1-vsdoc.js' */		///     1: context - A DOM Element, Document or jQuery to use as context.
/*Line 50 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 51 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 53 - 'jquery-1.5.1-vsdoc.js' */		// The jQuery object is actually just the init constructor 'enhanced'
/*Line 54 - 'jquery-1.5.1-vsdoc.js' */		return new jQuery.fn.init( selector, context );
/*Line 55 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 57 - 'jquery-1.5.1-vsdoc.js' */	// Map over jQuery in case of overwrite
/*Line 58 - 'jquery-1.5.1-vsdoc.js' */	_jQuery = window.jQuery,

/*Line 60 - 'jquery-1.5.1-vsdoc.js' */	// Map over the $ in case of overwrite
/*Line 61 - 'jquery-1.5.1-vsdoc.js' */	_$ = window.$,

/*Line 63 - 'jquery-1.5.1-vsdoc.js' */	// A central reference to the root jQuery(document)
/*Line 64 - 'jquery-1.5.1-vsdoc.js' */	rootjQuery,

/*Line 66 - 'jquery-1.5.1-vsdoc.js' */	// A simple way to check for HTML strings or ID strings
/*Line 67 - 'jquery-1.5.1-vsdoc.js' */	// (both of which we optimize for)
/*Line 68 - 'jquery-1.5.1-vsdoc.js' */	quickExpr = /^(?:[^<]*(<[\w\W]+>)[^>]*$|#([\w\-]+)$)/,

/*Line 70 - 'jquery-1.5.1-vsdoc.js' */	// Is it a simple selector
/*Line 71 - 'jquery-1.5.1-vsdoc.js' */	isSimple = /^.[^:#\[\.,]*$/,

/*Line 73 - 'jquery-1.5.1-vsdoc.js' */	// Check if a string has a non-whitespace character in it
/*Line 74 - 'jquery-1.5.1-vsdoc.js' */	rnotwhite = /\S/,
/*Line 75 - 'jquery-1.5.1-vsdoc.js' */	rwhite = /\s/,

/*Line 77 - 'jquery-1.5.1-vsdoc.js' */	// Used for trimming whitespace
/*Line 78 - 'jquery-1.5.1-vsdoc.js' */	trimLeft = /^\s+/,
/*Line 79 - 'jquery-1.5.1-vsdoc.js' */	trimRight = /\s+$/,

/*Line 81 - 'jquery-1.5.1-vsdoc.js' */	// Check for non-word characters
/*Line 82 - 'jquery-1.5.1-vsdoc.js' */	rnonword = /\W/,

/*Line 84 - 'jquery-1.5.1-vsdoc.js' */	// Check for digits
/*Line 85 - 'jquery-1.5.1-vsdoc.js' */	rdigit = /\d/,

/*Line 87 - 'jquery-1.5.1-vsdoc.js' */	// Match a standalone tag
/*Line 88 - 'jquery-1.5.1-vsdoc.js' */	rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>)?$/,

/*Line 90 - 'jquery-1.5.1-vsdoc.js' */	// JSON RegExp
/*Line 91 - 'jquery-1.5.1-vsdoc.js' */	rvalidchars = /^[\],:{}\s]*$/,
/*Line 92 - 'jquery-1.5.1-vsdoc.js' */	rvalidescape = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,
/*Line 93 - 'jquery-1.5.1-vsdoc.js' */	rvalidtokens = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
/*Line 94 - 'jquery-1.5.1-vsdoc.js' */	rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g,

/*Line 96 - 'jquery-1.5.1-vsdoc.js' */	// Useragent RegExp
/*Line 97 - 'jquery-1.5.1-vsdoc.js' */	rwebkit = /(webkit)[ \/]([\w.]+)/,
/*Line 98 - 'jquery-1.5.1-vsdoc.js' */	ropera = /(opera)(?:.*version)?[ \/]([\w.]+)/,
/*Line 99 - 'jquery-1.5.1-vsdoc.js' */	rmsie = /(msie) ([\w.]+)/,
/*Line 100 - 'jquery-1.5.1-vsdoc.js' */	rmozilla = /(mozilla)(?:.*? rv:([\w.]+))?/,

/*Line 102 - 'jquery-1.5.1-vsdoc.js' */	// Keep a UserAgent string for use with jQuery.browser
/*Line 103 - 'jquery-1.5.1-vsdoc.js' */	userAgent = navigator.userAgent,

/*Line 105 - 'jquery-1.5.1-vsdoc.js' */	// For matching the engine and version of the browser
/*Line 106 - 'jquery-1.5.1-vsdoc.js' */	browserMatch,
	
/*Line 108 - 'jquery-1.5.1-vsdoc.js' */	// Has the ready events already been bound?
/*Line 109 - 'jquery-1.5.1-vsdoc.js' */	readyBound = false,
	
/*Line 111 - 'jquery-1.5.1-vsdoc.js' */	// The functions to execute on DOM ready
/*Line 112 - 'jquery-1.5.1-vsdoc.js' */	readyList = [],

/*Line 114 - 'jquery-1.5.1-vsdoc.js' */	// The ready event handler
/*Line 115 - 'jquery-1.5.1-vsdoc.js' */	DOMContentLoaded,

/*Line 117 - 'jquery-1.5.1-vsdoc.js' */	// Save a reference to some core methods
/*Line 118 - 'jquery-1.5.1-vsdoc.js' */	toString = Object.prototype.toString,
/*Line 119 - 'jquery-1.5.1-vsdoc.js' */	hasOwn = Object.prototype.hasOwnProperty,
/*Line 120 - 'jquery-1.5.1-vsdoc.js' */	push = Array.prototype.push,
/*Line 121 - 'jquery-1.5.1-vsdoc.js' */	slice = Array.prototype.slice,
/*Line 122 - 'jquery-1.5.1-vsdoc.js' */	trim = String.prototype.trim,
/*Line 123 - 'jquery-1.5.1-vsdoc.js' */	indexOf = Array.prototype.indexOf,
	
/*Line 125 - 'jquery-1.5.1-vsdoc.js' */	// [[Class]] -> type pairs
/*Line 126 - 'jquery-1.5.1-vsdoc.js' */	class2type = {};

/*Line 128 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn = jQuery.prototype = {
/*Line 129 - 'jquery-1.5.1-vsdoc.js' */	init: function( selector, context ) {
/*Line 130 - 'jquery-1.5.1-vsdoc.js' */		var match, elem, ret, doc;

/*Line 132 - 'jquery-1.5.1-vsdoc.js' */		// Handle $(""), $(null), or $(undefined)
/*Line 133 - 'jquery-1.5.1-vsdoc.js' */		if ( !selector ) {
/*Line 134 - 'jquery-1.5.1-vsdoc.js' */			return this;
/*Line 135 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 137 - 'jquery-1.5.1-vsdoc.js' */		// Handle $(DOMElement)
/*Line 138 - 'jquery-1.5.1-vsdoc.js' */		if ( selector.nodeType ) {
/*Line 139 - 'jquery-1.5.1-vsdoc.js' */			this.context = this[0] = selector;
/*Line 140 - 'jquery-1.5.1-vsdoc.js' */			this.length = 1;
/*Line 141 - 'jquery-1.5.1-vsdoc.js' */			return this;
/*Line 142 - 'jquery-1.5.1-vsdoc.js' */		}
		
/*Line 144 - 'jquery-1.5.1-vsdoc.js' */		// The body element only exists once, optimize finding it
/*Line 145 - 'jquery-1.5.1-vsdoc.js' */		if ( selector === "body" && !context && document.body ) {
/*Line 146 - 'jquery-1.5.1-vsdoc.js' */			this.context = document;
/*Line 147 - 'jquery-1.5.1-vsdoc.js' */			this[0] = document.body;
/*Line 148 - 'jquery-1.5.1-vsdoc.js' */			this.selector = "body";
/*Line 149 - 'jquery-1.5.1-vsdoc.js' */			this.length = 1;
/*Line 150 - 'jquery-1.5.1-vsdoc.js' */			return this;
/*Line 151 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 153 - 'jquery-1.5.1-vsdoc.js' */		// Handle HTML strings
/*Line 154 - 'jquery-1.5.1-vsdoc.js' */		if ( typeof selector === "string" ) {
/*Line 155 - 'jquery-1.5.1-vsdoc.js' */			// Are we dealing with HTML string or an ID?
/*Line 156 - 'jquery-1.5.1-vsdoc.js' */			match = quickExpr.exec( selector );

/*Line 158 - 'jquery-1.5.1-vsdoc.js' */			// Verify a match, and that no context was specified for #id
/*Line 159 - 'jquery-1.5.1-vsdoc.js' */			if ( match && (match[1] || !context) ) {

/*Line 161 - 'jquery-1.5.1-vsdoc.js' */				// HANDLE: $(html) -> $(array)
/*Line 162 - 'jquery-1.5.1-vsdoc.js' */				if ( match[1] ) {
/*Line 163 - 'jquery-1.5.1-vsdoc.js' */					doc = (context ? context.ownerDocument || context : document);

/*Line 165 - 'jquery-1.5.1-vsdoc.js' */					// If a single string is passed in and it's a single tag
/*Line 166 - 'jquery-1.5.1-vsdoc.js' */					// just do a createElement and skip the rest
/*Line 167 - 'jquery-1.5.1-vsdoc.js' */					ret = rsingleTag.exec( selector );

/*Line 169 - 'jquery-1.5.1-vsdoc.js' */					if ( ret ) {
/*Line 170 - 'jquery-1.5.1-vsdoc.js' */						if ( jQuery.isPlainObject( context ) ) {
/*Line 171 - 'jquery-1.5.1-vsdoc.js' */							selector = [ document.createElement( ret[1] ) ];
/*Line 172 - 'jquery-1.5.1-vsdoc.js' */							jQuery.fn.attr.call( selector, context, true );

/*Line 174 - 'jquery-1.5.1-vsdoc.js' */						} else {
/*Line 175 - 'jquery-1.5.1-vsdoc.js' */							selector = [ doc.createElement( ret[1] ) ];
/*Line 176 - 'jquery-1.5.1-vsdoc.js' */						}

/*Line 178 - 'jquery-1.5.1-vsdoc.js' */					} else {
/*Line 179 - 'jquery-1.5.1-vsdoc.js' */						ret = jQuery.buildFragment( [ match[1] ], [ doc ] );
/*Line 180 - 'jquery-1.5.1-vsdoc.js' */						selector = (ret.cacheable ? ret.fragment.cloneNode(true) : ret.fragment).childNodes;
/*Line 181 - 'jquery-1.5.1-vsdoc.js' */					}
					
/*Line 183 - 'jquery-1.5.1-vsdoc.js' */					return jQuery.merge( this, selector );
					
/*Line 185 - 'jquery-1.5.1-vsdoc.js' */				// HANDLE: $("#id")
/*Line 186 - 'jquery-1.5.1-vsdoc.js' */				} else {
/*Line 187 - 'jquery-1.5.1-vsdoc.js' */					elem = document.getElementById( match[2] );

/*Line 189 - 'jquery-1.5.1-vsdoc.js' */					// Check parentNode to catch when Blackberry 4.6 returns
/*Line 190 - 'jquery-1.5.1-vsdoc.js' */					// nodes that are no longer in the document #6963
/*Line 191 - 'jquery-1.5.1-vsdoc.js' */					if ( elem && elem.parentNode ) {
/*Line 192 - 'jquery-1.5.1-vsdoc.js' */						// Handle the case where IE and Opera return items
/*Line 193 - 'jquery-1.5.1-vsdoc.js' */						// by name instead of ID
/*Line 194 - 'jquery-1.5.1-vsdoc.js' */						if ( elem.id !== match[2] ) {
/*Line 195 - 'jquery-1.5.1-vsdoc.js' */							return rootjQuery.find( selector );
/*Line 196 - 'jquery-1.5.1-vsdoc.js' */						}

/*Line 198 - 'jquery-1.5.1-vsdoc.js' */						// Otherwise, we inject the element directly into the jQuery object
/*Line 199 - 'jquery-1.5.1-vsdoc.js' */						this.length = 1;
/*Line 200 - 'jquery-1.5.1-vsdoc.js' */						this[0] = elem;
/*Line 201 - 'jquery-1.5.1-vsdoc.js' */					}

/*Line 203 - 'jquery-1.5.1-vsdoc.js' */					this.context = document;
/*Line 204 - 'jquery-1.5.1-vsdoc.js' */					this.selector = selector;
/*Line 205 - 'jquery-1.5.1-vsdoc.js' */					return this;
/*Line 206 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 208 - 'jquery-1.5.1-vsdoc.js' */			// HANDLE: $("TAG")
/*Line 209 - 'jquery-1.5.1-vsdoc.js' */			} else if ( !context && !rnonword.test( selector ) ) {
/*Line 210 - 'jquery-1.5.1-vsdoc.js' */				this.selector = selector;
/*Line 211 - 'jquery-1.5.1-vsdoc.js' */				this.context = document;
/*Line 212 - 'jquery-1.5.1-vsdoc.js' */				selector = document.getElementsByTagName( selector );
/*Line 213 - 'jquery-1.5.1-vsdoc.js' */				return jQuery.merge( this, selector );

/*Line 215 - 'jquery-1.5.1-vsdoc.js' */			// HANDLE: $(expr, $(...))
/*Line 216 - 'jquery-1.5.1-vsdoc.js' */			} else if ( !context || context.jquery ) {
/*Line 217 - 'jquery-1.5.1-vsdoc.js' */				return (context || rootjQuery).find( selector );

/*Line 219 - 'jquery-1.5.1-vsdoc.js' */			// HANDLE: $(expr, context)
/*Line 220 - 'jquery-1.5.1-vsdoc.js' */			// (which is just equivalent to: $(context).find(expr)
/*Line 221 - 'jquery-1.5.1-vsdoc.js' */			} else {
/*Line 222 - 'jquery-1.5.1-vsdoc.js' */				return jQuery( context ).find( selector );
/*Line 223 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 225 - 'jquery-1.5.1-vsdoc.js' */		// HANDLE: $(function)
/*Line 226 - 'jquery-1.5.1-vsdoc.js' */		// Shortcut for document ready
/*Line 227 - 'jquery-1.5.1-vsdoc.js' */		} else if ( jQuery.isFunction( selector ) ) {
/*Line 228 - 'jquery-1.5.1-vsdoc.js' */			return rootjQuery.ready( selector );
/*Line 229 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 231 - 'jquery-1.5.1-vsdoc.js' */		if (selector.selector !== undefined) {
/*Line 232 - 'jquery-1.5.1-vsdoc.js' */			this.selector = selector.selector;
/*Line 233 - 'jquery-1.5.1-vsdoc.js' */			this.context = selector.context;
/*Line 234 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 236 - 'jquery-1.5.1-vsdoc.js' */		return jQuery.makeArray( selector, this );
/*Line 237 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 239 - 'jquery-1.5.1-vsdoc.js' */	// Start with an empty selector
/*Line 240 - 'jquery-1.5.1-vsdoc.js' */	selector: "",

/*Line 242 - 'jquery-1.5.1-vsdoc.js' */	// The current version of jQuery being used
/*Line 243 - 'jquery-1.5.1-vsdoc.js' */	jquery: "1.4.4",

/*Line 245 - 'jquery-1.5.1-vsdoc.js' */	// The default length of a jQuery object is 0
/*Line 246 - 'jquery-1.5.1-vsdoc.js' */	length: 0,

/*Line 248 - 'jquery-1.5.1-vsdoc.js' */	// The number of elements contained in the matched element set
/*Line 249 - 'jquery-1.5.1-vsdoc.js' */	size: function() {
/*Line 250 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 251 - 'jquery-1.5.1-vsdoc.js' */	    ///     &#10;The number of elements currently matched.
/*Line 252 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of Core
/*Line 253 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 254 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="Number" />

/*Line 256 - 'jquery-1.5.1-vsdoc.js' */		return this.length;
/*Line 257 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 259 - 'jquery-1.5.1-vsdoc.js' */	toArray: function() {
/*Line 260 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 261 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Retrieve all the DOM elements contained in the jQuery set, as an array.
/*Line 262 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 263 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="Array" />
/*Line 264 - 'jquery-1.5.1-vsdoc.js' */		return slice.call( this, 0 );
/*Line 265 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 267 - 'jquery-1.5.1-vsdoc.js' */	// Get the Nth element in the matched element set OR
/*Line 268 - 'jquery-1.5.1-vsdoc.js' */	// Get the whole matched element set as a clean array
/*Line 269 - 'jquery-1.5.1-vsdoc.js' */	get: function( num ) {
/*Line 270 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 271 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Access a single matched element. num is used to access the
/*Line 272 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Nth element matched.
/*Line 273 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of Core
/*Line 274 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 275 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="Element" />
/*Line 276 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="num" type="Number">
/*Line 277 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Access the element in the Nth position.
/*Line 278 - 'jquery-1.5.1-vsdoc.js' */		///	</param>

/*Line 280 - 'jquery-1.5.1-vsdoc.js' */		return num == null ?

/*Line 282 - 'jquery-1.5.1-vsdoc.js' */			// Return a 'clean' array
/*Line 283 - 'jquery-1.5.1-vsdoc.js' */			this.toArray() :

/*Line 285 - 'jquery-1.5.1-vsdoc.js' */			// Return just the object
/*Line 286 - 'jquery-1.5.1-vsdoc.js' */			( num < 0 ? this.slice(num)[ 0 ] : this[ num ] );
/*Line 287 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 289 - 'jquery-1.5.1-vsdoc.js' */	// Take an array of elements and push it onto the stack
/*Line 290 - 'jquery-1.5.1-vsdoc.js' */	// (returning the new matched element set)
/*Line 291 - 'jquery-1.5.1-vsdoc.js' */	pushStack: function( elems, name, selector ) {
/*Line 292 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 293 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Set the jQuery object to an array of elements, while maintaining
/*Line 294 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;the stack.
/*Line 295 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of Core
/*Line 296 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 297 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />
/*Line 298 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="elems" type="Elements">
/*Line 299 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;An array of elements
/*Line 300 - 'jquery-1.5.1-vsdoc.js' */		///	</param>

/*Line 302 - 'jquery-1.5.1-vsdoc.js' */		// Build a new jQuery matched element set
/*Line 303 - 'jquery-1.5.1-vsdoc.js' */		var ret = jQuery();

/*Line 305 - 'jquery-1.5.1-vsdoc.js' */		if ( jQuery.isArray( elems ) ) {
/*Line 306 - 'jquery-1.5.1-vsdoc.js' */			push.apply( ret, elems );
		
/*Line 308 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 309 - 'jquery-1.5.1-vsdoc.js' */			jQuery.merge( ret, elems );
/*Line 310 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 312 - 'jquery-1.5.1-vsdoc.js' */		// Add the old object onto the stack (as a reference)
/*Line 313 - 'jquery-1.5.1-vsdoc.js' */		ret.prevObject = this;

/*Line 315 - 'jquery-1.5.1-vsdoc.js' */		ret.context = this.context;

/*Line 317 - 'jquery-1.5.1-vsdoc.js' */		if ( name === "find" ) {
/*Line 318 - 'jquery-1.5.1-vsdoc.js' */			ret.selector = this.selector + (this.selector ? " " : "") + selector;
/*Line 319 - 'jquery-1.5.1-vsdoc.js' */		} else if ( name ) {
/*Line 320 - 'jquery-1.5.1-vsdoc.js' */			ret.selector = this.selector + "." + name + "(" + selector + ")";
/*Line 321 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 323 - 'jquery-1.5.1-vsdoc.js' */		// Return the newly-formed element set
/*Line 324 - 'jquery-1.5.1-vsdoc.js' */		return ret;
/*Line 325 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 327 - 'jquery-1.5.1-vsdoc.js' */	// Execute a callback for every element in the matched set.
/*Line 328 - 'jquery-1.5.1-vsdoc.js' */	// (You can seed the arguments with an array of args, but this is
/*Line 329 - 'jquery-1.5.1-vsdoc.js' */	// only used internally.)
/*Line 330 - 'jquery-1.5.1-vsdoc.js' */	each: function( callback, args ) {
/*Line 331 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 332 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Execute a function within the context of every matched element.
/*Line 333 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This means that every time the passed-in function is executed
/*Line 334 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;(which is once for every element matched) the 'this' keyword
/*Line 335 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;points to the specific element.
/*Line 336 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Additionally, the function, when executed, is passed a single
/*Line 337 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;argument representing the position of the element in the matched
/*Line 338 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;set.
/*Line 339 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of Core
/*Line 340 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 341 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />
/*Line 342 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="callback" type="Function">
/*Line 343 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;A function to execute
/*Line 344 - 'jquery-1.5.1-vsdoc.js' */		///	</param>

/*Line 346 - 'jquery-1.5.1-vsdoc.js' */		return jQuery.each( this, callback, args );
/*Line 347 - 'jquery-1.5.1-vsdoc.js' */	},
	
/*Line 349 - 'jquery-1.5.1-vsdoc.js' */	ready: function( fn ) {
/*Line 350 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 351 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Binds a function to be executed whenever the DOM is ready to be traversed and manipulated.
/*Line 352 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 353 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="fn" type="Function">The function to be executed when the DOM is ready.</param>

/*Line 355 - 'jquery-1.5.1-vsdoc.js' */		// Attach the listeners
/*Line 356 - 'jquery-1.5.1-vsdoc.js' */		jQuery.bindReady();

/*Line 358 - 'jquery-1.5.1-vsdoc.js' */		// If the DOM is already ready
/*Line 359 - 'jquery-1.5.1-vsdoc.js' */		if ( jQuery.isReady ) {
/*Line 360 - 'jquery-1.5.1-vsdoc.js' */			// Execute the function immediately
/*Line 361 - 'jquery-1.5.1-vsdoc.js' */			fn.call( document, jQuery );

/*Line 363 - 'jquery-1.5.1-vsdoc.js' */		// Otherwise, remember the function for later
/*Line 364 - 'jquery-1.5.1-vsdoc.js' */		} else if ( readyList ) {
/*Line 365 - 'jquery-1.5.1-vsdoc.js' */			// Add the function to the wait list
/*Line 366 - 'jquery-1.5.1-vsdoc.js' */			readyList.push( fn );
/*Line 367 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 369 - 'jquery-1.5.1-vsdoc.js' */		return this;
/*Line 370 - 'jquery-1.5.1-vsdoc.js' */	},
	
/*Line 372 - 'jquery-1.5.1-vsdoc.js' */	eq: function( i ) {
/*Line 373 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 374 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Reduce the set of matched elements to a single element.
/*Line 375 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;The position of the element in the set of matched elements
/*Line 376 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;starts at 0 and goes to length - 1.
/*Line 377 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of Core
/*Line 378 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 379 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />
/*Line 380 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="num" type="Number">
/*Line 381 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;pos The index of the element that you wish to limit to.
/*Line 382 - 'jquery-1.5.1-vsdoc.js' */		///	</param>

/*Line 384 - 'jquery-1.5.1-vsdoc.js' */		return i === -1 ?
/*Line 385 - 'jquery-1.5.1-vsdoc.js' */			this.slice( i ) :
/*Line 386 - 'jquery-1.5.1-vsdoc.js' */			this.slice( i, +i + 1 );
/*Line 387 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 389 - 'jquery-1.5.1-vsdoc.js' */	first: function() {
/*Line 390 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 391 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Reduce the set of matched elements to the first in the set.
/*Line 392 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 393 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 395 - 'jquery-1.5.1-vsdoc.js' */		return this.eq( 0 );
/*Line 396 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 398 - 'jquery-1.5.1-vsdoc.js' */	last: function() {
/*Line 399 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 400 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Reduce the set of matched elements to the final one in the set.
/*Line 401 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 402 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 404 - 'jquery-1.5.1-vsdoc.js' */		return this.eq( -1 );
/*Line 405 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 407 - 'jquery-1.5.1-vsdoc.js' */	slice: function() {
/*Line 408 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 409 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Selects a subset of the matched elements.  Behaves exactly like the built-in Array slice method.
/*Line 410 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 411 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="start" type="Number" integer="true">Where to start the subset (0-based).</param>
/*Line 412 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="end" optional="true" type="Number" integer="true">Where to end the subset (not including the end element itself).
/*Line 413 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;If omitted, ends at the end of the selection</param>
/*Line 414 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery">The sliced elements</returns>

/*Line 416 - 'jquery-1.5.1-vsdoc.js' */		return this.pushStack( slice.apply( this, arguments ),
/*Line 417 - 'jquery-1.5.1-vsdoc.js' */			"slice", slice.call(arguments).join(",") );
/*Line 418 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 420 - 'jquery-1.5.1-vsdoc.js' */	map: function( callback ) {
/*Line 421 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 422 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This member is internal.
/*Line 423 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 424 - 'jquery-1.5.1-vsdoc.js' */		///	<private />
/*Line 425 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 427 - 'jquery-1.5.1-vsdoc.js' */		return this.pushStack( jQuery.map(this, function( elem, i ) {
/*Line 428 - 'jquery-1.5.1-vsdoc.js' */			return callback.call( elem, i, elem );
/*Line 429 - 'jquery-1.5.1-vsdoc.js' */		}));
/*Line 430 - 'jquery-1.5.1-vsdoc.js' */	},
	
/*Line 432 - 'jquery-1.5.1-vsdoc.js' */	end: function() {
/*Line 433 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 434 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;End the most recent 'destructive' operation, reverting the list of matched elements
/*Line 435 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;back to its previous state. After an end operation, the list of matched elements will
/*Line 436 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;revert to the last state of matched elements.
/*Line 437 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;If there was no destructive operation before, an empty set is returned.
/*Line 438 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of DOM/Traversing
/*Line 439 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 440 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 442 - 'jquery-1.5.1-vsdoc.js' */		return this.prevObject || jQuery(null);
/*Line 443 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 445 - 'jquery-1.5.1-vsdoc.js' */	// For internal use only.
/*Line 446 - 'jquery-1.5.1-vsdoc.js' */	// Behaves like an Array's method, not like a jQuery method.
/*Line 447 - 'jquery-1.5.1-vsdoc.js' */	push: push,
/*Line 448 - 'jquery-1.5.1-vsdoc.js' */	sort: [].sort,
/*Line 449 - 'jquery-1.5.1-vsdoc.js' */	splice: [].splice
/*Line 450 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 452 - 'jquery-1.5.1-vsdoc.js' */// Give the init function the jQuery prototype for later instantiation
/*Line 453 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn.init.prototype = jQuery.fn;

/*Line 455 - 'jquery-1.5.1-vsdoc.js' */jQuery.extend = jQuery.fn.extend = function() {
/*Line 456 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 457 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Extend one object with one or more others, returning the original,
/*Line 458 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;modified, object. This is a great utility for simple inheritance.
/*Line 459 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;jQuery.extend(settings, options);
/*Line 460 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;var settings = jQuery.extend({}, defaults, options);
/*Line 461 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Part of JavaScript
/*Line 462 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 463 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="target" type="Object">
/*Line 464 - 'jquery-1.5.1-vsdoc.js' */	///     &#10; The object to extend
/*Line 465 - 'jquery-1.5.1-vsdoc.js' */	///	</param>
/*Line 466 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="prop1" type="Object">
/*Line 467 - 'jquery-1.5.1-vsdoc.js' */	///     &#10; The object that will be merged into the first.
/*Line 468 - 'jquery-1.5.1-vsdoc.js' */	///	</param>
/*Line 469 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="propN" type="Object" optional="true" parameterArray="true">
/*Line 470 - 'jquery-1.5.1-vsdoc.js' */	///     &#10; (optional) More objects to merge into the first
/*Line 471 - 'jquery-1.5.1-vsdoc.js' */	///	</param>
/*Line 472 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="Object" />

/*Line 474 - 'jquery-1.5.1-vsdoc.js' */	 var options, name, src, copy, copyIsArray, clone,
/*Line 475 - 'jquery-1.5.1-vsdoc.js' */		target = arguments[0] || {},
/*Line 476 - 'jquery-1.5.1-vsdoc.js' */		i = 1,
/*Line 477 - 'jquery-1.5.1-vsdoc.js' */		length = arguments.length,
/*Line 478 - 'jquery-1.5.1-vsdoc.js' */		deep = false;

/*Line 480 - 'jquery-1.5.1-vsdoc.js' */	// Handle a deep copy situation
/*Line 481 - 'jquery-1.5.1-vsdoc.js' */	if ( typeof target === "boolean" ) {
/*Line 482 - 'jquery-1.5.1-vsdoc.js' */		deep = target;
/*Line 483 - 'jquery-1.5.1-vsdoc.js' */		target = arguments[1] || {};
/*Line 484 - 'jquery-1.5.1-vsdoc.js' */		// skip the boolean and the target
/*Line 485 - 'jquery-1.5.1-vsdoc.js' */		i = 2;
/*Line 486 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 488 - 'jquery-1.5.1-vsdoc.js' */	// Handle case when target is a string or something (possible in deep copy)
/*Line 489 - 'jquery-1.5.1-vsdoc.js' */	if ( typeof target !== "object" && !jQuery.isFunction(target) ) {
/*Line 490 - 'jquery-1.5.1-vsdoc.js' */		target = {};
/*Line 491 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 493 - 'jquery-1.5.1-vsdoc.js' */	// extend jQuery itself if only one argument is passed
/*Line 494 - 'jquery-1.5.1-vsdoc.js' */	if ( length === i ) {
/*Line 495 - 'jquery-1.5.1-vsdoc.js' */		target = this;
/*Line 496 - 'jquery-1.5.1-vsdoc.js' */		--i;
/*Line 497 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 499 - 'jquery-1.5.1-vsdoc.js' */	for ( ; i < length; i++ ) {
/*Line 500 - 'jquery-1.5.1-vsdoc.js' */		// Only deal with non-null/undefined values
/*Line 501 - 'jquery-1.5.1-vsdoc.js' */		if ( (options = arguments[ i ]) != null ) {
/*Line 502 - 'jquery-1.5.1-vsdoc.js' */			// Extend the base object
/*Line 503 - 'jquery-1.5.1-vsdoc.js' */			for ( name in options ) {
/*Line 504 - 'jquery-1.5.1-vsdoc.js' */				src = target[ name ];
/*Line 505 - 'jquery-1.5.1-vsdoc.js' */				copy = options[ name ];

/*Line 507 - 'jquery-1.5.1-vsdoc.js' */				// Prevent never-ending loop
/*Line 508 - 'jquery-1.5.1-vsdoc.js' */				if ( target === copy ) {
/*Line 509 - 'jquery-1.5.1-vsdoc.js' */					continue;
/*Line 510 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 512 - 'jquery-1.5.1-vsdoc.js' */				// Recurse if we're merging plain objects or arrays
/*Line 513 - 'jquery-1.5.1-vsdoc.js' */				if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {
/*Line 514 - 'jquery-1.5.1-vsdoc.js' */					if ( copyIsArray ) {
/*Line 515 - 'jquery-1.5.1-vsdoc.js' */						copyIsArray = false;
/*Line 516 - 'jquery-1.5.1-vsdoc.js' */						clone = src && jQuery.isArray(src) ? src : [];

/*Line 518 - 'jquery-1.5.1-vsdoc.js' */					} else {
/*Line 519 - 'jquery-1.5.1-vsdoc.js' */						clone = src && jQuery.isPlainObject(src) ? src : {};
/*Line 520 - 'jquery-1.5.1-vsdoc.js' */					}

/*Line 522 - 'jquery-1.5.1-vsdoc.js' */					// Never move original objects, clone them
/*Line 523 - 'jquery-1.5.1-vsdoc.js' */					target[ name ] = jQuery.extend( deep, clone, copy );

/*Line 525 - 'jquery-1.5.1-vsdoc.js' */				// Don't bring in undefined values
/*Line 526 - 'jquery-1.5.1-vsdoc.js' */				} else if ( copy !== undefined ) {
/*Line 527 - 'jquery-1.5.1-vsdoc.js' */					target[ name ] = copy;
/*Line 528 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 529 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 530 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 531 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 533 - 'jquery-1.5.1-vsdoc.js' */	// Return the modified object
/*Line 534 - 'jquery-1.5.1-vsdoc.js' */	return target;
/*Line 535 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 537 - 'jquery-1.5.1-vsdoc.js' */jQuery.extend({
/*Line 538 - 'jquery-1.5.1-vsdoc.js' */	noConflict: function( deep ) {
/*Line 539 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 540 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Run this function to give control of the $ variable back
/*Line 541 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;to whichever library first implemented it. This helps to make 
/*Line 542 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;sure that jQuery doesn't conflict with the $ object
/*Line 543 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;of other libraries.
/*Line 544 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;By using this function, you will only be able to access jQuery
/*Line 545 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;using the 'jQuery' variable. For example, where you used to do
/*Line 546 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;$(&quot;div p&quot;), you now must do jQuery(&quot;div p&quot;).
/*Line 547 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of Core 
/*Line 548 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 549 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="undefined" />

/*Line 551 - 'jquery-1.5.1-vsdoc.js' */		window.$ = _$;

/*Line 553 - 'jquery-1.5.1-vsdoc.js' */		if ( deep ) {
/*Line 554 - 'jquery-1.5.1-vsdoc.js' */			window.jQuery = _jQuery;
/*Line 555 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 557 - 'jquery-1.5.1-vsdoc.js' */		return jQuery;
/*Line 558 - 'jquery-1.5.1-vsdoc.js' */	},
	
/*Line 560 - 'jquery-1.5.1-vsdoc.js' */	// Is the DOM ready to be used? Set to true once it occurs.
/*Line 561 - 'jquery-1.5.1-vsdoc.js' */	isReady: false,

/*Line 563 - 'jquery-1.5.1-vsdoc.js' */	// A counter to track how many items to wait for before
/*Line 564 - 'jquery-1.5.1-vsdoc.js' */	// the ready event fires. See #6781
/*Line 565 - 'jquery-1.5.1-vsdoc.js' */	readyWait: 1,
	
/*Line 567 - 'jquery-1.5.1-vsdoc.js' */	// Handle when the DOM is ready
/*Line 568 - 'jquery-1.5.1-vsdoc.js' */	ready: function( wait ) {
/*Line 569 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 570 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This method is internal.
/*Line 571 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 572 - 'jquery-1.5.1-vsdoc.js' */		///	<private />

/*Line 574 - 'jquery-1.5.1-vsdoc.js' */		// A third-party is pushing the ready event forwards
/*Line 575 - 'jquery-1.5.1-vsdoc.js' */		if ( wait === true ) {
/*Line 576 - 'jquery-1.5.1-vsdoc.js' */			jQuery.readyWait--;
/*Line 577 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 579 - 'jquery-1.5.1-vsdoc.js' */		// Make sure that the DOM is not already loaded
/*Line 580 - 'jquery-1.5.1-vsdoc.js' */		if ( !jQuery.readyWait || (wait !== true && !jQuery.isReady) ) {
/*Line 581 - 'jquery-1.5.1-vsdoc.js' */			// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).
/*Line 582 - 'jquery-1.5.1-vsdoc.js' */			if ( !document.body ) {
/*Line 583 - 'jquery-1.5.1-vsdoc.js' */				return setTimeout( jQuery.ready, 1 );
/*Line 584 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 586 - 'jquery-1.5.1-vsdoc.js' */			// Remember that the DOM is ready
/*Line 587 - 'jquery-1.5.1-vsdoc.js' */			jQuery.isReady = true;

/*Line 589 - 'jquery-1.5.1-vsdoc.js' */			// If a normal DOM Ready event fired, decrement, and wait if need be
/*Line 590 - 'jquery-1.5.1-vsdoc.js' */			if ( wait !== true && --jQuery.readyWait > 0 ) {
/*Line 591 - 'jquery-1.5.1-vsdoc.js' */				return;
/*Line 592 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 594 - 'jquery-1.5.1-vsdoc.js' */			// If there are functions bound, to execute
/*Line 595 - 'jquery-1.5.1-vsdoc.js' */			if ( readyList ) {
/*Line 596 - 'jquery-1.5.1-vsdoc.js' */				// Execute all of them
/*Line 597 - 'jquery-1.5.1-vsdoc.js' */				var fn,
/*Line 598 - 'jquery-1.5.1-vsdoc.js' */					i = 0,
/*Line 599 - 'jquery-1.5.1-vsdoc.js' */					ready = readyList;

/*Line 601 - 'jquery-1.5.1-vsdoc.js' */				// Reset the list of functions
/*Line 602 - 'jquery-1.5.1-vsdoc.js' */				readyList = null;

/*Line 604 - 'jquery-1.5.1-vsdoc.js' */				while ( (fn = ready[ i++ ]) ) {
/*Line 605 - 'jquery-1.5.1-vsdoc.js' */					fn.call( document, jQuery );
/*Line 606 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 608 - 'jquery-1.5.1-vsdoc.js' */				// Trigger any bound ready events
/*Line 609 - 'jquery-1.5.1-vsdoc.js' */				if ( jQuery.fn.trigger ) {
/*Line 610 - 'jquery-1.5.1-vsdoc.js' */					jQuery( document ).trigger( "ready" ).unbind( "ready" );
/*Line 611 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 612 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 613 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 614 - 'jquery-1.5.1-vsdoc.js' */	},
	
/*Line 616 - 'jquery-1.5.1-vsdoc.js' */	bindReady: function() {
/*Line 617 - 'jquery-1.5.1-vsdoc.js' */		if ( readyBound ) {
/*Line 618 - 'jquery-1.5.1-vsdoc.js' */			return;
/*Line 619 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 621 - 'jquery-1.5.1-vsdoc.js' */		readyBound = true;

/*Line 623 - 'jquery-1.5.1-vsdoc.js' */		// Catch cases where $(document).ready() is called after the
/*Line 624 - 'jquery-1.5.1-vsdoc.js' */		// browser event has already occurred.
/*Line 625 - 'jquery-1.5.1-vsdoc.js' */		if ( document.readyState === "complete" ) {
/*Line 626 - 'jquery-1.5.1-vsdoc.js' */			// Handle it asynchronously to allow scripts the opportunity to delay ready
/*Line 627 - 'jquery-1.5.1-vsdoc.js' */			return setTimeout( jQuery.ready, 1 );
/*Line 628 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 630 - 'jquery-1.5.1-vsdoc.js' */		// Mozilla, Opera and webkit nightlies currently support this event
/*Line 631 - 'jquery-1.5.1-vsdoc.js' */		if ( document.addEventListener ) {
/*Line 632 - 'jquery-1.5.1-vsdoc.js' */			// Use the handy event callback
/*Line 633 - 'jquery-1.5.1-vsdoc.js' */			document.addEventListener( "DOMContentLoaded", DOMContentLoaded, false );
			
/*Line 635 - 'jquery-1.5.1-vsdoc.js' */			// A fallback to window.onload, that will always work
/*Line 636 - 'jquery-1.5.1-vsdoc.js' */			window.addEventListener( "load", jQuery.ready, false );

/*Line 638 - 'jquery-1.5.1-vsdoc.js' */		// If IE event model is used
/*Line 639 - 'jquery-1.5.1-vsdoc.js' */		} else if ( document.attachEvent ) {
/*Line 640 - 'jquery-1.5.1-vsdoc.js' */			// ensure firing before onload,
/*Line 641 - 'jquery-1.5.1-vsdoc.js' */			// maybe late but safe also for iframes
/*Line 642 - 'jquery-1.5.1-vsdoc.js' */			document.attachEvent("onreadystatechange", DOMContentLoaded);
			
/*Line 644 - 'jquery-1.5.1-vsdoc.js' */			// A fallback to window.onload, that will always work
/*Line 645 - 'jquery-1.5.1-vsdoc.js' */			window.attachEvent( "onload", jQuery.ready );

/*Line 647 - 'jquery-1.5.1-vsdoc.js' */			// If IE and not a frame
/*Line 648 - 'jquery-1.5.1-vsdoc.js' */			// continually check to see if the document is ready
/*Line 649 - 'jquery-1.5.1-vsdoc.js' */			var toplevel = false;

/*Line 651 - 'jquery-1.5.1-vsdoc.js' */			try {
/*Line 652 - 'jquery-1.5.1-vsdoc.js' */				toplevel = window.frameElement == null;
/*Line 653 - 'jquery-1.5.1-vsdoc.js' */			} catch(e) {}

/*Line 655 - 'jquery-1.5.1-vsdoc.js' */			if ( document.documentElement.doScroll && toplevel ) {
/*Line 656 - 'jquery-1.5.1-vsdoc.js' */				doScrollCheck();
/*Line 657 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 658 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 659 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 661 - 'jquery-1.5.1-vsdoc.js' */	// See test/unit/core.js for details concerning isFunction.
/*Line 662 - 'jquery-1.5.1-vsdoc.js' */	// Since version 1.3, DOM methods and functions like alert
/*Line 663 - 'jquery-1.5.1-vsdoc.js' */	// aren't supported. They return false on IE (#2968).
/*Line 664 - 'jquery-1.5.1-vsdoc.js' */	isFunction: function( obj ) {
/*Line 665 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 666 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Determines if the parameter passed is a function.
/*Line 667 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 668 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="obj" type="Object">The object to check</param>
/*Line 669 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="Boolean">True if the parameter is a function; otherwise false.</returns>

/*Line 671 - 'jquery-1.5.1-vsdoc.js' */		return jQuery.type(obj) === "function";
/*Line 672 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 674 - 'jquery-1.5.1-vsdoc.js' */	isArray: Array.isArray || function( obj ) {
/*Line 675 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 676 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Determine if the parameter passed is an array.
/*Line 677 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 678 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="obj" type="Object">Object to test whether or not it is an array.</param>
/*Line 679 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="Boolean">True if the parameter is a function; otherwise false.</returns>

/*Line 681 - 'jquery-1.5.1-vsdoc.js' */		return jQuery.type(obj) === "array";
/*Line 682 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 684 - 'jquery-1.5.1-vsdoc.js' */	// A crude way of determining if an object is a window
/*Line 685 - 'jquery-1.5.1-vsdoc.js' */	isWindow: function( obj ) {
/*Line 686 - 'jquery-1.5.1-vsdoc.js' */		return obj && typeof obj === "object" && "setInterval" in obj;
/*Line 687 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 689 - 'jquery-1.5.1-vsdoc.js' */	isNaN: function( obj ) {
/*Line 690 - 'jquery-1.5.1-vsdoc.js' */		return obj == null || !rdigit.test( obj ) || isNaN( obj );
/*Line 691 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 693 - 'jquery-1.5.1-vsdoc.js' */	type: function( obj ) {
/*Line 694 - 'jquery-1.5.1-vsdoc.js' */		return obj == null ?
/*Line 695 - 'jquery-1.5.1-vsdoc.js' */			String( obj ) :
/*Line 696 - 'jquery-1.5.1-vsdoc.js' */			class2type[ toString.call(obj) ] || "object";
/*Line 697 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 699 - 'jquery-1.5.1-vsdoc.js' */	isPlainObject: function( obj ) {
/*Line 700 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 701 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Check to see if an object is a plain object (created using "{}" or "new Object").
/*Line 702 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 703 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="obj" type="Object">
/*Line 704 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;The object that will be checked to see if it's a plain object.
/*Line 705 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 706 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="Boolean" />

/*Line 708 - 'jquery-1.5.1-vsdoc.js' */		// Must be an Object.
/*Line 709 - 'jquery-1.5.1-vsdoc.js' */		// Because of IE, we also have to check the presence of the constructor property.
/*Line 710 - 'jquery-1.5.1-vsdoc.js' */		// Make sure that DOM nodes and window objects don't pass through, as well
/*Line 711 - 'jquery-1.5.1-vsdoc.js' */		if ( !obj || jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
/*Line 712 - 'jquery-1.5.1-vsdoc.js' */			return false;
/*Line 713 - 'jquery-1.5.1-vsdoc.js' */		}
		
/*Line 715 - 'jquery-1.5.1-vsdoc.js' */		// Not own constructor property must be Object
/*Line 716 - 'jquery-1.5.1-vsdoc.js' */		if ( obj.constructor &&
/*Line 717 - 'jquery-1.5.1-vsdoc.js' */			!hasOwn.call(obj, "constructor") &&
/*Line 718 - 'jquery-1.5.1-vsdoc.js' */			!hasOwn.call(obj.constructor.prototype, "isPrototypeOf") ) {
/*Line 719 - 'jquery-1.5.1-vsdoc.js' */			return false;
/*Line 720 - 'jquery-1.5.1-vsdoc.js' */		}
		
/*Line 722 - 'jquery-1.5.1-vsdoc.js' */		// Own properties are enumerated firstly, so to speed up,
/*Line 723 - 'jquery-1.5.1-vsdoc.js' */		// if last one is own, then all properties are own.
	
/*Line 725 - 'jquery-1.5.1-vsdoc.js' */		var key;
/*Line 726 - 'jquery-1.5.1-vsdoc.js' */		for ( key in obj ) {}
		
/*Line 728 - 'jquery-1.5.1-vsdoc.js' */		return key === undefined || hasOwn.call( obj, key );
/*Line 729 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 731 - 'jquery-1.5.1-vsdoc.js' */	isEmptyObject: function( obj ) {
/*Line 732 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 733 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Check to see if an object is empty (contains no properties).
/*Line 734 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 735 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="obj" type="Object">
/*Line 736 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;The object that will be checked to see if it's empty.
/*Line 737 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 738 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="Boolean" />

/*Line 740 - 'jquery-1.5.1-vsdoc.js' */		for ( var name in obj ) {
/*Line 741 - 'jquery-1.5.1-vsdoc.js' */			return false;
/*Line 742 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 743 - 'jquery-1.5.1-vsdoc.js' */		return true;
/*Line 744 - 'jquery-1.5.1-vsdoc.js' */	},
	
/*Line 746 - 'jquery-1.5.1-vsdoc.js' */	error: function( msg ) {
/*Line 747 - 'jquery-1.5.1-vsdoc.js' */		throw msg;
/*Line 748 - 'jquery-1.5.1-vsdoc.js' */	},
	
/*Line 750 - 'jquery-1.5.1-vsdoc.js' */	parseJSON: function( data ) {
/*Line 751 - 'jquery-1.5.1-vsdoc.js' */		if ( typeof data !== "string" || !data ) {
/*Line 752 - 'jquery-1.5.1-vsdoc.js' */			return null;
/*Line 753 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 755 - 'jquery-1.5.1-vsdoc.js' */		// Make sure leading/trailing whitespace is removed (IE can't handle it)
/*Line 756 - 'jquery-1.5.1-vsdoc.js' */		data = jQuery.trim( data );
		
/*Line 758 - 'jquery-1.5.1-vsdoc.js' */		// Make sure the incoming data is actual JSON
/*Line 759 - 'jquery-1.5.1-vsdoc.js' */		// Logic borrowed from http://json.org/json2.js
/*Line 760 - 'jquery-1.5.1-vsdoc.js' */		if ( rvalidchars.test(data.replace(rvalidescape, "@")
/*Line 761 - 'jquery-1.5.1-vsdoc.js' */			.replace(rvalidtokens, "]")
/*Line 762 - 'jquery-1.5.1-vsdoc.js' */			.replace(rvalidbraces, "")) ) {

/*Line 764 - 'jquery-1.5.1-vsdoc.js' */			// Try to use the native JSON parser first
/*Line 765 - 'jquery-1.5.1-vsdoc.js' */			return window.JSON && window.JSON.parse ?
/*Line 766 - 'jquery-1.5.1-vsdoc.js' */				window.JSON.parse( data ) :
/*Line 767 - 'jquery-1.5.1-vsdoc.js' */				(new Function("return " + data))();

/*Line 769 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 770 - 'jquery-1.5.1-vsdoc.js' */			jQuery.error( "Invalid JSON: " + data );
/*Line 771 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 772 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 774 - 'jquery-1.5.1-vsdoc.js' */	noop: function() {
/*Line 775 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 776 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;An empty function.
/*Line 777 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 778 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="Function" />
/*Line 779 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 781 - 'jquery-1.5.1-vsdoc.js' */	// Evalulates a script in a global context
/*Line 782 - 'jquery-1.5.1-vsdoc.js' */	globalEval: function( data ) {
/*Line 783 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 784 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Internally evaluates a script in a global context.
/*Line 785 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 786 - 'jquery-1.5.1-vsdoc.js' */		///	<private />

/*Line 788 - 'jquery-1.5.1-vsdoc.js' */		if ( data && rnotwhite.test(data) ) {
/*Line 789 - 'jquery-1.5.1-vsdoc.js' */			// Inspired by code by Andrea Giammarchi
/*Line 790 - 'jquery-1.5.1-vsdoc.js' */			// http://webreflection.blogspot.com/2007/08/global-scope-evaluation-and-dom.html
/*Line 791 - 'jquery-1.5.1-vsdoc.js' */			var head = document.getElementsByTagName("head")[0] || document.documentElement,
/*Line 792 - 'jquery-1.5.1-vsdoc.js' */				script = document.createElement("script");

/*Line 794 - 'jquery-1.5.1-vsdoc.js' */			script.type = "text/javascript";

/*Line 796 - 'jquery-1.5.1-vsdoc.js' */			if ( jQuery.support.scriptEval ) {
/*Line 797 - 'jquery-1.5.1-vsdoc.js' */				script.appendChild( document.createTextNode( data ) );
/*Line 798 - 'jquery-1.5.1-vsdoc.js' */			} else {
/*Line 799 - 'jquery-1.5.1-vsdoc.js' */				script.text = data;
/*Line 800 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 802 - 'jquery-1.5.1-vsdoc.js' */			// Use insertBefore instead of appendChild to circumvent an IE6 bug.
/*Line 803 - 'jquery-1.5.1-vsdoc.js' */			// This arises when a base node is used (#2709).
/*Line 804 - 'jquery-1.5.1-vsdoc.js' */			head.insertBefore( script, head.firstChild );
/*Line 805 - 'jquery-1.5.1-vsdoc.js' */			head.removeChild( script );
/*Line 806 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 807 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 809 - 'jquery-1.5.1-vsdoc.js' */	nodeName: function( elem, name ) {
/*Line 810 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 811 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Checks whether the specified element has the specified DOM node name.
/*Line 812 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 813 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="elem" type="Element">The element to examine</param>
/*Line 814 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="name" type="String">The node name to check</param>
/*Line 815 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="Boolean">True if the specified node name matches the node's DOM node name; otherwise false</returns>

/*Line 817 - 'jquery-1.5.1-vsdoc.js' */		return elem.nodeName && elem.nodeName.toUpperCase() === name.toUpperCase();
/*Line 818 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 820 - 'jquery-1.5.1-vsdoc.js' */	// args is for internal usage only
/*Line 821 - 'jquery-1.5.1-vsdoc.js' */	each: function( object, callback, args ) {
/*Line 822 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 823 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;A generic iterator function, which can be used to seemlessly
/*Line 824 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;iterate over both objects and arrays. This function is not the same
/*Line 825 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;as $().each() - which is used to iterate, exclusively, over a jQuery
/*Line 826 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;object. This function can be used to iterate over anything.
/*Line 827 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;The callback has two arguments:the key (objects) or index (arrays) as first
/*Line 828 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;the first, and the value as the second.
/*Line 829 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of JavaScript
/*Line 830 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 831 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="obj" type="Object">
/*Line 832 - 'jquery-1.5.1-vsdoc.js' */		///     &#10; The object, or array, to iterate over.
/*Line 833 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 834 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="fn" type="Function">
/*Line 835 - 'jquery-1.5.1-vsdoc.js' */		///     &#10; The function that will be executed on every object.
/*Line 836 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 837 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="Object" />

/*Line 839 - 'jquery-1.5.1-vsdoc.js' */		var name, i = 0,
/*Line 840 - 'jquery-1.5.1-vsdoc.js' */			length = object.length,
/*Line 841 - 'jquery-1.5.1-vsdoc.js' */			isObj = length === undefined || jQuery.isFunction(object);

/*Line 843 - 'jquery-1.5.1-vsdoc.js' */		if ( args ) {
/*Line 844 - 'jquery-1.5.1-vsdoc.js' */			if ( isObj ) {
/*Line 845 - 'jquery-1.5.1-vsdoc.js' */				for ( name in object ) {
/*Line 846 - 'jquery-1.5.1-vsdoc.js' */					if ( callback.apply( object[ name ], args ) === false ) {
/*Line 847 - 'jquery-1.5.1-vsdoc.js' */						break;
/*Line 848 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 849 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 850 - 'jquery-1.5.1-vsdoc.js' */			} else {
/*Line 851 - 'jquery-1.5.1-vsdoc.js' */				for ( ; i < length; ) {
/*Line 852 - 'jquery-1.5.1-vsdoc.js' */					if ( callback.apply( object[ i++ ], args ) === false ) {
/*Line 853 - 'jquery-1.5.1-vsdoc.js' */						break;
/*Line 854 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 855 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 856 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 858 - 'jquery-1.5.1-vsdoc.js' */		// A special, fast, case for the most common use of each
/*Line 859 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 860 - 'jquery-1.5.1-vsdoc.js' */			if ( isObj ) {
/*Line 861 - 'jquery-1.5.1-vsdoc.js' */				for ( name in object ) {
/*Line 862 - 'jquery-1.5.1-vsdoc.js' */					if ( callback.call( object[ name ], name, object[ name ] ) === false ) {
/*Line 863 - 'jquery-1.5.1-vsdoc.js' */						break;
/*Line 864 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 865 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 866 - 'jquery-1.5.1-vsdoc.js' */			} else {
/*Line 867 - 'jquery-1.5.1-vsdoc.js' */				for ( var value = object[0];
/*Line 868 - 'jquery-1.5.1-vsdoc.js' */					i < length && callback.call( value, i, value ) !== false; value = object[++i] ) {}
/*Line 869 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 870 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 872 - 'jquery-1.5.1-vsdoc.js' */		return object;
/*Line 873 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 875 - 'jquery-1.5.1-vsdoc.js' */	// Use native String.trim function wherever possible
/*Line 876 - 'jquery-1.5.1-vsdoc.js' */	trim: trim ?
/*Line 877 - 'jquery-1.5.1-vsdoc.js' */		function( text ) {
/*Line 878 - 'jquery-1.5.1-vsdoc.js' */			return text == null ?
/*Line 879 - 'jquery-1.5.1-vsdoc.js' */				"" :
/*Line 880 - 'jquery-1.5.1-vsdoc.js' */				trim.call( text );
/*Line 881 - 'jquery-1.5.1-vsdoc.js' */		} :

/*Line 883 - 'jquery-1.5.1-vsdoc.js' */		// Otherwise use our own trimming functionality
/*Line 884 - 'jquery-1.5.1-vsdoc.js' */		function( text ) {
/*Line 885 - 'jquery-1.5.1-vsdoc.js' */			return text == null ?
/*Line 886 - 'jquery-1.5.1-vsdoc.js' */				"" :
/*Line 887 - 'jquery-1.5.1-vsdoc.js' */				text.toString().replace( trimLeft, "" ).replace( trimRight, "" );
/*Line 888 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 890 - 'jquery-1.5.1-vsdoc.js' */	// results is for internal usage only
/*Line 891 - 'jquery-1.5.1-vsdoc.js' */	makeArray: function( array, results ) {
/*Line 892 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 893 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Turns anything into a true array.  This is an internal method.
/*Line 894 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 895 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="array" type="Object">Anything to turn into an actual Array</param>
/*Line 896 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="Array" />
/*Line 897 - 'jquery-1.5.1-vsdoc.js' */		///	<private />

/*Line 899 - 'jquery-1.5.1-vsdoc.js' */		var ret = results || [];

/*Line 901 - 'jquery-1.5.1-vsdoc.js' */		if ( array != null ) {
/*Line 902 - 'jquery-1.5.1-vsdoc.js' */			// The window, strings (and functions) also have 'length'
/*Line 903 - 'jquery-1.5.1-vsdoc.js' */			// The extra typeof function check is to prevent crashes
/*Line 904 - 'jquery-1.5.1-vsdoc.js' */			// in Safari 2 (See: #3039)
/*Line 905 - 'jquery-1.5.1-vsdoc.js' */			// Tweaked logic slightly to handle Blackberry 4.7 RegExp issues #6930
/*Line 906 - 'jquery-1.5.1-vsdoc.js' */			var type = jQuery.type(array);

/*Line 908 - 'jquery-1.5.1-vsdoc.js' */			if ( array.length == null || type === "string" || type === "function" || type === "regexp" || jQuery.isWindow( array ) ) {
/*Line 909 - 'jquery-1.5.1-vsdoc.js' */				push.call( ret, array );
/*Line 910 - 'jquery-1.5.1-vsdoc.js' */			} else {
/*Line 911 - 'jquery-1.5.1-vsdoc.js' */				jQuery.merge( ret, array );
/*Line 912 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 913 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 915 - 'jquery-1.5.1-vsdoc.js' */		return ret;
/*Line 916 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 918 - 'jquery-1.5.1-vsdoc.js' */	inArray: function( elem, array ) {
/*Line 919 - 'jquery-1.5.1-vsdoc.js' */		if ( array.indexOf ) {
/*Line 920 - 'jquery-1.5.1-vsdoc.js' */			return array.indexOf( elem );
/*Line 921 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 923 - 'jquery-1.5.1-vsdoc.js' */		for ( var i = 0, length = array.length; i < length; i++ ) {
/*Line 924 - 'jquery-1.5.1-vsdoc.js' */			if ( array[ i ] === elem ) {
/*Line 925 - 'jquery-1.5.1-vsdoc.js' */				return i;
/*Line 926 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 927 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 929 - 'jquery-1.5.1-vsdoc.js' */		return -1;
/*Line 930 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 932 - 'jquery-1.5.1-vsdoc.js' */	merge: function( first, second ) {
/*Line 933 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 934 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Merge two arrays together, removing all duplicates.
/*Line 935 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;The new array is: All the results from the first array, followed
/*Line 936 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;by the unique results from the second array.
/*Line 937 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of JavaScript
/*Line 938 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 939 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="Array" />
/*Line 940 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="first" type="Array">
/*Line 941 - 'jquery-1.5.1-vsdoc.js' */		///     &#10; The first array to merge.
/*Line 942 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 943 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="second" type="Array">
/*Line 944 - 'jquery-1.5.1-vsdoc.js' */		///     &#10; The second array to merge.
/*Line 945 - 'jquery-1.5.1-vsdoc.js' */		///	</param>

/*Line 947 - 'jquery-1.5.1-vsdoc.js' */		var i = first.length,
/*Line 948 - 'jquery-1.5.1-vsdoc.js' */			j = 0;

/*Line 950 - 'jquery-1.5.1-vsdoc.js' */		if ( typeof second.length === "number" ) {
/*Line 951 - 'jquery-1.5.1-vsdoc.js' */			for ( var l = second.length; j < l; j++ ) {
/*Line 952 - 'jquery-1.5.1-vsdoc.js' */				first[ i++ ] = second[ j ];
/*Line 953 - 'jquery-1.5.1-vsdoc.js' */			}
		
/*Line 955 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 956 - 'jquery-1.5.1-vsdoc.js' */			while ( second[j] !== undefined ) {
/*Line 957 - 'jquery-1.5.1-vsdoc.js' */				first[ i++ ] = second[ j++ ];
/*Line 958 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 959 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 961 - 'jquery-1.5.1-vsdoc.js' */		first.length = i;

/*Line 963 - 'jquery-1.5.1-vsdoc.js' */		return first;
/*Line 964 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 966 - 'jquery-1.5.1-vsdoc.js' */	grep: function( elems, callback, inv ) {
/*Line 967 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 968 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Filter items out of an array, by using a filter function.
/*Line 969 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;The specified function will be passed two arguments: The
/*Line 970 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;current array item and the index of the item in the array. The
/*Line 971 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;function must return 'true' to keep the item in the array, 
/*Line 972 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;false to remove it.
/*Line 973 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;});
/*Line 974 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of JavaScript
/*Line 975 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 976 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="Array" />
/*Line 977 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="elems" type="Array">
/*Line 978 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;array The Array to find items in.
/*Line 979 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 980 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="fn" type="Function">
/*Line 981 - 'jquery-1.5.1-vsdoc.js' */		///     &#10; The function to process each item against.
/*Line 982 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 983 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="inv" type="Boolean">
/*Line 984 - 'jquery-1.5.1-vsdoc.js' */		///     &#10; Invert the selection - select the opposite of the function.
/*Line 985 - 'jquery-1.5.1-vsdoc.js' */		///	</param>

/*Line 987 - 'jquery-1.5.1-vsdoc.js' */		var ret = [], retVal;
/*Line 988 - 'jquery-1.5.1-vsdoc.js' */		inv = !!inv;

/*Line 990 - 'jquery-1.5.1-vsdoc.js' */		// Go through the array, only saving the items
/*Line 991 - 'jquery-1.5.1-vsdoc.js' */		// that pass the validator function
/*Line 992 - 'jquery-1.5.1-vsdoc.js' */		for ( var i = 0, length = elems.length; i < length; i++ ) {
/*Line 993 - 'jquery-1.5.1-vsdoc.js' */			retVal = !!callback( elems[ i ], i );
/*Line 994 - 'jquery-1.5.1-vsdoc.js' */			if ( inv !== retVal ) {
/*Line 995 - 'jquery-1.5.1-vsdoc.js' */				ret.push( elems[ i ] );
/*Line 996 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 997 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 999 - 'jquery-1.5.1-vsdoc.js' */		return ret;
/*Line 1000 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 1002 - 'jquery-1.5.1-vsdoc.js' */	// arg is for internal usage only
/*Line 1003 - 'jquery-1.5.1-vsdoc.js' */	map: function( elems, callback, arg ) {
/*Line 1004 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 1005 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Translate all items in an array to another array of items.
/*Line 1006 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;The translation function that is provided to this method is 
/*Line 1007 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;called for each item in the array and is passed one argument: 
/*Line 1008 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;The item to be translated.
/*Line 1009 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;The function can then return the translated value, 'null'
/*Line 1010 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;(to remove the item), or  an array of values - which will
/*Line 1011 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;be flattened into the full array.
/*Line 1012 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of JavaScript
/*Line 1013 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 1014 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="Array" />
/*Line 1015 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="elems" type="Array">
/*Line 1016 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;array The Array to translate.
/*Line 1017 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 1018 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="fn" type="Function">
/*Line 1019 - 'jquery-1.5.1-vsdoc.js' */		///     &#10; The function to process each item against.
/*Line 1020 - 'jquery-1.5.1-vsdoc.js' */		///	</param>

/*Line 1022 - 'jquery-1.5.1-vsdoc.js' */		var ret = [], value;

/*Line 1024 - 'jquery-1.5.1-vsdoc.js' */		// Go through the array, translating each of the items to their
/*Line 1025 - 'jquery-1.5.1-vsdoc.js' */		// new value (or values).
/*Line 1026 - 'jquery-1.5.1-vsdoc.js' */		for ( var i = 0, length = elems.length; i < length; i++ ) {
/*Line 1027 - 'jquery-1.5.1-vsdoc.js' */			value = callback( elems[ i ], i, arg );

/*Line 1029 - 'jquery-1.5.1-vsdoc.js' */			if ( value != null ) {
/*Line 1030 - 'jquery-1.5.1-vsdoc.js' */				ret[ ret.length ] = value;
/*Line 1031 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 1032 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 1034 - 'jquery-1.5.1-vsdoc.js' */		return ret.concat.apply( [], ret );
/*Line 1035 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 1037 - 'jquery-1.5.1-vsdoc.js' */	// A global GUID counter for objects
/*Line 1038 - 'jquery-1.5.1-vsdoc.js' */	guid: 1,

/*Line 1040 - 'jquery-1.5.1-vsdoc.js' */	proxy: function( fn, proxy, thisObject ) {
/*Line 1041 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 1042 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Takes a function and returns a new one that will always have a particular scope.
/*Line 1043 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 1044 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="fn" type="Function">
/*Line 1045 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;The function whose scope will be changed.
/*Line 1046 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 1047 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="proxy" type="Object">
/*Line 1048 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;The object to which the scope of the function should be set.
/*Line 1049 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 1050 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="Function" />

/*Line 1052 - 'jquery-1.5.1-vsdoc.js' */		if ( arguments.length === 2 ) {
/*Line 1053 - 'jquery-1.5.1-vsdoc.js' */			if ( typeof proxy === "string" ) {
/*Line 1054 - 'jquery-1.5.1-vsdoc.js' */				thisObject = fn;
/*Line 1055 - 'jquery-1.5.1-vsdoc.js' */				fn = thisObject[ proxy ];
/*Line 1056 - 'jquery-1.5.1-vsdoc.js' */				proxy = undefined;

/*Line 1058 - 'jquery-1.5.1-vsdoc.js' */			} else if ( proxy && !jQuery.isFunction( proxy ) ) {
/*Line 1059 - 'jquery-1.5.1-vsdoc.js' */				thisObject = proxy;
/*Line 1060 - 'jquery-1.5.1-vsdoc.js' */				proxy = undefined;
/*Line 1061 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 1062 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 1064 - 'jquery-1.5.1-vsdoc.js' */		if ( !proxy && fn ) {
/*Line 1065 - 'jquery-1.5.1-vsdoc.js' */			proxy = function() {
/*Line 1066 - 'jquery-1.5.1-vsdoc.js' */				return fn.apply( thisObject || this, arguments );
/*Line 1067 - 'jquery-1.5.1-vsdoc.js' */			};
/*Line 1068 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 1070 - 'jquery-1.5.1-vsdoc.js' */		// Set the guid of unique handler to the same of original handler, so it can be removed
/*Line 1071 - 'jquery-1.5.1-vsdoc.js' */		if ( fn ) {
/*Line 1072 - 'jquery-1.5.1-vsdoc.js' */			proxy.guid = fn.guid = fn.guid || proxy.guid || jQuery.guid++;
/*Line 1073 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 1075 - 'jquery-1.5.1-vsdoc.js' */		// So proxy can be declared as an argument
/*Line 1076 - 'jquery-1.5.1-vsdoc.js' */		return proxy;
/*Line 1077 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 1079 - 'jquery-1.5.1-vsdoc.js' */	// Mutifunctional method to get and set values to a collection
/*Line 1080 - 'jquery-1.5.1-vsdoc.js' */	// The value/s can be optionally by executed if its a function
/*Line 1081 - 'jquery-1.5.1-vsdoc.js' */	access: function( elems, key, value, exec, fn, pass ) {
/*Line 1082 - 'jquery-1.5.1-vsdoc.js' */		var length = elems.length;
	
/*Line 1084 - 'jquery-1.5.1-vsdoc.js' */		// Setting many attributes
/*Line 1085 - 'jquery-1.5.1-vsdoc.js' */		if ( typeof key === "object" ) {
/*Line 1086 - 'jquery-1.5.1-vsdoc.js' */			for ( var k in key ) {
/*Line 1087 - 'jquery-1.5.1-vsdoc.js' */				jQuery.access( elems, k, key[k], exec, fn, value );
/*Line 1088 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 1089 - 'jquery-1.5.1-vsdoc.js' */			return elems;
/*Line 1090 - 'jquery-1.5.1-vsdoc.js' */		}
	
/*Line 1092 - 'jquery-1.5.1-vsdoc.js' */		// Setting one attribute
/*Line 1093 - 'jquery-1.5.1-vsdoc.js' */		if ( value !== undefined ) {
/*Line 1094 - 'jquery-1.5.1-vsdoc.js' */			// Optionally, function values get executed if exec is true
/*Line 1095 - 'jquery-1.5.1-vsdoc.js' */			exec = !pass && exec && jQuery.isFunction(value);
		
/*Line 1097 - 'jquery-1.5.1-vsdoc.js' */			for ( var i = 0; i < length; i++ ) {
/*Line 1098 - 'jquery-1.5.1-vsdoc.js' */				fn( elems[i], key, exec ? value.call( elems[i], i, fn( elems[i], key ) ) : value, pass );
/*Line 1099 - 'jquery-1.5.1-vsdoc.js' */			}
		
/*Line 1101 - 'jquery-1.5.1-vsdoc.js' */			return elems;
/*Line 1102 - 'jquery-1.5.1-vsdoc.js' */		}
	
/*Line 1104 - 'jquery-1.5.1-vsdoc.js' */		// Getting an attribute
/*Line 1105 - 'jquery-1.5.1-vsdoc.js' */		return length ? fn( elems[0], key ) : undefined;
/*Line 1106 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 1108 - 'jquery-1.5.1-vsdoc.js' */	now: function() {
/*Line 1109 - 'jquery-1.5.1-vsdoc.js' */		return (new Date()).getTime();
/*Line 1110 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 1112 - 'jquery-1.5.1-vsdoc.js' */	// Use of jQuery.browser is frowned upon.
/*Line 1113 - 'jquery-1.5.1-vsdoc.js' */	// More details: http://docs.jquery.com/Utilities/jQuery.browser
/*Line 1114 - 'jquery-1.5.1-vsdoc.js' */	uaMatch: function( ua ) {
/*Line 1115 - 'jquery-1.5.1-vsdoc.js' */		ua = ua.toLowerCase();

/*Line 1117 - 'jquery-1.5.1-vsdoc.js' */		var match = rwebkit.exec( ua ) ||
/*Line 1118 - 'jquery-1.5.1-vsdoc.js' */			ropera.exec( ua ) ||
/*Line 1119 - 'jquery-1.5.1-vsdoc.js' */			rmsie.exec( ua ) ||
/*Line 1120 - 'jquery-1.5.1-vsdoc.js' */			ua.indexOf("compatible") < 0 && rmozilla.exec( ua ) ||
/*Line 1121 - 'jquery-1.5.1-vsdoc.js' */			[];

/*Line 1123 - 'jquery-1.5.1-vsdoc.js' */		return { browser: match[1] || "", version: match[2] || "0" };
/*Line 1124 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 1126 - 'jquery-1.5.1-vsdoc.js' */	browser: {}
/*Line 1127 - 'jquery-1.5.1-vsdoc.js' */});

/*Line 1129 - 'jquery-1.5.1-vsdoc.js' */// Populate the class2type map
/*Line 1130 - 'jquery-1.5.1-vsdoc.js' */jQuery.each("Boolean Number String Function Array Date RegExp Object".split(" "), function(i, name) {
/*Line 1131 - 'jquery-1.5.1-vsdoc.js' */	class2type[ "[object " + name + "]" ] = name.toLowerCase();
/*Line 1132 - 'jquery-1.5.1-vsdoc.js' */});

/*Line 1134 - 'jquery-1.5.1-vsdoc.js' */browserMatch = jQuery.uaMatch( userAgent );
/*Line 1135 - 'jquery-1.5.1-vsdoc.js' */if ( browserMatch.browser ) {
/*Line 1136 - 'jquery-1.5.1-vsdoc.js' */	jQuery.browser[ browserMatch.browser ] = true;
/*Line 1137 - 'jquery-1.5.1-vsdoc.js' */	jQuery.browser.version = browserMatch.version;
/*Line 1138 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 1140 - 'jquery-1.5.1-vsdoc.js' */// Deprecated, use jQuery.browser.webkit instead
/*Line 1141 - 'jquery-1.5.1-vsdoc.js' */if ( jQuery.browser.webkit ) {
/*Line 1142 - 'jquery-1.5.1-vsdoc.js' */	jQuery.browser.safari = true;
/*Line 1143 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 1145 - 'jquery-1.5.1-vsdoc.js' */if ( indexOf ) {
/*Line 1146 - 'jquery-1.5.1-vsdoc.js' */	jQuery.inArray = function( elem, array ) {
/*Line 1147 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 1148 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Determines the index of the first parameter in the array.
/*Line 1149 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 1150 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="elem">The value to see if it exists in the array.</param>
/*Line 1151 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="array" type="Array">The array to look through for the value</param>
/*Line 1152 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="Number" integer="true">The 0-based index of the item if it was found, otherwise -1.</returns>

/*Line 1154 - 'jquery-1.5.1-vsdoc.js' */		return indexOf.call( array, elem );
/*Line 1155 - 'jquery-1.5.1-vsdoc.js' */	};
/*Line 1156 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 1158 - 'jquery-1.5.1-vsdoc.js' */// Verify that \s matches non-breaking spaces
/*Line 1159 - 'jquery-1.5.1-vsdoc.js' */// (IE fails on this test)
/*Line 1160 - 'jquery-1.5.1-vsdoc.js' */if ( !rwhite.test( "\xA0" ) ) {
/*Line 1161 - 'jquery-1.5.1-vsdoc.js' */	trimLeft = /^[\s\xA0]+/;
/*Line 1162 - 'jquery-1.5.1-vsdoc.js' */	trimRight = /[\s\xA0]+$/;
/*Line 1163 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 1165 - 'jquery-1.5.1-vsdoc.js' */// All jQuery objects should point back to these
/*Line 1166 - 'jquery-1.5.1-vsdoc.js' */rootjQuery = jQuery(document);

/*Line 1168 - 'jquery-1.5.1-vsdoc.js' */// Cleanup functions for the document ready method
/*Line 1169 - 'jquery-1.5.1-vsdoc.js' */if ( document.addEventListener ) {
/*Line 1170 - 'jquery-1.5.1-vsdoc.js' */	DOMContentLoaded = function() {
/*Line 1171 - 'jquery-1.5.1-vsdoc.js' */		document.removeEventListener( "DOMContentLoaded", DOMContentLoaded, false );
/*Line 1172 - 'jquery-1.5.1-vsdoc.js' */		jQuery.ready();
/*Line 1173 - 'jquery-1.5.1-vsdoc.js' */	};

/*Line 1175 - 'jquery-1.5.1-vsdoc.js' */} else if ( document.attachEvent ) {
/*Line 1176 - 'jquery-1.5.1-vsdoc.js' */	DOMContentLoaded = function() {
/*Line 1177 - 'jquery-1.5.1-vsdoc.js' */		// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).
/*Line 1178 - 'jquery-1.5.1-vsdoc.js' */		if ( document.readyState === "complete" ) {
/*Line 1179 - 'jquery-1.5.1-vsdoc.js' */			document.detachEvent( "onreadystatechange", DOMContentLoaded );
/*Line 1180 - 'jquery-1.5.1-vsdoc.js' */			jQuery.ready();
/*Line 1181 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 1182 - 'jquery-1.5.1-vsdoc.js' */	};
/*Line 1183 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 1185 - 'jquery-1.5.1-vsdoc.js' */// The DOM ready check for Internet Explorer
/*Line 1186 - 'jquery-1.5.1-vsdoc.js' */function doScrollCheck() {
/*Line 1187 - 'jquery-1.5.1-vsdoc.js' */	if ( jQuery.isReady ) {
/*Line 1188 - 'jquery-1.5.1-vsdoc.js' */		return;
/*Line 1189 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 1191 - 'jquery-1.5.1-vsdoc.js' */	try {
/*Line 1192 - 'jquery-1.5.1-vsdoc.js' */		// If IE is used, use the trick by Diego Perini
/*Line 1193 - 'jquery-1.5.1-vsdoc.js' */		// http://javascript.nwbox.com/IEContentLoaded/
/*Line 1194 - 'jquery-1.5.1-vsdoc.js' */		document.documentElement.doScroll("left");
/*Line 1195 - 'jquery-1.5.1-vsdoc.js' */	} catch(e) {
/*Line 1196 - 'jquery-1.5.1-vsdoc.js' */		setTimeout( doScrollCheck, 1 );
/*Line 1197 - 'jquery-1.5.1-vsdoc.js' */		return;
/*Line 1198 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 1200 - 'jquery-1.5.1-vsdoc.js' */	// and execute any waiting functions
/*Line 1201 - 'jquery-1.5.1-vsdoc.js' */	jQuery.ready();
/*Line 1202 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 1204 - 'jquery-1.5.1-vsdoc.js' */// Expose jQuery to the global object
/*Line 1205 - 'jquery-1.5.1-vsdoc.js' */return (window.jQuery = window.$ = jQuery);

/*Line 1207 - 'jquery-1.5.1-vsdoc.js' */})();



/*Line 1211 - 'jquery-1.5.1-vsdoc.js' */// [vsdoc] The following function has been modified for IntelliSense.
/*Line 1212 - 'jquery-1.5.1-vsdoc.js' */// [vsdoc] Stubbing support properties to "false" for IntelliSense compat.
/*Line 1213 - 'jquery-1.5.1-vsdoc.js' */(function() {

/*Line 1215 - 'jquery-1.5.1-vsdoc.js' */	jQuery.support = {};

/*Line 1217 - 'jquery-1.5.1-vsdoc.js' */	//	var root = document.documentElement,
/*Line 1218 - 'jquery-1.5.1-vsdoc.js' */	//		script = document.createElement("script"),
/*Line 1219 - 'jquery-1.5.1-vsdoc.js' */	//		div = document.createElement("div"),
/*Line 1220 - 'jquery-1.5.1-vsdoc.js' */	//		id = "script" + jQuery.now();

/*Line 1222 - 'jquery-1.5.1-vsdoc.js' */	//	div.style.display = "none";
/*Line 1223 - 'jquery-1.5.1-vsdoc.js' */	//	div.innerHTML = "   <link/><table></table><a href='/a' style='color:red;float:left;opacity:.55;'>a</a><input type='checkbox'/>";

/*Line 1225 - 'jquery-1.5.1-vsdoc.js' */	//	var all = div.getElementsByTagName("*"),
/*Line 1226 - 'jquery-1.5.1-vsdoc.js' */	//		a = div.getElementsByTagName("a")[0],
/*Line 1227 - 'jquery-1.5.1-vsdoc.js' */	//		select = document.createElement("select"),
/*Line 1228 - 'jquery-1.5.1-vsdoc.js' */	//		opt = select.appendChild( document.createElement("option") );

/*Line 1230 - 'jquery-1.5.1-vsdoc.js' */	//	// Can't get basic test support
/*Line 1231 - 'jquery-1.5.1-vsdoc.js' */	//	if ( !all || !all.length || !a ) {
/*Line 1232 - 'jquery-1.5.1-vsdoc.js' */	//		return;
/*Line 1233 - 'jquery-1.5.1-vsdoc.js' */	//	}

/*Line 1235 - 'jquery-1.5.1-vsdoc.js' */	jQuery.support = {
/*Line 1236 - 'jquery-1.5.1-vsdoc.js' */		// IE strips leading whitespace when .innerHTML is used
/*Line 1237 - 'jquery-1.5.1-vsdoc.js' */		leadingWhitespace: false,

/*Line 1239 - 'jquery-1.5.1-vsdoc.js' */		// Make sure that tbody elements aren't automatically inserted
/*Line 1240 - 'jquery-1.5.1-vsdoc.js' */		// IE will insert them into empty tables
/*Line 1241 - 'jquery-1.5.1-vsdoc.js' */		tbody: false,

/*Line 1243 - 'jquery-1.5.1-vsdoc.js' */		// Make sure that link elements get serialized correctly by innerHTML
/*Line 1244 - 'jquery-1.5.1-vsdoc.js' */		// This requires a wrapper element in IE
/*Line 1245 - 'jquery-1.5.1-vsdoc.js' */		htmlSerialize: false,

/*Line 1247 - 'jquery-1.5.1-vsdoc.js' */		// Get the style information from getAttribute
/*Line 1248 - 'jquery-1.5.1-vsdoc.js' */		// (IE uses .cssText insted)
/*Line 1249 - 'jquery-1.5.1-vsdoc.js' */		style: false,

/*Line 1251 - 'jquery-1.5.1-vsdoc.js' */		// Make sure that URLs aren't manipulated
/*Line 1252 - 'jquery-1.5.1-vsdoc.js' */		// (IE normalizes it by default)
/*Line 1253 - 'jquery-1.5.1-vsdoc.js' */		hrefNormalized: false,

/*Line 1255 - 'jquery-1.5.1-vsdoc.js' */		// Make sure that element opacity exists
/*Line 1256 - 'jquery-1.5.1-vsdoc.js' */		// (IE uses filter instead)
/*Line 1257 - 'jquery-1.5.1-vsdoc.js' */		// Use a regex to work around a WebKit issue. See #5145
/*Line 1258 - 'jquery-1.5.1-vsdoc.js' */		opacity: false,

/*Line 1260 - 'jquery-1.5.1-vsdoc.js' */		// Verify style float existence
/*Line 1261 - 'jquery-1.5.1-vsdoc.js' */		// (IE uses styleFloat instead of cssFloat)
/*Line 1262 - 'jquery-1.5.1-vsdoc.js' */		cssFloat: false,

/*Line 1264 - 'jquery-1.5.1-vsdoc.js' */		// Make sure that if no value is specified for a checkbox
/*Line 1265 - 'jquery-1.5.1-vsdoc.js' */		// that it defaults to "on".
/*Line 1266 - 'jquery-1.5.1-vsdoc.js' */		// (WebKit defaults to "" instead)
/*Line 1267 - 'jquery-1.5.1-vsdoc.js' */		checkOn: false,

/*Line 1269 - 'jquery-1.5.1-vsdoc.js' */		// Make sure that a selected-by-default option has a working selected property.
/*Line 1270 - 'jquery-1.5.1-vsdoc.js' */		// (WebKit defaults to false instead of true, IE too, if it's in an optgroup)
/*Line 1271 - 'jquery-1.5.1-vsdoc.js' */		optSelected: false,

/*Line 1273 - 'jquery-1.5.1-vsdoc.js' */		// Will be defined later
/*Line 1274 - 'jquery-1.5.1-vsdoc.js' */		deleteExpando: false,
/*Line 1275 - 'jquery-1.5.1-vsdoc.js' */		optDisabled: false,
/*Line 1276 - 'jquery-1.5.1-vsdoc.js' */		checkClone: false,
/*Line 1277 - 'jquery-1.5.1-vsdoc.js' */		scriptEval: false,
/*Line 1278 - 'jquery-1.5.1-vsdoc.js' */		noCloneEvent: false,
/*Line 1279 - 'jquery-1.5.1-vsdoc.js' */		boxModel: false,
/*Line 1280 - 'jquery-1.5.1-vsdoc.js' */		inlineBlockNeedsLayout: false,
/*Line 1281 - 'jquery-1.5.1-vsdoc.js' */		shrinkWrapBlocks: false,
/*Line 1282 - 'jquery-1.5.1-vsdoc.js' */		reliableHiddenOffsets: true
/*Line 1283 - 'jquery-1.5.1-vsdoc.js' */	};

/*Line 1285 - 'jquery-1.5.1-vsdoc.js' */	//	// Make sure that the options inside disabled selects aren't marked as disabled
/*Line 1286 - 'jquery-1.5.1-vsdoc.js' */	//	// (WebKit marks them as diabled)
/*Line 1287 - 'jquery-1.5.1-vsdoc.js' */	//	select.disabled = true;
/*Line 1288 - 'jquery-1.5.1-vsdoc.js' */	//	jQuery.support.optDisabled = !opt.disabled;

/*Line 1290 - 'jquery-1.5.1-vsdoc.js' */	//	script.type = "text/javascript";
/*Line 1291 - 'jquery-1.5.1-vsdoc.js' */	//	try {
/*Line 1292 - 'jquery-1.5.1-vsdoc.js' */	//		script.appendChild( document.createTextNode( "window." + id + "=1;" ) );
/*Line 1293 - 'jquery-1.5.1-vsdoc.js' */	//	} catch(e) {}

/*Line 1295 - 'jquery-1.5.1-vsdoc.js' */	//	root.insertBefore( script, root.firstChild );

/*Line 1297 - 'jquery-1.5.1-vsdoc.js' */	//	// Make sure that the execution of code works by injecting a script
/*Line 1298 - 'jquery-1.5.1-vsdoc.js' */	//	// tag with appendChild/createTextNode
/*Line 1299 - 'jquery-1.5.1-vsdoc.js' */	//	// (IE doesn't support this, fails, and uses .text instead)
/*Line 1300 - 'jquery-1.5.1-vsdoc.js' */	//	if ( window[ id ] ) {
/*Line 1301 - 'jquery-1.5.1-vsdoc.js' */	//		jQuery.support.scriptEval = true;
/*Line 1302 - 'jquery-1.5.1-vsdoc.js' */	//		delete window[ id ];
/*Line 1303 - 'jquery-1.5.1-vsdoc.js' */	//	}

/*Line 1305 - 'jquery-1.5.1-vsdoc.js' */	//	// Test to see if it's possible to delete an expando from an element
/*Line 1306 - 'jquery-1.5.1-vsdoc.js' */	//	// Fails in Internet Explorer
/*Line 1307 - 'jquery-1.5.1-vsdoc.js' */	//	try {
/*Line 1308 - 'jquery-1.5.1-vsdoc.js' */	//		delete script.test;

/*Line 1310 - 'jquery-1.5.1-vsdoc.js' */	//	} catch(e) {
/*Line 1311 - 'jquery-1.5.1-vsdoc.js' */	//		jQuery.support.deleteExpando = false;
/*Line 1312 - 'jquery-1.5.1-vsdoc.js' */	//	}

/*Line 1314 - 'jquery-1.5.1-vsdoc.js' */	//	root.removeChild( script );

/*Line 1316 - 'jquery-1.5.1-vsdoc.js' */	//	if ( div.attachEvent && div.fireEvent ) {
/*Line 1317 - 'jquery-1.5.1-vsdoc.js' */	//		div.attachEvent("onclick", function click() {
/*Line 1318 - 'jquery-1.5.1-vsdoc.js' */	//			// Cloning a node shouldn't copy over any
/*Line 1319 - 'jquery-1.5.1-vsdoc.js' */	//			// bound event handlers (IE does this)
/*Line 1320 - 'jquery-1.5.1-vsdoc.js' */	//			jQuery.support.noCloneEvent = false;
/*Line 1321 - 'jquery-1.5.1-vsdoc.js' */	//			div.detachEvent("onclick", click);
/*Line 1322 - 'jquery-1.5.1-vsdoc.js' */	//		});
/*Line 1323 - 'jquery-1.5.1-vsdoc.js' */	//		div.cloneNode(true).fireEvent("onclick");
/*Line 1324 - 'jquery-1.5.1-vsdoc.js' */	//	}

/*Line 1326 - 'jquery-1.5.1-vsdoc.js' */	//	div = document.createElement("div");
/*Line 1327 - 'jquery-1.5.1-vsdoc.js' */	//	div.innerHTML = "<input type='radio' name='radiotest' checked='checked'/>";

/*Line 1329 - 'jquery-1.5.1-vsdoc.js' */	//	var fragment = document.createDocumentFragment();
/*Line 1330 - 'jquery-1.5.1-vsdoc.js' */	//	fragment.appendChild( div.firstChild );

/*Line 1332 - 'jquery-1.5.1-vsdoc.js' */	//	// WebKit doesn't clone checked state correctly in fragments
/*Line 1333 - 'jquery-1.5.1-vsdoc.js' */	//	jQuery.support.checkClone = fragment.cloneNode(true).cloneNode(true).lastChild.checked;

/*Line 1335 - 'jquery-1.5.1-vsdoc.js' */	//	// Figure out if the W3C box model works as expected
/*Line 1336 - 'jquery-1.5.1-vsdoc.js' */	//	// document.body must exist before we can do this
/*Line 1337 - 'jquery-1.5.1-vsdoc.js' */	//	jQuery(function() {
/*Line 1338 - 'jquery-1.5.1-vsdoc.js' */	//		var div = document.createElement("div");
/*Line 1339 - 'jquery-1.5.1-vsdoc.js' */	//		div.style.width = div.style.paddingLeft = "1px";

/*Line 1341 - 'jquery-1.5.1-vsdoc.js' */	//		document.body.appendChild( div );
/*Line 1342 - 'jquery-1.5.1-vsdoc.js' */	//		jQuery.boxModel = jQuery.support.boxModel = div.offsetWidth === 2;

/*Line 1344 - 'jquery-1.5.1-vsdoc.js' */	//		if ( "zoom" in div.style ) {
/*Line 1345 - 'jquery-1.5.1-vsdoc.js' */	//			// Check if natively block-level elements act like inline-block
/*Line 1346 - 'jquery-1.5.1-vsdoc.js' */	//			// elements when setting their display to 'inline' and giving
/*Line 1347 - 'jquery-1.5.1-vsdoc.js' */	//			// them layout
/*Line 1348 - 'jquery-1.5.1-vsdoc.js' */	//			// (IE < 8 does this)
/*Line 1349 - 'jquery-1.5.1-vsdoc.js' */	//			div.style.display = "inline";
/*Line 1350 - 'jquery-1.5.1-vsdoc.js' */	//			div.style.zoom = 1;
/*Line 1351 - 'jquery-1.5.1-vsdoc.js' */	//			jQuery.support.inlineBlockNeedsLayout = div.offsetWidth === 2;

/*Line 1353 - 'jquery-1.5.1-vsdoc.js' */	//			// Check if elements with layout shrink-wrap their children
/*Line 1354 - 'jquery-1.5.1-vsdoc.js' */	//			// (IE 6 does this)
/*Line 1355 - 'jquery-1.5.1-vsdoc.js' */	//			div.style.display = "";
/*Line 1356 - 'jquery-1.5.1-vsdoc.js' */	//			div.innerHTML = "<div style='width:4px;'></div>";
/*Line 1357 - 'jquery-1.5.1-vsdoc.js' */	//			jQuery.support.shrinkWrapBlocks = div.offsetWidth !== 2;
/*Line 1358 - 'jquery-1.5.1-vsdoc.js' */	//		}

/*Line 1360 - 'jquery-1.5.1-vsdoc.js' */	//		div.innerHTML = "<table><tr><td style='padding:0;display:none'></td><td>t</td></tr></table>";
/*Line 1361 - 'jquery-1.5.1-vsdoc.js' */	//		var tds = div.getElementsByTagName("td");

/*Line 1363 - 'jquery-1.5.1-vsdoc.js' */	//		// Check if table cells still have offsetWidth/Height when they are set
/*Line 1364 - 'jquery-1.5.1-vsdoc.js' */	//		// to display:none and there are still other visible table cells in a
/*Line 1365 - 'jquery-1.5.1-vsdoc.js' */	//		// table row; if so, offsetWidth/Height are not reliable for use when
/*Line 1366 - 'jquery-1.5.1-vsdoc.js' */	//		// determining if an element has been hidden directly using
/*Line 1367 - 'jquery-1.5.1-vsdoc.js' */	//		// display:none (it is still safe to use offsets if a parent element is
/*Line 1368 - 'jquery-1.5.1-vsdoc.js' */	//		// hidden; don safety goggles and see bug #4512 for more information).
/*Line 1369 - 'jquery-1.5.1-vsdoc.js' */	//		// (only IE 8 fails this test)
/*Line 1370 - 'jquery-1.5.1-vsdoc.js' */	//		jQuery.support.reliableHiddenOffsets = tds[0].offsetHeight === 0;

/*Line 1372 - 'jquery-1.5.1-vsdoc.js' */	//		tds[0].style.display = "";
/*Line 1373 - 'jquery-1.5.1-vsdoc.js' */	//		tds[1].style.display = "none";

/*Line 1375 - 'jquery-1.5.1-vsdoc.js' */	//		// Check if empty table cells still have offsetWidth/Height
/*Line 1376 - 'jquery-1.5.1-vsdoc.js' */	//		// (IE < 8 fail this test)
/*Line 1377 - 'jquery-1.5.1-vsdoc.js' */	//		jQuery.support.reliableHiddenOffsets = jQuery.support.reliableHiddenOffsets && tds[0].offsetHeight === 0;
/*Line 1378 - 'jquery-1.5.1-vsdoc.js' */	//		div.innerHTML = "";

/*Line 1380 - 'jquery-1.5.1-vsdoc.js' */	//		document.body.removeChild( div ).style.display = "none";
/*Line 1381 - 'jquery-1.5.1-vsdoc.js' */	//		div = tds = null;
/*Line 1382 - 'jquery-1.5.1-vsdoc.js' */	//	});

/*Line 1384 - 'jquery-1.5.1-vsdoc.js' */	//	// Technique from Juriy Zaytsev
/*Line 1385 - 'jquery-1.5.1-vsdoc.js' */	//	// http://thinkweb2.com/projects/prototype/detecting-event-support-without-browser-sniffing/
/*Line 1386 - 'jquery-1.5.1-vsdoc.js' */	//	var eventSupported = function( eventName ) {
/*Line 1387 - 'jquery-1.5.1-vsdoc.js' */	//		var el = document.createElement("div");
/*Line 1388 - 'jquery-1.5.1-vsdoc.js' */	//		eventName = "on" + eventName;

/*Line 1390 - 'jquery-1.5.1-vsdoc.js' */	//		var isSupported = (eventName in el);
/*Line 1391 - 'jquery-1.5.1-vsdoc.js' */	//		if ( !isSupported ) {
/*Line 1392 - 'jquery-1.5.1-vsdoc.js' */	//			el.setAttribute(eventName, "return;");
/*Line 1393 - 'jquery-1.5.1-vsdoc.js' */	//			isSupported = typeof el[eventName] === "function";
/*Line 1394 - 'jquery-1.5.1-vsdoc.js' */	//		}
/*Line 1395 - 'jquery-1.5.1-vsdoc.js' */	//		el = null;

/*Line 1397 - 'jquery-1.5.1-vsdoc.js' */	//		return isSupported;
/*Line 1398 - 'jquery-1.5.1-vsdoc.js' */	//	};

/*Line 1400 - 'jquery-1.5.1-vsdoc.js' */	jQuery.support.submitBubbles = false;
/*Line 1401 - 'jquery-1.5.1-vsdoc.js' */	jQuery.support.changeBubbles = false;

/*Line 1403 - 'jquery-1.5.1-vsdoc.js' */	//	// release memory in IE
/*Line 1404 - 'jquery-1.5.1-vsdoc.js' */	//	root = script = div = all = a = null;
/*Line 1405 - 'jquery-1.5.1-vsdoc.js' */})();



/*Line 1409 - 'jquery-1.5.1-vsdoc.js' */var windowData = {},
/*Line 1410 - 'jquery-1.5.1-vsdoc.js' */	rbrace = /^(?:\{.*\}|\[.*\])$/;

/*Line 1412 - 'jquery-1.5.1-vsdoc.js' */jQuery.extend({
/*Line 1413 - 'jquery-1.5.1-vsdoc.js' */	cache: {},

/*Line 1415 - 'jquery-1.5.1-vsdoc.js' */	// Please use with caution
/*Line 1416 - 'jquery-1.5.1-vsdoc.js' */	uuid: 0,

/*Line 1418 - 'jquery-1.5.1-vsdoc.js' */	// Unique for each copy of jQuery on the page	
/*Line 1419 - 'jquery-1.5.1-vsdoc.js' */	expando: "jQuery" + jQuery.now(),

/*Line 1421 - 'jquery-1.5.1-vsdoc.js' */	// The following elements throw uncatchable exceptions if you
/*Line 1422 - 'jquery-1.5.1-vsdoc.js' */	// attempt to add expando properties to them.
/*Line 1423 - 'jquery-1.5.1-vsdoc.js' */	noData: {
/*Line 1424 - 'jquery-1.5.1-vsdoc.js' */		"embed": true,
/*Line 1425 - 'jquery-1.5.1-vsdoc.js' */		// Ban all objects except for Flash (which handle expandos)
/*Line 1426 - 'jquery-1.5.1-vsdoc.js' */		"object": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
/*Line 1427 - 'jquery-1.5.1-vsdoc.js' */		"applet": true
/*Line 1428 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 1430 - 'jquery-1.5.1-vsdoc.js' */	data: function( elem, name, data ) {
/*Line 1431 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 1432 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Store arbitrary data associated with the specified element.
/*Line 1433 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 1434 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="elem" type="Element">
/*Line 1435 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;The DOM element to associate with the data.
/*Line 1436 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 1437 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="name" type="String">
/*Line 1438 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;A string naming the piece of data to set.
/*Line 1439 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 1440 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="value" type="Object">
/*Line 1441 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;The new data value.
/*Line 1442 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 1443 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 1445 - 'jquery-1.5.1-vsdoc.js' */		if ( !jQuery.acceptData( elem ) ) {
/*Line 1446 - 'jquery-1.5.1-vsdoc.js' */			return;
/*Line 1447 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 1449 - 'jquery-1.5.1-vsdoc.js' */		elem = elem == window ?
/*Line 1450 - 'jquery-1.5.1-vsdoc.js' */			windowData :
/*Line 1451 - 'jquery-1.5.1-vsdoc.js' */			elem;

/*Line 1453 - 'jquery-1.5.1-vsdoc.js' */		var isNode = elem.nodeType,
/*Line 1454 - 'jquery-1.5.1-vsdoc.js' */			id = isNode ? elem[ jQuery.expando ] : null,
/*Line 1455 - 'jquery-1.5.1-vsdoc.js' */			cache = jQuery.cache, thisCache;

/*Line 1457 - 'jquery-1.5.1-vsdoc.js' */		if ( isNode && !id && typeof name === "string" && data === undefined ) {
/*Line 1458 - 'jquery-1.5.1-vsdoc.js' */			return;
/*Line 1459 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 1461 - 'jquery-1.5.1-vsdoc.js' */		// Get the data from the object directly
/*Line 1462 - 'jquery-1.5.1-vsdoc.js' */		if ( !isNode ) {
/*Line 1463 - 'jquery-1.5.1-vsdoc.js' */			cache = elem;

/*Line 1465 - 'jquery-1.5.1-vsdoc.js' */		// Compute a unique ID for the element
/*Line 1466 - 'jquery-1.5.1-vsdoc.js' */		} else if ( !id ) {
/*Line 1467 - 'jquery-1.5.1-vsdoc.js' */			elem[ jQuery.expando ] = id = ++jQuery.uuid;
/*Line 1468 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 1470 - 'jquery-1.5.1-vsdoc.js' */		// Avoid generating a new cache unless none exists and we
/*Line 1471 - 'jquery-1.5.1-vsdoc.js' */		// want to manipulate it.
/*Line 1472 - 'jquery-1.5.1-vsdoc.js' */		if ( typeof name === "object" ) {
/*Line 1473 - 'jquery-1.5.1-vsdoc.js' */			if ( isNode ) {
/*Line 1474 - 'jquery-1.5.1-vsdoc.js' */				cache[ id ] = jQuery.extend(cache[ id ], name);

/*Line 1476 - 'jquery-1.5.1-vsdoc.js' */			} else {
/*Line 1477 - 'jquery-1.5.1-vsdoc.js' */				jQuery.extend( cache, name );
/*Line 1478 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 1480 - 'jquery-1.5.1-vsdoc.js' */		} else if ( isNode && !cache[ id ] ) {
/*Line 1481 - 'jquery-1.5.1-vsdoc.js' */			cache[ id ] = {};
/*Line 1482 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 1484 - 'jquery-1.5.1-vsdoc.js' */		thisCache = isNode ? cache[ id ] : cache;

/*Line 1486 - 'jquery-1.5.1-vsdoc.js' */		// Prevent overriding the named cache with undefined values
/*Line 1487 - 'jquery-1.5.1-vsdoc.js' */		if ( data !== undefined ) {
/*Line 1488 - 'jquery-1.5.1-vsdoc.js' */			thisCache[ name ] = data;
/*Line 1489 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 1491 - 'jquery-1.5.1-vsdoc.js' */		return typeof name === "string" ? thisCache[ name ] : thisCache;
/*Line 1492 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 1494 - 'jquery-1.5.1-vsdoc.js' */	removeData: function( elem, name ) {
/*Line 1495 - 'jquery-1.5.1-vsdoc.js' */		if ( !jQuery.acceptData( elem ) ) {
/*Line 1496 - 'jquery-1.5.1-vsdoc.js' */			return;
/*Line 1497 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 1499 - 'jquery-1.5.1-vsdoc.js' */		elem = elem == window ?
/*Line 1500 - 'jquery-1.5.1-vsdoc.js' */			windowData :
/*Line 1501 - 'jquery-1.5.1-vsdoc.js' */			elem;

/*Line 1503 - 'jquery-1.5.1-vsdoc.js' */		var isNode = elem.nodeType,
/*Line 1504 - 'jquery-1.5.1-vsdoc.js' */			id = isNode ? elem[ jQuery.expando ] : elem,
/*Line 1505 - 'jquery-1.5.1-vsdoc.js' */			cache = jQuery.cache,
/*Line 1506 - 'jquery-1.5.1-vsdoc.js' */			thisCache = isNode ? cache[ id ] : id;

/*Line 1508 - 'jquery-1.5.1-vsdoc.js' */		// If we want to remove a specific section of the element's data
/*Line 1509 - 'jquery-1.5.1-vsdoc.js' */		if ( name ) {
/*Line 1510 - 'jquery-1.5.1-vsdoc.js' */			if ( thisCache ) {
/*Line 1511 - 'jquery-1.5.1-vsdoc.js' */				// Remove the section of cache data
/*Line 1512 - 'jquery-1.5.1-vsdoc.js' */				delete thisCache[ name ];

/*Line 1514 - 'jquery-1.5.1-vsdoc.js' */				// If we've removed all the data, remove the element's cache
/*Line 1515 - 'jquery-1.5.1-vsdoc.js' */				if ( isNode && jQuery.isEmptyObject(thisCache) ) {
/*Line 1516 - 'jquery-1.5.1-vsdoc.js' */					jQuery.removeData( elem );
/*Line 1517 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 1518 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 1520 - 'jquery-1.5.1-vsdoc.js' */		// Otherwise, we want to remove all of the element's data
/*Line 1521 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 1522 - 'jquery-1.5.1-vsdoc.js' */			if ( isNode && jQuery.support.deleteExpando ) {
/*Line 1523 - 'jquery-1.5.1-vsdoc.js' */				delete elem[ jQuery.expando ];

/*Line 1525 - 'jquery-1.5.1-vsdoc.js' */			} else if ( elem.removeAttribute ) {
/*Line 1526 - 'jquery-1.5.1-vsdoc.js' */				elem.removeAttribute( jQuery.expando );

/*Line 1528 - 'jquery-1.5.1-vsdoc.js' */			// Completely remove the data cache
/*Line 1529 - 'jquery-1.5.1-vsdoc.js' */			} else if ( isNode ) {
/*Line 1530 - 'jquery-1.5.1-vsdoc.js' */				delete cache[ id ];

/*Line 1532 - 'jquery-1.5.1-vsdoc.js' */			// Remove all fields from the object
/*Line 1533 - 'jquery-1.5.1-vsdoc.js' */			} else {
/*Line 1534 - 'jquery-1.5.1-vsdoc.js' */				for ( var n in elem ) {
/*Line 1535 - 'jquery-1.5.1-vsdoc.js' */					delete elem[ n ];
/*Line 1536 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 1537 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 1538 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 1539 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 1541 - 'jquery-1.5.1-vsdoc.js' */	// A method for determining if a DOM node can handle the data expando
/*Line 1542 - 'jquery-1.5.1-vsdoc.js' */	acceptData: function( elem ) {
/*Line 1543 - 'jquery-1.5.1-vsdoc.js' */		if ( elem.nodeName ) {
/*Line 1544 - 'jquery-1.5.1-vsdoc.js' */			var match = jQuery.noData[ elem.nodeName.toLowerCase() ];

/*Line 1546 - 'jquery-1.5.1-vsdoc.js' */			if ( match ) {
/*Line 1547 - 'jquery-1.5.1-vsdoc.js' */				return !(match === true || elem.getAttribute("classid") !== match);
/*Line 1548 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 1549 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 1551 - 'jquery-1.5.1-vsdoc.js' */		return true;
/*Line 1552 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 1553 - 'jquery-1.5.1-vsdoc.js' */});

/*Line 1555 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn.extend({
/*Line 1556 - 'jquery-1.5.1-vsdoc.js' */	data: function( key, value ) {
/*Line 1557 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 1558 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Store arbitrary data associated with the matched elements.
/*Line 1559 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 1560 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="key" type="String">
/*Line 1561 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;A string naming the piece of data to set.
/*Line 1562 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 1563 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="value" type="Object">
/*Line 1564 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;The new data value.
/*Line 1565 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 1566 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 1568 - 'jquery-1.5.1-vsdoc.js' */		var data = null;

/*Line 1570 - 'jquery-1.5.1-vsdoc.js' */		if ( typeof key === "undefined" ) {
/*Line 1571 - 'jquery-1.5.1-vsdoc.js' */			if ( this.length ) {
/*Line 1572 - 'jquery-1.5.1-vsdoc.js' */				var attr = this[0].attributes, name;
/*Line 1573 - 'jquery-1.5.1-vsdoc.js' */				data = jQuery.data( this[0] );

/*Line 1575 - 'jquery-1.5.1-vsdoc.js' */				for ( var i = 0, l = attr.length; i < l; i++ ) {
/*Line 1576 - 'jquery-1.5.1-vsdoc.js' */					name = attr[i].name;

/*Line 1578 - 'jquery-1.5.1-vsdoc.js' */					if ( name.indexOf( "data-" ) === 0 ) {
/*Line 1579 - 'jquery-1.5.1-vsdoc.js' */						name = name.substr( 5 );
/*Line 1580 - 'jquery-1.5.1-vsdoc.js' */						dataAttr( this[0], name, data[ name ] );
/*Line 1581 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 1582 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 1583 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 1585 - 'jquery-1.5.1-vsdoc.js' */			return data;

/*Line 1587 - 'jquery-1.5.1-vsdoc.js' */		} else if ( typeof key === "object" ) {
/*Line 1588 - 'jquery-1.5.1-vsdoc.js' */			return this.each(function() {
/*Line 1589 - 'jquery-1.5.1-vsdoc.js' */				jQuery.data( this, key );
/*Line 1590 - 'jquery-1.5.1-vsdoc.js' */			});
/*Line 1591 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 1593 - 'jquery-1.5.1-vsdoc.js' */		var parts = key.split(".");
/*Line 1594 - 'jquery-1.5.1-vsdoc.js' */		parts[1] = parts[1] ? "." + parts[1] : "";

/*Line 1596 - 'jquery-1.5.1-vsdoc.js' */		if ( value === undefined ) {
/*Line 1597 - 'jquery-1.5.1-vsdoc.js' */			data = this.triggerHandler("getData" + parts[1] + "!", [parts[0]]);

/*Line 1599 - 'jquery-1.5.1-vsdoc.js' */			// Try to fetch any internally stored data first
/*Line 1600 - 'jquery-1.5.1-vsdoc.js' */			if ( data === undefined && this.length ) {
/*Line 1601 - 'jquery-1.5.1-vsdoc.js' */				data = jQuery.data( this[0], key );
/*Line 1602 - 'jquery-1.5.1-vsdoc.js' */				data = dataAttr( this[0], key, data );
/*Line 1603 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 1605 - 'jquery-1.5.1-vsdoc.js' */			return data === undefined && parts[1] ?
/*Line 1606 - 'jquery-1.5.1-vsdoc.js' */				this.data( parts[0] ) :
/*Line 1607 - 'jquery-1.5.1-vsdoc.js' */				data;

/*Line 1609 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 1610 - 'jquery-1.5.1-vsdoc.js' */			return this.each(function() {
/*Line 1611 - 'jquery-1.5.1-vsdoc.js' */				var $this = jQuery( this ),
/*Line 1612 - 'jquery-1.5.1-vsdoc.js' */					args = [ parts[0], value ];

/*Line 1614 - 'jquery-1.5.1-vsdoc.js' */				$this.triggerHandler( "setData" + parts[1] + "!", args );
/*Line 1615 - 'jquery-1.5.1-vsdoc.js' */				jQuery.data( this, key, value );
/*Line 1616 - 'jquery-1.5.1-vsdoc.js' */				$this.triggerHandler( "changeData" + parts[1] + "!", args );
/*Line 1617 - 'jquery-1.5.1-vsdoc.js' */			});
/*Line 1618 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 1619 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 1621 - 'jquery-1.5.1-vsdoc.js' */	removeData: function( key ) {
/*Line 1622 - 'jquery-1.5.1-vsdoc.js' */		return this.each(function() {
/*Line 1623 - 'jquery-1.5.1-vsdoc.js' */			jQuery.removeData( this, key );
/*Line 1624 - 'jquery-1.5.1-vsdoc.js' */		});
/*Line 1625 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 1626 - 'jquery-1.5.1-vsdoc.js' */});

/*Line 1628 - 'jquery-1.5.1-vsdoc.js' */function dataAttr( elem, key, data ) {
/*Line 1629 - 'jquery-1.5.1-vsdoc.js' */	// If nothing was found internally, try to fetch any
/*Line 1630 - 'jquery-1.5.1-vsdoc.js' */	// data from the HTML5 data-* attribute
/*Line 1631 - 'jquery-1.5.1-vsdoc.js' */	if ( data === undefined && elem.nodeType === 1 ) {
/*Line 1632 - 'jquery-1.5.1-vsdoc.js' */		data = elem.getAttribute( "data-" + key );

/*Line 1634 - 'jquery-1.5.1-vsdoc.js' */		if ( typeof data === "string" ) {
/*Line 1635 - 'jquery-1.5.1-vsdoc.js' */			try {
/*Line 1636 - 'jquery-1.5.1-vsdoc.js' */				data = data === "true" ? true :
/*Line 1637 - 'jquery-1.5.1-vsdoc.js' */				data === "false" ? false :
/*Line 1638 - 'jquery-1.5.1-vsdoc.js' */				data === "null" ? null :
/*Line 1639 - 'jquery-1.5.1-vsdoc.js' */				!jQuery.isNaN( data ) ? parseFloat( data ) :
/*Line 1640 - 'jquery-1.5.1-vsdoc.js' */					rbrace.test( data ) ? jQuery.parseJSON( data ) :
/*Line 1641 - 'jquery-1.5.1-vsdoc.js' */					data;
/*Line 1642 - 'jquery-1.5.1-vsdoc.js' */			} catch( e ) {}

/*Line 1644 - 'jquery-1.5.1-vsdoc.js' */			// Make sure we set the data so it isn't changed later
/*Line 1645 - 'jquery-1.5.1-vsdoc.js' */			jQuery.data( elem, key, data );

/*Line 1647 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 1648 - 'jquery-1.5.1-vsdoc.js' */			data = undefined;
/*Line 1649 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 1650 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 1652 - 'jquery-1.5.1-vsdoc.js' */	return data;
/*Line 1653 - 'jquery-1.5.1-vsdoc.js' */}




/*Line 1658 - 'jquery-1.5.1-vsdoc.js' */jQuery.extend({
/*Line 1659 - 'jquery-1.5.1-vsdoc.js' */	queue: function( elem, type, data ) {
/*Line 1660 - 'jquery-1.5.1-vsdoc.js' */		if ( !elem ) {
/*Line 1661 - 'jquery-1.5.1-vsdoc.js' */			return;
/*Line 1662 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 1664 - 'jquery-1.5.1-vsdoc.js' */		type = (type || "fx") + "queue";
/*Line 1665 - 'jquery-1.5.1-vsdoc.js' */		var q = jQuery.data( elem, type );

/*Line 1667 - 'jquery-1.5.1-vsdoc.js' */		// Speed up dequeue by getting out quickly if this is just a lookup
/*Line 1668 - 'jquery-1.5.1-vsdoc.js' */		if ( !data ) {
/*Line 1669 - 'jquery-1.5.1-vsdoc.js' */			return q || [];
/*Line 1670 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 1672 - 'jquery-1.5.1-vsdoc.js' */		if ( !q || jQuery.isArray(data) ) {
/*Line 1673 - 'jquery-1.5.1-vsdoc.js' */			q = jQuery.data( elem, type, jQuery.makeArray(data) );

/*Line 1675 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 1676 - 'jquery-1.5.1-vsdoc.js' */			q.push( data );
/*Line 1677 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 1679 - 'jquery-1.5.1-vsdoc.js' */		return q;
/*Line 1680 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 1682 - 'jquery-1.5.1-vsdoc.js' */	dequeue: function( elem, type ) {
/*Line 1683 - 'jquery-1.5.1-vsdoc.js' */		type = type || "fx";

/*Line 1685 - 'jquery-1.5.1-vsdoc.js' */		var queue = jQuery.queue( elem, type ),
/*Line 1686 - 'jquery-1.5.1-vsdoc.js' */			fn = queue.shift();

/*Line 1688 - 'jquery-1.5.1-vsdoc.js' */		// If the fx queue is dequeued, always remove the progress sentinel
/*Line 1689 - 'jquery-1.5.1-vsdoc.js' */		if ( fn === "inprogress" ) {
/*Line 1690 - 'jquery-1.5.1-vsdoc.js' */			fn = queue.shift();
/*Line 1691 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 1693 - 'jquery-1.5.1-vsdoc.js' */		if ( fn ) {
/*Line 1694 - 'jquery-1.5.1-vsdoc.js' */			// Add a progress sentinel to prevent the fx queue from being
/*Line 1695 - 'jquery-1.5.1-vsdoc.js' */			// automatically dequeued
/*Line 1696 - 'jquery-1.5.1-vsdoc.js' */			if ( type === "fx" ) {
/*Line 1697 - 'jquery-1.5.1-vsdoc.js' */				queue.unshift("inprogress");
/*Line 1698 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 1700 - 'jquery-1.5.1-vsdoc.js' */			fn.call(elem, function() {
/*Line 1701 - 'jquery-1.5.1-vsdoc.js' */				jQuery.dequeue(elem, type);
/*Line 1702 - 'jquery-1.5.1-vsdoc.js' */			});
/*Line 1703 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 1704 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 1705 - 'jquery-1.5.1-vsdoc.js' */});

/*Line 1707 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn.extend({
/*Line 1708 - 'jquery-1.5.1-vsdoc.js' */	queue: function( type, data ) {
/*Line 1709 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 1710 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;1: queue() - Returns a reference to the first element's queue (which is an array of functions).
/*Line 1711 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;2: queue(callback) - Adds a new function, to be executed, onto the end of the queue of all matched elements.
/*Line 1712 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;3: queue(queue) - Replaces the queue of all matched element with this new queue (the array of functions).
/*Line 1713 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 1714 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="type" type="Function">The function to add to the queue.</param>
/*Line 1715 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 1717 - 'jquery-1.5.1-vsdoc.js' */		if ( typeof type !== "string" ) {
/*Line 1718 - 'jquery-1.5.1-vsdoc.js' */			data = type;
/*Line 1719 - 'jquery-1.5.1-vsdoc.js' */			type = "fx";
/*Line 1720 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 1722 - 'jquery-1.5.1-vsdoc.js' */		if ( data === undefined ) {
/*Line 1723 - 'jquery-1.5.1-vsdoc.js' */			return jQuery.queue( this[0], type );
/*Line 1724 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 1725 - 'jquery-1.5.1-vsdoc.js' */		return this.each(function( i ) {
/*Line 1726 - 'jquery-1.5.1-vsdoc.js' */			var queue = jQuery.queue( this, type, data );

/*Line 1728 - 'jquery-1.5.1-vsdoc.js' */			if ( type === "fx" && queue[0] !== "inprogress" ) {
/*Line 1729 - 'jquery-1.5.1-vsdoc.js' */				jQuery.dequeue( this, type );
/*Line 1730 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 1731 - 'jquery-1.5.1-vsdoc.js' */		});
/*Line 1732 - 'jquery-1.5.1-vsdoc.js' */	},
/*Line 1733 - 'jquery-1.5.1-vsdoc.js' */	dequeue: function( type ) {
/*Line 1734 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 1735 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Removes a queued function from the front of the queue and executes it.
/*Line 1736 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 1737 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="type" type="String" optional="true">The type of queue to access.</param>
/*Line 1738 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 1740 - 'jquery-1.5.1-vsdoc.js' */		return this.each(function() {
/*Line 1741 - 'jquery-1.5.1-vsdoc.js' */			jQuery.dequeue( this, type );
/*Line 1742 - 'jquery-1.5.1-vsdoc.js' */		});
/*Line 1743 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 1745 - 'jquery-1.5.1-vsdoc.js' */	// Based off of the plugin by Clint Helfers, with permission.
/*Line 1746 - 'jquery-1.5.1-vsdoc.js' */	// http://blindsignals.com/index.php/2009/07/jquery-delay/
/*Line 1747 - 'jquery-1.5.1-vsdoc.js' */	delay: function( time, type ) {
/*Line 1748 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 1749 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Set a timer to delay execution of subsequent items in the queue.
/*Line 1750 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 1751 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="time" type="Number">
/*Line 1752 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;An integer indicating the number of milliseconds to delay execution of the next item in the queue.
/*Line 1753 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 1754 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="type" type="String">
/*Line 1755 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;A string containing the name of the queue. Defaults to fx, the standard effects queue.
/*Line 1756 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 1757 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 1759 - 'jquery-1.5.1-vsdoc.js' */		time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;
/*Line 1760 - 'jquery-1.5.1-vsdoc.js' */		type = type || "fx";

/*Line 1762 - 'jquery-1.5.1-vsdoc.js' */		return this.queue( type, function() {
/*Line 1763 - 'jquery-1.5.1-vsdoc.js' */			var elem = this;
/*Line 1764 - 'jquery-1.5.1-vsdoc.js' */			setTimeout(function() {
/*Line 1765 - 'jquery-1.5.1-vsdoc.js' */				jQuery.dequeue( elem, type );
/*Line 1766 - 'jquery-1.5.1-vsdoc.js' */			}, time );
/*Line 1767 - 'jquery-1.5.1-vsdoc.js' */		});
/*Line 1768 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 1770 - 'jquery-1.5.1-vsdoc.js' */	clearQueue: function( type ) {
/*Line 1771 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 1772 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Remove from the queue all items that have not yet been run.
/*Line 1773 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 1774 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="type" type="String" optional="true">
/*Line 1775 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;A string containing the name of the queue. Defaults to fx, the standard effects queue.
/*Line 1776 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 1777 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 1779 - 'jquery-1.5.1-vsdoc.js' */		return this.queue( type || "fx", [] );
/*Line 1780 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 1781 - 'jquery-1.5.1-vsdoc.js' */});




/*Line 1786 - 'jquery-1.5.1-vsdoc.js' */var rclass = /[\n\t]/g,
/*Line 1787 - 'jquery-1.5.1-vsdoc.js' */	rspaces = /\s+/,
/*Line 1788 - 'jquery-1.5.1-vsdoc.js' */	rreturn = /\r/g,
/*Line 1789 - 'jquery-1.5.1-vsdoc.js' */	rspecialurl = /^(?:href|src|style)$/,
/*Line 1790 - 'jquery-1.5.1-vsdoc.js' */	rtype = /^(?:button|input)$/i,
/*Line 1791 - 'jquery-1.5.1-vsdoc.js' */	rfocusable = /^(?:button|input|object|select|textarea)$/i,
/*Line 1792 - 'jquery-1.5.1-vsdoc.js' */	rclickable = /^a(?:rea)?$/i,
/*Line 1793 - 'jquery-1.5.1-vsdoc.js' */	rradiocheck = /^(?:radio|checkbox)$/i;

/*Line 1795 - 'jquery-1.5.1-vsdoc.js' */jQuery.props = {
/*Line 1796 - 'jquery-1.5.1-vsdoc.js' */	"for": "htmlFor",
/*Line 1797 - 'jquery-1.5.1-vsdoc.js' */	"class": "className",
/*Line 1798 - 'jquery-1.5.1-vsdoc.js' */	readonly: "readOnly",
/*Line 1799 - 'jquery-1.5.1-vsdoc.js' */	maxlength: "maxLength",
/*Line 1800 - 'jquery-1.5.1-vsdoc.js' */	cellspacing: "cellSpacing",
/*Line 1801 - 'jquery-1.5.1-vsdoc.js' */	rowspan: "rowSpan",
/*Line 1802 - 'jquery-1.5.1-vsdoc.js' */	colspan: "colSpan",
/*Line 1803 - 'jquery-1.5.1-vsdoc.js' */	tabindex: "tabIndex",
/*Line 1804 - 'jquery-1.5.1-vsdoc.js' */	usemap: "useMap",
/*Line 1805 - 'jquery-1.5.1-vsdoc.js' */	frameborder: "frameBorder"
/*Line 1806 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 1808 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn.extend({
/*Line 1809 - 'jquery-1.5.1-vsdoc.js' */	attr: function( name, value ) {
/*Line 1810 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 1811 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Set a single property to a computed value, on all matched elements.
/*Line 1812 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Instead of a value, a function is provided, that computes the value.
/*Line 1813 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of DOM/Attributes
/*Line 1814 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 1815 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />
/*Line 1816 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="name" type="String">
/*Line 1817 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;The name of the property to set.
/*Line 1818 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 1819 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="value" type="Function">
/*Line 1820 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;A function returning the value to set.
/*Line 1821 - 'jquery-1.5.1-vsdoc.js' */		///	</param>

/*Line 1823 - 'jquery-1.5.1-vsdoc.js' */		return jQuery.access( this, name, value, true, jQuery.attr );
/*Line 1824 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 1826 - 'jquery-1.5.1-vsdoc.js' */	removeAttr: function( name, fn ) {
/*Line 1827 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 1828 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Remove an attribute from each of the matched elements.
/*Line 1829 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of DOM/Attributes
/*Line 1830 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 1831 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="name" type="String">
/*Line 1832 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;An attribute to remove.
/*Line 1833 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 1834 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 1836 - 'jquery-1.5.1-vsdoc.js' */		return this.each(function(){
/*Line 1837 - 'jquery-1.5.1-vsdoc.js' */			jQuery.attr( this, name, "" );
/*Line 1838 - 'jquery-1.5.1-vsdoc.js' */			if ( this.nodeType === 1 ) {
/*Line 1839 - 'jquery-1.5.1-vsdoc.js' */				this.removeAttribute( name );
/*Line 1840 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 1841 - 'jquery-1.5.1-vsdoc.js' */		});
/*Line 1842 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 1844 - 'jquery-1.5.1-vsdoc.js' */	addClass: function( value ) {
/*Line 1845 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 1846 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Adds the specified class(es) to each of the set of matched elements.
/*Line 1847 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of DOM/Attributes
/*Line 1848 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 1849 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="value" type="String">
/*Line 1850 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;One or more class names to be added to the class attribute of each matched element.
/*Line 1851 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 1852 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 1854 - 'jquery-1.5.1-vsdoc.js' */		if ( jQuery.isFunction(value) ) {
/*Line 1855 - 'jquery-1.5.1-vsdoc.js' */			return this.each(function(i) {
/*Line 1856 - 'jquery-1.5.1-vsdoc.js' */				var self = jQuery(this);
/*Line 1857 - 'jquery-1.5.1-vsdoc.js' */				self.addClass( value.call(this, i, self.attr("class")) );
/*Line 1858 - 'jquery-1.5.1-vsdoc.js' */			});
/*Line 1859 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 1861 - 'jquery-1.5.1-vsdoc.js' */		if ( value && typeof value === "string" ) {
/*Line 1862 - 'jquery-1.5.1-vsdoc.js' */			var classNames = (value || "").split( rspaces );

/*Line 1864 - 'jquery-1.5.1-vsdoc.js' */			for ( var i = 0, l = this.length; i < l; i++ ) {
/*Line 1865 - 'jquery-1.5.1-vsdoc.js' */				var elem = this[i];

/*Line 1867 - 'jquery-1.5.1-vsdoc.js' */				if ( elem.nodeType === 1 ) {
/*Line 1868 - 'jquery-1.5.1-vsdoc.js' */					if ( !elem.className ) {
/*Line 1869 - 'jquery-1.5.1-vsdoc.js' */						elem.className = value;

/*Line 1871 - 'jquery-1.5.1-vsdoc.js' */					} else {
/*Line 1872 - 'jquery-1.5.1-vsdoc.js' */						var className = " " + elem.className + " ",
/*Line 1873 - 'jquery-1.5.1-vsdoc.js' */							setClass = elem.className;

/*Line 1875 - 'jquery-1.5.1-vsdoc.js' */						for ( var c = 0, cl = classNames.length; c < cl; c++ ) {
/*Line 1876 - 'jquery-1.5.1-vsdoc.js' */							if ( className.indexOf( " " + classNames[c] + " " ) < 0 ) {
/*Line 1877 - 'jquery-1.5.1-vsdoc.js' */								setClass += " " + classNames[c];
/*Line 1878 - 'jquery-1.5.1-vsdoc.js' */							}
/*Line 1879 - 'jquery-1.5.1-vsdoc.js' */						}
/*Line 1880 - 'jquery-1.5.1-vsdoc.js' */						elem.className = jQuery.trim( setClass );
/*Line 1881 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 1882 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 1883 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 1884 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 1886 - 'jquery-1.5.1-vsdoc.js' */		return this;
/*Line 1887 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 1889 - 'jquery-1.5.1-vsdoc.js' */	removeClass: function( value ) {
/*Line 1890 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 1891 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Removes all or the specified class(es) from the set of matched elements.
/*Line 1892 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of DOM/Attributes
/*Line 1893 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 1894 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="value" type="String" optional="true">
/*Line 1895 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;(Optional) A class name to be removed from the class attribute of each matched element.
/*Line 1896 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 1897 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 1899 - 'jquery-1.5.1-vsdoc.js' */		if ( jQuery.isFunction(value) ) {
/*Line 1900 - 'jquery-1.5.1-vsdoc.js' */			return this.each(function(i) {
/*Line 1901 - 'jquery-1.5.1-vsdoc.js' */				var self = jQuery(this);
/*Line 1902 - 'jquery-1.5.1-vsdoc.js' */				self.removeClass( value.call(this, i, self.attr("class")) );
/*Line 1903 - 'jquery-1.5.1-vsdoc.js' */			});
/*Line 1904 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 1906 - 'jquery-1.5.1-vsdoc.js' */		if ( (value && typeof value === "string") || value === undefined ) {
/*Line 1907 - 'jquery-1.5.1-vsdoc.js' */			var classNames = (value || "").split( rspaces );

/*Line 1909 - 'jquery-1.5.1-vsdoc.js' */			for ( var i = 0, l = this.length; i < l; i++ ) {
/*Line 1910 - 'jquery-1.5.1-vsdoc.js' */				var elem = this[i];

/*Line 1912 - 'jquery-1.5.1-vsdoc.js' */				if ( elem.nodeType === 1 && elem.className ) {
/*Line 1913 - 'jquery-1.5.1-vsdoc.js' */					if ( value ) {
/*Line 1914 - 'jquery-1.5.1-vsdoc.js' */						var className = (" " + elem.className + " ").replace(rclass, " ");
/*Line 1915 - 'jquery-1.5.1-vsdoc.js' */						for ( var c = 0, cl = classNames.length; c < cl; c++ ) {
/*Line 1916 - 'jquery-1.5.1-vsdoc.js' */							className = className.replace(" " + classNames[c] + " ", " ");
/*Line 1917 - 'jquery-1.5.1-vsdoc.js' */						}
/*Line 1918 - 'jquery-1.5.1-vsdoc.js' */						elem.className = jQuery.trim( className );

/*Line 1920 - 'jquery-1.5.1-vsdoc.js' */					} else {
/*Line 1921 - 'jquery-1.5.1-vsdoc.js' */						elem.className = "";
/*Line 1922 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 1923 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 1924 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 1925 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 1927 - 'jquery-1.5.1-vsdoc.js' */		return this;
/*Line 1928 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 1930 - 'jquery-1.5.1-vsdoc.js' */	toggleClass: function( value, stateVal ) {
/*Line 1931 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 1932 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Add or remove a class from each element in the set of matched elements, depending
/*Line 1933 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;on either the class's presence or the value of the switch argument.
/*Line 1934 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 1935 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="value" type="Object">
/*Line 1936 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;A class name to be toggled for each element in the matched set.
/*Line 1937 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 1938 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="stateVal" type="Object">
/*Line 1939 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;A boolean value to determine whether the class should be added or removed.
/*Line 1940 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 1941 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 1943 - 'jquery-1.5.1-vsdoc.js' */		var type = typeof value,
/*Line 1944 - 'jquery-1.5.1-vsdoc.js' */			isBool = typeof stateVal === "boolean";

/*Line 1946 - 'jquery-1.5.1-vsdoc.js' */		if ( jQuery.isFunction( value ) ) {
/*Line 1947 - 'jquery-1.5.1-vsdoc.js' */			return this.each(function(i) {
/*Line 1948 - 'jquery-1.5.1-vsdoc.js' */				var self = jQuery(this);
/*Line 1949 - 'jquery-1.5.1-vsdoc.js' */				self.toggleClass( value.call(this, i, self.attr("class"), stateVal), stateVal );
/*Line 1950 - 'jquery-1.5.1-vsdoc.js' */			});
/*Line 1951 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 1953 - 'jquery-1.5.1-vsdoc.js' */		return this.each(function() {
/*Line 1954 - 'jquery-1.5.1-vsdoc.js' */			if ( type === "string" ) {
/*Line 1955 - 'jquery-1.5.1-vsdoc.js' */				// toggle individual class names
/*Line 1956 - 'jquery-1.5.1-vsdoc.js' */				var className,
/*Line 1957 - 'jquery-1.5.1-vsdoc.js' */					i = 0,
/*Line 1958 - 'jquery-1.5.1-vsdoc.js' */					self = jQuery( this ),
/*Line 1959 - 'jquery-1.5.1-vsdoc.js' */					state = stateVal,
/*Line 1960 - 'jquery-1.5.1-vsdoc.js' */					classNames = value.split( rspaces );

/*Line 1962 - 'jquery-1.5.1-vsdoc.js' */				while ( (className = classNames[ i++ ]) ) {
/*Line 1963 - 'jquery-1.5.1-vsdoc.js' */					// check each className given, space seperated list
/*Line 1964 - 'jquery-1.5.1-vsdoc.js' */					state = isBool ? state : !self.hasClass( className );
/*Line 1965 - 'jquery-1.5.1-vsdoc.js' */					self[ state ? "addClass" : "removeClass" ]( className );
/*Line 1966 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 1968 - 'jquery-1.5.1-vsdoc.js' */			} else if ( type === "undefined" || type === "boolean" ) {
/*Line 1969 - 'jquery-1.5.1-vsdoc.js' */				if ( this.className ) {
/*Line 1970 - 'jquery-1.5.1-vsdoc.js' */					// store className if set
/*Line 1971 - 'jquery-1.5.1-vsdoc.js' */					jQuery.data( this, "__className__", this.className );
/*Line 1972 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 1974 - 'jquery-1.5.1-vsdoc.js' */				// toggle whole className
/*Line 1975 - 'jquery-1.5.1-vsdoc.js' */				this.className = this.className || value === false ? "" : jQuery.data( this, "__className__" ) || "";
/*Line 1976 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 1977 - 'jquery-1.5.1-vsdoc.js' */		});
/*Line 1978 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 1980 - 'jquery-1.5.1-vsdoc.js' */	hasClass: function( selector ) {
/*Line 1981 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 1982 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Checks the current selection against a class and returns whether at least one selection has a given class.
/*Line 1983 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 1984 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="selector" type="String">The class to check against</param>
/*Line 1985 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="Boolean">True if at least one element in the selection has the class, otherwise false.</returns>

/*Line 1987 - 'jquery-1.5.1-vsdoc.js' */		var className = " " + selector + " ";
/*Line 1988 - 'jquery-1.5.1-vsdoc.js' */		for ( var i = 0, l = this.length; i < l; i++ ) {
/*Line 1989 - 'jquery-1.5.1-vsdoc.js' */			if ( (" " + this[i].className + " ").replace(rclass, " ").indexOf( className ) > -1 ) {
/*Line 1990 - 'jquery-1.5.1-vsdoc.js' */				return true;
/*Line 1991 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 1992 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 1994 - 'jquery-1.5.1-vsdoc.js' */		return false;
/*Line 1995 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 1997 - 'jquery-1.5.1-vsdoc.js' */	val: function( value ) {
/*Line 1998 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 1999 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Set the value of every matched element.
/*Line 2000 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of DOM/Attributes
/*Line 2001 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 2002 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />
/*Line 2003 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="value" type="String">
/*Line 2004 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;A string of text or an array of strings to set as the value property of each
/*Line 2005 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;matched element.
/*Line 2006 - 'jquery-1.5.1-vsdoc.js' */		///	</param>

/*Line 2008 - 'jquery-1.5.1-vsdoc.js' */		if ( !arguments.length ) {
/*Line 2009 - 'jquery-1.5.1-vsdoc.js' */			var elem = this[0];

/*Line 2011 - 'jquery-1.5.1-vsdoc.js' */			if ( elem ) {
/*Line 2012 - 'jquery-1.5.1-vsdoc.js' */				if ( jQuery.nodeName( elem, "option" ) ) {
/*Line 2013 - 'jquery-1.5.1-vsdoc.js' */					// attributes.value is undefined in Blackberry 4.7 but
/*Line 2014 - 'jquery-1.5.1-vsdoc.js' */					// uses .value. See #6932
/*Line 2015 - 'jquery-1.5.1-vsdoc.js' */					var val = elem.attributes.value;
/*Line 2016 - 'jquery-1.5.1-vsdoc.js' */					return !val || val.specified ? elem.value : elem.text;
/*Line 2017 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 2019 - 'jquery-1.5.1-vsdoc.js' */				// We need to handle select boxes special
/*Line 2020 - 'jquery-1.5.1-vsdoc.js' */				if ( jQuery.nodeName( elem, "select" ) ) {
/*Line 2021 - 'jquery-1.5.1-vsdoc.js' */					var index = elem.selectedIndex,
/*Line 2022 - 'jquery-1.5.1-vsdoc.js' */						values = [],
/*Line 2023 - 'jquery-1.5.1-vsdoc.js' */						options = elem.options,
/*Line 2024 - 'jquery-1.5.1-vsdoc.js' */						one = elem.type === "select-one";

/*Line 2026 - 'jquery-1.5.1-vsdoc.js' */					// Nothing was selected
/*Line 2027 - 'jquery-1.5.1-vsdoc.js' */					if ( index < 0 ) {
/*Line 2028 - 'jquery-1.5.1-vsdoc.js' */						return null;
/*Line 2029 - 'jquery-1.5.1-vsdoc.js' */					}

/*Line 2031 - 'jquery-1.5.1-vsdoc.js' */					// Loop through all the selected options
/*Line 2032 - 'jquery-1.5.1-vsdoc.js' */					for ( var i = one ? index : 0, max = one ? index + 1 : options.length; i < max; i++ ) {
/*Line 2033 - 'jquery-1.5.1-vsdoc.js' */						var option = options[ i ];

/*Line 2035 - 'jquery-1.5.1-vsdoc.js' */						// Don't return options that are disabled or in a disabled optgroup
/*Line 2036 - 'jquery-1.5.1-vsdoc.js' */						if ( option.selected && (jQuery.support.optDisabled ? !option.disabled : option.getAttribute("disabled") === null) && 
/*Line 2037 - 'jquery-1.5.1-vsdoc.js' */								(!option.parentNode.disabled || !jQuery.nodeName( option.parentNode, "optgroup" )) ) {

/*Line 2039 - 'jquery-1.5.1-vsdoc.js' */							// Get the specific value for the option
/*Line 2040 - 'jquery-1.5.1-vsdoc.js' */							value = jQuery(option).val();

/*Line 2042 - 'jquery-1.5.1-vsdoc.js' */							// We don't need an array for one selects
/*Line 2043 - 'jquery-1.5.1-vsdoc.js' */							if ( one ) {
/*Line 2044 - 'jquery-1.5.1-vsdoc.js' */								return value;
/*Line 2045 - 'jquery-1.5.1-vsdoc.js' */							}

/*Line 2047 - 'jquery-1.5.1-vsdoc.js' */							// Multi-Selects return an array
/*Line 2048 - 'jquery-1.5.1-vsdoc.js' */							values.push( value );
/*Line 2049 - 'jquery-1.5.1-vsdoc.js' */						}
/*Line 2050 - 'jquery-1.5.1-vsdoc.js' */					}

/*Line 2052 - 'jquery-1.5.1-vsdoc.js' */					return values;
/*Line 2053 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 2055 - 'jquery-1.5.1-vsdoc.js' */				// Handle the case where in Webkit "" is returned instead of "on" if a value isn't specified
/*Line 2056 - 'jquery-1.5.1-vsdoc.js' */				if ( rradiocheck.test( elem.type ) && !jQuery.support.checkOn ) {
/*Line 2057 - 'jquery-1.5.1-vsdoc.js' */					return elem.getAttribute("value") === null ? "on" : elem.value;
/*Line 2058 - 'jquery-1.5.1-vsdoc.js' */				}
				

/*Line 2061 - 'jquery-1.5.1-vsdoc.js' */				// Everything else, we just grab the value
/*Line 2062 - 'jquery-1.5.1-vsdoc.js' */				return (elem.value || "").replace(rreturn, "");

/*Line 2064 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 2066 - 'jquery-1.5.1-vsdoc.js' */			return undefined;
/*Line 2067 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2069 - 'jquery-1.5.1-vsdoc.js' */		var isFunction = jQuery.isFunction(value);

/*Line 2071 - 'jquery-1.5.1-vsdoc.js' */		return this.each(function(i) {
/*Line 2072 - 'jquery-1.5.1-vsdoc.js' */			var self = jQuery(this), val = value;

/*Line 2074 - 'jquery-1.5.1-vsdoc.js' */			if ( this.nodeType !== 1 ) {
/*Line 2075 - 'jquery-1.5.1-vsdoc.js' */				return;
/*Line 2076 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 2078 - 'jquery-1.5.1-vsdoc.js' */			if ( isFunction ) {
/*Line 2079 - 'jquery-1.5.1-vsdoc.js' */				val = value.call(this, i, self.val());
/*Line 2080 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 2082 - 'jquery-1.5.1-vsdoc.js' */			// Treat null/undefined as ""; convert numbers to string
/*Line 2083 - 'jquery-1.5.1-vsdoc.js' */			if ( val == null ) {
/*Line 2084 - 'jquery-1.5.1-vsdoc.js' */				val = "";
/*Line 2085 - 'jquery-1.5.1-vsdoc.js' */			} else if ( typeof val === "number" ) {
/*Line 2086 - 'jquery-1.5.1-vsdoc.js' */				val += "";
/*Line 2087 - 'jquery-1.5.1-vsdoc.js' */			} else if ( jQuery.isArray(val) ) {
/*Line 2088 - 'jquery-1.5.1-vsdoc.js' */				val = jQuery.map(val, function (value) {
/*Line 2089 - 'jquery-1.5.1-vsdoc.js' */					return value == null ? "" : value + "";
/*Line 2090 - 'jquery-1.5.1-vsdoc.js' */				});
/*Line 2091 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 2093 - 'jquery-1.5.1-vsdoc.js' */			if ( jQuery.isArray(val) && rradiocheck.test( this.type ) ) {
/*Line 2094 - 'jquery-1.5.1-vsdoc.js' */				this.checked = jQuery.inArray( self.val(), val ) >= 0;

/*Line 2096 - 'jquery-1.5.1-vsdoc.js' */			} else if ( jQuery.nodeName( this, "select" ) ) {
/*Line 2097 - 'jquery-1.5.1-vsdoc.js' */				var values = jQuery.makeArray(val);

/*Line 2099 - 'jquery-1.5.1-vsdoc.js' */				jQuery( "option", this ).each(function() {
/*Line 2100 - 'jquery-1.5.1-vsdoc.js' */					this.selected = jQuery.inArray( jQuery(this).val(), values ) >= 0;
/*Line 2101 - 'jquery-1.5.1-vsdoc.js' */				});

/*Line 2103 - 'jquery-1.5.1-vsdoc.js' */				if ( !values.length ) {
/*Line 2104 - 'jquery-1.5.1-vsdoc.js' */					this.selectedIndex = -1;
/*Line 2105 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 2107 - 'jquery-1.5.1-vsdoc.js' */			} else {
/*Line 2108 - 'jquery-1.5.1-vsdoc.js' */				this.value = val;
/*Line 2109 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 2110 - 'jquery-1.5.1-vsdoc.js' */		});
/*Line 2111 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 2112 - 'jquery-1.5.1-vsdoc.js' */});

/*Line 2114 - 'jquery-1.5.1-vsdoc.js' */jQuery.extend({
/*Line 2115 - 'jquery-1.5.1-vsdoc.js' */	attrFn: {
/*Line 2116 - 'jquery-1.5.1-vsdoc.js' */		val: true,
/*Line 2117 - 'jquery-1.5.1-vsdoc.js' */		css: true,
/*Line 2118 - 'jquery-1.5.1-vsdoc.js' */		html: true,
/*Line 2119 - 'jquery-1.5.1-vsdoc.js' */		text: true,
/*Line 2120 - 'jquery-1.5.1-vsdoc.js' */		data: true,
/*Line 2121 - 'jquery-1.5.1-vsdoc.js' */		width: true,
/*Line 2122 - 'jquery-1.5.1-vsdoc.js' */		height: true,
/*Line 2123 - 'jquery-1.5.1-vsdoc.js' */		offset: true
/*Line 2124 - 'jquery-1.5.1-vsdoc.js' */	},
		
/*Line 2126 - 'jquery-1.5.1-vsdoc.js' */	attr: function( elem, name, value, pass ) {
/*Line 2127 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 2128 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This method is internal.
/*Line 2129 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 2130 - 'jquery-1.5.1-vsdoc.js' */		///	<private />

/*Line 2132 - 'jquery-1.5.1-vsdoc.js' */		// don't set attributes on text and comment nodes
/*Line 2133 - 'jquery-1.5.1-vsdoc.js' */		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 ) {
/*Line 2134 - 'jquery-1.5.1-vsdoc.js' */			return undefined;
/*Line 2135 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2137 - 'jquery-1.5.1-vsdoc.js' */		if ( pass && name in jQuery.attrFn ) {
/*Line 2138 - 'jquery-1.5.1-vsdoc.js' */			return jQuery(elem)[name](value);
/*Line 2139 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2141 - 'jquery-1.5.1-vsdoc.js' */		var notxml = elem.nodeType !== 1 || !jQuery.isXMLDoc( elem ),
/*Line 2142 - 'jquery-1.5.1-vsdoc.js' */			// Whether we are setting (or getting)
/*Line 2143 - 'jquery-1.5.1-vsdoc.js' */			set = value !== undefined;

/*Line 2145 - 'jquery-1.5.1-vsdoc.js' */		// Try to normalize/fix the name
/*Line 2146 - 'jquery-1.5.1-vsdoc.js' */		name = notxml && jQuery.props[ name ] || name;

/*Line 2148 - 'jquery-1.5.1-vsdoc.js' */		// These attributes require special treatment
/*Line 2149 - 'jquery-1.5.1-vsdoc.js' */		var special = rspecialurl.test( name );

/*Line 2151 - 'jquery-1.5.1-vsdoc.js' */		// Safari mis-reports the default selected property of an option
/*Line 2152 - 'jquery-1.5.1-vsdoc.js' */		// Accessing the parent's selectedIndex property fixes it
/*Line 2153 - 'jquery-1.5.1-vsdoc.js' */		if ( name === "selected" && !jQuery.support.optSelected ) {
/*Line 2154 - 'jquery-1.5.1-vsdoc.js' */			var parent = elem.parentNode;
/*Line 2155 - 'jquery-1.5.1-vsdoc.js' */			if ( parent ) {
/*Line 2156 - 'jquery-1.5.1-vsdoc.js' */				parent.selectedIndex;

/*Line 2158 - 'jquery-1.5.1-vsdoc.js' */				// Make sure that it also works with optgroups, see #5701
/*Line 2159 - 'jquery-1.5.1-vsdoc.js' */				if ( parent.parentNode ) {
/*Line 2160 - 'jquery-1.5.1-vsdoc.js' */					parent.parentNode.selectedIndex;
/*Line 2161 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 2162 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 2163 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2165 - 'jquery-1.5.1-vsdoc.js' */		// If applicable, access the attribute via the DOM 0 way
/*Line 2166 - 'jquery-1.5.1-vsdoc.js' */		// 'in' checks fail in Blackberry 4.7 #6931
/*Line 2167 - 'jquery-1.5.1-vsdoc.js' */		if ( (name in elem || elem[ name ] !== undefined) && notxml && !special ) {
/*Line 2168 - 'jquery-1.5.1-vsdoc.js' */			if ( set ) {
/*Line 2169 - 'jquery-1.5.1-vsdoc.js' */				// We can't allow the type property to be changed (since it causes problems in IE)
/*Line 2170 - 'jquery-1.5.1-vsdoc.js' */				if ( name === "type" && rtype.test( elem.nodeName ) && elem.parentNode ) {
/*Line 2171 - 'jquery-1.5.1-vsdoc.js' */					jQuery.error( "type property can't be changed" );
/*Line 2172 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 2174 - 'jquery-1.5.1-vsdoc.js' */				if ( value === null ) {
/*Line 2175 - 'jquery-1.5.1-vsdoc.js' */					if ( elem.nodeType === 1 ) {
/*Line 2176 - 'jquery-1.5.1-vsdoc.js' */						elem.removeAttribute( name );
/*Line 2177 - 'jquery-1.5.1-vsdoc.js' */					}

/*Line 2179 - 'jquery-1.5.1-vsdoc.js' */				} else {
/*Line 2180 - 'jquery-1.5.1-vsdoc.js' */					elem[ name ] = value;
/*Line 2181 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 2182 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 2184 - 'jquery-1.5.1-vsdoc.js' */			// browsers index elements by id/name on forms, give priority to attributes.
/*Line 2185 - 'jquery-1.5.1-vsdoc.js' */			if ( jQuery.nodeName( elem, "form" ) && elem.getAttributeNode(name) ) {
/*Line 2186 - 'jquery-1.5.1-vsdoc.js' */				return elem.getAttributeNode( name ).nodeValue;
/*Line 2187 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 2189 - 'jquery-1.5.1-vsdoc.js' */			// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set
/*Line 2190 - 'jquery-1.5.1-vsdoc.js' */			// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
/*Line 2191 - 'jquery-1.5.1-vsdoc.js' */			if ( name === "tabIndex" ) {
/*Line 2192 - 'jquery-1.5.1-vsdoc.js' */				var attributeNode = elem.getAttributeNode( "tabIndex" );

/*Line 2194 - 'jquery-1.5.1-vsdoc.js' */				return attributeNode && attributeNode.specified ?
/*Line 2195 - 'jquery-1.5.1-vsdoc.js' */					attributeNode.value :
/*Line 2196 - 'jquery-1.5.1-vsdoc.js' */					rfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName ) && elem.href ?
/*Line 2197 - 'jquery-1.5.1-vsdoc.js' */						0 :
/*Line 2198 - 'jquery-1.5.1-vsdoc.js' */						undefined;
/*Line 2199 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 2201 - 'jquery-1.5.1-vsdoc.js' */			return elem[ name ];
/*Line 2202 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2204 - 'jquery-1.5.1-vsdoc.js' */		if ( !jQuery.support.style && notxml && name === "style" ) {
/*Line 2205 - 'jquery-1.5.1-vsdoc.js' */			if ( set ) {
/*Line 2206 - 'jquery-1.5.1-vsdoc.js' */				elem.style.cssText = "" + value;
/*Line 2207 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 2209 - 'jquery-1.5.1-vsdoc.js' */			return elem.style.cssText;
/*Line 2210 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2212 - 'jquery-1.5.1-vsdoc.js' */		if ( set ) {
/*Line 2213 - 'jquery-1.5.1-vsdoc.js' */			// convert the value to a string (all browsers do this but IE) see #1070
/*Line 2214 - 'jquery-1.5.1-vsdoc.js' */			elem.setAttribute( name, "" + value );
/*Line 2215 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2217 - 'jquery-1.5.1-vsdoc.js' */		// Ensure that missing attributes return undefined
/*Line 2218 - 'jquery-1.5.1-vsdoc.js' */		// Blackberry 4.7 returns "" from getAttribute #6938
/*Line 2219 - 'jquery-1.5.1-vsdoc.js' */		if ( !elem.attributes[ name ] && (elem.hasAttribute && !elem.hasAttribute( name )) ) {
/*Line 2220 - 'jquery-1.5.1-vsdoc.js' */			return undefined;
/*Line 2221 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2223 - 'jquery-1.5.1-vsdoc.js' */		var attr = !jQuery.support.hrefNormalized && notxml && special ?
/*Line 2224 - 'jquery-1.5.1-vsdoc.js' */				// Some attributes require a special call on IE
/*Line 2225 - 'jquery-1.5.1-vsdoc.js' */				elem.getAttribute( name, 2 ) :
/*Line 2226 - 'jquery-1.5.1-vsdoc.js' */				elem.getAttribute( name );

/*Line 2228 - 'jquery-1.5.1-vsdoc.js' */		// Non-existent attributes return null, we normalize to undefined
/*Line 2229 - 'jquery-1.5.1-vsdoc.js' */		return attr === null ? undefined : attr;
/*Line 2230 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 2231 - 'jquery-1.5.1-vsdoc.js' */});




/*Line 2236 - 'jquery-1.5.1-vsdoc.js' */var rnamespaces = /\.(.*)$/,
/*Line 2237 - 'jquery-1.5.1-vsdoc.js' */	rformElems = /^(?:textarea|input|select)$/i,
/*Line 2238 - 'jquery-1.5.1-vsdoc.js' */	rperiod = /\./g,
/*Line 2239 - 'jquery-1.5.1-vsdoc.js' */	rspace = / /g,
/*Line 2240 - 'jquery-1.5.1-vsdoc.js' */	rescape = /[^\w\s.|`]/g,
/*Line 2241 - 'jquery-1.5.1-vsdoc.js' */	fcleanup = function( nm ) {
/*Line 2242 - 'jquery-1.5.1-vsdoc.js' */		return nm.replace(rescape, "\\$&");
/*Line 2243 - 'jquery-1.5.1-vsdoc.js' */	},
/*Line 2244 - 'jquery-1.5.1-vsdoc.js' */	focusCounts = { focusin: 0, focusout: 0 };

/*Line 2246 - 'jquery-1.5.1-vsdoc.js' *//*
/*Line 2247 - 'jquery-1.5.1-vsdoc.js' */ * A number of helper functions used for managing events.
/*Line 2248 - 'jquery-1.5.1-vsdoc.js' */ * Many of the ideas behind this code originated from
/*Line 2249 - 'jquery-1.5.1-vsdoc.js' */ * Dean Edwards' addEvent library.
/*Line 2250 - 'jquery-1.5.1-vsdoc.js' */ */
/*Line 2251 - 'jquery-1.5.1-vsdoc.js' */jQuery.event = {

/*Line 2253 - 'jquery-1.5.1-vsdoc.js' */	// Bind an event to an element
/*Line 2254 - 'jquery-1.5.1-vsdoc.js' */	// Original by Dean Edwards
/*Line 2255 - 'jquery-1.5.1-vsdoc.js' */	add: function( elem, types, handler, data ) {
/*Line 2256 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 2257 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This method is internal.
/*Line 2258 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 2259 - 'jquery-1.5.1-vsdoc.js' */		///	<private />

/*Line 2261 - 'jquery-1.5.1-vsdoc.js' */		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
/*Line 2262 - 'jquery-1.5.1-vsdoc.js' */			return;
/*Line 2263 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2265 - 'jquery-1.5.1-vsdoc.js' */		// For whatever reason, IE has trouble passing the window object
/*Line 2266 - 'jquery-1.5.1-vsdoc.js' */		// around, causing it to be cloned in the process
/*Line 2267 - 'jquery-1.5.1-vsdoc.js' */		if ( jQuery.isWindow( elem ) && ( elem !== window && !elem.frameElement ) ) {
/*Line 2268 - 'jquery-1.5.1-vsdoc.js' */			elem = window;
/*Line 2269 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2271 - 'jquery-1.5.1-vsdoc.js' */		if ( handler === false ) {
/*Line 2272 - 'jquery-1.5.1-vsdoc.js' */			handler = returnFalse;
/*Line 2273 - 'jquery-1.5.1-vsdoc.js' */		} else if ( !handler ) {
/*Line 2274 - 'jquery-1.5.1-vsdoc.js' */			// Fixes bug #7229. Fix recommended by jdalton
/*Line 2275 - 'jquery-1.5.1-vsdoc.js' */		  return;
/*Line 2276 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2278 - 'jquery-1.5.1-vsdoc.js' */		var handleObjIn, handleObj;

/*Line 2280 - 'jquery-1.5.1-vsdoc.js' */		if ( handler.handler ) {
/*Line 2281 - 'jquery-1.5.1-vsdoc.js' */			handleObjIn = handler;
/*Line 2282 - 'jquery-1.5.1-vsdoc.js' */			handler = handleObjIn.handler;
/*Line 2283 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2285 - 'jquery-1.5.1-vsdoc.js' */		// Make sure that the function being executed has a unique ID
/*Line 2286 - 'jquery-1.5.1-vsdoc.js' */		if ( !handler.guid ) {
/*Line 2287 - 'jquery-1.5.1-vsdoc.js' */			handler.guid = jQuery.guid++;
/*Line 2288 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2290 - 'jquery-1.5.1-vsdoc.js' */		// Init the element's event structure
/*Line 2291 - 'jquery-1.5.1-vsdoc.js' */		var elemData = jQuery.data( elem );

/*Line 2293 - 'jquery-1.5.1-vsdoc.js' */		// If no elemData is found then we must be trying to bind to one of the
/*Line 2294 - 'jquery-1.5.1-vsdoc.js' */		// banned noData elements
/*Line 2295 - 'jquery-1.5.1-vsdoc.js' */		if ( !elemData ) {
/*Line 2296 - 'jquery-1.5.1-vsdoc.js' */			return;
/*Line 2297 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2299 - 'jquery-1.5.1-vsdoc.js' */		// Use a key less likely to result in collisions for plain JS objects.
/*Line 2300 - 'jquery-1.5.1-vsdoc.js' */		// Fixes bug #7150.
/*Line 2301 - 'jquery-1.5.1-vsdoc.js' */		var eventKey = elem.nodeType ? "events" : "__events__",
/*Line 2302 - 'jquery-1.5.1-vsdoc.js' */			events = elemData[ eventKey ],
/*Line 2303 - 'jquery-1.5.1-vsdoc.js' */			eventHandle = elemData.handle;
			
/*Line 2305 - 'jquery-1.5.1-vsdoc.js' */		if ( typeof events === "function" ) {
/*Line 2306 - 'jquery-1.5.1-vsdoc.js' */			// On plain objects events is a fn that holds the the data
/*Line 2307 - 'jquery-1.5.1-vsdoc.js' */			// which prevents this data from being JSON serialized
/*Line 2308 - 'jquery-1.5.1-vsdoc.js' */			// the function does not need to be called, it just contains the data
/*Line 2309 - 'jquery-1.5.1-vsdoc.js' */			eventHandle = events.handle;
/*Line 2310 - 'jquery-1.5.1-vsdoc.js' */			events = events.events;

/*Line 2312 - 'jquery-1.5.1-vsdoc.js' */		} else if ( !events ) {
/*Line 2313 - 'jquery-1.5.1-vsdoc.js' */			if ( !elem.nodeType ) {
/*Line 2314 - 'jquery-1.5.1-vsdoc.js' */				// On plain objects, create a fn that acts as the holder
/*Line 2315 - 'jquery-1.5.1-vsdoc.js' */				// of the values to avoid JSON serialization of event data
/*Line 2316 - 'jquery-1.5.1-vsdoc.js' */				elemData[ eventKey ] = elemData = function(){};
/*Line 2317 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 2319 - 'jquery-1.5.1-vsdoc.js' */			elemData.events = events = {};
/*Line 2320 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2322 - 'jquery-1.5.1-vsdoc.js' */		if ( !eventHandle ) {
/*Line 2323 - 'jquery-1.5.1-vsdoc.js' */			elemData.handle = eventHandle = function() {
/*Line 2324 - 'jquery-1.5.1-vsdoc.js' */				// Handle the second event of a trigger and when
/*Line 2325 - 'jquery-1.5.1-vsdoc.js' */				// an event is called after a page has unloaded
/*Line 2326 - 'jquery-1.5.1-vsdoc.js' */				return typeof jQuery !== "undefined" && !jQuery.event.triggered ?
/*Line 2327 - 'jquery-1.5.1-vsdoc.js' */					jQuery.event.handle.apply( eventHandle.elem, arguments ) :
/*Line 2328 - 'jquery-1.5.1-vsdoc.js' */					undefined;
/*Line 2329 - 'jquery-1.5.1-vsdoc.js' */			};
/*Line 2330 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2332 - 'jquery-1.5.1-vsdoc.js' */		// Add elem as a property of the handle function
/*Line 2333 - 'jquery-1.5.1-vsdoc.js' */		// This is to prevent a memory leak with non-native events in IE.
/*Line 2334 - 'jquery-1.5.1-vsdoc.js' */		eventHandle.elem = elem;

/*Line 2336 - 'jquery-1.5.1-vsdoc.js' */		// Handle multiple events separated by a space
/*Line 2337 - 'jquery-1.5.1-vsdoc.js' */		// jQuery(...).bind("mouseover mouseout", fn);
/*Line 2338 - 'jquery-1.5.1-vsdoc.js' */		types = types.split(" ");

/*Line 2340 - 'jquery-1.5.1-vsdoc.js' */		var type, i = 0, namespaces;

/*Line 2342 - 'jquery-1.5.1-vsdoc.js' */		while ( (type = types[ i++ ]) ) {
/*Line 2343 - 'jquery-1.5.1-vsdoc.js' */			handleObj = handleObjIn ?
/*Line 2344 - 'jquery-1.5.1-vsdoc.js' */				jQuery.extend({}, handleObjIn) :
/*Line 2345 - 'jquery-1.5.1-vsdoc.js' */				{ handler: handler, data: data };

/*Line 2347 - 'jquery-1.5.1-vsdoc.js' */			// Namespaced event handlers
/*Line 2348 - 'jquery-1.5.1-vsdoc.js' */			if ( type.indexOf(".") > -1 ) {
/*Line 2349 - 'jquery-1.5.1-vsdoc.js' */				namespaces = type.split(".");
/*Line 2350 - 'jquery-1.5.1-vsdoc.js' */				type = namespaces.shift();
/*Line 2351 - 'jquery-1.5.1-vsdoc.js' */				handleObj.namespace = namespaces.slice(0).sort().join(".");

/*Line 2353 - 'jquery-1.5.1-vsdoc.js' */			} else {
/*Line 2354 - 'jquery-1.5.1-vsdoc.js' */				namespaces = [];
/*Line 2355 - 'jquery-1.5.1-vsdoc.js' */				handleObj.namespace = "";
/*Line 2356 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 2358 - 'jquery-1.5.1-vsdoc.js' */			handleObj.type = type;
/*Line 2359 - 'jquery-1.5.1-vsdoc.js' */			if ( !handleObj.guid ) {
/*Line 2360 - 'jquery-1.5.1-vsdoc.js' */				handleObj.guid = handler.guid;
/*Line 2361 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 2363 - 'jquery-1.5.1-vsdoc.js' */			// Get the current list of functions bound to this event
/*Line 2364 - 'jquery-1.5.1-vsdoc.js' */			var handlers = events[ type ],
/*Line 2365 - 'jquery-1.5.1-vsdoc.js' */				special = jQuery.event.special[ type ] || {};

/*Line 2367 - 'jquery-1.5.1-vsdoc.js' */			// Init the event handler queue
/*Line 2368 - 'jquery-1.5.1-vsdoc.js' */			if ( !handlers ) {
/*Line 2369 - 'jquery-1.5.1-vsdoc.js' */				handlers = events[ type ] = [];

/*Line 2371 - 'jquery-1.5.1-vsdoc.js' */				// Check for a special event handler
/*Line 2372 - 'jquery-1.5.1-vsdoc.js' */				// Only use addEventListener/attachEvent if the special
/*Line 2373 - 'jquery-1.5.1-vsdoc.js' */				// events handler returns false
/*Line 2374 - 'jquery-1.5.1-vsdoc.js' */				if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {
/*Line 2375 - 'jquery-1.5.1-vsdoc.js' */					// Bind the global event handler to the element
/*Line 2376 - 'jquery-1.5.1-vsdoc.js' */					if ( elem.addEventListener ) {
/*Line 2377 - 'jquery-1.5.1-vsdoc.js' */						elem.addEventListener( type, eventHandle, false );

/*Line 2379 - 'jquery-1.5.1-vsdoc.js' */					} else if ( elem.attachEvent ) {
/*Line 2380 - 'jquery-1.5.1-vsdoc.js' */						elem.attachEvent( "on" + type, eventHandle );
/*Line 2381 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 2382 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 2383 - 'jquery-1.5.1-vsdoc.js' */			}
			
/*Line 2385 - 'jquery-1.5.1-vsdoc.js' */			if ( special.add ) { 
/*Line 2386 - 'jquery-1.5.1-vsdoc.js' */				special.add.call( elem, handleObj ); 

/*Line 2388 - 'jquery-1.5.1-vsdoc.js' */				if ( !handleObj.handler.guid ) {
/*Line 2389 - 'jquery-1.5.1-vsdoc.js' */					handleObj.handler.guid = handler.guid;
/*Line 2390 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 2391 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 2393 - 'jquery-1.5.1-vsdoc.js' */			// Add the function to the element's handler list
/*Line 2394 - 'jquery-1.5.1-vsdoc.js' */			handlers.push( handleObj );

/*Line 2396 - 'jquery-1.5.1-vsdoc.js' */			// Keep track of which events have been used, for global triggering
/*Line 2397 - 'jquery-1.5.1-vsdoc.js' */			jQuery.event.global[ type ] = true;
/*Line 2398 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2400 - 'jquery-1.5.1-vsdoc.js' */		// Nullify elem to prevent memory leaks in IE
/*Line 2401 - 'jquery-1.5.1-vsdoc.js' */		elem = null;
/*Line 2402 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 2404 - 'jquery-1.5.1-vsdoc.js' */	global: {},

/*Line 2406 - 'jquery-1.5.1-vsdoc.js' */	// Detach an event or set of events from an element
/*Line 2407 - 'jquery-1.5.1-vsdoc.js' */	remove: function( elem, types, handler ) {
/*Line 2408 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 2409 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This method is internal.
/*Line 2410 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 2411 - 'jquery-1.5.1-vsdoc.js' */		///	<private />

/*Line 2413 - 'jquery-1.5.1-vsdoc.js' */		// don't do events on text and comment nodes
/*Line 2414 - 'jquery-1.5.1-vsdoc.js' */		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
/*Line 2415 - 'jquery-1.5.1-vsdoc.js' */			return;
/*Line 2416 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2418 - 'jquery-1.5.1-vsdoc.js' */		if ( handler === false ) {
/*Line 2419 - 'jquery-1.5.1-vsdoc.js' */			handler = returnFalse;
/*Line 2420 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2422 - 'jquery-1.5.1-vsdoc.js' */		var ret, type, fn, j, i = 0, all, namespaces, namespace, special, eventType, handleObj, origType,
/*Line 2423 - 'jquery-1.5.1-vsdoc.js' */			eventKey = elem.nodeType ? "events" : "__events__",
/*Line 2424 - 'jquery-1.5.1-vsdoc.js' */			elemData = jQuery.data( elem ),
/*Line 2425 - 'jquery-1.5.1-vsdoc.js' */			events = elemData && elemData[ eventKey ];

/*Line 2427 - 'jquery-1.5.1-vsdoc.js' */		if ( !elemData || !events ) {
/*Line 2428 - 'jquery-1.5.1-vsdoc.js' */			return;
/*Line 2429 - 'jquery-1.5.1-vsdoc.js' */		}
		
/*Line 2431 - 'jquery-1.5.1-vsdoc.js' */		if ( typeof events === "function" ) {
/*Line 2432 - 'jquery-1.5.1-vsdoc.js' */			elemData = events;
/*Line 2433 - 'jquery-1.5.1-vsdoc.js' */			events = events.events;
/*Line 2434 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2436 - 'jquery-1.5.1-vsdoc.js' */		// types is actually an event object here
/*Line 2437 - 'jquery-1.5.1-vsdoc.js' */		if ( types && types.type ) {
/*Line 2438 - 'jquery-1.5.1-vsdoc.js' */			handler = types.handler;
/*Line 2439 - 'jquery-1.5.1-vsdoc.js' */			types = types.type;
/*Line 2440 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2442 - 'jquery-1.5.1-vsdoc.js' */		// Unbind all events for the element
/*Line 2443 - 'jquery-1.5.1-vsdoc.js' */		if ( !types || typeof types === "string" && types.charAt(0) === "." ) {
/*Line 2444 - 'jquery-1.5.1-vsdoc.js' */			types = types || "";

/*Line 2446 - 'jquery-1.5.1-vsdoc.js' */			for ( type in events ) {
/*Line 2447 - 'jquery-1.5.1-vsdoc.js' */				jQuery.event.remove( elem, type + types );
/*Line 2448 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 2450 - 'jquery-1.5.1-vsdoc.js' */			return;
/*Line 2451 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2453 - 'jquery-1.5.1-vsdoc.js' */		// Handle multiple events separated by a space
/*Line 2454 - 'jquery-1.5.1-vsdoc.js' */		// jQuery(...).unbind("mouseover mouseout", fn);
/*Line 2455 - 'jquery-1.5.1-vsdoc.js' */		types = types.split(" ");

/*Line 2457 - 'jquery-1.5.1-vsdoc.js' */		while ( (type = types[ i++ ]) ) {
/*Line 2458 - 'jquery-1.5.1-vsdoc.js' */			origType = type;
/*Line 2459 - 'jquery-1.5.1-vsdoc.js' */			handleObj = null;
/*Line 2460 - 'jquery-1.5.1-vsdoc.js' */			all = type.indexOf(".") < 0;
/*Line 2461 - 'jquery-1.5.1-vsdoc.js' */			namespaces = [];

/*Line 2463 - 'jquery-1.5.1-vsdoc.js' */			if ( !all ) {
/*Line 2464 - 'jquery-1.5.1-vsdoc.js' */				// Namespaced event handlers
/*Line 2465 - 'jquery-1.5.1-vsdoc.js' */				namespaces = type.split(".");
/*Line 2466 - 'jquery-1.5.1-vsdoc.js' */				type = namespaces.shift();

/*Line 2468 - 'jquery-1.5.1-vsdoc.js' */				namespace = new RegExp("(^|\\.)" + 
/*Line 2469 - 'jquery-1.5.1-vsdoc.js' */					jQuery.map( namespaces.slice(0).sort(), fcleanup ).join("\\.(?:.*\\.)?") + "(\\.|$)");
/*Line 2470 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 2472 - 'jquery-1.5.1-vsdoc.js' */			eventType = events[ type ];

/*Line 2474 - 'jquery-1.5.1-vsdoc.js' */			if ( !eventType ) {
/*Line 2475 - 'jquery-1.5.1-vsdoc.js' */				continue;
/*Line 2476 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 2478 - 'jquery-1.5.1-vsdoc.js' */			if ( !handler ) {
/*Line 2479 - 'jquery-1.5.1-vsdoc.js' */				for ( j = 0; j < eventType.length; j++ ) {
/*Line 2480 - 'jquery-1.5.1-vsdoc.js' */					handleObj = eventType[ j ];

/*Line 2482 - 'jquery-1.5.1-vsdoc.js' */					if ( all || namespace.test( handleObj.namespace ) ) {
/*Line 2483 - 'jquery-1.5.1-vsdoc.js' */						jQuery.event.remove( elem, origType, handleObj.handler, j );
/*Line 2484 - 'jquery-1.5.1-vsdoc.js' */						eventType.splice( j--, 1 );
/*Line 2485 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 2486 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 2488 - 'jquery-1.5.1-vsdoc.js' */				continue;
/*Line 2489 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 2491 - 'jquery-1.5.1-vsdoc.js' */			special = jQuery.event.special[ type ] || {};

/*Line 2493 - 'jquery-1.5.1-vsdoc.js' */			for ( j = pos || 0; j < eventType.length; j++ ) {
/*Line 2494 - 'jquery-1.5.1-vsdoc.js' */				handleObj = eventType[ j ];

/*Line 2496 - 'jquery-1.5.1-vsdoc.js' */				if ( handler.guid === handleObj.guid ) {
/*Line 2497 - 'jquery-1.5.1-vsdoc.js' */					// remove the given handler for the given type
/*Line 2498 - 'jquery-1.5.1-vsdoc.js' */					if ( all || namespace.test( handleObj.namespace ) ) {
/*Line 2499 - 'jquery-1.5.1-vsdoc.js' */						if ( pos == null ) {
/*Line 2500 - 'jquery-1.5.1-vsdoc.js' */							eventType.splice( j--, 1 );
/*Line 2501 - 'jquery-1.5.1-vsdoc.js' */						}

/*Line 2503 - 'jquery-1.5.1-vsdoc.js' */						if ( special.remove ) {
/*Line 2504 - 'jquery-1.5.1-vsdoc.js' */							special.remove.call( elem, handleObj );
/*Line 2505 - 'jquery-1.5.1-vsdoc.js' */						}
/*Line 2506 - 'jquery-1.5.1-vsdoc.js' */					}

/*Line 2508 - 'jquery-1.5.1-vsdoc.js' */					if ( pos != null ) {
/*Line 2509 - 'jquery-1.5.1-vsdoc.js' */						break;
/*Line 2510 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 2511 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 2512 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 2514 - 'jquery-1.5.1-vsdoc.js' */			// remove generic event handler if no more handlers exist
/*Line 2515 - 'jquery-1.5.1-vsdoc.js' */			if ( eventType.length === 0 || pos != null && eventType.length === 1 ) {
/*Line 2516 - 'jquery-1.5.1-vsdoc.js' */				if ( !special.teardown || special.teardown.call( elem, namespaces ) === false ) {
/*Line 2517 - 'jquery-1.5.1-vsdoc.js' */					jQuery.removeEvent( elem, type, elemData.handle );
/*Line 2518 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 2520 - 'jquery-1.5.1-vsdoc.js' */				ret = null;
/*Line 2521 - 'jquery-1.5.1-vsdoc.js' */				delete events[ type ];
/*Line 2522 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 2523 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2525 - 'jquery-1.5.1-vsdoc.js' */		// Remove the expando if it's no longer used
/*Line 2526 - 'jquery-1.5.1-vsdoc.js' */		if ( jQuery.isEmptyObject( events ) ) {
/*Line 2527 - 'jquery-1.5.1-vsdoc.js' */			var handle = elemData.handle;
/*Line 2528 - 'jquery-1.5.1-vsdoc.js' */			if ( handle ) {
/*Line 2529 - 'jquery-1.5.1-vsdoc.js' */				handle.elem = null;
/*Line 2530 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 2532 - 'jquery-1.5.1-vsdoc.js' */			delete elemData.events;
/*Line 2533 - 'jquery-1.5.1-vsdoc.js' */			delete elemData.handle;

/*Line 2535 - 'jquery-1.5.1-vsdoc.js' */			if ( typeof elemData === "function" ) {
/*Line 2536 - 'jquery-1.5.1-vsdoc.js' */				jQuery.removeData( elem, eventKey );

/*Line 2538 - 'jquery-1.5.1-vsdoc.js' */			} else if ( jQuery.isEmptyObject( elemData ) ) {
/*Line 2539 - 'jquery-1.5.1-vsdoc.js' */				jQuery.removeData( elem );
/*Line 2540 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 2541 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 2542 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 2544 - 'jquery-1.5.1-vsdoc.js' */	// bubbling is internal
/*Line 2545 - 'jquery-1.5.1-vsdoc.js' */	trigger: function( event, data, elem /*, bubbling */ ) {
/*Line 2546 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 2547 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This method is internal.
/*Line 2548 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 2549 - 'jquery-1.5.1-vsdoc.js' */		///	<private />

/*Line 2551 - 'jquery-1.5.1-vsdoc.js' */		// Event object or event type
/*Line 2552 - 'jquery-1.5.1-vsdoc.js' */		var type = event.type || event,
/*Line 2553 - 'jquery-1.5.1-vsdoc.js' */			bubbling = arguments[3];

/*Line 2555 - 'jquery-1.5.1-vsdoc.js' */		if ( !bubbling ) {
/*Line 2556 - 'jquery-1.5.1-vsdoc.js' */			event = typeof event === "object" ?
/*Line 2557 - 'jquery-1.5.1-vsdoc.js' */				// jQuery.Event object
/*Line 2558 - 'jquery-1.5.1-vsdoc.js' */				event[ jQuery.expando ] ? event :
/*Line 2559 - 'jquery-1.5.1-vsdoc.js' */				// Object literal
/*Line 2560 - 'jquery-1.5.1-vsdoc.js' */				jQuery.extend( jQuery.Event(type), event ) :
/*Line 2561 - 'jquery-1.5.1-vsdoc.js' */				// Just the event type (string)
/*Line 2562 - 'jquery-1.5.1-vsdoc.js' */				jQuery.Event(type);

/*Line 2564 - 'jquery-1.5.1-vsdoc.js' */			if ( type.indexOf("!") >= 0 ) {
/*Line 2565 - 'jquery-1.5.1-vsdoc.js' */				event.type = type = type.slice(0, -1);
/*Line 2566 - 'jquery-1.5.1-vsdoc.js' */				event.exclusive = true;
/*Line 2567 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 2569 - 'jquery-1.5.1-vsdoc.js' */			// Handle a global trigger
/*Line 2570 - 'jquery-1.5.1-vsdoc.js' */			if ( !elem ) {
/*Line 2571 - 'jquery-1.5.1-vsdoc.js' */				// Don't bubble custom events when global (to avoid too much overhead)
/*Line 2572 - 'jquery-1.5.1-vsdoc.js' */				event.stopPropagation();

/*Line 2574 - 'jquery-1.5.1-vsdoc.js' */				// Only trigger if we've ever bound an event for it
/*Line 2575 - 'jquery-1.5.1-vsdoc.js' */				if ( jQuery.event.global[ type ] ) {
/*Line 2576 - 'jquery-1.5.1-vsdoc.js' */					jQuery.each( jQuery.cache, function() {
/*Line 2577 - 'jquery-1.5.1-vsdoc.js' */						if ( this.events && this.events[type] ) {
/*Line 2578 - 'jquery-1.5.1-vsdoc.js' */							jQuery.event.trigger( event, data, this.handle.elem );
/*Line 2579 - 'jquery-1.5.1-vsdoc.js' */						}
/*Line 2580 - 'jquery-1.5.1-vsdoc.js' */					});
/*Line 2581 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 2582 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 2584 - 'jquery-1.5.1-vsdoc.js' */			// Handle triggering a single element

/*Line 2586 - 'jquery-1.5.1-vsdoc.js' */			// don't do events on text and comment nodes
/*Line 2587 - 'jquery-1.5.1-vsdoc.js' */			if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 ) {
/*Line 2588 - 'jquery-1.5.1-vsdoc.js' */				return undefined;
/*Line 2589 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 2591 - 'jquery-1.5.1-vsdoc.js' */			// Clean up in case it is reused
/*Line 2592 - 'jquery-1.5.1-vsdoc.js' */			event.result = undefined;
/*Line 2593 - 'jquery-1.5.1-vsdoc.js' */			event.target = elem;

/*Line 2595 - 'jquery-1.5.1-vsdoc.js' */			// Clone the incoming data, if any
/*Line 2596 - 'jquery-1.5.1-vsdoc.js' */			data = jQuery.makeArray( data );
/*Line 2597 - 'jquery-1.5.1-vsdoc.js' */			data.unshift( event );
/*Line 2598 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2600 - 'jquery-1.5.1-vsdoc.js' */		event.currentTarget = elem;

/*Line 2602 - 'jquery-1.5.1-vsdoc.js' */		// Trigger the event, it is assumed that "handle" is a function
/*Line 2603 - 'jquery-1.5.1-vsdoc.js' */		var handle = elem.nodeType ?
/*Line 2604 - 'jquery-1.5.1-vsdoc.js' */			jQuery.data( elem, "handle" ) :
/*Line 2605 - 'jquery-1.5.1-vsdoc.js' */			(jQuery.data( elem, "__events__" ) || {}).handle;

/*Line 2607 - 'jquery-1.5.1-vsdoc.js' */		if ( handle ) {
/*Line 2608 - 'jquery-1.5.1-vsdoc.js' */			handle.apply( elem, data );
/*Line 2609 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2611 - 'jquery-1.5.1-vsdoc.js' */		var parent = elem.parentNode || elem.ownerDocument;

/*Line 2613 - 'jquery-1.5.1-vsdoc.js' */		// Trigger an inline bound script
/*Line 2614 - 'jquery-1.5.1-vsdoc.js' */		try {
/*Line 2615 - 'jquery-1.5.1-vsdoc.js' */			if ( !(elem && elem.nodeName && jQuery.noData[elem.nodeName.toLowerCase()]) ) {
/*Line 2616 - 'jquery-1.5.1-vsdoc.js' */				if ( elem[ "on" + type ] && elem[ "on" + type ].apply( elem, data ) === false ) {
/*Line 2617 - 'jquery-1.5.1-vsdoc.js' */					event.result = false;
/*Line 2618 - 'jquery-1.5.1-vsdoc.js' */					event.preventDefault();
/*Line 2619 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 2620 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 2622 - 'jquery-1.5.1-vsdoc.js' */		// prevent IE from throwing an error for some elements with some event types, see #3533
/*Line 2623 - 'jquery-1.5.1-vsdoc.js' */		} catch (inlineError) {}

/*Line 2625 - 'jquery-1.5.1-vsdoc.js' */		if ( !event.isPropagationStopped() && parent ) {
/*Line 2626 - 'jquery-1.5.1-vsdoc.js' */			jQuery.event.trigger( event, data, parent, true );

/*Line 2628 - 'jquery-1.5.1-vsdoc.js' */		} else if ( !event.isDefaultPrevented() ) {
/*Line 2629 - 'jquery-1.5.1-vsdoc.js' */			var old,
/*Line 2630 - 'jquery-1.5.1-vsdoc.js' */				target = event.target,
/*Line 2631 - 'jquery-1.5.1-vsdoc.js' */				targetType = type.replace( rnamespaces, "" ),
/*Line 2632 - 'jquery-1.5.1-vsdoc.js' */				isClick = jQuery.nodeName( target, "a" ) && targetType === "click",
/*Line 2633 - 'jquery-1.5.1-vsdoc.js' */				special = jQuery.event.special[ targetType ] || {};

/*Line 2635 - 'jquery-1.5.1-vsdoc.js' */			if ( (!special._default || special._default.call( elem, event ) === false) && 
/*Line 2636 - 'jquery-1.5.1-vsdoc.js' */				!isClick && !(target && target.nodeName && jQuery.noData[target.nodeName.toLowerCase()]) ) {

/*Line 2638 - 'jquery-1.5.1-vsdoc.js' */				try {
/*Line 2639 - 'jquery-1.5.1-vsdoc.js' */					if ( target[ targetType ] ) {
/*Line 2640 - 'jquery-1.5.1-vsdoc.js' */						// Make sure that we don't accidentally re-trigger the onFOO events
/*Line 2641 - 'jquery-1.5.1-vsdoc.js' */						old = target[ "on" + targetType ];

/*Line 2643 - 'jquery-1.5.1-vsdoc.js' */						if ( old ) {
/*Line 2644 - 'jquery-1.5.1-vsdoc.js' */							target[ "on" + targetType ] = null;
/*Line 2645 - 'jquery-1.5.1-vsdoc.js' */						}

/*Line 2647 - 'jquery-1.5.1-vsdoc.js' */						jQuery.event.triggered = true;
/*Line 2648 - 'jquery-1.5.1-vsdoc.js' */						target[ targetType ]();
/*Line 2649 - 'jquery-1.5.1-vsdoc.js' */					}

/*Line 2651 - 'jquery-1.5.1-vsdoc.js' */				// prevent IE from throwing an error for some elements with some event types, see #3533
/*Line 2652 - 'jquery-1.5.1-vsdoc.js' */				} catch (triggerError) {}

/*Line 2654 - 'jquery-1.5.1-vsdoc.js' */				if ( old ) {
/*Line 2655 - 'jquery-1.5.1-vsdoc.js' */					target[ "on" + targetType ] = old;
/*Line 2656 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 2658 - 'jquery-1.5.1-vsdoc.js' */				jQuery.event.triggered = false;
/*Line 2659 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 2660 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 2661 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 2663 - 'jquery-1.5.1-vsdoc.js' */	handle: function( event ) {
/*Line 2664 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 2665 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This method is internal.
/*Line 2666 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 2667 - 'jquery-1.5.1-vsdoc.js' */		///	<private />

/*Line 2669 - 'jquery-1.5.1-vsdoc.js' */		var all, handlers, namespaces, namespace_re, events,
/*Line 2670 - 'jquery-1.5.1-vsdoc.js' */			namespace_sort = [],
/*Line 2671 - 'jquery-1.5.1-vsdoc.js' */			args = jQuery.makeArray( arguments );

/*Line 2673 - 'jquery-1.5.1-vsdoc.js' */		event = args[0] = jQuery.event.fix( event || window.event );
/*Line 2674 - 'jquery-1.5.1-vsdoc.js' */		event.currentTarget = this;

/*Line 2676 - 'jquery-1.5.1-vsdoc.js' */		// Namespaced event handlers
/*Line 2677 - 'jquery-1.5.1-vsdoc.js' */		all = event.type.indexOf(".") < 0 && !event.exclusive;

/*Line 2679 - 'jquery-1.5.1-vsdoc.js' */		if ( !all ) {
/*Line 2680 - 'jquery-1.5.1-vsdoc.js' */			namespaces = event.type.split(".");
/*Line 2681 - 'jquery-1.5.1-vsdoc.js' */			event.type = namespaces.shift();
/*Line 2682 - 'jquery-1.5.1-vsdoc.js' */			namespace_sort = namespaces.slice(0).sort();
/*Line 2683 - 'jquery-1.5.1-vsdoc.js' */			namespace_re = new RegExp("(^|\\.)" + namespace_sort.join("\\.(?:.*\\.)?") + "(\\.|$)");
/*Line 2684 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2686 - 'jquery-1.5.1-vsdoc.js' */		event.namespace = event.namespace || namespace_sort.join(".");

/*Line 2688 - 'jquery-1.5.1-vsdoc.js' */		events = jQuery.data(this, this.nodeType ? "events" : "__events__");

/*Line 2690 - 'jquery-1.5.1-vsdoc.js' */		if ( typeof events === "function" ) {
/*Line 2691 - 'jquery-1.5.1-vsdoc.js' */			events = events.events;
/*Line 2692 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2694 - 'jquery-1.5.1-vsdoc.js' */		handlers = (events || {})[ event.type ];

/*Line 2696 - 'jquery-1.5.1-vsdoc.js' */		if ( events && handlers ) {
/*Line 2697 - 'jquery-1.5.1-vsdoc.js' */			// Clone the handlers to prevent manipulation
/*Line 2698 - 'jquery-1.5.1-vsdoc.js' */			handlers = handlers.slice(0);

/*Line 2700 - 'jquery-1.5.1-vsdoc.js' */			for ( var j = 0, l = handlers.length; j < l; j++ ) {
/*Line 2701 - 'jquery-1.5.1-vsdoc.js' */				var handleObj = handlers[ j ];

/*Line 2703 - 'jquery-1.5.1-vsdoc.js' */				// Filter the functions by class
/*Line 2704 - 'jquery-1.5.1-vsdoc.js' */				if ( all || namespace_re.test( handleObj.namespace ) ) {
/*Line 2705 - 'jquery-1.5.1-vsdoc.js' */					// Pass in a reference to the handler function itself
/*Line 2706 - 'jquery-1.5.1-vsdoc.js' */					// So that we can later remove it
/*Line 2707 - 'jquery-1.5.1-vsdoc.js' */					event.handler = handleObj.handler;
/*Line 2708 - 'jquery-1.5.1-vsdoc.js' */					event.data = handleObj.data;
/*Line 2709 - 'jquery-1.5.1-vsdoc.js' */					event.handleObj = handleObj;
	
/*Line 2711 - 'jquery-1.5.1-vsdoc.js' */					var ret = handleObj.handler.apply( this, args );

/*Line 2713 - 'jquery-1.5.1-vsdoc.js' */					if ( ret !== undefined ) {
/*Line 2714 - 'jquery-1.5.1-vsdoc.js' */						event.result = ret;
/*Line 2715 - 'jquery-1.5.1-vsdoc.js' */						if ( ret === false ) {
/*Line 2716 - 'jquery-1.5.1-vsdoc.js' */							event.preventDefault();
/*Line 2717 - 'jquery-1.5.1-vsdoc.js' */							event.stopPropagation();
/*Line 2718 - 'jquery-1.5.1-vsdoc.js' */						}
/*Line 2719 - 'jquery-1.5.1-vsdoc.js' */					}

/*Line 2721 - 'jquery-1.5.1-vsdoc.js' */					if ( event.isImmediatePropagationStopped() ) {
/*Line 2722 - 'jquery-1.5.1-vsdoc.js' */						break;
/*Line 2723 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 2724 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 2725 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 2726 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2728 - 'jquery-1.5.1-vsdoc.js' */		return event.result;
/*Line 2729 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 2731 - 'jquery-1.5.1-vsdoc.js' */	props: "altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "),

/*Line 2733 - 'jquery-1.5.1-vsdoc.js' */	fix: function( event ) {
/*Line 2734 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 2735 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This method is internal.
/*Line 2736 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 2737 - 'jquery-1.5.1-vsdoc.js' */		///	<private />

/*Line 2739 - 'jquery-1.5.1-vsdoc.js' */		if ( event[ jQuery.expando ] ) {
/*Line 2740 - 'jquery-1.5.1-vsdoc.js' */			return event;
/*Line 2741 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2743 - 'jquery-1.5.1-vsdoc.js' */		// store a copy of the original event object
/*Line 2744 - 'jquery-1.5.1-vsdoc.js' */		// and "clone" to set read-only properties
/*Line 2745 - 'jquery-1.5.1-vsdoc.js' */		var originalEvent = event;
/*Line 2746 - 'jquery-1.5.1-vsdoc.js' */		event = jQuery.Event( originalEvent );

/*Line 2748 - 'jquery-1.5.1-vsdoc.js' */		for ( var i = this.props.length, prop; i; ) {
/*Line 2749 - 'jquery-1.5.1-vsdoc.js' */			prop = this.props[ --i ];
/*Line 2750 - 'jquery-1.5.1-vsdoc.js' */			event[ prop ] = originalEvent[ prop ];
/*Line 2751 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2753 - 'jquery-1.5.1-vsdoc.js' */		// Fix target property, if necessary
/*Line 2754 - 'jquery-1.5.1-vsdoc.js' */		if ( !event.target ) {
/*Line 2755 - 'jquery-1.5.1-vsdoc.js' */			// Fixes #1925 where srcElement might not be defined either
/*Line 2756 - 'jquery-1.5.1-vsdoc.js' */			event.target = event.srcElement || document;
/*Line 2757 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2759 - 'jquery-1.5.1-vsdoc.js' */		// check if target is a textnode (safari)
/*Line 2760 - 'jquery-1.5.1-vsdoc.js' */		if ( event.target.nodeType === 3 ) {
/*Line 2761 - 'jquery-1.5.1-vsdoc.js' */			event.target = event.target.parentNode;
/*Line 2762 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2764 - 'jquery-1.5.1-vsdoc.js' */		// Add relatedTarget, if necessary
/*Line 2765 - 'jquery-1.5.1-vsdoc.js' */		if ( !event.relatedTarget && event.fromElement ) {
/*Line 2766 - 'jquery-1.5.1-vsdoc.js' */			event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;
/*Line 2767 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2769 - 'jquery-1.5.1-vsdoc.js' */		// Calculate pageX/Y if missing and clientX/Y available
/*Line 2770 - 'jquery-1.5.1-vsdoc.js' */		if ( event.pageX == null && event.clientX != null ) {
/*Line 2771 - 'jquery-1.5.1-vsdoc.js' */			var doc = document.documentElement,
/*Line 2772 - 'jquery-1.5.1-vsdoc.js' */				body = document.body;

/*Line 2774 - 'jquery-1.5.1-vsdoc.js' */			event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);
/*Line 2775 - 'jquery-1.5.1-vsdoc.js' */			event.pageY = event.clientY + (doc && doc.scrollTop  || body && body.scrollTop  || 0) - (doc && doc.clientTop  || body && body.clientTop  || 0);
/*Line 2776 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2778 - 'jquery-1.5.1-vsdoc.js' */		// Add which for key events
/*Line 2779 - 'jquery-1.5.1-vsdoc.js' */		if ( event.which == null && (event.charCode != null || event.keyCode != null) ) {
/*Line 2780 - 'jquery-1.5.1-vsdoc.js' */			event.which = event.charCode != null ? event.charCode : event.keyCode;
/*Line 2781 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2783 - 'jquery-1.5.1-vsdoc.js' */		// Add metaKey to non-Mac browsers (use ctrl for PC's and Meta for Macs)
/*Line 2784 - 'jquery-1.5.1-vsdoc.js' */		if ( !event.metaKey && event.ctrlKey ) {
/*Line 2785 - 'jquery-1.5.1-vsdoc.js' */			event.metaKey = event.ctrlKey;
/*Line 2786 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2788 - 'jquery-1.5.1-vsdoc.js' */		// Add which for click: 1 === left; 2 === middle; 3 === right
/*Line 2789 - 'jquery-1.5.1-vsdoc.js' */		// Note: button is not normalized, so don't use it
/*Line 2790 - 'jquery-1.5.1-vsdoc.js' */		if ( !event.which && event.button !== undefined ) {
/*Line 2791 - 'jquery-1.5.1-vsdoc.js' */			event.which = (event.button & 1 ? 1 : ( event.button & 2 ? 3 : ( event.button & 4 ? 2 : 0 ) ));
/*Line 2792 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2794 - 'jquery-1.5.1-vsdoc.js' */		return event;
/*Line 2795 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 2797 - 'jquery-1.5.1-vsdoc.js' */	// Deprecated, use jQuery.guid instead
/*Line 2798 - 'jquery-1.5.1-vsdoc.js' */	guid: 1E8,

/*Line 2800 - 'jquery-1.5.1-vsdoc.js' */	// Deprecated, use jQuery.proxy instead
/*Line 2801 - 'jquery-1.5.1-vsdoc.js' */	proxy: jQuery.proxy,

/*Line 2803 - 'jquery-1.5.1-vsdoc.js' */	special: {
/*Line 2804 - 'jquery-1.5.1-vsdoc.js' */		ready: {
/*Line 2805 - 'jquery-1.5.1-vsdoc.js' */			// Make sure the ready event is setup
/*Line 2806 - 'jquery-1.5.1-vsdoc.js' */			setup: jQuery.bindReady,
/*Line 2807 - 'jquery-1.5.1-vsdoc.js' */			teardown: jQuery.noop
/*Line 2808 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 2810 - 'jquery-1.5.1-vsdoc.js' */		live: {
/*Line 2811 - 'jquery-1.5.1-vsdoc.js' */			add: function( handleObj ) {
/*Line 2812 - 'jquery-1.5.1-vsdoc.js' */				jQuery.event.add( this,
/*Line 2813 - 'jquery-1.5.1-vsdoc.js' */					liveConvert( handleObj.origType, handleObj.selector ),
/*Line 2814 - 'jquery-1.5.1-vsdoc.js' */					jQuery.extend({}, handleObj, {handler: liveHandler, guid: handleObj.handler.guid}) ); 
/*Line 2815 - 'jquery-1.5.1-vsdoc.js' */			},

/*Line 2817 - 'jquery-1.5.1-vsdoc.js' */			remove: function( handleObj ) {
/*Line 2818 - 'jquery-1.5.1-vsdoc.js' */				jQuery.event.remove( this, liveConvert( handleObj.origType, handleObj.selector ), handleObj );
/*Line 2819 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 2820 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 2822 - 'jquery-1.5.1-vsdoc.js' */		beforeunload: {
/*Line 2823 - 'jquery-1.5.1-vsdoc.js' */			setup: function( data, namespaces, eventHandle ) {
/*Line 2824 - 'jquery-1.5.1-vsdoc.js' */				// We only want to do this special case on windows
/*Line 2825 - 'jquery-1.5.1-vsdoc.js' */				if ( jQuery.isWindow( this ) ) {
/*Line 2826 - 'jquery-1.5.1-vsdoc.js' */					this.onbeforeunload = eventHandle;
/*Line 2827 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 2828 - 'jquery-1.5.1-vsdoc.js' */			},

/*Line 2830 - 'jquery-1.5.1-vsdoc.js' */			teardown: function( namespaces, eventHandle ) {
/*Line 2831 - 'jquery-1.5.1-vsdoc.js' */				if ( this.onbeforeunload === eventHandle ) {
/*Line 2832 - 'jquery-1.5.1-vsdoc.js' */					this.onbeforeunload = null;
/*Line 2833 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 2834 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 2835 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 2836 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 2837 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 2839 - 'jquery-1.5.1-vsdoc.js' */jQuery.removeEvent = document.removeEventListener ?
/*Line 2840 - 'jquery-1.5.1-vsdoc.js' */	function( elem, type, handle ) {
/*Line 2841 - 'jquery-1.5.1-vsdoc.js' */		if ( elem.removeEventListener ) {
/*Line 2842 - 'jquery-1.5.1-vsdoc.js' */			elem.removeEventListener( type, handle, false );
/*Line 2843 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 2844 - 'jquery-1.5.1-vsdoc.js' */	} : 
/*Line 2845 - 'jquery-1.5.1-vsdoc.js' */	function( elem, type, handle ) {
/*Line 2846 - 'jquery-1.5.1-vsdoc.js' */		if ( elem.detachEvent ) {
/*Line 2847 - 'jquery-1.5.1-vsdoc.js' */			elem.detachEvent( "on" + type, handle );
/*Line 2848 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 2849 - 'jquery-1.5.1-vsdoc.js' */	};

/*Line 2851 - 'jquery-1.5.1-vsdoc.js' */jQuery.Event = function( src ) {
/*Line 2852 - 'jquery-1.5.1-vsdoc.js' */	// Allow instantiation without the 'new' keyword
/*Line 2853 - 'jquery-1.5.1-vsdoc.js' */	if ( !this.preventDefault ) {
/*Line 2854 - 'jquery-1.5.1-vsdoc.js' */		return new jQuery.Event( src );
/*Line 2855 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 2857 - 'jquery-1.5.1-vsdoc.js' */	// Event object
/*Line 2858 - 'jquery-1.5.1-vsdoc.js' */	if ( src && src.type ) {
/*Line 2859 - 'jquery-1.5.1-vsdoc.js' */		this.originalEvent = src;
/*Line 2860 - 'jquery-1.5.1-vsdoc.js' */		this.type = src.type;
/*Line 2861 - 'jquery-1.5.1-vsdoc.js' */	// Event type
/*Line 2862 - 'jquery-1.5.1-vsdoc.js' */	} else {
/*Line 2863 - 'jquery-1.5.1-vsdoc.js' */		this.type = src;
/*Line 2864 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 2866 - 'jquery-1.5.1-vsdoc.js' */	// timeStamp is buggy for some events on Firefox(#3843)
/*Line 2867 - 'jquery-1.5.1-vsdoc.js' */	// So we won't rely on the native value
/*Line 2868 - 'jquery-1.5.1-vsdoc.js' */	this.timeStamp = jQuery.now();

/*Line 2870 - 'jquery-1.5.1-vsdoc.js' */	// Mark it as fixed
/*Line 2871 - 'jquery-1.5.1-vsdoc.js' */	this[ jQuery.expando ] = true;
/*Line 2872 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 2874 - 'jquery-1.5.1-vsdoc.js' */function returnFalse() {
/*Line 2875 - 'jquery-1.5.1-vsdoc.js' */	return false;
/*Line 2876 - 'jquery-1.5.1-vsdoc.js' */}
/*Line 2877 - 'jquery-1.5.1-vsdoc.js' */function returnTrue() {
/*Line 2878 - 'jquery-1.5.1-vsdoc.js' */	return true;
/*Line 2879 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 2881 - 'jquery-1.5.1-vsdoc.js' */// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
/*Line 2882 - 'jquery-1.5.1-vsdoc.js' */// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
/*Line 2883 - 'jquery-1.5.1-vsdoc.js' */jQuery.Event.prototype = {
/*Line 2884 - 'jquery-1.5.1-vsdoc.js' */	preventDefault: function() {
/*Line 2885 - 'jquery-1.5.1-vsdoc.js' */		this.isDefaultPrevented = returnTrue;

/*Line 2887 - 'jquery-1.5.1-vsdoc.js' */		var e = this.originalEvent;
/*Line 2888 - 'jquery-1.5.1-vsdoc.js' */		if ( !e ) {
/*Line 2889 - 'jquery-1.5.1-vsdoc.js' */			return;
/*Line 2890 - 'jquery-1.5.1-vsdoc.js' */		}
		
/*Line 2892 - 'jquery-1.5.1-vsdoc.js' */		// if preventDefault exists run it on the original event
/*Line 2893 - 'jquery-1.5.1-vsdoc.js' */		if ( e.preventDefault ) {
/*Line 2894 - 'jquery-1.5.1-vsdoc.js' */			e.preventDefault();

/*Line 2896 - 'jquery-1.5.1-vsdoc.js' */		// otherwise set the returnValue property of the original event to false (IE)
/*Line 2897 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 2898 - 'jquery-1.5.1-vsdoc.js' */			e.returnValue = false;
/*Line 2899 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 2900 - 'jquery-1.5.1-vsdoc.js' */	},
/*Line 2901 - 'jquery-1.5.1-vsdoc.js' */	stopPropagation: function() {
/*Line 2902 - 'jquery-1.5.1-vsdoc.js' */		this.isPropagationStopped = returnTrue;

/*Line 2904 - 'jquery-1.5.1-vsdoc.js' */		var e = this.originalEvent;
/*Line 2905 - 'jquery-1.5.1-vsdoc.js' */		if ( !e ) {
/*Line 2906 - 'jquery-1.5.1-vsdoc.js' */			return;
/*Line 2907 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 2908 - 'jquery-1.5.1-vsdoc.js' */		// if stopPropagation exists run it on the original event
/*Line 2909 - 'jquery-1.5.1-vsdoc.js' */		if ( e.stopPropagation ) {
/*Line 2910 - 'jquery-1.5.1-vsdoc.js' */			e.stopPropagation();
/*Line 2911 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 2912 - 'jquery-1.5.1-vsdoc.js' */		// otherwise set the cancelBubble property of the original event to true (IE)
/*Line 2913 - 'jquery-1.5.1-vsdoc.js' */		e.cancelBubble = true;
/*Line 2914 - 'jquery-1.5.1-vsdoc.js' */	},
/*Line 2915 - 'jquery-1.5.1-vsdoc.js' */	stopImmediatePropagation: function() {
/*Line 2916 - 'jquery-1.5.1-vsdoc.js' */		this.isImmediatePropagationStopped = returnTrue;
/*Line 2917 - 'jquery-1.5.1-vsdoc.js' */		this.stopPropagation();
/*Line 2918 - 'jquery-1.5.1-vsdoc.js' */	},
/*Line 2919 - 'jquery-1.5.1-vsdoc.js' */	isDefaultPrevented: returnFalse,
/*Line 2920 - 'jquery-1.5.1-vsdoc.js' */	isPropagationStopped: returnFalse,
/*Line 2921 - 'jquery-1.5.1-vsdoc.js' */	isImmediatePropagationStopped: returnFalse
/*Line 2922 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 2924 - 'jquery-1.5.1-vsdoc.js' */// Checks if an event happened on an element within another element
/*Line 2925 - 'jquery-1.5.1-vsdoc.js' */// Used in jQuery.event.special.mouseenter and mouseleave handlers
/*Line 2926 - 'jquery-1.5.1-vsdoc.js' */var withinElement = function( event ) {
/*Line 2927 - 'jquery-1.5.1-vsdoc.js' */	// Check if mouse(over|out) are still within the same parent element
/*Line 2928 - 'jquery-1.5.1-vsdoc.js' */	var parent = event.relatedTarget;

/*Line 2930 - 'jquery-1.5.1-vsdoc.js' */	// Firefox sometimes assigns relatedTarget a XUL element
/*Line 2931 - 'jquery-1.5.1-vsdoc.js' */	// which we cannot access the parentNode property of
/*Line 2932 - 'jquery-1.5.1-vsdoc.js' */	try {
/*Line 2933 - 'jquery-1.5.1-vsdoc.js' */		// Traverse up the tree
/*Line 2934 - 'jquery-1.5.1-vsdoc.js' */		while ( parent && parent !== this ) {
/*Line 2935 - 'jquery-1.5.1-vsdoc.js' */			parent = parent.parentNode;
/*Line 2936 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2938 - 'jquery-1.5.1-vsdoc.js' */		if ( parent !== this ) {
/*Line 2939 - 'jquery-1.5.1-vsdoc.js' */			// set the correct event type
/*Line 2940 - 'jquery-1.5.1-vsdoc.js' */			event.type = event.data;

/*Line 2942 - 'jquery-1.5.1-vsdoc.js' */			// handle event if we actually just moused on to a non sub-element
/*Line 2943 - 'jquery-1.5.1-vsdoc.js' */			jQuery.event.handle.apply( this, arguments );
/*Line 2944 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 2946 - 'jquery-1.5.1-vsdoc.js' */	// assuming we've left the element since we most likely mousedover a xul element
/*Line 2947 - 'jquery-1.5.1-vsdoc.js' */	} catch(e) { }
/*Line 2948 - 'jquery-1.5.1-vsdoc.js' */},

/*Line 2950 - 'jquery-1.5.1-vsdoc.js' */// In case of event delegation, we only need to rename the event.type,
/*Line 2951 - 'jquery-1.5.1-vsdoc.js' */// liveHandler will take care of the rest.
/*Line 2952 - 'jquery-1.5.1-vsdoc.js' */delegate = function( event ) {
/*Line 2953 - 'jquery-1.5.1-vsdoc.js' */	event.type = event.data;
/*Line 2954 - 'jquery-1.5.1-vsdoc.js' */	jQuery.event.handle.apply( this, arguments );
/*Line 2955 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 2957 - 'jquery-1.5.1-vsdoc.js' */// Create mouseenter and mouseleave events
/*Line 2958 - 'jquery-1.5.1-vsdoc.js' */jQuery.each({
/*Line 2959 - 'jquery-1.5.1-vsdoc.js' */	mouseenter: "mouseover",
/*Line 2960 - 'jquery-1.5.1-vsdoc.js' */	mouseleave: "mouseout"
/*Line 2961 - 'jquery-1.5.1-vsdoc.js' */}, function( orig, fix ) {
/*Line 2962 - 'jquery-1.5.1-vsdoc.js' */	jQuery.event.special[ orig ] = {
/*Line 2963 - 'jquery-1.5.1-vsdoc.js' */		setup: function( data ) {
/*Line 2964 - 'jquery-1.5.1-vsdoc.js' */			jQuery.event.add( this, fix, data && data.selector ? delegate : withinElement, orig );
/*Line 2965 - 'jquery-1.5.1-vsdoc.js' */		},
/*Line 2966 - 'jquery-1.5.1-vsdoc.js' */		teardown: function( data ) {
/*Line 2967 - 'jquery-1.5.1-vsdoc.js' */			jQuery.event.remove( this, fix, data && data.selector ? delegate : withinElement );
/*Line 2968 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 2969 - 'jquery-1.5.1-vsdoc.js' */	};
/*Line 2970 - 'jquery-1.5.1-vsdoc.js' */});

/*Line 2972 - 'jquery-1.5.1-vsdoc.js' */// submit delegation
/*Line 2973 - 'jquery-1.5.1-vsdoc.js' */if ( !jQuery.support.submitBubbles ) {

/*Line 2975 - 'jquery-1.5.1-vsdoc.js' */	jQuery.event.special.submit = {
/*Line 2976 - 'jquery-1.5.1-vsdoc.js' */		setup: function( data, namespaces ) {
/*Line 2977 - 'jquery-1.5.1-vsdoc.js' */			if ( this.nodeName.toLowerCase() !== "form" ) {
/*Line 2978 - 'jquery-1.5.1-vsdoc.js' */				jQuery.event.add(this, "click.specialSubmit", function( e ) {
/*Line 2979 - 'jquery-1.5.1-vsdoc.js' */					var elem = e.target,
/*Line 2980 - 'jquery-1.5.1-vsdoc.js' */						type = elem.type;

/*Line 2982 - 'jquery-1.5.1-vsdoc.js' */					if ( (type === "submit" || type === "image") && jQuery( elem ).closest("form").length ) {
/*Line 2983 - 'jquery-1.5.1-vsdoc.js' */						e.liveFired = undefined;
/*Line 2984 - 'jquery-1.5.1-vsdoc.js' */						return trigger( "submit", this, arguments );
/*Line 2985 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 2986 - 'jquery-1.5.1-vsdoc.js' */				});
	 
/*Line 2988 - 'jquery-1.5.1-vsdoc.js' */				jQuery.event.add(this, "keypress.specialSubmit", function( e ) {
/*Line 2989 - 'jquery-1.5.1-vsdoc.js' */					var elem = e.target,
/*Line 2990 - 'jquery-1.5.1-vsdoc.js' */						type = elem.type;

/*Line 2992 - 'jquery-1.5.1-vsdoc.js' */					if ( (type === "text" || type === "password") && jQuery( elem ).closest("form").length && e.keyCode === 13 ) {
/*Line 2993 - 'jquery-1.5.1-vsdoc.js' */						e.liveFired = undefined;
/*Line 2994 - 'jquery-1.5.1-vsdoc.js' */						return trigger( "submit", this, arguments );
/*Line 2995 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 2996 - 'jquery-1.5.1-vsdoc.js' */				});

/*Line 2998 - 'jquery-1.5.1-vsdoc.js' */			} else {
/*Line 2999 - 'jquery-1.5.1-vsdoc.js' */				return false;
/*Line 3000 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 3001 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 3003 - 'jquery-1.5.1-vsdoc.js' */		teardown: function( namespaces ) {
/*Line 3004 - 'jquery-1.5.1-vsdoc.js' */			jQuery.event.remove( this, ".specialSubmit" );
/*Line 3005 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 3006 - 'jquery-1.5.1-vsdoc.js' */	};

/*Line 3008 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 3010 - 'jquery-1.5.1-vsdoc.js' */// change delegation, happens here so we have bind.
/*Line 3011 - 'jquery-1.5.1-vsdoc.js' */if ( !jQuery.support.changeBubbles ) {

/*Line 3013 - 'jquery-1.5.1-vsdoc.js' */	var changeFilters,

/*Line 3015 - 'jquery-1.5.1-vsdoc.js' */	getVal = function( elem ) {
/*Line 3016 - 'jquery-1.5.1-vsdoc.js' */		var type = elem.type, val = elem.value;

/*Line 3018 - 'jquery-1.5.1-vsdoc.js' */		if ( type === "radio" || type === "checkbox" ) {
/*Line 3019 - 'jquery-1.5.1-vsdoc.js' */			val = elem.checked;

/*Line 3021 - 'jquery-1.5.1-vsdoc.js' */		} else if ( type === "select-multiple" ) {
/*Line 3022 - 'jquery-1.5.1-vsdoc.js' */			val = elem.selectedIndex > -1 ?
/*Line 3023 - 'jquery-1.5.1-vsdoc.js' */				jQuery.map( elem.options, function( elem ) {
/*Line 3024 - 'jquery-1.5.1-vsdoc.js' */					return elem.selected;
/*Line 3025 - 'jquery-1.5.1-vsdoc.js' */				}).join("-") :
/*Line 3026 - 'jquery-1.5.1-vsdoc.js' */				"";

/*Line 3028 - 'jquery-1.5.1-vsdoc.js' */		} else if ( elem.nodeName.toLowerCase() === "select" ) {
/*Line 3029 - 'jquery-1.5.1-vsdoc.js' */			val = elem.selectedIndex;
/*Line 3030 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 3032 - 'jquery-1.5.1-vsdoc.js' */		return val;
/*Line 3033 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 3035 - 'jquery-1.5.1-vsdoc.js' */	testChange = function testChange( e ) {
/*Line 3036 - 'jquery-1.5.1-vsdoc.js' */		var elem = e.target, data, val;

/*Line 3038 - 'jquery-1.5.1-vsdoc.js' */		if ( !rformElems.test( elem.nodeName ) || elem.readOnly ) {
/*Line 3039 - 'jquery-1.5.1-vsdoc.js' */			return;
/*Line 3040 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 3042 - 'jquery-1.5.1-vsdoc.js' */		data = jQuery.data( elem, "_change_data" );
/*Line 3043 - 'jquery-1.5.1-vsdoc.js' */		val = getVal(elem);

/*Line 3045 - 'jquery-1.5.1-vsdoc.js' */		// the current data will be also retrieved by beforeactivate
/*Line 3046 - 'jquery-1.5.1-vsdoc.js' */		if ( e.type !== "focusout" || elem.type !== "radio" ) {
/*Line 3047 - 'jquery-1.5.1-vsdoc.js' */			jQuery.data( elem, "_change_data", val );
/*Line 3048 - 'jquery-1.5.1-vsdoc.js' */		}
		
/*Line 3050 - 'jquery-1.5.1-vsdoc.js' */		if ( data === undefined || val === data ) {
/*Line 3051 - 'jquery-1.5.1-vsdoc.js' */			return;
/*Line 3052 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 3054 - 'jquery-1.5.1-vsdoc.js' */		if ( data != null || val ) {
/*Line 3055 - 'jquery-1.5.1-vsdoc.js' */			e.type = "change";
/*Line 3056 - 'jquery-1.5.1-vsdoc.js' */			e.liveFired = undefined;
/*Line 3057 - 'jquery-1.5.1-vsdoc.js' */			return jQuery.event.trigger( e, arguments[1], elem );
/*Line 3058 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 3059 - 'jquery-1.5.1-vsdoc.js' */	};

/*Line 3061 - 'jquery-1.5.1-vsdoc.js' */	jQuery.event.special.change = {
/*Line 3062 - 'jquery-1.5.1-vsdoc.js' */		filters: {
/*Line 3063 - 'jquery-1.5.1-vsdoc.js' */			focusout: testChange, 

/*Line 3065 - 'jquery-1.5.1-vsdoc.js' */			beforedeactivate: testChange,

/*Line 3067 - 'jquery-1.5.1-vsdoc.js' */			click: function( e ) {
/*Line 3068 - 'jquery-1.5.1-vsdoc.js' */				var elem = e.target, type = elem.type;

/*Line 3070 - 'jquery-1.5.1-vsdoc.js' */				if ( type === "radio" || type === "checkbox" || elem.nodeName.toLowerCase() === "select" ) {
/*Line 3071 - 'jquery-1.5.1-vsdoc.js' */					return testChange.call( this, e );
/*Line 3072 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 3073 - 'jquery-1.5.1-vsdoc.js' */			},

/*Line 3075 - 'jquery-1.5.1-vsdoc.js' */			// Change has to be called before submit
/*Line 3076 - 'jquery-1.5.1-vsdoc.js' */			// Keydown will be called before keypress, which is used in submit-event delegation
/*Line 3077 - 'jquery-1.5.1-vsdoc.js' */			keydown: function( e ) {
/*Line 3078 - 'jquery-1.5.1-vsdoc.js' */				var elem = e.target, type = elem.type;

/*Line 3080 - 'jquery-1.5.1-vsdoc.js' */				if ( (e.keyCode === 13 && elem.nodeName.toLowerCase() !== "textarea") ||
/*Line 3081 - 'jquery-1.5.1-vsdoc.js' */					(e.keyCode === 32 && (type === "checkbox" || type === "radio")) ||
/*Line 3082 - 'jquery-1.5.1-vsdoc.js' */					type === "select-multiple" ) {
/*Line 3083 - 'jquery-1.5.1-vsdoc.js' */					return testChange.call( this, e );
/*Line 3084 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 3085 - 'jquery-1.5.1-vsdoc.js' */			},

/*Line 3087 - 'jquery-1.5.1-vsdoc.js' */			// Beforeactivate happens also before the previous element is blurred
/*Line 3088 - 'jquery-1.5.1-vsdoc.js' */			// with this event you can't trigger a change event, but you can store
/*Line 3089 - 'jquery-1.5.1-vsdoc.js' */			// information
/*Line 3090 - 'jquery-1.5.1-vsdoc.js' */			beforeactivate: function( e ) {
/*Line 3091 - 'jquery-1.5.1-vsdoc.js' */				var elem = e.target;
/*Line 3092 - 'jquery-1.5.1-vsdoc.js' */				jQuery.data( elem, "_change_data", getVal(elem) );
/*Line 3093 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 3094 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 3096 - 'jquery-1.5.1-vsdoc.js' */		setup: function( data, namespaces ) {
/*Line 3097 - 'jquery-1.5.1-vsdoc.js' */			if ( this.type === "file" ) {
/*Line 3098 - 'jquery-1.5.1-vsdoc.js' */				return false;
/*Line 3099 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 3101 - 'jquery-1.5.1-vsdoc.js' */			for ( var type in changeFilters ) {
/*Line 3102 - 'jquery-1.5.1-vsdoc.js' */				jQuery.event.add( this, type + ".specialChange", changeFilters[type] );
/*Line 3103 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 3105 - 'jquery-1.5.1-vsdoc.js' */			return rformElems.test( this.nodeName );
/*Line 3106 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 3108 - 'jquery-1.5.1-vsdoc.js' */		teardown: function( namespaces ) {
/*Line 3109 - 'jquery-1.5.1-vsdoc.js' */			jQuery.event.remove( this, ".specialChange" );

/*Line 3111 - 'jquery-1.5.1-vsdoc.js' */			return rformElems.test( this.nodeName );
/*Line 3112 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 3113 - 'jquery-1.5.1-vsdoc.js' */	};

/*Line 3115 - 'jquery-1.5.1-vsdoc.js' */	changeFilters = jQuery.event.special.change.filters;

/*Line 3117 - 'jquery-1.5.1-vsdoc.js' */	// Handle when the input is .focus()'d
/*Line 3118 - 'jquery-1.5.1-vsdoc.js' */	changeFilters.focus = changeFilters.beforeactivate;
/*Line 3119 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 3121 - 'jquery-1.5.1-vsdoc.js' */function trigger( type, elem, args ) {
/*Line 3122 - 'jquery-1.5.1-vsdoc.js' */	args[0].type = type;
/*Line 3123 - 'jquery-1.5.1-vsdoc.js' */	return jQuery.event.handle.apply( elem, args );
/*Line 3124 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 3126 - 'jquery-1.5.1-vsdoc.js' */// Create "bubbling" focus and blur events
/*Line 3127 - 'jquery-1.5.1-vsdoc.js' */if ( document.addEventListener ) {
/*Line 3128 - 'jquery-1.5.1-vsdoc.js' */	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {
/*Line 3129 - 'jquery-1.5.1-vsdoc.js' */		jQuery.event.special[ fix ] = {
/*Line 3130 - 'jquery-1.5.1-vsdoc.js' */			setup: function() {
/*Line 3131 - 'jquery-1.5.1-vsdoc.js' */				///	<summary>
/*Line 3132 - 'jquery-1.5.1-vsdoc.js' */				///     &#10;This method is internal.
/*Line 3133 - 'jquery-1.5.1-vsdoc.js' */				///	</summary>
/*Line 3134 - 'jquery-1.5.1-vsdoc.js' */				///	<private />

/*Line 3136 - 'jquery-1.5.1-vsdoc.js' */				if ( focusCounts[fix]++ === 0 ) {
/*Line 3137 - 'jquery-1.5.1-vsdoc.js' */					document.addEventListener( orig, handler, true );
/*Line 3138 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 3139 - 'jquery-1.5.1-vsdoc.js' */			}, 
/*Line 3140 - 'jquery-1.5.1-vsdoc.js' */			teardown: function() { 
/*Line 3141 - 'jquery-1.5.1-vsdoc.js' */				///	<summary>
/*Line 3142 - 'jquery-1.5.1-vsdoc.js' */				///     &#10;This method is internal.
/*Line 3143 - 'jquery-1.5.1-vsdoc.js' */				///	</summary>
/*Line 3144 - 'jquery-1.5.1-vsdoc.js' */				///	<private />

/*Line 3146 - 'jquery-1.5.1-vsdoc.js' */				if ( --focusCounts[fix] === 0 ) {
/*Line 3147 - 'jquery-1.5.1-vsdoc.js' */					document.removeEventListener( orig, handler, true );
/*Line 3148 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 3149 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 3150 - 'jquery-1.5.1-vsdoc.js' */		};

/*Line 3152 - 'jquery-1.5.1-vsdoc.js' */		function handler( e ) { 
/*Line 3153 - 'jquery-1.5.1-vsdoc.js' */			e = jQuery.event.fix( e );
/*Line 3154 - 'jquery-1.5.1-vsdoc.js' */			e.type = fix;
/*Line 3155 - 'jquery-1.5.1-vsdoc.js' */			return jQuery.event.trigger( e, null, e.target );
/*Line 3156 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 3157 - 'jquery-1.5.1-vsdoc.js' */	});
/*Line 3158 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 3160 - 'jquery-1.5.1-vsdoc.js' *///	jQuery.each(["bind", "one"], function( i, name ) {
/*Line 3161 - 'jquery-1.5.1-vsdoc.js' *///		jQuery.fn[ name ] = function( type, data, fn ) {
/*Line 3162 - 'jquery-1.5.1-vsdoc.js' *///			// Handle object literals
/*Line 3163 - 'jquery-1.5.1-vsdoc.js' *///			if ( typeof type === "object" ) {
/*Line 3164 - 'jquery-1.5.1-vsdoc.js' *///				for ( var key in type ) {
/*Line 3165 - 'jquery-1.5.1-vsdoc.js' *///					this[ name ](key, data, type[key], fn);
/*Line 3166 - 'jquery-1.5.1-vsdoc.js' *///				}
/*Line 3167 - 'jquery-1.5.1-vsdoc.js' *///				return this;
/*Line 3168 - 'jquery-1.5.1-vsdoc.js' *///			}
		
/*Line 3170 - 'jquery-1.5.1-vsdoc.js' *///			if ( jQuery.isFunction( data ) || data === false ) {
/*Line 3171 - 'jquery-1.5.1-vsdoc.js' *///				fn = data;
/*Line 3172 - 'jquery-1.5.1-vsdoc.js' *///				data = undefined;
/*Line 3173 - 'jquery-1.5.1-vsdoc.js' *///			}

/*Line 3175 - 'jquery-1.5.1-vsdoc.js' *///			var handler = name === "one" ? jQuery.proxy( fn, function( event ) {
/*Line 3176 - 'jquery-1.5.1-vsdoc.js' *///				jQuery( this ).unbind( event, handler );
/*Line 3177 - 'jquery-1.5.1-vsdoc.js' *///				return fn.apply( this, arguments );
/*Line 3178 - 'jquery-1.5.1-vsdoc.js' *///			}) : fn;

/*Line 3180 - 'jquery-1.5.1-vsdoc.js' *///			if ( type === "unload" && name !== "one" ) {
/*Line 3181 - 'jquery-1.5.1-vsdoc.js' *///				this.one( type, data, fn );

/*Line 3183 - 'jquery-1.5.1-vsdoc.js' *///			} else {
/*Line 3184 - 'jquery-1.5.1-vsdoc.js' *///				for ( var i = 0, l = this.length; i < l; i++ ) {
/*Line 3185 - 'jquery-1.5.1-vsdoc.js' *///					jQuery.event.add( this[i], type, handler, data );
/*Line 3186 - 'jquery-1.5.1-vsdoc.js' *///				}
/*Line 3187 - 'jquery-1.5.1-vsdoc.js' *///			}

/*Line 3189 - 'jquery-1.5.1-vsdoc.js' *///			return this;
/*Line 3190 - 'jquery-1.5.1-vsdoc.js' *///		};
/*Line 3191 - 'jquery-1.5.1-vsdoc.js' *///	});

/*Line 3193 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "bind" ] = function( type, data, fn ) {
/*Line 3194 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 3195 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Binds a handler to one or more events for each matched element.  Can also bind custom events.
/*Line 3196 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 3197 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="type" type="String">One or more event types separated by a space.  Built-in event type values are: blur, focus, load, resize, scroll, unload, click, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, error .</param>
/*Line 3198 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="data" optional="true" type="Object">Additional data passed to the event handler as event.data</param>
/*Line 3199 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="fn" type="Function">A function to bind to the event on each of the set of matched elements.  function callback(eventObject) such that this corresponds to the dom element.</param>

/*Line 3201 - 'jquery-1.5.1-vsdoc.js' */	// Handle object literals
/*Line 3202 - 'jquery-1.5.1-vsdoc.js' */	if ( typeof type === "object" ) {
/*Line 3203 - 'jquery-1.5.1-vsdoc.js' */		for ( var key in type ) {
/*Line 3204 - 'jquery-1.5.1-vsdoc.js' */			this[ "bind" ](key, data, type[key], fn);
/*Line 3205 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 3206 - 'jquery-1.5.1-vsdoc.js' */		return this;
/*Line 3207 - 'jquery-1.5.1-vsdoc.js' */	}
	
/*Line 3209 - 'jquery-1.5.1-vsdoc.js' */	if ( jQuery.isFunction( data ) ) {
/*Line 3210 - 'jquery-1.5.1-vsdoc.js' */		fn = data;
/*Line 3211 - 'jquery-1.5.1-vsdoc.js' */		data = undefined;
/*Line 3212 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 3214 - 'jquery-1.5.1-vsdoc.js' */	var handler = "bind" === "one" ? jQuery.proxy( fn, function( event ) {
/*Line 3215 - 'jquery-1.5.1-vsdoc.js' */		jQuery( this ).unbind( event, handler );
/*Line 3216 - 'jquery-1.5.1-vsdoc.js' */		return fn.apply( this, arguments );
/*Line 3217 - 'jquery-1.5.1-vsdoc.js' */	}) : fn;

/*Line 3219 - 'jquery-1.5.1-vsdoc.js' */	return type === "unload" && "bind" !== "one" ?
/*Line 3220 - 'jquery-1.5.1-vsdoc.js' */		this.one( type, data, fn ) :
/*Line 3221 - 'jquery-1.5.1-vsdoc.js' */		this.each(function() {
/*Line 3222 - 'jquery-1.5.1-vsdoc.js' */			jQuery.event.add( this, type, handler, data );
/*Line 3223 - 'jquery-1.5.1-vsdoc.js' */		});
/*Line 3224 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 3226 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "one" ] = function( type, data, fn ) {
/*Line 3227 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 3228 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Binds a handler to one or more events to be executed exactly once for each matched element.
/*Line 3229 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 3230 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="type" type="String">One or more event types separated by a space.  Built-in event type values are: blur, focus, load, resize, scroll, unload, click, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, error .</param>
/*Line 3231 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="data" optional="true" type="Object">Additional data passed to the event handler as event.data</param>
/*Line 3232 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="fn" type="Function">A function to bind to the event on each of the set of matched elements.  function callback(eventObject) such that this corresponds to the dom element.</param>

/*Line 3234 - 'jquery-1.5.1-vsdoc.js' */	// Handle object literals
/*Line 3235 - 'jquery-1.5.1-vsdoc.js' */	if ( typeof type === "object" ) {
/*Line 3236 - 'jquery-1.5.1-vsdoc.js' */		for ( var key in type ) {
/*Line 3237 - 'jquery-1.5.1-vsdoc.js' */			this[ "one" ](key, data, type[key], fn);
/*Line 3238 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 3239 - 'jquery-1.5.1-vsdoc.js' */		return this;
/*Line 3240 - 'jquery-1.5.1-vsdoc.js' */	}
	
/*Line 3242 - 'jquery-1.5.1-vsdoc.js' */	if ( jQuery.isFunction( data ) ) {
/*Line 3243 - 'jquery-1.5.1-vsdoc.js' */		fn = data;
/*Line 3244 - 'jquery-1.5.1-vsdoc.js' */		data = undefined;
/*Line 3245 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 3247 - 'jquery-1.5.1-vsdoc.js' */	var handler = "one" === "one" ? jQuery.proxy( fn, function( event ) {
/*Line 3248 - 'jquery-1.5.1-vsdoc.js' */		jQuery( this ).unbind( event, handler );
/*Line 3249 - 'jquery-1.5.1-vsdoc.js' */		return fn.apply( this, arguments );
/*Line 3250 - 'jquery-1.5.1-vsdoc.js' */	}) : fn;

/*Line 3252 - 'jquery-1.5.1-vsdoc.js' */	return type === "unload" && "one" !== "one" ?
/*Line 3253 - 'jquery-1.5.1-vsdoc.js' */		this.one( type, data, fn ) :
/*Line 3254 - 'jquery-1.5.1-vsdoc.js' */		this.each(function() {
/*Line 3255 - 'jquery-1.5.1-vsdoc.js' */			jQuery.event.add( this, type, handler, data );
/*Line 3256 - 'jquery-1.5.1-vsdoc.js' */		});
/*Line 3257 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 3259 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn.extend({
/*Line 3260 - 'jquery-1.5.1-vsdoc.js' */	unbind: function( type, fn ) {
/*Line 3261 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 3262 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Unbinds a handler from one or more events for each matched element.
/*Line 3263 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 3264 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="type" type="String">One or more event types separated by a space.  Built-in event type values are: blur, focus, load, resize, scroll, unload, click, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, error .</param>
/*Line 3265 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="fn" type="Function">A function to bind to the event on each of the set of matched elements.  function callback(eventObject) such that this corresponds to the dom element.</param>

/*Line 3267 - 'jquery-1.5.1-vsdoc.js' */		// Handle object literals
/*Line 3268 - 'jquery-1.5.1-vsdoc.js' */		if ( typeof type === "object" && !type.preventDefault ) {
/*Line 3269 - 'jquery-1.5.1-vsdoc.js' */			for ( var key in type ) {
/*Line 3270 - 'jquery-1.5.1-vsdoc.js' */				this.unbind(key, type[key]);
/*Line 3271 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 3273 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 3274 - 'jquery-1.5.1-vsdoc.js' */			for ( var i = 0, l = this.length; i < l; i++ ) {
/*Line 3275 - 'jquery-1.5.1-vsdoc.js' */				jQuery.event.remove( this[i], type, fn );
/*Line 3276 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 3277 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 3279 - 'jquery-1.5.1-vsdoc.js' */		return this;
/*Line 3280 - 'jquery-1.5.1-vsdoc.js' */	},
	
/*Line 3282 - 'jquery-1.5.1-vsdoc.js' */	delegate: function( selector, types, data, fn ) {
/*Line 3283 - 'jquery-1.5.1-vsdoc.js' */		return this.live( types, data, fn, selector );
/*Line 3284 - 'jquery-1.5.1-vsdoc.js' */	},
	
/*Line 3286 - 'jquery-1.5.1-vsdoc.js' */	undelegate: function( selector, types, fn ) {
/*Line 3287 - 'jquery-1.5.1-vsdoc.js' */		if ( arguments.length === 0 ) {
/*Line 3288 - 'jquery-1.5.1-vsdoc.js' */				return this.unbind( "live" );
		
/*Line 3290 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 3291 - 'jquery-1.5.1-vsdoc.js' */			return this.die( types, null, fn, selector );
/*Line 3292 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 3293 - 'jquery-1.5.1-vsdoc.js' */	},
	
/*Line 3295 - 'jquery-1.5.1-vsdoc.js' */	trigger: function( type, data ) {
/*Line 3296 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 3297 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Triggers a type of event on every matched element.
/*Line 3298 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 3299 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="type" type="String">One or more event types separated by a space.  Built-in event type values are: blur, focus, load, resize, scroll, unload, click, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, error .</param>
/*Line 3300 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="data" optional="true" type="Array">Additional data passed to the event handler as additional arguments.</param>
/*Line 3301 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="fn" type="Function">This parameter is undocumented.</param>

/*Line 3303 - 'jquery-1.5.1-vsdoc.js' */		return this.each(function() {
/*Line 3304 - 'jquery-1.5.1-vsdoc.js' */			jQuery.event.trigger( type, data, this );
/*Line 3305 - 'jquery-1.5.1-vsdoc.js' */		});
/*Line 3306 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 3308 - 'jquery-1.5.1-vsdoc.js' */	triggerHandler: function( type, data ) {
/*Line 3309 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 3310 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Triggers all bound event handlers on an element for a specific event type without executing the browser's default actions.
/*Line 3311 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 3312 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="type" type="String">One or more event types separated by a space.  Built-in event type values are: blur, focus, load, resize, scroll, unload, click, dblclick, mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select, submit, keydown, keypress, keyup, error .</param>
/*Line 3313 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="data" optional="true" type="Array">Additional data passed to the event handler as additional arguments.</param>
/*Line 3314 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="fn" type="Function">This parameter is undocumented.</param>

/*Line 3316 - 'jquery-1.5.1-vsdoc.js' */		if ( this[0] ) {
/*Line 3317 - 'jquery-1.5.1-vsdoc.js' */			var event = jQuery.Event( type );
/*Line 3318 - 'jquery-1.5.1-vsdoc.js' */			event.preventDefault();
/*Line 3319 - 'jquery-1.5.1-vsdoc.js' */			event.stopPropagation();
/*Line 3320 - 'jquery-1.5.1-vsdoc.js' */			jQuery.event.trigger( event, data, this[0] );
/*Line 3321 - 'jquery-1.5.1-vsdoc.js' */			return event.result;
/*Line 3322 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 3323 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 3325 - 'jquery-1.5.1-vsdoc.js' */	toggle: function( fn ) {
/*Line 3326 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 3327 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Toggles among two or more function calls every other click.
/*Line 3328 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 3329 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="fn" type="Function">The functions among which to toggle execution</param>

/*Line 3331 - 'jquery-1.5.1-vsdoc.js' */		// Save reference to arguments for access in closure
/*Line 3332 - 'jquery-1.5.1-vsdoc.js' */		var args = arguments,
/*Line 3333 - 'jquery-1.5.1-vsdoc.js' */			i = 1;

/*Line 3335 - 'jquery-1.5.1-vsdoc.js' */		// link all the functions, so any of them can unbind this click handler
/*Line 3336 - 'jquery-1.5.1-vsdoc.js' */		while ( i < args.length ) {
/*Line 3337 - 'jquery-1.5.1-vsdoc.js' */			jQuery.proxy( fn, args[ i++ ] );
/*Line 3338 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 3340 - 'jquery-1.5.1-vsdoc.js' */		return this.click( jQuery.proxy( fn, function( event ) {
/*Line 3341 - 'jquery-1.5.1-vsdoc.js' */			// Figure out which function to execute
/*Line 3342 - 'jquery-1.5.1-vsdoc.js' */			var lastToggle = ( jQuery.data( this, "lastToggle" + fn.guid ) || 0 ) % i;
/*Line 3343 - 'jquery-1.5.1-vsdoc.js' */			jQuery.data( this, "lastToggle" + fn.guid, lastToggle + 1 );

/*Line 3345 - 'jquery-1.5.1-vsdoc.js' */			// Make sure that clicks stop
/*Line 3346 - 'jquery-1.5.1-vsdoc.js' */			event.preventDefault();

/*Line 3348 - 'jquery-1.5.1-vsdoc.js' */			// and execute the function
/*Line 3349 - 'jquery-1.5.1-vsdoc.js' */			return args[ lastToggle ].apply( this, arguments ) || false;
/*Line 3350 - 'jquery-1.5.1-vsdoc.js' */		}));
/*Line 3351 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 3353 - 'jquery-1.5.1-vsdoc.js' */	hover: function( fnOver, fnOut ) {
/*Line 3354 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 3355 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Simulates hovering (moving the mouse on or off of an object).
/*Line 3356 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 3357 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="fnOver" type="Function">The function to fire when the mouse is moved over a matched element.</param>
/*Line 3358 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="fnOut" type="Function">The function to fire when the mouse is moved off of a matched element.</param>

/*Line 3360 - 'jquery-1.5.1-vsdoc.js' */		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
/*Line 3361 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 3362 - 'jquery-1.5.1-vsdoc.js' */});

/*Line 3364 - 'jquery-1.5.1-vsdoc.js' */var liveMap = {
/*Line 3365 - 'jquery-1.5.1-vsdoc.js' */	focus: "focusin",
/*Line 3366 - 'jquery-1.5.1-vsdoc.js' */	blur: "focusout",
/*Line 3367 - 'jquery-1.5.1-vsdoc.js' */	mouseenter: "mouseover",
/*Line 3368 - 'jquery-1.5.1-vsdoc.js' */	mouseleave: "mouseout"
/*Line 3369 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 3371 - 'jquery-1.5.1-vsdoc.js' *///	jQuery.each(["live", "die"], function( i, name ) {
/*Line 3372 - 'jquery-1.5.1-vsdoc.js' *///		jQuery.fn[ name ] = function( types, data, fn, origSelector /* Internal Use Only */ ) {
/*Line 3373 - 'jquery-1.5.1-vsdoc.js' *///			var type, i = 0, match, namespaces, preType,
/*Line 3374 - 'jquery-1.5.1-vsdoc.js' *///				selector = origSelector || this.selector,
/*Line 3375 - 'jquery-1.5.1-vsdoc.js' *///				context = origSelector ? this : jQuery( this.context );
		
/*Line 3377 - 'jquery-1.5.1-vsdoc.js' *///			if ( typeof types === "object" && !types.preventDefault ) {
/*Line 3378 - 'jquery-1.5.1-vsdoc.js' *///				for ( var key in types ) {
/*Line 3379 - 'jquery-1.5.1-vsdoc.js' *///					context[ name ]( key, data, types[key], selector );
/*Line 3380 - 'jquery-1.5.1-vsdoc.js' *///				}
			
/*Line 3382 - 'jquery-1.5.1-vsdoc.js' *///				return this;
/*Line 3383 - 'jquery-1.5.1-vsdoc.js' *///			}

/*Line 3385 - 'jquery-1.5.1-vsdoc.js' *///			if ( jQuery.isFunction( data ) ) {
/*Line 3386 - 'jquery-1.5.1-vsdoc.js' *///				fn = data;
/*Line 3387 - 'jquery-1.5.1-vsdoc.js' *///				data = undefined;
/*Line 3388 - 'jquery-1.5.1-vsdoc.js' *///			}

/*Line 3390 - 'jquery-1.5.1-vsdoc.js' *///			types = (types || "").split(" ");

/*Line 3392 - 'jquery-1.5.1-vsdoc.js' *///			while ( (type = types[ i++ ]) != null ) {
/*Line 3393 - 'jquery-1.5.1-vsdoc.js' *///				match = rnamespaces.exec( type );
/*Line 3394 - 'jquery-1.5.1-vsdoc.js' *///				namespaces = "";

/*Line 3396 - 'jquery-1.5.1-vsdoc.js' *///				if ( match )  {
/*Line 3397 - 'jquery-1.5.1-vsdoc.js' *///					namespaces = match[0];
/*Line 3398 - 'jquery-1.5.1-vsdoc.js' *///					type = type.replace( rnamespaces, "" );
/*Line 3399 - 'jquery-1.5.1-vsdoc.js' *///				}

/*Line 3401 - 'jquery-1.5.1-vsdoc.js' *///				if ( type === "hover" ) {
/*Line 3402 - 'jquery-1.5.1-vsdoc.js' *///					types.push( "mouseenter" + namespaces, "mouseleave" + namespaces );
/*Line 3403 - 'jquery-1.5.1-vsdoc.js' *///					continue;
/*Line 3404 - 'jquery-1.5.1-vsdoc.js' *///				}

/*Line 3406 - 'jquery-1.5.1-vsdoc.js' *///				preType = type;

/*Line 3408 - 'jquery-1.5.1-vsdoc.js' *///				if ( type === "focus" || type === "blur" ) {
/*Line 3409 - 'jquery-1.5.1-vsdoc.js' *///					types.push( liveMap[ type ] + namespaces );
/*Line 3410 - 'jquery-1.5.1-vsdoc.js' *///					type = type + namespaces;

/*Line 3412 - 'jquery-1.5.1-vsdoc.js' *///				} else {
/*Line 3413 - 'jquery-1.5.1-vsdoc.js' *///					type = (liveMap[ type ] || type) + namespaces;
/*Line 3414 - 'jquery-1.5.1-vsdoc.js' *///				}

/*Line 3416 - 'jquery-1.5.1-vsdoc.js' *///				if ( name === "live" ) {
/*Line 3417 - 'jquery-1.5.1-vsdoc.js' *///					// bind live handler
/*Line 3418 - 'jquery-1.5.1-vsdoc.js' *///					for ( var j = 0, l = context.length; j < l; j++ ) {
/*Line 3419 - 'jquery-1.5.1-vsdoc.js' *///						jQuery.event.add( context[j], "live." + liveConvert( type, selector ),
/*Line 3420 - 'jquery-1.5.1-vsdoc.js' *///							{ data: data, selector: selector, handler: fn, origType: type, origHandler: fn, preType: preType } );
/*Line 3421 - 'jquery-1.5.1-vsdoc.js' *///					}

/*Line 3423 - 'jquery-1.5.1-vsdoc.js' *///				} else {
/*Line 3424 - 'jquery-1.5.1-vsdoc.js' *///					// unbind live handler
/*Line 3425 - 'jquery-1.5.1-vsdoc.js' *///					context.unbind( "live." + liveConvert( type, selector ), fn );
/*Line 3426 - 'jquery-1.5.1-vsdoc.js' *///				}
/*Line 3427 - 'jquery-1.5.1-vsdoc.js' *///			}
		
/*Line 3429 - 'jquery-1.5.1-vsdoc.js' *///			return this;
/*Line 3430 - 'jquery-1.5.1-vsdoc.js' *///		};
/*Line 3431 - 'jquery-1.5.1-vsdoc.js' *///	});

/*Line 3433 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "live" ] = function( types, data, fn ) {
/*Line 3434 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 3435 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Attach a handler to the event for all elements which match the current selector, now or
/*Line 3436 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;in the future.
/*Line 3437 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 3438 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="types" type="String">
/*Line 3439 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;A string containing a JavaScript event type, such as "click" or "keydown".
/*Line 3440 - 'jquery-1.5.1-vsdoc.js' */	///	</param>
/*Line 3441 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="data" type="Object">
/*Line 3442 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;A map of data that will be passed to the event handler.
/*Line 3443 - 'jquery-1.5.1-vsdoc.js' */	///	</param>
/*Line 3444 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="fn" type="Function">
/*Line 3445 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;A function to execute at the time the event is triggered.
/*Line 3446 - 'jquery-1.5.1-vsdoc.js' */	///	</param>
/*Line 3447 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 3449 - 'jquery-1.5.1-vsdoc.js' */	var type, i = 0;

/*Line 3451 - 'jquery-1.5.1-vsdoc.js' */	if ( jQuery.isFunction( data ) ) {
/*Line 3452 - 'jquery-1.5.1-vsdoc.js' */		fn = data;
/*Line 3453 - 'jquery-1.5.1-vsdoc.js' */		data = undefined;
/*Line 3454 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 3456 - 'jquery-1.5.1-vsdoc.js' */	types = (types || "").split( /\s+/ );

/*Line 3458 - 'jquery-1.5.1-vsdoc.js' */	while ( (type = types[ i++ ]) != null ) {
/*Line 3459 - 'jquery-1.5.1-vsdoc.js' */		type = type === "focus" ? "focusin" : // focus --> focusin
/*Line 3460 - 'jquery-1.5.1-vsdoc.js' */				type === "blur" ? "focusout" : // blur --> focusout
/*Line 3461 - 'jquery-1.5.1-vsdoc.js' */				type === "hover" ? types.push("mouseleave") && "mouseenter" : // hover support
/*Line 3462 - 'jquery-1.5.1-vsdoc.js' */				type;
		
/*Line 3464 - 'jquery-1.5.1-vsdoc.js' */		if ( "live" === "live" ) {
/*Line 3465 - 'jquery-1.5.1-vsdoc.js' */			// bind live handler
/*Line 3466 - 'jquery-1.5.1-vsdoc.js' */			jQuery( this.context ).bind( liveConvert( type, this.selector ), {
/*Line 3467 - 'jquery-1.5.1-vsdoc.js' */				data: data, selector: this.selector, live: type
/*Line 3468 - 'jquery-1.5.1-vsdoc.js' */			}, fn );

/*Line 3470 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 3471 - 'jquery-1.5.1-vsdoc.js' */			// unbind live handler
/*Line 3472 - 'jquery-1.5.1-vsdoc.js' */			jQuery( this.context ).unbind( liveConvert( type, this.selector ), fn ? { guid: fn.guid + this.selector + type } : null );
/*Line 3473 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 3474 - 'jquery-1.5.1-vsdoc.js' */	}
	
/*Line 3476 - 'jquery-1.5.1-vsdoc.js' */	return this;
/*Line 3477 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 3479 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "die" ] = function( types, data, fn ) {
/*Line 3480 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 3481 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Remove all event handlers previously attached using .live() from the elements.
/*Line 3482 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 3483 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="types" type="String">
/*Line 3484 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;A string containing a JavaScript event type, such as click or keydown.
/*Line 3485 - 'jquery-1.5.1-vsdoc.js' */	///	</param>
/*Line 3486 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="data" type="Object">
/*Line 3487 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;The function that is to be no longer executed.
/*Line 3488 - 'jquery-1.5.1-vsdoc.js' */	///	</param>
/*Line 3489 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 3491 - 'jquery-1.5.1-vsdoc.js' */	var type, i = 0;

/*Line 3493 - 'jquery-1.5.1-vsdoc.js' */	if ( jQuery.isFunction( data ) ) {
/*Line 3494 - 'jquery-1.5.1-vsdoc.js' */		fn = data;
/*Line 3495 - 'jquery-1.5.1-vsdoc.js' */		data = undefined;
/*Line 3496 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 3498 - 'jquery-1.5.1-vsdoc.js' */	types = (types || "").split( /\s+/ );

/*Line 3500 - 'jquery-1.5.1-vsdoc.js' */	while ( (type = types[ i++ ]) != null ) {
/*Line 3501 - 'jquery-1.5.1-vsdoc.js' */		type = type === "focus" ? "focusin" : // focus --> focusin
/*Line 3502 - 'jquery-1.5.1-vsdoc.js' */				type === "blur" ? "focusout" : // blur --> focusout
/*Line 3503 - 'jquery-1.5.1-vsdoc.js' */				type === "hover" ? types.push("mouseleave") && "mouseenter" : // hover support
/*Line 3504 - 'jquery-1.5.1-vsdoc.js' */				type;
		
/*Line 3506 - 'jquery-1.5.1-vsdoc.js' */		if ( "die" === "live" ) {
/*Line 3507 - 'jquery-1.5.1-vsdoc.js' */			// bind live handler
/*Line 3508 - 'jquery-1.5.1-vsdoc.js' */			jQuery( this.context ).bind( liveConvert( type, this.selector ), {
/*Line 3509 - 'jquery-1.5.1-vsdoc.js' */				data: data, selector: this.selector, live: type
/*Line 3510 - 'jquery-1.5.1-vsdoc.js' */			}, fn );

/*Line 3512 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 3513 - 'jquery-1.5.1-vsdoc.js' */			// unbind live handler
/*Line 3514 - 'jquery-1.5.1-vsdoc.js' */			jQuery( this.context ).unbind( liveConvert( type, this.selector ), fn ? { guid: fn.guid + this.selector + type } : null );
/*Line 3515 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 3516 - 'jquery-1.5.1-vsdoc.js' */	}
	
/*Line 3518 - 'jquery-1.5.1-vsdoc.js' */	return this;
/*Line 3519 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 3521 - 'jquery-1.5.1-vsdoc.js' */function liveHandler( event ) {
/*Line 3522 - 'jquery-1.5.1-vsdoc.js' */	var stop, maxLevel, related, match, handleObj, elem, j, i, l, data, close, namespace, ret,
/*Line 3523 - 'jquery-1.5.1-vsdoc.js' */		elems = [],
/*Line 3524 - 'jquery-1.5.1-vsdoc.js' */		selectors = [],
/*Line 3525 - 'jquery-1.5.1-vsdoc.js' */		events = jQuery.data( this, this.nodeType ? "events" : "__events__" );

/*Line 3527 - 'jquery-1.5.1-vsdoc.js' */	if ( typeof events === "function" ) {
/*Line 3528 - 'jquery-1.5.1-vsdoc.js' */		events = events.events;
/*Line 3529 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 3531 - 'jquery-1.5.1-vsdoc.js' */	// Make sure we avoid non-left-click bubbling in Firefox (#3861)
/*Line 3532 - 'jquery-1.5.1-vsdoc.js' */	if ( event.liveFired === this || !events || !events.live || event.button && event.type === "click" ) {
/*Line 3533 - 'jquery-1.5.1-vsdoc.js' */		return;
/*Line 3534 - 'jquery-1.5.1-vsdoc.js' */	}
	
/*Line 3536 - 'jquery-1.5.1-vsdoc.js' */	if ( event.namespace ) {
/*Line 3537 - 'jquery-1.5.1-vsdoc.js' */		namespace = new RegExp("(^|\\.)" + event.namespace.split(".").join("\\.(?:.*\\.)?") + "(\\.|$)");
/*Line 3538 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 3540 - 'jquery-1.5.1-vsdoc.js' */	event.liveFired = this;

/*Line 3542 - 'jquery-1.5.1-vsdoc.js' */	var live = events.live.slice(0);

/*Line 3544 - 'jquery-1.5.1-vsdoc.js' */	for ( j = 0; j < live.length; j++ ) {
/*Line 3545 - 'jquery-1.5.1-vsdoc.js' */		handleObj = live[j];

/*Line 3547 - 'jquery-1.5.1-vsdoc.js' */		if ( handleObj.origType.replace( rnamespaces, "" ) === event.type ) {
/*Line 3548 - 'jquery-1.5.1-vsdoc.js' */			selectors.push( handleObj.selector );

/*Line 3550 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 3551 - 'jquery-1.5.1-vsdoc.js' */			live.splice( j--, 1 );
/*Line 3552 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 3553 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 3555 - 'jquery-1.5.1-vsdoc.js' */	match = jQuery( event.target ).closest( selectors, event.currentTarget );

/*Line 3557 - 'jquery-1.5.1-vsdoc.js' */	for ( i = 0, l = match.length; i < l; i++ ) {
/*Line 3558 - 'jquery-1.5.1-vsdoc.js' */		close = match[i];

/*Line 3560 - 'jquery-1.5.1-vsdoc.js' */		for ( j = 0; j < live.length; j++ ) {
/*Line 3561 - 'jquery-1.5.1-vsdoc.js' */			handleObj = live[j];

/*Line 3563 - 'jquery-1.5.1-vsdoc.js' */			if ( close.selector === handleObj.selector && (!namespace || namespace.test( handleObj.namespace )) ) {
/*Line 3564 - 'jquery-1.5.1-vsdoc.js' */				elem = close.elem;
/*Line 3565 - 'jquery-1.5.1-vsdoc.js' */				related = null;

/*Line 3567 - 'jquery-1.5.1-vsdoc.js' */				// Those two events require additional checking
/*Line 3568 - 'jquery-1.5.1-vsdoc.js' */				if ( handleObj.preType === "mouseenter" || handleObj.preType === "mouseleave" ) {
/*Line 3569 - 'jquery-1.5.1-vsdoc.js' */					event.type = handleObj.preType;
/*Line 3570 - 'jquery-1.5.1-vsdoc.js' */					related = jQuery( event.relatedTarget ).closest( handleObj.selector )[0];
/*Line 3571 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 3573 - 'jquery-1.5.1-vsdoc.js' */				if ( !related || related !== elem ) {
/*Line 3574 - 'jquery-1.5.1-vsdoc.js' */					elems.push({ elem: elem, handleObj: handleObj, level: close.level });
/*Line 3575 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 3576 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 3577 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 3578 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 3580 - 'jquery-1.5.1-vsdoc.js' */	for ( i = 0, l = elems.length; i < l; i++ ) {
/*Line 3581 - 'jquery-1.5.1-vsdoc.js' */		match = elems[i];

/*Line 3583 - 'jquery-1.5.1-vsdoc.js' */		if ( maxLevel && match.level > maxLevel ) {
/*Line 3584 - 'jquery-1.5.1-vsdoc.js' */			break;
/*Line 3585 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 3587 - 'jquery-1.5.1-vsdoc.js' */		event.currentTarget = match.elem;
/*Line 3588 - 'jquery-1.5.1-vsdoc.js' */		event.data = match.handleObj.data;
/*Line 3589 - 'jquery-1.5.1-vsdoc.js' */		event.handleObj = match.handleObj;

/*Line 3591 - 'jquery-1.5.1-vsdoc.js' */		ret = match.handleObj.origHandler.apply( match.elem, arguments );

/*Line 3593 - 'jquery-1.5.1-vsdoc.js' */		if ( ret === false || event.isPropagationStopped() ) {
/*Line 3594 - 'jquery-1.5.1-vsdoc.js' */			maxLevel = match.level;

/*Line 3596 - 'jquery-1.5.1-vsdoc.js' */			if ( ret === false ) {
/*Line 3597 - 'jquery-1.5.1-vsdoc.js' */				stop = false;
/*Line 3598 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 3599 - 'jquery-1.5.1-vsdoc.js' */			if ( event.isImmediatePropagationStopped() ) {
/*Line 3600 - 'jquery-1.5.1-vsdoc.js' */				break;
/*Line 3601 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 3602 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 3603 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 3605 - 'jquery-1.5.1-vsdoc.js' */	return stop;
/*Line 3606 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 3608 - 'jquery-1.5.1-vsdoc.js' */function liveConvert( type, selector ) {
/*Line 3609 - 'jquery-1.5.1-vsdoc.js' */	return (type && type !== "*" ? type + "." : "") + selector.replace(rperiod, "`").replace(rspace, "&");
/*Line 3610 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 3612 - 'jquery-1.5.1-vsdoc.js' *///	jQuery.each( ("blur focus focusin focusout load resize scroll unload click dblclick " +
/*Line 3613 - 'jquery-1.5.1-vsdoc.js' *///		"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
/*Line 3614 - 'jquery-1.5.1-vsdoc.js' *///		"change select submit keydown keypress keyup error").split(" "), function( i, name ) {

/*Line 3616 - 'jquery-1.5.1-vsdoc.js' *///		// Handle event binding
/*Line 3617 - 'jquery-1.5.1-vsdoc.js' *///		jQuery.fn[ name ] = function( data, fn ) {
/*Line 3618 - 'jquery-1.5.1-vsdoc.js' *///			if ( fn == null ) {
/*Line 3619 - 'jquery-1.5.1-vsdoc.js' *///				fn = data;
/*Line 3620 - 'jquery-1.5.1-vsdoc.js' *///				data = null;
/*Line 3621 - 'jquery-1.5.1-vsdoc.js' *///			}

/*Line 3623 - 'jquery-1.5.1-vsdoc.js' *///			return arguments.length > 0 ?
/*Line 3624 - 'jquery-1.5.1-vsdoc.js' *///				this.bind( name, data, fn ) :
/*Line 3625 - 'jquery-1.5.1-vsdoc.js' *///				this.trigger( name );
/*Line 3626 - 'jquery-1.5.1-vsdoc.js' *///		};

/*Line 3628 - 'jquery-1.5.1-vsdoc.js' *///		if ( jQuery.attrFn ) {
/*Line 3629 - 'jquery-1.5.1-vsdoc.js' *///			jQuery.attrFn[ name ] = true;
/*Line 3630 - 'jquery-1.5.1-vsdoc.js' *///		}
/*Line 3631 - 'jquery-1.5.1-vsdoc.js' *///	});

/*Line 3633 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "blur" ] = function( fn ) {
/*Line 3634 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 3635 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;1: blur() - Triggers the blur event of each matched element.
/*Line 3636 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;2: blur(fn) - Binds a function to the blur event of each matched element.
/*Line 3637 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 3638 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="fn" type="Function">The function to execute.</param>
/*Line 3639 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 3641 - 'jquery-1.5.1-vsdoc.js' */	return fn ? this.bind( "blur", fn ) : this.trigger( "blur" );
/*Line 3642 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 3644 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "focus" ] = function( fn ) {
/*Line 3645 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 3646 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;1: focus() - Triggers the focus event of each matched element.
/*Line 3647 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;2: focus(fn) - Binds a function to the focus event of each matched element.
/*Line 3648 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 3649 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="fn" type="Function">The function to execute.</param>
/*Line 3650 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 3652 - 'jquery-1.5.1-vsdoc.js' */	return fn ? this.bind( "focus", fn ) : this.trigger( "focus" );
/*Line 3653 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 3655 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "focusin" ] = function( fn ) {
/*Line 3656 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 3657 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Bind an event handler to the "focusin" JavaScript event.
/*Line 3658 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 3659 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="fn" type="Function">
/*Line 3660 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;A function to execute each time the event is triggered.
/*Line 3661 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 3662 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 3664 - 'jquery-1.5.1-vsdoc.js' */	return fn ? this.bind( "focusin", fn ) : this.trigger( "focusin" );
/*Line 3665 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 3667 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "focusout" ] = function( fn ) {
/*Line 3668 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 3669 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Bind an event handler to the "focusout" JavaScript event.
/*Line 3670 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 3671 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="fn" type="Function">
/*Line 3672 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;A function to execute each time the event is triggered.
/*Line 3673 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 3674 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 3676 - 'jquery-1.5.1-vsdoc.js' */	return fn ? this.bind( "focusout", fn ) : this.trigger( "focusout" );
/*Line 3677 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 3679 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "load" ] = function( fn ) {
/*Line 3680 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 3681 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;1: load() - Triggers the load event of each matched element.
/*Line 3682 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;2: load(fn) - Binds a function to the load event of each matched element.
/*Line 3683 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 3684 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="fn" type="Function">The function to execute.</param>
/*Line 3685 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 3687 - 'jquery-1.5.1-vsdoc.js' */	return fn ? this.bind( "load", fn ) : this.trigger( "load" );
/*Line 3688 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 3690 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "resize" ] = function( fn ) {
/*Line 3691 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 3692 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;1: resize() - Triggers the resize event of each matched element.
/*Line 3693 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;2: resize(fn) - Binds a function to the resize event of each matched element.
/*Line 3694 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 3695 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="fn" type="Function">The function to execute.</param>
/*Line 3696 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 3698 - 'jquery-1.5.1-vsdoc.js' */	return fn ? this.bind( "resize", fn ) : this.trigger( "resize" );
/*Line 3699 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 3701 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "scroll" ] = function( fn ) {
/*Line 3702 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 3703 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;1: scroll() - Triggers the scroll event of each matched element.
/*Line 3704 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;2: scroll(fn) - Binds a function to the scroll event of each matched element.
/*Line 3705 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 3706 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="fn" type="Function">The function to execute.</param>
/*Line 3707 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 3709 - 'jquery-1.5.1-vsdoc.js' */	return fn ? this.bind( "scroll", fn ) : this.trigger( "scroll" );
/*Line 3710 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 3712 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "unload" ] = function( fn ) {
/*Line 3713 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 3714 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;1: unload() - Triggers the unload event of each matched element.
/*Line 3715 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;2: unload(fn) - Binds a function to the unload event of each matched element.
/*Line 3716 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 3717 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="fn" type="Function">The function to execute.</param>
/*Line 3718 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 3720 - 'jquery-1.5.1-vsdoc.js' */	return fn ? this.bind( "unload", fn ) : this.trigger( "unload" );
/*Line 3721 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 3723 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "click" ] = function( fn ) {
/*Line 3724 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 3725 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;1: click() - Triggers the click event of each matched element.
/*Line 3726 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;2: click(fn) - Binds a function to the click event of each matched element.
/*Line 3727 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 3728 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="fn" type="Function">The function to execute.</param>
/*Line 3729 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 3731 - 'jquery-1.5.1-vsdoc.js' */	return fn ? this.bind( "click", fn ) : this.trigger( "click" );
/*Line 3732 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 3734 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "dblclick" ] = function( fn ) {
/*Line 3735 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 3736 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;1: dblclick() - Triggers the dblclick event of each matched element.
/*Line 3737 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;2: dblclick(fn) - Binds a function to the dblclick event of each matched element.
/*Line 3738 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 3739 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="fn" type="Function">The function to execute.</param>
/*Line 3740 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 3742 - 'jquery-1.5.1-vsdoc.js' */	return fn ? this.bind( "dblclick", fn ) : this.trigger( "dblclick" );
/*Line 3743 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 3745 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "mousedown" ] = function( fn ) {
/*Line 3746 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 3747 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Binds a function to the mousedown event of each matched element. 
/*Line 3748 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 3749 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="fn" type="Function">The function to execute.</param>
/*Line 3750 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 3752 - 'jquery-1.5.1-vsdoc.js' */	return fn ? this.bind( "mousedown", fn ) : this.trigger( "mousedown" );
/*Line 3753 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 3755 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "mouseup" ] = function( fn ) {
/*Line 3756 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 3757 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Bind a function to the mouseup event of each matched element.
/*Line 3758 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 3759 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="fn" type="Function">The function to execute.</param>
/*Line 3760 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 3762 - 'jquery-1.5.1-vsdoc.js' */	return fn ? this.bind( "mouseup", fn ) : this.trigger( "mouseup" );
/*Line 3763 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 3765 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "mousemove" ] = function( fn ) {
/*Line 3766 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 3767 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Bind a function to the mousemove event of each matched element.
/*Line 3768 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 3769 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="fn" type="Function">The function to execute.</param>
/*Line 3770 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 3772 - 'jquery-1.5.1-vsdoc.js' */	return fn ? this.bind( "mousemove", fn ) : this.trigger( "mousemove" );
/*Line 3773 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 3775 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "mouseover" ] = function( fn ) {
/*Line 3776 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 3777 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Bind a function to the mouseover event of each matched element. 
/*Line 3778 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 3779 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="fn" type="Function">The function to execute.</param>
/*Line 3780 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 3782 - 'jquery-1.5.1-vsdoc.js' */	return fn ? this.bind( "mouseover", fn ) : this.trigger( "mouseover" );
/*Line 3783 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 3785 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "mouseout" ] = function( fn ) {
/*Line 3786 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 3787 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Bind a function to the mouseout event of each matched element. 
/*Line 3788 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 3789 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="fn" type="Function">The function to execute.</param>
/*Line 3790 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 3792 - 'jquery-1.5.1-vsdoc.js' */	return fn ? this.bind( "mouseout", fn ) : this.trigger( "mouseout" );
/*Line 3793 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 3795 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "mouseenter" ] = function( fn ) {
/*Line 3796 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 3797 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Bind a function to the mouseenter event of each matched element. 
/*Line 3798 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 3799 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="fn" type="Function">The function to execute.</param>
/*Line 3800 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 3802 - 'jquery-1.5.1-vsdoc.js' */	return fn ? this.bind( "mouseenter", fn ) : this.trigger( "mouseenter" );
/*Line 3803 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 3805 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "mouseleave" ] = function( fn ) {
/*Line 3806 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 3807 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Bind a function to the mouseleave event of each matched element. 
/*Line 3808 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 3809 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="fn" type="Function">The function to execute.</param>
/*Line 3810 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 3812 - 'jquery-1.5.1-vsdoc.js' */	return fn ? this.bind( "mouseleave", fn ) : this.trigger( "mouseleave" );
/*Line 3813 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 3815 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "change" ] = function( fn ) {
/*Line 3816 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 3817 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;1: change() - Triggers the change event of each matched element.
/*Line 3818 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;2: change(fn) - Binds a function to the change event of each matched element.
/*Line 3819 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 3820 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="fn" type="Function">The function to execute.</param>
/*Line 3821 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 3823 - 'jquery-1.5.1-vsdoc.js' */	return fn ? this.bind( "change", fn ) : this.trigger( "change" );
/*Line 3824 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 3826 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "select" ] = function( fn ) {
/*Line 3827 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 3828 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;1: select() - Triggers the select event of each matched element.
/*Line 3829 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;2: select(fn) - Binds a function to the select event of each matched element.
/*Line 3830 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 3831 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="fn" type="Function">The function to execute.</param>
/*Line 3832 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 3834 - 'jquery-1.5.1-vsdoc.js' */	return fn ? this.bind( "select", fn ) : this.trigger( "select" );
/*Line 3835 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 3837 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "submit" ] = function( fn ) {
/*Line 3838 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 3839 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;1: submit() - Triggers the submit event of each matched element.
/*Line 3840 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;2: submit(fn) - Binds a function to the submit event of each matched element.
/*Line 3841 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 3842 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="fn" type="Function">The function to execute.</param>
/*Line 3843 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 3845 - 'jquery-1.5.1-vsdoc.js' */	return fn ? this.bind( "submit", fn ) : this.trigger( "submit" );
/*Line 3846 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 3848 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "keydown" ] = function( fn ) {
/*Line 3849 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 3850 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;1: keydown() - Triggers the keydown event of each matched element.
/*Line 3851 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;2: keydown(fn) - Binds a function to the keydown event of each matched element.
/*Line 3852 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 3853 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="fn" type="Function">The function to execute.</param>
/*Line 3854 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 3856 - 'jquery-1.5.1-vsdoc.js' */	return fn ? this.bind( "keydown", fn ) : this.trigger( "keydown" );
/*Line 3857 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 3859 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "keypress" ] = function( fn ) {
/*Line 3860 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 3861 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;1: keypress() - Triggers the keypress event of each matched element.
/*Line 3862 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;2: keypress(fn) - Binds a function to the keypress event of each matched element.
/*Line 3863 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 3864 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="fn" type="Function">The function to execute.</param>
/*Line 3865 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 3867 - 'jquery-1.5.1-vsdoc.js' */	return fn ? this.bind( "keypress", fn ) : this.trigger( "keypress" );
/*Line 3868 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 3870 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "keyup" ] = function( fn ) {
/*Line 3871 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 3872 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;1: keyup() - Triggers the keyup event of each matched element.
/*Line 3873 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;2: keyup(fn) - Binds a function to the keyup event of each matched element.
/*Line 3874 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 3875 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="fn" type="Function">The function to execute.</param>
/*Line 3876 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 3878 - 'jquery-1.5.1-vsdoc.js' */	return fn ? this.bind( "keyup", fn ) : this.trigger( "keyup" );
/*Line 3879 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 3881 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "error" ] = function( fn ) {
/*Line 3882 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 3883 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;1: error() - Triggers the error event of each matched element.
/*Line 3884 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;2: error(fn) - Binds a function to the error event of each matched element.
/*Line 3885 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 3886 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="fn" type="Function">The function to execute.</param>
/*Line 3887 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 3889 - 'jquery-1.5.1-vsdoc.js' */	return fn ? this.bind( "error", fn ) : this.trigger( "error" );
/*Line 3890 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 3892 - 'jquery-1.5.1-vsdoc.js' */// Prevent memory leaks in IE
/*Line 3893 - 'jquery-1.5.1-vsdoc.js' */// Window isn't included so as not to unbind existing unload events
/*Line 3894 - 'jquery-1.5.1-vsdoc.js' */// More info:
/*Line 3895 - 'jquery-1.5.1-vsdoc.js' *///  - http://isaacschlueter.com/2006/10/msie-memory-leaks/
/*Line 3896 - 'jquery-1.5.1-vsdoc.js' */if ( window.attachEvent && !window.addEventListener ) {
/*Line 3897 - 'jquery-1.5.1-vsdoc.js' */	jQuery(window).bind("unload", function() {
/*Line 3898 - 'jquery-1.5.1-vsdoc.js' */		for ( var id in jQuery.cache ) {
/*Line 3899 - 'jquery-1.5.1-vsdoc.js' */			if ( jQuery.cache[ id ].handle ) {
/*Line 3900 - 'jquery-1.5.1-vsdoc.js' */				// Try/Catch is to handle iframes being unloaded, see #4280
/*Line 3901 - 'jquery-1.5.1-vsdoc.js' */				try {
/*Line 3902 - 'jquery-1.5.1-vsdoc.js' */					jQuery.event.remove( jQuery.cache[ id ].handle.elem );
/*Line 3903 - 'jquery-1.5.1-vsdoc.js' */				} catch(e) {}
/*Line 3904 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 3905 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 3906 - 'jquery-1.5.1-vsdoc.js' */	});
/*Line 3907 - 'jquery-1.5.1-vsdoc.js' */}


/*Line 3910 - 'jquery-1.5.1-vsdoc.js' */(function(){

/*Line 3912 - 'jquery-1.5.1-vsdoc.js' */var chunker = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,
/*Line 3913 - 'jquery-1.5.1-vsdoc.js' */	done = 0,
/*Line 3914 - 'jquery-1.5.1-vsdoc.js' */	toString = Object.prototype.toString,
/*Line 3915 - 'jquery-1.5.1-vsdoc.js' */	hasDuplicate = false,
/*Line 3916 - 'jquery-1.5.1-vsdoc.js' */	baseHasDuplicate = true;

/*Line 3918 - 'jquery-1.5.1-vsdoc.js' */// Here we check if the JavaScript engine is using some sort of
/*Line 3919 - 'jquery-1.5.1-vsdoc.js' */// optimization where it does not always call our comparision
/*Line 3920 - 'jquery-1.5.1-vsdoc.js' */// function. If that is the case, discard the hasDuplicate value.
/*Line 3921 - 'jquery-1.5.1-vsdoc.js' *///   Thus far that includes Google Chrome.
/*Line 3922 - 'jquery-1.5.1-vsdoc.js' */[0, 0].sort(function() {
/*Line 3923 - 'jquery-1.5.1-vsdoc.js' */	baseHasDuplicate = false;
/*Line 3924 - 'jquery-1.5.1-vsdoc.js' */	return 0;
/*Line 3925 - 'jquery-1.5.1-vsdoc.js' */});

/*Line 3927 - 'jquery-1.5.1-vsdoc.js' */var Sizzle = function( selector, context, results, seed ) {
/*Line 3928 - 'jquery-1.5.1-vsdoc.js' */	results = results || [];
/*Line 3929 - 'jquery-1.5.1-vsdoc.js' */	context = context || document;

/*Line 3931 - 'jquery-1.5.1-vsdoc.js' */	var origContext = context;

/*Line 3933 - 'jquery-1.5.1-vsdoc.js' */	if ( context.nodeType !== 1 && context.nodeType !== 9 ) {
/*Line 3934 - 'jquery-1.5.1-vsdoc.js' */		return [];
/*Line 3935 - 'jquery-1.5.1-vsdoc.js' */	}
	
/*Line 3937 - 'jquery-1.5.1-vsdoc.js' */	if ( !selector || typeof selector !== "string" ) {
/*Line 3938 - 'jquery-1.5.1-vsdoc.js' */		return results;
/*Line 3939 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 3941 - 'jquery-1.5.1-vsdoc.js' */	var m, set, checkSet, extra, ret, cur, pop, i,
/*Line 3942 - 'jquery-1.5.1-vsdoc.js' */		prune = true,
/*Line 3943 - 'jquery-1.5.1-vsdoc.js' */		contextXML = Sizzle.isXML( context ),
/*Line 3944 - 'jquery-1.5.1-vsdoc.js' */		parts = [],
/*Line 3945 - 'jquery-1.5.1-vsdoc.js' */		soFar = selector;
	
/*Line 3947 - 'jquery-1.5.1-vsdoc.js' */	// Reset the position of the chunker regexp (start from head)
/*Line 3948 - 'jquery-1.5.1-vsdoc.js' */	do {
/*Line 3949 - 'jquery-1.5.1-vsdoc.js' */		chunker.exec( "" );
/*Line 3950 - 'jquery-1.5.1-vsdoc.js' */		m = chunker.exec( soFar );

/*Line 3952 - 'jquery-1.5.1-vsdoc.js' */		if ( m ) {
/*Line 3953 - 'jquery-1.5.1-vsdoc.js' */			soFar = m[3];
		
/*Line 3955 - 'jquery-1.5.1-vsdoc.js' */			parts.push( m[1] );
		
/*Line 3957 - 'jquery-1.5.1-vsdoc.js' */			if ( m[2] ) {
/*Line 3958 - 'jquery-1.5.1-vsdoc.js' */				extra = m[3];
/*Line 3959 - 'jquery-1.5.1-vsdoc.js' */				break;
/*Line 3960 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 3961 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 3962 - 'jquery-1.5.1-vsdoc.js' */	} while ( m );

/*Line 3964 - 'jquery-1.5.1-vsdoc.js' */	if ( parts.length > 1 && origPOS.exec( selector ) ) {

/*Line 3966 - 'jquery-1.5.1-vsdoc.js' */		if ( parts.length === 2 && Expr.relative[ parts[0] ] ) {
/*Line 3967 - 'jquery-1.5.1-vsdoc.js' */			set = posProcess( parts[0] + parts[1], context );

/*Line 3969 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 3970 - 'jquery-1.5.1-vsdoc.js' */			set = Expr.relative[ parts[0] ] ?
/*Line 3971 - 'jquery-1.5.1-vsdoc.js' */				[ context ] :
/*Line 3972 - 'jquery-1.5.1-vsdoc.js' */				Sizzle( parts.shift(), context );

/*Line 3974 - 'jquery-1.5.1-vsdoc.js' */			while ( parts.length ) {
/*Line 3975 - 'jquery-1.5.1-vsdoc.js' */				selector = parts.shift();

/*Line 3977 - 'jquery-1.5.1-vsdoc.js' */				if ( Expr.relative[ selector ] ) {
/*Line 3978 - 'jquery-1.5.1-vsdoc.js' */					selector += parts.shift();
/*Line 3979 - 'jquery-1.5.1-vsdoc.js' */				}
				
/*Line 3981 - 'jquery-1.5.1-vsdoc.js' */				set = posProcess( selector, set );
/*Line 3982 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 3983 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 3985 - 'jquery-1.5.1-vsdoc.js' */	} else {
/*Line 3986 - 'jquery-1.5.1-vsdoc.js' */		// Take a shortcut and set the context if the root selector is an ID
/*Line 3987 - 'jquery-1.5.1-vsdoc.js' */		// (but not if it'll be faster if the inner selector is an ID)
/*Line 3988 - 'jquery-1.5.1-vsdoc.js' */		if ( !seed && parts.length > 1 && context.nodeType === 9 && !contextXML &&
/*Line 3989 - 'jquery-1.5.1-vsdoc.js' */				Expr.match.ID.test(parts[0]) && !Expr.match.ID.test(parts[parts.length - 1]) ) {

/*Line 3991 - 'jquery-1.5.1-vsdoc.js' */			ret = Sizzle.find( parts.shift(), context, contextXML );
/*Line 3992 - 'jquery-1.5.1-vsdoc.js' */			context = ret.expr ?
/*Line 3993 - 'jquery-1.5.1-vsdoc.js' */				Sizzle.filter( ret.expr, ret.set )[0] :
/*Line 3994 - 'jquery-1.5.1-vsdoc.js' */				ret.set[0];
/*Line 3995 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 3997 - 'jquery-1.5.1-vsdoc.js' */		if ( context ) {
/*Line 3998 - 'jquery-1.5.1-vsdoc.js' */			ret = seed ?
/*Line 3999 - 'jquery-1.5.1-vsdoc.js' */				{ expr: parts.pop(), set: makeArray(seed) } :
/*Line 4000 - 'jquery-1.5.1-vsdoc.js' */				Sizzle.find( parts.pop(), parts.length === 1 && (parts[0] === "~" || parts[0] === "+") && context.parentNode ? context.parentNode : context, contextXML );

/*Line 4002 - 'jquery-1.5.1-vsdoc.js' */			set = ret.expr ?
/*Line 4003 - 'jquery-1.5.1-vsdoc.js' */				Sizzle.filter( ret.expr, ret.set ) :
/*Line 4004 - 'jquery-1.5.1-vsdoc.js' */				ret.set;

/*Line 4006 - 'jquery-1.5.1-vsdoc.js' */			if ( parts.length > 0 ) {
/*Line 4007 - 'jquery-1.5.1-vsdoc.js' */				checkSet = makeArray( set );

/*Line 4009 - 'jquery-1.5.1-vsdoc.js' */			} else {
/*Line 4010 - 'jquery-1.5.1-vsdoc.js' */				prune = false;
/*Line 4011 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 4013 - 'jquery-1.5.1-vsdoc.js' */			while ( parts.length ) {
/*Line 4014 - 'jquery-1.5.1-vsdoc.js' */				cur = parts.pop();
/*Line 4015 - 'jquery-1.5.1-vsdoc.js' */				pop = cur;

/*Line 4017 - 'jquery-1.5.1-vsdoc.js' */				if ( !Expr.relative[ cur ] ) {
/*Line 4018 - 'jquery-1.5.1-vsdoc.js' */					cur = "";
/*Line 4019 - 'jquery-1.5.1-vsdoc.js' */				} else {
/*Line 4020 - 'jquery-1.5.1-vsdoc.js' */					pop = parts.pop();
/*Line 4021 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 4023 - 'jquery-1.5.1-vsdoc.js' */				if ( pop == null ) {
/*Line 4024 - 'jquery-1.5.1-vsdoc.js' */					pop = context;
/*Line 4025 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 4027 - 'jquery-1.5.1-vsdoc.js' */				Expr.relative[ cur ]( checkSet, pop, contextXML );
/*Line 4028 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 4030 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 4031 - 'jquery-1.5.1-vsdoc.js' */			checkSet = parts = [];
/*Line 4032 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 4033 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 4035 - 'jquery-1.5.1-vsdoc.js' */	if ( !checkSet ) {
/*Line 4036 - 'jquery-1.5.1-vsdoc.js' */		checkSet = set;
/*Line 4037 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 4039 - 'jquery-1.5.1-vsdoc.js' */	if ( !checkSet ) {
/*Line 4040 - 'jquery-1.5.1-vsdoc.js' */		Sizzle.error( cur || selector );
/*Line 4041 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 4043 - 'jquery-1.5.1-vsdoc.js' */	if ( toString.call(checkSet) === "[object Array]" ) {
/*Line 4044 - 'jquery-1.5.1-vsdoc.js' */		if ( !prune ) {
/*Line 4045 - 'jquery-1.5.1-vsdoc.js' */			results.push.apply( results, checkSet );

/*Line 4047 - 'jquery-1.5.1-vsdoc.js' */		} else if ( context && context.nodeType === 1 ) {
/*Line 4048 - 'jquery-1.5.1-vsdoc.js' */			for ( i = 0; checkSet[i] != null; i++ ) {
/*Line 4049 - 'jquery-1.5.1-vsdoc.js' */				if ( checkSet[i] && (checkSet[i] === true || checkSet[i].nodeType === 1 && Sizzle.contains(context, checkSet[i])) ) {
/*Line 4050 - 'jquery-1.5.1-vsdoc.js' */					results.push( set[i] );
/*Line 4051 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 4052 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 4054 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 4055 - 'jquery-1.5.1-vsdoc.js' */			for ( i = 0; checkSet[i] != null; i++ ) {
/*Line 4056 - 'jquery-1.5.1-vsdoc.js' */				if ( checkSet[i] && checkSet[i].nodeType === 1 ) {
/*Line 4057 - 'jquery-1.5.1-vsdoc.js' */					results.push( set[i] );
/*Line 4058 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 4059 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 4060 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 4062 - 'jquery-1.5.1-vsdoc.js' */	} else {
/*Line 4063 - 'jquery-1.5.1-vsdoc.js' */		makeArray( checkSet, results );
/*Line 4064 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 4066 - 'jquery-1.5.1-vsdoc.js' */	if ( extra ) {
/*Line 4067 - 'jquery-1.5.1-vsdoc.js' */		Sizzle( extra, origContext, results, seed );
/*Line 4068 - 'jquery-1.5.1-vsdoc.js' */		Sizzle.uniqueSort( results );
/*Line 4069 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 4071 - 'jquery-1.5.1-vsdoc.js' */	return results;
/*Line 4072 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 4074 - 'jquery-1.5.1-vsdoc.js' */Sizzle.uniqueSort = function( results ) {
/*Line 4075 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 4076 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Removes all duplicate elements from an array of elements.
/*Line 4077 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 4078 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="array" type="Array&lt;Element&gt;">The array to translate</param>
/*Line 4079 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="Array&lt;Element&gt;">The array after translation.</returns>

/*Line 4081 - 'jquery-1.5.1-vsdoc.js' */	if ( sortOrder ) {
/*Line 4082 - 'jquery-1.5.1-vsdoc.js' */		hasDuplicate = baseHasDuplicate;
/*Line 4083 - 'jquery-1.5.1-vsdoc.js' */		results.sort( sortOrder );

/*Line 4085 - 'jquery-1.5.1-vsdoc.js' */		if ( hasDuplicate ) {
/*Line 4086 - 'jquery-1.5.1-vsdoc.js' */			for ( var i = 1; i < results.length; i++ ) {
/*Line 4087 - 'jquery-1.5.1-vsdoc.js' */				if ( results[i] === results[ i - 1 ] ) {
/*Line 4088 - 'jquery-1.5.1-vsdoc.js' */					results.splice( i--, 1 );
/*Line 4089 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 4090 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 4091 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 4092 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 4094 - 'jquery-1.5.1-vsdoc.js' */	return results;
/*Line 4095 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 4097 - 'jquery-1.5.1-vsdoc.js' */Sizzle.matches = function( expr, set ) {
/*Line 4098 - 'jquery-1.5.1-vsdoc.js' */	return Sizzle( expr, null, null, set );
/*Line 4099 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 4101 - 'jquery-1.5.1-vsdoc.js' */Sizzle.matchesSelector = function( node, expr ) {
/*Line 4102 - 'jquery-1.5.1-vsdoc.js' */	return Sizzle( expr, null, null, [node] ).length > 0;
/*Line 4103 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 4105 - 'jquery-1.5.1-vsdoc.js' */Sizzle.find = function( expr, context, isXML ) {
/*Line 4106 - 'jquery-1.5.1-vsdoc.js' */	var set;

/*Line 4108 - 'jquery-1.5.1-vsdoc.js' */	if ( !expr ) {
/*Line 4109 - 'jquery-1.5.1-vsdoc.js' */		return [];
/*Line 4110 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 4112 - 'jquery-1.5.1-vsdoc.js' */	for ( var i = 0, l = Expr.order.length; i < l; i++ ) {
/*Line 4113 - 'jquery-1.5.1-vsdoc.js' */		var match,
/*Line 4114 - 'jquery-1.5.1-vsdoc.js' */			type = Expr.order[i];
		
/*Line 4116 - 'jquery-1.5.1-vsdoc.js' */		if ( (match = Expr.leftMatch[ type ].exec( expr )) ) {
/*Line 4117 - 'jquery-1.5.1-vsdoc.js' */			var left = match[1];
/*Line 4118 - 'jquery-1.5.1-vsdoc.js' */			match.splice( 1, 1 );

/*Line 4120 - 'jquery-1.5.1-vsdoc.js' */			if ( left.substr( left.length - 1 ) !== "\\" ) {
/*Line 4121 - 'jquery-1.5.1-vsdoc.js' */				match[1] = (match[1] || "").replace(/\\/g, "");
/*Line 4122 - 'jquery-1.5.1-vsdoc.js' */				set = Expr.find[ type ]( match, context, isXML );

/*Line 4124 - 'jquery-1.5.1-vsdoc.js' */				if ( set != null ) {
/*Line 4125 - 'jquery-1.5.1-vsdoc.js' */					expr = expr.replace( Expr.match[ type ], "" );
/*Line 4126 - 'jquery-1.5.1-vsdoc.js' */					break;
/*Line 4127 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 4128 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 4129 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 4130 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 4132 - 'jquery-1.5.1-vsdoc.js' */	if ( !set ) {
/*Line 4133 - 'jquery-1.5.1-vsdoc.js' */		set = context.getElementsByTagName( "*" );
/*Line 4134 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 4136 - 'jquery-1.5.1-vsdoc.js' */	return { set: set, expr: expr };
/*Line 4137 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 4139 - 'jquery-1.5.1-vsdoc.js' */Sizzle.filter = function( expr, set, inplace, not ) {
/*Line 4140 - 'jquery-1.5.1-vsdoc.js' */	var match, anyFound,
/*Line 4141 - 'jquery-1.5.1-vsdoc.js' */		old = expr,
/*Line 4142 - 'jquery-1.5.1-vsdoc.js' */		result = [],
/*Line 4143 - 'jquery-1.5.1-vsdoc.js' */		curLoop = set,
/*Line 4144 - 'jquery-1.5.1-vsdoc.js' */		isXMLFilter = set && set[0] && Sizzle.isXML( set[0] );

/*Line 4146 - 'jquery-1.5.1-vsdoc.js' */	while ( expr && set.length ) {
/*Line 4147 - 'jquery-1.5.1-vsdoc.js' */		for ( var type in Expr.filter ) {
/*Line 4148 - 'jquery-1.5.1-vsdoc.js' */			if ( (match = Expr.leftMatch[ type ].exec( expr )) != null && match[2] ) {
/*Line 4149 - 'jquery-1.5.1-vsdoc.js' */				var found, item,
/*Line 4150 - 'jquery-1.5.1-vsdoc.js' */					filter = Expr.filter[ type ],
/*Line 4151 - 'jquery-1.5.1-vsdoc.js' */					left = match[1];

/*Line 4153 - 'jquery-1.5.1-vsdoc.js' */				anyFound = false;

/*Line 4155 - 'jquery-1.5.1-vsdoc.js' */				match.splice(1,1);

/*Line 4157 - 'jquery-1.5.1-vsdoc.js' */				if ( left.substr( left.length - 1 ) === "\\" ) {
/*Line 4158 - 'jquery-1.5.1-vsdoc.js' */					continue;
/*Line 4159 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 4161 - 'jquery-1.5.1-vsdoc.js' */				if ( curLoop === result ) {
/*Line 4162 - 'jquery-1.5.1-vsdoc.js' */					result = [];
/*Line 4163 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 4165 - 'jquery-1.5.1-vsdoc.js' */				if ( Expr.preFilter[ type ] ) {
/*Line 4166 - 'jquery-1.5.1-vsdoc.js' */					match = Expr.preFilter[ type ]( match, curLoop, inplace, result, not, isXMLFilter );

/*Line 4168 - 'jquery-1.5.1-vsdoc.js' */					if ( !match ) {
/*Line 4169 - 'jquery-1.5.1-vsdoc.js' */						anyFound = found = true;

/*Line 4171 - 'jquery-1.5.1-vsdoc.js' */					} else if ( match === true ) {
/*Line 4172 - 'jquery-1.5.1-vsdoc.js' */						continue;
/*Line 4173 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 4174 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 4176 - 'jquery-1.5.1-vsdoc.js' */				if ( match ) {
/*Line 4177 - 'jquery-1.5.1-vsdoc.js' */					for ( var i = 0; (item = curLoop[i]) != null; i++ ) {
/*Line 4178 - 'jquery-1.5.1-vsdoc.js' */						if ( item ) {
/*Line 4179 - 'jquery-1.5.1-vsdoc.js' */							found = filter( item, match, i, curLoop );
/*Line 4180 - 'jquery-1.5.1-vsdoc.js' */							var pass = not ^ !!found;

/*Line 4182 - 'jquery-1.5.1-vsdoc.js' */							if ( inplace && found != null ) {
/*Line 4183 - 'jquery-1.5.1-vsdoc.js' */								if ( pass ) {
/*Line 4184 - 'jquery-1.5.1-vsdoc.js' */									anyFound = true;

/*Line 4186 - 'jquery-1.5.1-vsdoc.js' */								} else {
/*Line 4187 - 'jquery-1.5.1-vsdoc.js' */									curLoop[i] = false;
/*Line 4188 - 'jquery-1.5.1-vsdoc.js' */								}

/*Line 4190 - 'jquery-1.5.1-vsdoc.js' */							} else if ( pass ) {
/*Line 4191 - 'jquery-1.5.1-vsdoc.js' */								result.push( item );
/*Line 4192 - 'jquery-1.5.1-vsdoc.js' */								anyFound = true;
/*Line 4193 - 'jquery-1.5.1-vsdoc.js' */							}
/*Line 4194 - 'jquery-1.5.1-vsdoc.js' */						}
/*Line 4195 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 4196 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 4198 - 'jquery-1.5.1-vsdoc.js' */				if ( found !== undefined ) {
/*Line 4199 - 'jquery-1.5.1-vsdoc.js' */					if ( !inplace ) {
/*Line 4200 - 'jquery-1.5.1-vsdoc.js' */						curLoop = result;
/*Line 4201 - 'jquery-1.5.1-vsdoc.js' */					}

/*Line 4203 - 'jquery-1.5.1-vsdoc.js' */					expr = expr.replace( Expr.match[ type ], "" );

/*Line 4205 - 'jquery-1.5.1-vsdoc.js' */					if ( !anyFound ) {
/*Line 4206 - 'jquery-1.5.1-vsdoc.js' */						return [];
/*Line 4207 - 'jquery-1.5.1-vsdoc.js' */					}

/*Line 4209 - 'jquery-1.5.1-vsdoc.js' */					break;
/*Line 4210 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 4211 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 4212 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 4214 - 'jquery-1.5.1-vsdoc.js' */		// Improper expression
/*Line 4215 - 'jquery-1.5.1-vsdoc.js' */		if ( expr === old ) {
/*Line 4216 - 'jquery-1.5.1-vsdoc.js' */			if ( anyFound == null ) {
/*Line 4217 - 'jquery-1.5.1-vsdoc.js' */				Sizzle.error( expr );

/*Line 4219 - 'jquery-1.5.1-vsdoc.js' */			} else {
/*Line 4220 - 'jquery-1.5.1-vsdoc.js' */				break;
/*Line 4221 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 4222 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 4224 - 'jquery-1.5.1-vsdoc.js' */		old = expr;
/*Line 4225 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 4227 - 'jquery-1.5.1-vsdoc.js' */	return curLoop;
/*Line 4228 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 4230 - 'jquery-1.5.1-vsdoc.js' */Sizzle.error = function( msg ) {
/*Line 4231 - 'jquery-1.5.1-vsdoc.js' */	throw "Syntax error, unrecognized expression: " + msg;
/*Line 4232 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 4234 - 'jquery-1.5.1-vsdoc.js' */var Expr = Sizzle.selectors = {
/*Line 4235 - 'jquery-1.5.1-vsdoc.js' */	order: [ "ID", "NAME", "TAG" ],

/*Line 4237 - 'jquery-1.5.1-vsdoc.js' */	match: {
/*Line 4238 - 'jquery-1.5.1-vsdoc.js' */		ID: /#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
/*Line 4239 - 'jquery-1.5.1-vsdoc.js' */		CLASS: /\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
/*Line 4240 - 'jquery-1.5.1-vsdoc.js' */		NAME: /\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,
/*Line 4241 - 'jquery-1.5.1-vsdoc.js' */		ATTR: /\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(['"]*)(.*?)\3|)\s*\]/,
/*Line 4242 - 'jquery-1.5.1-vsdoc.js' */		TAG: /^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,
/*Line 4243 - 'jquery-1.5.1-vsdoc.js' */		CHILD: /:(only|nth|last|first)-child(?:\((even|odd|[\dn+\-]*)\))?/,
/*Line 4244 - 'jquery-1.5.1-vsdoc.js' */		POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,
/*Line 4245 - 'jquery-1.5.1-vsdoc.js' */		PSEUDO: /:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/
/*Line 4246 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 4248 - 'jquery-1.5.1-vsdoc.js' */	leftMatch: {},

/*Line 4250 - 'jquery-1.5.1-vsdoc.js' */	attrMap: {
/*Line 4251 - 'jquery-1.5.1-vsdoc.js' */		"class": "className",
/*Line 4252 - 'jquery-1.5.1-vsdoc.js' */		"for": "htmlFor"
/*Line 4253 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 4255 - 'jquery-1.5.1-vsdoc.js' */	attrHandle: {
/*Line 4256 - 'jquery-1.5.1-vsdoc.js' */		href: function( elem ) {
/*Line 4257 - 'jquery-1.5.1-vsdoc.js' */			return elem.getAttribute( "href" );
/*Line 4258 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 4259 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 4261 - 'jquery-1.5.1-vsdoc.js' */	relative: {
/*Line 4262 - 'jquery-1.5.1-vsdoc.js' */		"+": function(checkSet, part){
/*Line 4263 - 'jquery-1.5.1-vsdoc.js' */			var isPartStr = typeof part === "string",
/*Line 4264 - 'jquery-1.5.1-vsdoc.js' */				isTag = isPartStr && !/\W/.test( part ),
/*Line 4265 - 'jquery-1.5.1-vsdoc.js' */				isPartStrNotTag = isPartStr && !isTag;

/*Line 4267 - 'jquery-1.5.1-vsdoc.js' */			if ( isTag ) {
/*Line 4268 - 'jquery-1.5.1-vsdoc.js' */				part = part.toLowerCase();
/*Line 4269 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 4271 - 'jquery-1.5.1-vsdoc.js' */			for ( var i = 0, l = checkSet.length, elem; i < l; i++ ) {
/*Line 4272 - 'jquery-1.5.1-vsdoc.js' */				if ( (elem = checkSet[i]) ) {
/*Line 4273 - 'jquery-1.5.1-vsdoc.js' */					while ( (elem = elem.previousSibling) && elem.nodeType !== 1 ) {}

/*Line 4275 - 'jquery-1.5.1-vsdoc.js' */					checkSet[i] = isPartStrNotTag || elem && elem.nodeName.toLowerCase() === part ?
/*Line 4276 - 'jquery-1.5.1-vsdoc.js' */						elem || false :
/*Line 4277 - 'jquery-1.5.1-vsdoc.js' */						elem === part;
/*Line 4278 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 4279 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 4281 - 'jquery-1.5.1-vsdoc.js' */			if ( isPartStrNotTag ) {
/*Line 4282 - 'jquery-1.5.1-vsdoc.js' */				Sizzle.filter( part, checkSet, true );
/*Line 4283 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 4284 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4286 - 'jquery-1.5.1-vsdoc.js' */		">": function( checkSet, part ) {
/*Line 4287 - 'jquery-1.5.1-vsdoc.js' */			var elem,
/*Line 4288 - 'jquery-1.5.1-vsdoc.js' */				isPartStr = typeof part === "string",
/*Line 4289 - 'jquery-1.5.1-vsdoc.js' */				i = 0,
/*Line 4290 - 'jquery-1.5.1-vsdoc.js' */				l = checkSet.length;

/*Line 4292 - 'jquery-1.5.1-vsdoc.js' */			if ( isPartStr && !/\W/.test( part ) ) {
/*Line 4293 - 'jquery-1.5.1-vsdoc.js' */				part = part.toLowerCase();

/*Line 4295 - 'jquery-1.5.1-vsdoc.js' */				for ( ; i < l; i++ ) {
/*Line 4296 - 'jquery-1.5.1-vsdoc.js' */					elem = checkSet[i];

/*Line 4298 - 'jquery-1.5.1-vsdoc.js' */					if ( elem ) {
/*Line 4299 - 'jquery-1.5.1-vsdoc.js' */						var parent = elem.parentNode;
/*Line 4300 - 'jquery-1.5.1-vsdoc.js' */						checkSet[i] = parent.nodeName.toLowerCase() === part ? parent : false;
/*Line 4301 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 4302 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 4304 - 'jquery-1.5.1-vsdoc.js' */			} else {
/*Line 4305 - 'jquery-1.5.1-vsdoc.js' */				for ( ; i < l; i++ ) {
/*Line 4306 - 'jquery-1.5.1-vsdoc.js' */					elem = checkSet[i];

/*Line 4308 - 'jquery-1.5.1-vsdoc.js' */					if ( elem ) {
/*Line 4309 - 'jquery-1.5.1-vsdoc.js' */						checkSet[i] = isPartStr ?
/*Line 4310 - 'jquery-1.5.1-vsdoc.js' */							elem.parentNode :
/*Line 4311 - 'jquery-1.5.1-vsdoc.js' */							elem.parentNode === part;
/*Line 4312 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 4313 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 4315 - 'jquery-1.5.1-vsdoc.js' */				if ( isPartStr ) {
/*Line 4316 - 'jquery-1.5.1-vsdoc.js' */					Sizzle.filter( part, checkSet, true );
/*Line 4317 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 4318 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 4319 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4321 - 'jquery-1.5.1-vsdoc.js' */		"": function(checkSet, part, isXML){
/*Line 4322 - 'jquery-1.5.1-vsdoc.js' */			var nodeCheck,
/*Line 4323 - 'jquery-1.5.1-vsdoc.js' */				doneName = done++,
/*Line 4324 - 'jquery-1.5.1-vsdoc.js' */				checkFn = dirCheck;

/*Line 4326 - 'jquery-1.5.1-vsdoc.js' */			if ( typeof part === "string" && !/\W/.test(part) ) {
/*Line 4327 - 'jquery-1.5.1-vsdoc.js' */				part = part.toLowerCase();
/*Line 4328 - 'jquery-1.5.1-vsdoc.js' */				nodeCheck = part;
/*Line 4329 - 'jquery-1.5.1-vsdoc.js' */				checkFn = dirNodeCheck;
/*Line 4330 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 4332 - 'jquery-1.5.1-vsdoc.js' */			checkFn( "parentNode", part, doneName, checkSet, nodeCheck, isXML );
/*Line 4333 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4335 - 'jquery-1.5.1-vsdoc.js' */		"~": function( checkSet, part, isXML ) {
/*Line 4336 - 'jquery-1.5.1-vsdoc.js' */			var nodeCheck,
/*Line 4337 - 'jquery-1.5.1-vsdoc.js' */				doneName = done++,
/*Line 4338 - 'jquery-1.5.1-vsdoc.js' */				checkFn = dirCheck;

/*Line 4340 - 'jquery-1.5.1-vsdoc.js' */			if ( typeof part === "string" && !/\W/.test( part ) ) {
/*Line 4341 - 'jquery-1.5.1-vsdoc.js' */				part = part.toLowerCase();
/*Line 4342 - 'jquery-1.5.1-vsdoc.js' */				nodeCheck = part;
/*Line 4343 - 'jquery-1.5.1-vsdoc.js' */				checkFn = dirNodeCheck;
/*Line 4344 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 4346 - 'jquery-1.5.1-vsdoc.js' */			checkFn( "previousSibling", part, doneName, checkSet, nodeCheck, isXML );
/*Line 4347 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 4348 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 4350 - 'jquery-1.5.1-vsdoc.js' */	find: {
/*Line 4351 - 'jquery-1.5.1-vsdoc.js' */		ID: function( match, context, isXML ) {
/*Line 4352 - 'jquery-1.5.1-vsdoc.js' */			if ( typeof context.getElementById !== "undefined" && !isXML ) {
/*Line 4353 - 'jquery-1.5.1-vsdoc.js' */				var m = context.getElementById(match[1]);
/*Line 4354 - 'jquery-1.5.1-vsdoc.js' */				// Check parentNode to catch when Blackberry 4.6 returns
/*Line 4355 - 'jquery-1.5.1-vsdoc.js' */				// nodes that are no longer in the document #6963
/*Line 4356 - 'jquery-1.5.1-vsdoc.js' */				return m && m.parentNode ? [m] : [];
/*Line 4357 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 4358 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4360 - 'jquery-1.5.1-vsdoc.js' */		NAME: function( match, context ) {
/*Line 4361 - 'jquery-1.5.1-vsdoc.js' */			if ( typeof context.getElementsByName !== "undefined" ) {
/*Line 4362 - 'jquery-1.5.1-vsdoc.js' */				var ret = [],
/*Line 4363 - 'jquery-1.5.1-vsdoc.js' */					results = context.getElementsByName( match[1] );

/*Line 4365 - 'jquery-1.5.1-vsdoc.js' */				for ( var i = 0, l = results.length; i < l; i++ ) {
/*Line 4366 - 'jquery-1.5.1-vsdoc.js' */					if ( results[i].getAttribute("name") === match[1] ) {
/*Line 4367 - 'jquery-1.5.1-vsdoc.js' */						ret.push( results[i] );
/*Line 4368 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 4369 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 4371 - 'jquery-1.5.1-vsdoc.js' */				return ret.length === 0 ? null : ret;
/*Line 4372 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 4373 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4375 - 'jquery-1.5.1-vsdoc.js' */		TAG: function( match, context ) {
/*Line 4376 - 'jquery-1.5.1-vsdoc.js' */			return context.getElementsByTagName( match[1] );
/*Line 4377 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 4378 - 'jquery-1.5.1-vsdoc.js' */	},
/*Line 4379 - 'jquery-1.5.1-vsdoc.js' */	preFilter: {
/*Line 4380 - 'jquery-1.5.1-vsdoc.js' */		CLASS: function( match, curLoop, inplace, result, not, isXML ) {
/*Line 4381 - 'jquery-1.5.1-vsdoc.js' */			match = " " + match[1].replace(/\\/g, "") + " ";

/*Line 4383 - 'jquery-1.5.1-vsdoc.js' */			if ( isXML ) {
/*Line 4384 - 'jquery-1.5.1-vsdoc.js' */				return match;
/*Line 4385 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 4387 - 'jquery-1.5.1-vsdoc.js' */			for ( var i = 0, elem; (elem = curLoop[i]) != null; i++ ) {
/*Line 4388 - 'jquery-1.5.1-vsdoc.js' */				if ( elem ) {
/*Line 4389 - 'jquery-1.5.1-vsdoc.js' */					if ( not ^ (elem.className && (" " + elem.className + " ").replace(/[\t\n]/g, " ").indexOf(match) >= 0) ) {
/*Line 4390 - 'jquery-1.5.1-vsdoc.js' */						if ( !inplace ) {
/*Line 4391 - 'jquery-1.5.1-vsdoc.js' */							result.push( elem );
/*Line 4392 - 'jquery-1.5.1-vsdoc.js' */						}

/*Line 4394 - 'jquery-1.5.1-vsdoc.js' */					} else if ( inplace ) {
/*Line 4395 - 'jquery-1.5.1-vsdoc.js' */						curLoop[i] = false;
/*Line 4396 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 4397 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 4398 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 4400 - 'jquery-1.5.1-vsdoc.js' */			return false;
/*Line 4401 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4403 - 'jquery-1.5.1-vsdoc.js' */		ID: function( match ) {
/*Line 4404 - 'jquery-1.5.1-vsdoc.js' */			return match[1].replace(/\\/g, "");
/*Line 4405 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4407 - 'jquery-1.5.1-vsdoc.js' */		TAG: function( match, curLoop ) {
/*Line 4408 - 'jquery-1.5.1-vsdoc.js' */			return match[1].toLowerCase();
/*Line 4409 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4411 - 'jquery-1.5.1-vsdoc.js' */		CHILD: function( match ) {
/*Line 4412 - 'jquery-1.5.1-vsdoc.js' */			if ( match[1] === "nth" ) {
/*Line 4413 - 'jquery-1.5.1-vsdoc.js' */				// parse equations like 'even', 'odd', '5', '2n', '3n+2', '4n-1', '-n+6'
/*Line 4414 - 'jquery-1.5.1-vsdoc.js' */				var test = /(-?)(\d*)n((?:\+|-)?\d*)/.exec(
/*Line 4415 - 'jquery-1.5.1-vsdoc.js' */					match[2] === "even" && "2n" || match[2] === "odd" && "2n+1" ||
/*Line 4416 - 'jquery-1.5.1-vsdoc.js' */					!/\D/.test( match[2] ) && "0n+" + match[2] || match[2]);

/*Line 4418 - 'jquery-1.5.1-vsdoc.js' */				// calculate the numbers (first)n+(last) including if they are negative
/*Line 4419 - 'jquery-1.5.1-vsdoc.js' */				match[2] = (test[1] + (test[2] || 1)) - 0;
/*Line 4420 - 'jquery-1.5.1-vsdoc.js' */				match[3] = test[3] - 0;
/*Line 4421 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 4423 - 'jquery-1.5.1-vsdoc.js' */			// TODO: Move to normal caching system
/*Line 4424 - 'jquery-1.5.1-vsdoc.js' */			match[0] = done++;

/*Line 4426 - 'jquery-1.5.1-vsdoc.js' */			return match;
/*Line 4427 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4429 - 'jquery-1.5.1-vsdoc.js' */		ATTR: function( match, curLoop, inplace, result, not, isXML ) {
/*Line 4430 - 'jquery-1.5.1-vsdoc.js' */			var name = match[1].replace(/\\/g, "");
			
/*Line 4432 - 'jquery-1.5.1-vsdoc.js' */			if ( !isXML && Expr.attrMap[name] ) {
/*Line 4433 - 'jquery-1.5.1-vsdoc.js' */				match[1] = Expr.attrMap[name];
/*Line 4434 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 4436 - 'jquery-1.5.1-vsdoc.js' */			if ( match[2] === "~=" ) {
/*Line 4437 - 'jquery-1.5.1-vsdoc.js' */				match[4] = " " + match[4] + " ";
/*Line 4438 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 4440 - 'jquery-1.5.1-vsdoc.js' */			return match;
/*Line 4441 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4443 - 'jquery-1.5.1-vsdoc.js' */		PSEUDO: function( match, curLoop, inplace, result, not ) {
/*Line 4444 - 'jquery-1.5.1-vsdoc.js' */			if ( match[1] === "not" ) {
/*Line 4445 - 'jquery-1.5.1-vsdoc.js' */				// If we're dealing with a complex expression, or a simple one
/*Line 4446 - 'jquery-1.5.1-vsdoc.js' */				if ( ( chunker.exec(match[3]) || "" ).length > 1 || /^\w/.test(match[3]) ) {
/*Line 4447 - 'jquery-1.5.1-vsdoc.js' */					match[3] = Sizzle(match[3], null, null, curLoop);

/*Line 4449 - 'jquery-1.5.1-vsdoc.js' */				} else {
/*Line 4450 - 'jquery-1.5.1-vsdoc.js' */					var ret = Sizzle.filter(match[3], curLoop, inplace, true ^ not);

/*Line 4452 - 'jquery-1.5.1-vsdoc.js' */					if ( !inplace ) {
/*Line 4453 - 'jquery-1.5.1-vsdoc.js' */						result.push.apply( result, ret );
/*Line 4454 - 'jquery-1.5.1-vsdoc.js' */					}

/*Line 4456 - 'jquery-1.5.1-vsdoc.js' */					return false;
/*Line 4457 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 4459 - 'jquery-1.5.1-vsdoc.js' */			} else if ( Expr.match.POS.test( match[0] ) || Expr.match.CHILD.test( match[0] ) ) {
/*Line 4460 - 'jquery-1.5.1-vsdoc.js' */				return true;
/*Line 4461 - 'jquery-1.5.1-vsdoc.js' */			}
			
/*Line 4463 - 'jquery-1.5.1-vsdoc.js' */			return match;
/*Line 4464 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4466 - 'jquery-1.5.1-vsdoc.js' */		POS: function( match ) {
/*Line 4467 - 'jquery-1.5.1-vsdoc.js' */			match.unshift( true );

/*Line 4469 - 'jquery-1.5.1-vsdoc.js' */			return match;
/*Line 4470 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 4471 - 'jquery-1.5.1-vsdoc.js' */	},
	
/*Line 4473 - 'jquery-1.5.1-vsdoc.js' */	filters: {
/*Line 4474 - 'jquery-1.5.1-vsdoc.js' */		enabled: function( elem ) {
/*Line 4475 - 'jquery-1.5.1-vsdoc.js' */			return elem.disabled === false && elem.type !== "hidden";
/*Line 4476 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4478 - 'jquery-1.5.1-vsdoc.js' */		disabled: function( elem ) {
/*Line 4479 - 'jquery-1.5.1-vsdoc.js' */			return elem.disabled === true;
/*Line 4480 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4482 - 'jquery-1.5.1-vsdoc.js' */		checked: function( elem ) {
/*Line 4483 - 'jquery-1.5.1-vsdoc.js' */			return elem.checked === true;
/*Line 4484 - 'jquery-1.5.1-vsdoc.js' */		},
		
/*Line 4486 - 'jquery-1.5.1-vsdoc.js' */		selected: function( elem ) {
/*Line 4487 - 'jquery-1.5.1-vsdoc.js' */			// Accessing this property makes selected-by-default
/*Line 4488 - 'jquery-1.5.1-vsdoc.js' */			// options in Safari work properly
/*Line 4489 - 'jquery-1.5.1-vsdoc.js' */			elem.parentNode.selectedIndex;
			
/*Line 4491 - 'jquery-1.5.1-vsdoc.js' */			return elem.selected === true;
/*Line 4492 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4494 - 'jquery-1.5.1-vsdoc.js' */		parent: function( elem ) {
/*Line 4495 - 'jquery-1.5.1-vsdoc.js' */			return !!elem.firstChild;
/*Line 4496 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4498 - 'jquery-1.5.1-vsdoc.js' */		empty: function( elem ) {
/*Line 4499 - 'jquery-1.5.1-vsdoc.js' */			return !elem.firstChild;
/*Line 4500 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4502 - 'jquery-1.5.1-vsdoc.js' */		has: function( elem, i, match ) {
/*Line 4503 - 'jquery-1.5.1-vsdoc.js' */			///	<summary>
/*Line 4504 - 'jquery-1.5.1-vsdoc.js' */			///     &#10;Internal use only; use hasClass('class')
/*Line 4505 - 'jquery-1.5.1-vsdoc.js' */			///	</summary>
/*Line 4506 - 'jquery-1.5.1-vsdoc.js' */			///	<private />

/*Line 4508 - 'jquery-1.5.1-vsdoc.js' */			return !!Sizzle( match[3], elem ).length;
/*Line 4509 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4511 - 'jquery-1.5.1-vsdoc.js' */		header: function( elem ) {
/*Line 4512 - 'jquery-1.5.1-vsdoc.js' */			return (/h\d/i).test( elem.nodeName );
/*Line 4513 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4515 - 'jquery-1.5.1-vsdoc.js' */		text: function( elem ) {
/*Line 4516 - 'jquery-1.5.1-vsdoc.js' */			return "text" === elem.type;
/*Line 4517 - 'jquery-1.5.1-vsdoc.js' */		},
/*Line 4518 - 'jquery-1.5.1-vsdoc.js' */		radio: function( elem ) {
/*Line 4519 - 'jquery-1.5.1-vsdoc.js' */			return "radio" === elem.type;
/*Line 4520 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4522 - 'jquery-1.5.1-vsdoc.js' */		checkbox: function( elem ) {
/*Line 4523 - 'jquery-1.5.1-vsdoc.js' */			return "checkbox" === elem.type;
/*Line 4524 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4526 - 'jquery-1.5.1-vsdoc.js' */		file: function( elem ) {
/*Line 4527 - 'jquery-1.5.1-vsdoc.js' */			return "file" === elem.type;
/*Line 4528 - 'jquery-1.5.1-vsdoc.js' */		},
/*Line 4529 - 'jquery-1.5.1-vsdoc.js' */		password: function( elem ) {
/*Line 4530 - 'jquery-1.5.1-vsdoc.js' */			return "password" === elem.type;
/*Line 4531 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4533 - 'jquery-1.5.1-vsdoc.js' */		submit: function( elem ) {
/*Line 4534 - 'jquery-1.5.1-vsdoc.js' */			return "submit" === elem.type;
/*Line 4535 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4537 - 'jquery-1.5.1-vsdoc.js' */		image: function( elem ) {
/*Line 4538 - 'jquery-1.5.1-vsdoc.js' */			return "image" === elem.type;
/*Line 4539 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4541 - 'jquery-1.5.1-vsdoc.js' */		reset: function( elem ) {
/*Line 4542 - 'jquery-1.5.1-vsdoc.js' */			return "reset" === elem.type;
/*Line 4543 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4545 - 'jquery-1.5.1-vsdoc.js' */		button: function( elem ) {
/*Line 4546 - 'jquery-1.5.1-vsdoc.js' */			return "button" === elem.type || elem.nodeName.toLowerCase() === "button";
/*Line 4547 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4549 - 'jquery-1.5.1-vsdoc.js' */		input: function( elem ) {
/*Line 4550 - 'jquery-1.5.1-vsdoc.js' */			return (/input|select|textarea|button/i).test( elem.nodeName );
/*Line 4551 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 4552 - 'jquery-1.5.1-vsdoc.js' */	},
/*Line 4553 - 'jquery-1.5.1-vsdoc.js' */	setFilters: {
/*Line 4554 - 'jquery-1.5.1-vsdoc.js' */		first: function( elem, i ) {
/*Line 4555 - 'jquery-1.5.1-vsdoc.js' */			return i === 0;
/*Line 4556 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4558 - 'jquery-1.5.1-vsdoc.js' */		last: function( elem, i, match, array ) {
/*Line 4559 - 'jquery-1.5.1-vsdoc.js' */			return i === array.length - 1;
/*Line 4560 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4562 - 'jquery-1.5.1-vsdoc.js' */		even: function( elem, i ) {
/*Line 4563 - 'jquery-1.5.1-vsdoc.js' */			return i % 2 === 0;
/*Line 4564 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4566 - 'jquery-1.5.1-vsdoc.js' */		odd: function( elem, i ) {
/*Line 4567 - 'jquery-1.5.1-vsdoc.js' */			return i % 2 === 1;
/*Line 4568 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4570 - 'jquery-1.5.1-vsdoc.js' */		lt: function( elem, i, match ) {
/*Line 4571 - 'jquery-1.5.1-vsdoc.js' */			return i < match[3] - 0;
/*Line 4572 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4574 - 'jquery-1.5.1-vsdoc.js' */		gt: function( elem, i, match ) {
/*Line 4575 - 'jquery-1.5.1-vsdoc.js' */			return i > match[3] - 0;
/*Line 4576 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4578 - 'jquery-1.5.1-vsdoc.js' */		nth: function( elem, i, match ) {
/*Line 4579 - 'jquery-1.5.1-vsdoc.js' */			return match[3] - 0 === i;
/*Line 4580 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4582 - 'jquery-1.5.1-vsdoc.js' */		eq: function( elem, i, match ) {
/*Line 4583 - 'jquery-1.5.1-vsdoc.js' */			return match[3] - 0 === i;
/*Line 4584 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 4585 - 'jquery-1.5.1-vsdoc.js' */	},
/*Line 4586 - 'jquery-1.5.1-vsdoc.js' */	filter: {
/*Line 4587 - 'jquery-1.5.1-vsdoc.js' */		PSEUDO: function( elem, match, i, array ) {
/*Line 4588 - 'jquery-1.5.1-vsdoc.js' */			var name = match[1],
/*Line 4589 - 'jquery-1.5.1-vsdoc.js' */				filter = Expr.filters[ name ];

/*Line 4591 - 'jquery-1.5.1-vsdoc.js' */			if ( filter ) {
/*Line 4592 - 'jquery-1.5.1-vsdoc.js' */				return filter( elem, i, match, array );

/*Line 4594 - 'jquery-1.5.1-vsdoc.js' */			} else if ( name === "contains" ) {
/*Line 4595 - 'jquery-1.5.1-vsdoc.js' */				return (elem.textContent || elem.innerText || Sizzle.getText([ elem ]) || "").indexOf(match[3]) >= 0;

/*Line 4597 - 'jquery-1.5.1-vsdoc.js' */			} else if ( name === "not" ) {
/*Line 4598 - 'jquery-1.5.1-vsdoc.js' */				var not = match[3];

/*Line 4600 - 'jquery-1.5.1-vsdoc.js' */				for ( var j = 0, l = not.length; j < l; j++ ) {
/*Line 4601 - 'jquery-1.5.1-vsdoc.js' */					if ( not[j] === elem ) {
/*Line 4602 - 'jquery-1.5.1-vsdoc.js' */						return false;
/*Line 4603 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 4604 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 4606 - 'jquery-1.5.1-vsdoc.js' */				return true;

/*Line 4608 - 'jquery-1.5.1-vsdoc.js' */			} else {
/*Line 4609 - 'jquery-1.5.1-vsdoc.js' */				Sizzle.error( "Syntax error, unrecognized expression: " + name );
/*Line 4610 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 4611 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4613 - 'jquery-1.5.1-vsdoc.js' */		CHILD: function( elem, match ) {
/*Line 4614 - 'jquery-1.5.1-vsdoc.js' */			var type = match[1],
/*Line 4615 - 'jquery-1.5.1-vsdoc.js' */				node = elem;

/*Line 4617 - 'jquery-1.5.1-vsdoc.js' */			switch ( type ) {
/*Line 4618 - 'jquery-1.5.1-vsdoc.js' */				case "only":
/*Line 4619 - 'jquery-1.5.1-vsdoc.js' */				case "first":
/*Line 4620 - 'jquery-1.5.1-vsdoc.js' */					while ( (node = node.previousSibling) )	 {
/*Line 4621 - 'jquery-1.5.1-vsdoc.js' */						if ( node.nodeType === 1 ) { 
/*Line 4622 - 'jquery-1.5.1-vsdoc.js' */							return false; 
/*Line 4623 - 'jquery-1.5.1-vsdoc.js' */						}
/*Line 4624 - 'jquery-1.5.1-vsdoc.js' */					}

/*Line 4626 - 'jquery-1.5.1-vsdoc.js' */					if ( type === "first" ) { 
/*Line 4627 - 'jquery-1.5.1-vsdoc.js' */						return true; 
/*Line 4628 - 'jquery-1.5.1-vsdoc.js' */					}

/*Line 4630 - 'jquery-1.5.1-vsdoc.js' */					node = elem;

/*Line 4632 - 'jquery-1.5.1-vsdoc.js' */				case "last":
/*Line 4633 - 'jquery-1.5.1-vsdoc.js' */					while ( (node = node.nextSibling) )	 {
/*Line 4634 - 'jquery-1.5.1-vsdoc.js' */						if ( node.nodeType === 1 ) { 
/*Line 4635 - 'jquery-1.5.1-vsdoc.js' */							return false; 
/*Line 4636 - 'jquery-1.5.1-vsdoc.js' */						}
/*Line 4637 - 'jquery-1.5.1-vsdoc.js' */					}

/*Line 4639 - 'jquery-1.5.1-vsdoc.js' */					return true;

/*Line 4641 - 'jquery-1.5.1-vsdoc.js' */				case "nth":
/*Line 4642 - 'jquery-1.5.1-vsdoc.js' */					var first = match[2],
/*Line 4643 - 'jquery-1.5.1-vsdoc.js' */						last = match[3];

/*Line 4645 - 'jquery-1.5.1-vsdoc.js' */					if ( first === 1 && last === 0 ) {
/*Line 4646 - 'jquery-1.5.1-vsdoc.js' */						return true;
/*Line 4647 - 'jquery-1.5.1-vsdoc.js' */					}
					
/*Line 4649 - 'jquery-1.5.1-vsdoc.js' */					var doneName = match[0],
/*Line 4650 - 'jquery-1.5.1-vsdoc.js' */						parent = elem.parentNode;
	
/*Line 4652 - 'jquery-1.5.1-vsdoc.js' */					if ( parent && (parent.sizcache !== doneName || !elem.nodeIndex) ) {
/*Line 4653 - 'jquery-1.5.1-vsdoc.js' */						var count = 0;
						
/*Line 4655 - 'jquery-1.5.1-vsdoc.js' */						for ( node = parent.firstChild; node; node = node.nextSibling ) {
/*Line 4656 - 'jquery-1.5.1-vsdoc.js' */							if ( node.nodeType === 1 ) {
/*Line 4657 - 'jquery-1.5.1-vsdoc.js' */								node.nodeIndex = ++count;
/*Line 4658 - 'jquery-1.5.1-vsdoc.js' */							}
/*Line 4659 - 'jquery-1.5.1-vsdoc.js' */						} 

/*Line 4661 - 'jquery-1.5.1-vsdoc.js' */						parent.sizcache = doneName;
/*Line 4662 - 'jquery-1.5.1-vsdoc.js' */					}
					
/*Line 4664 - 'jquery-1.5.1-vsdoc.js' */					var diff = elem.nodeIndex - last;

/*Line 4666 - 'jquery-1.5.1-vsdoc.js' */					if ( first === 0 ) {
/*Line 4667 - 'jquery-1.5.1-vsdoc.js' */						return diff === 0;

/*Line 4669 - 'jquery-1.5.1-vsdoc.js' */					} else {
/*Line 4670 - 'jquery-1.5.1-vsdoc.js' */						return ( diff % first === 0 && diff / first >= 0 );
/*Line 4671 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 4672 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 4673 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4675 - 'jquery-1.5.1-vsdoc.js' */		ID: function( elem, match ) {
/*Line 4676 - 'jquery-1.5.1-vsdoc.js' */			return elem.nodeType === 1 && elem.getAttribute("id") === match;
/*Line 4677 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4679 - 'jquery-1.5.1-vsdoc.js' */		TAG: function( elem, match ) {
/*Line 4680 - 'jquery-1.5.1-vsdoc.js' */			return (match === "*" && elem.nodeType === 1) || elem.nodeName.toLowerCase() === match;
/*Line 4681 - 'jquery-1.5.1-vsdoc.js' */		},
		
/*Line 4683 - 'jquery-1.5.1-vsdoc.js' */		CLASS: function( elem, match ) {
/*Line 4684 - 'jquery-1.5.1-vsdoc.js' */			return (" " + (elem.className || elem.getAttribute("class")) + " ")
/*Line 4685 - 'jquery-1.5.1-vsdoc.js' */				.indexOf( match ) > -1;
/*Line 4686 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4688 - 'jquery-1.5.1-vsdoc.js' */		ATTR: function( elem, match ) {
/*Line 4689 - 'jquery-1.5.1-vsdoc.js' */			var name = match[1],
/*Line 4690 - 'jquery-1.5.1-vsdoc.js' */				result = Expr.attrHandle[ name ] ?
/*Line 4691 - 'jquery-1.5.1-vsdoc.js' */					Expr.attrHandle[ name ]( elem ) :
/*Line 4692 - 'jquery-1.5.1-vsdoc.js' */					elem[ name ] != null ?
/*Line 4693 - 'jquery-1.5.1-vsdoc.js' */						elem[ name ] :
/*Line 4694 - 'jquery-1.5.1-vsdoc.js' */						elem.getAttribute( name ),
/*Line 4695 - 'jquery-1.5.1-vsdoc.js' */				value = result + "",
/*Line 4696 - 'jquery-1.5.1-vsdoc.js' */				type = match[2],
/*Line 4697 - 'jquery-1.5.1-vsdoc.js' */				check = match[4];

/*Line 4699 - 'jquery-1.5.1-vsdoc.js' */			return result == null ?
/*Line 4700 - 'jquery-1.5.1-vsdoc.js' */				type === "!=" :
/*Line 4701 - 'jquery-1.5.1-vsdoc.js' */				type === "=" ?
/*Line 4702 - 'jquery-1.5.1-vsdoc.js' */				value === check :
/*Line 4703 - 'jquery-1.5.1-vsdoc.js' */				type === "*=" ?
/*Line 4704 - 'jquery-1.5.1-vsdoc.js' */				value.indexOf(check) >= 0 :
/*Line 4705 - 'jquery-1.5.1-vsdoc.js' */				type === "~=" ?
/*Line 4706 - 'jquery-1.5.1-vsdoc.js' */				(" " + value + " ").indexOf(check) >= 0 :
/*Line 4707 - 'jquery-1.5.1-vsdoc.js' */				!check ?
/*Line 4708 - 'jquery-1.5.1-vsdoc.js' */				value && result !== false :
/*Line 4709 - 'jquery-1.5.1-vsdoc.js' */				type === "!=" ?
/*Line 4710 - 'jquery-1.5.1-vsdoc.js' */				value !== check :
/*Line 4711 - 'jquery-1.5.1-vsdoc.js' */				type === "^=" ?
/*Line 4712 - 'jquery-1.5.1-vsdoc.js' */				value.indexOf(check) === 0 :
/*Line 4713 - 'jquery-1.5.1-vsdoc.js' */				type === "$=" ?
/*Line 4714 - 'jquery-1.5.1-vsdoc.js' */				value.substr(value.length - check.length) === check :
/*Line 4715 - 'jquery-1.5.1-vsdoc.js' */				type === "|=" ?
/*Line 4716 - 'jquery-1.5.1-vsdoc.js' */				value === check || value.substr(0, check.length + 1) === check + "-" :
/*Line 4717 - 'jquery-1.5.1-vsdoc.js' */				false;
/*Line 4718 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 4720 - 'jquery-1.5.1-vsdoc.js' */		POS: function( elem, match, i, array ) {
/*Line 4721 - 'jquery-1.5.1-vsdoc.js' */			var name = match[2],
/*Line 4722 - 'jquery-1.5.1-vsdoc.js' */				filter = Expr.setFilters[ name ];

/*Line 4724 - 'jquery-1.5.1-vsdoc.js' */			if ( filter ) {
/*Line 4725 - 'jquery-1.5.1-vsdoc.js' */				return filter( elem, i, match, array );
/*Line 4726 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 4727 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 4728 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 4729 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 4731 - 'jquery-1.5.1-vsdoc.js' */var origPOS = Expr.match.POS,
/*Line 4732 - 'jquery-1.5.1-vsdoc.js' */	fescape = function(all, num){
/*Line 4733 - 'jquery-1.5.1-vsdoc.js' */		return "\\" + (num - 0 + 1);
/*Line 4734 - 'jquery-1.5.1-vsdoc.js' */	};

/*Line 4736 - 'jquery-1.5.1-vsdoc.js' */for ( var type in Expr.match ) {
/*Line 4737 - 'jquery-1.5.1-vsdoc.js' */	Expr.match[ type ] = new RegExp( Expr.match[ type ].source + (/(?![^\[]*\])(?![^\(]*\))/.source) );
/*Line 4738 - 'jquery-1.5.1-vsdoc.js' */	Expr.leftMatch[ type ] = new RegExp( /(^(?:.|\r|\n)*?)/.source + Expr.match[ type ].source.replace(/\\(\d+)/g, fescape) );
/*Line 4739 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 4741 - 'jquery-1.5.1-vsdoc.js' */var makeArray = function( array, results ) {
/*Line 4742 - 'jquery-1.5.1-vsdoc.js' */	array = Array.prototype.slice.call( array, 0 );

/*Line 4744 - 'jquery-1.5.1-vsdoc.js' */	if ( results ) {
/*Line 4745 - 'jquery-1.5.1-vsdoc.js' */		results.push.apply( results, array );
/*Line 4746 - 'jquery-1.5.1-vsdoc.js' */		return results;
/*Line 4747 - 'jquery-1.5.1-vsdoc.js' */	}
	
/*Line 4749 - 'jquery-1.5.1-vsdoc.js' */	return array;
/*Line 4750 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 4752 - 'jquery-1.5.1-vsdoc.js' */// Perform a simple check to determine if the browser is capable of
/*Line 4753 - 'jquery-1.5.1-vsdoc.js' */// converting a NodeList to an array using builtin methods.
/*Line 4754 - 'jquery-1.5.1-vsdoc.js' */// Also verifies that the returned array holds DOM nodes
/*Line 4755 - 'jquery-1.5.1-vsdoc.js' */// (which is not the case in the Blackberry browser)
/*Line 4756 - 'jquery-1.5.1-vsdoc.js' */try {
/*Line 4757 - 'jquery-1.5.1-vsdoc.js' */	Array.prototype.slice.call( document.documentElement.childNodes, 0 )[0].nodeType;

/*Line 4759 - 'jquery-1.5.1-vsdoc.js' */// Provide a fallback method if it does not work
/*Line 4760 - 'jquery-1.5.1-vsdoc.js' */} catch( e ) {
/*Line 4761 - 'jquery-1.5.1-vsdoc.js' */	makeArray = function( array, results ) {
/*Line 4762 - 'jquery-1.5.1-vsdoc.js' */		var i = 0,
/*Line 4763 - 'jquery-1.5.1-vsdoc.js' */			ret = results || [];

/*Line 4765 - 'jquery-1.5.1-vsdoc.js' */		if ( toString.call(array) === "[object Array]" ) {
/*Line 4766 - 'jquery-1.5.1-vsdoc.js' */			Array.prototype.push.apply( ret, array );

/*Line 4768 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 4769 - 'jquery-1.5.1-vsdoc.js' */			if ( typeof array.length === "number" ) {
/*Line 4770 - 'jquery-1.5.1-vsdoc.js' */				for ( var l = array.length; i < l; i++ ) {
/*Line 4771 - 'jquery-1.5.1-vsdoc.js' */					ret.push( array[i] );
/*Line 4772 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 4774 - 'jquery-1.5.1-vsdoc.js' */			} else {
/*Line 4775 - 'jquery-1.5.1-vsdoc.js' */				for ( ; array[i]; i++ ) {
/*Line 4776 - 'jquery-1.5.1-vsdoc.js' */					ret.push( array[i] );
/*Line 4777 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 4778 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 4779 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 4781 - 'jquery-1.5.1-vsdoc.js' */		return ret;
/*Line 4782 - 'jquery-1.5.1-vsdoc.js' */	};
/*Line 4783 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 4785 - 'jquery-1.5.1-vsdoc.js' */var sortOrder, siblingCheck;

/*Line 4787 - 'jquery-1.5.1-vsdoc.js' */if ( document.documentElement.compareDocumentPosition ) {
/*Line 4788 - 'jquery-1.5.1-vsdoc.js' */	sortOrder = function( a, b ) {
/*Line 4789 - 'jquery-1.5.1-vsdoc.js' */		if ( a === b ) {
/*Line 4790 - 'jquery-1.5.1-vsdoc.js' */			hasDuplicate = true;
/*Line 4791 - 'jquery-1.5.1-vsdoc.js' */			return 0;
/*Line 4792 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 4794 - 'jquery-1.5.1-vsdoc.js' */		if ( !a.compareDocumentPosition || !b.compareDocumentPosition ) {
/*Line 4795 - 'jquery-1.5.1-vsdoc.js' */			return a.compareDocumentPosition ? -1 : 1;
/*Line 4796 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 4798 - 'jquery-1.5.1-vsdoc.js' */		return a.compareDocumentPosition(b) & 4 ? -1 : 1;
/*Line 4799 - 'jquery-1.5.1-vsdoc.js' */	};

/*Line 4801 - 'jquery-1.5.1-vsdoc.js' */} else {
/*Line 4802 - 'jquery-1.5.1-vsdoc.js' */	sortOrder = function( a, b ) {
/*Line 4803 - 'jquery-1.5.1-vsdoc.js' */		var al, bl,
/*Line 4804 - 'jquery-1.5.1-vsdoc.js' */			ap = [],
/*Line 4805 - 'jquery-1.5.1-vsdoc.js' */			bp = [],
/*Line 4806 - 'jquery-1.5.1-vsdoc.js' */			aup = a.parentNode,
/*Line 4807 - 'jquery-1.5.1-vsdoc.js' */			bup = b.parentNode,
/*Line 4808 - 'jquery-1.5.1-vsdoc.js' */			cur = aup;

/*Line 4810 - 'jquery-1.5.1-vsdoc.js' */		// The nodes are identical, we can exit early
/*Line 4811 - 'jquery-1.5.1-vsdoc.js' */		if ( a === b ) {
/*Line 4812 - 'jquery-1.5.1-vsdoc.js' */			hasDuplicate = true;
/*Line 4813 - 'jquery-1.5.1-vsdoc.js' */			return 0;

/*Line 4815 - 'jquery-1.5.1-vsdoc.js' */		// If the nodes are siblings (or identical) we can do a quick check
/*Line 4816 - 'jquery-1.5.1-vsdoc.js' */		} else if ( aup === bup ) {
/*Line 4817 - 'jquery-1.5.1-vsdoc.js' */			return siblingCheck( a, b );

/*Line 4819 - 'jquery-1.5.1-vsdoc.js' */		// If no parents were found then the nodes are disconnected
/*Line 4820 - 'jquery-1.5.1-vsdoc.js' */		} else if ( !aup ) {
/*Line 4821 - 'jquery-1.5.1-vsdoc.js' */			return -1;

/*Line 4823 - 'jquery-1.5.1-vsdoc.js' */		} else if ( !bup ) {
/*Line 4824 - 'jquery-1.5.1-vsdoc.js' */			return 1;
/*Line 4825 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 4827 - 'jquery-1.5.1-vsdoc.js' */		// Otherwise they're somewhere else in the tree so we need
/*Line 4828 - 'jquery-1.5.1-vsdoc.js' */		// to build up a full list of the parentNodes for comparison
/*Line 4829 - 'jquery-1.5.1-vsdoc.js' */		while ( cur ) {
/*Line 4830 - 'jquery-1.5.1-vsdoc.js' */			ap.unshift( cur );
/*Line 4831 - 'jquery-1.5.1-vsdoc.js' */			cur = cur.parentNode;
/*Line 4832 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 4834 - 'jquery-1.5.1-vsdoc.js' */		cur = bup;

/*Line 4836 - 'jquery-1.5.1-vsdoc.js' */		while ( cur ) {
/*Line 4837 - 'jquery-1.5.1-vsdoc.js' */			bp.unshift( cur );
/*Line 4838 - 'jquery-1.5.1-vsdoc.js' */			cur = cur.parentNode;
/*Line 4839 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 4841 - 'jquery-1.5.1-vsdoc.js' */		al = ap.length;
/*Line 4842 - 'jquery-1.5.1-vsdoc.js' */		bl = bp.length;

/*Line 4844 - 'jquery-1.5.1-vsdoc.js' */		// Start walking down the tree looking for a discrepancy
/*Line 4845 - 'jquery-1.5.1-vsdoc.js' */		for ( var i = 0; i < al && i < bl; i++ ) {
/*Line 4846 - 'jquery-1.5.1-vsdoc.js' */			if ( ap[i] !== bp[i] ) {
/*Line 4847 - 'jquery-1.5.1-vsdoc.js' */				return siblingCheck( ap[i], bp[i] );
/*Line 4848 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 4849 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 4851 - 'jquery-1.5.1-vsdoc.js' */		// We ended someplace up the tree so do a sibling check
/*Line 4852 - 'jquery-1.5.1-vsdoc.js' */		return i === al ?
/*Line 4853 - 'jquery-1.5.1-vsdoc.js' */			siblingCheck( a, bp[i], -1 ) :
/*Line 4854 - 'jquery-1.5.1-vsdoc.js' */			siblingCheck( ap[i], b, 1 );
/*Line 4855 - 'jquery-1.5.1-vsdoc.js' */	};

/*Line 4857 - 'jquery-1.5.1-vsdoc.js' */	siblingCheck = function( a, b, ret ) {
/*Line 4858 - 'jquery-1.5.1-vsdoc.js' */		if ( a === b ) {
/*Line 4859 - 'jquery-1.5.1-vsdoc.js' */			return ret;
/*Line 4860 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 4862 - 'jquery-1.5.1-vsdoc.js' */		var cur = a.nextSibling;

/*Line 4864 - 'jquery-1.5.1-vsdoc.js' */		while ( cur ) {
/*Line 4865 - 'jquery-1.5.1-vsdoc.js' */			if ( cur === b ) {
/*Line 4866 - 'jquery-1.5.1-vsdoc.js' */				return -1;
/*Line 4867 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 4869 - 'jquery-1.5.1-vsdoc.js' */			cur = cur.nextSibling;
/*Line 4870 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 4872 - 'jquery-1.5.1-vsdoc.js' */		return 1;
/*Line 4873 - 'jquery-1.5.1-vsdoc.js' */	};
/*Line 4874 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 4876 - 'jquery-1.5.1-vsdoc.js' */// Utility function for retreiving the text value of an array of DOM nodes
/*Line 4877 - 'jquery-1.5.1-vsdoc.js' */Sizzle.getText = function( elems ) {
/*Line 4878 - 'jquery-1.5.1-vsdoc.js' */	var ret = "", elem;

/*Line 4880 - 'jquery-1.5.1-vsdoc.js' */	for ( var i = 0; elems[i]; i++ ) {
/*Line 4881 - 'jquery-1.5.1-vsdoc.js' */		elem = elems[i];

/*Line 4883 - 'jquery-1.5.1-vsdoc.js' */		// Get the text from text nodes and CDATA nodes
/*Line 4884 - 'jquery-1.5.1-vsdoc.js' */		if ( elem.nodeType === 3 || elem.nodeType === 4 ) {
/*Line 4885 - 'jquery-1.5.1-vsdoc.js' */			ret += elem.nodeValue;

/*Line 4887 - 'jquery-1.5.1-vsdoc.js' */		// Traverse everything else, except comment nodes
/*Line 4888 - 'jquery-1.5.1-vsdoc.js' */		} else if ( elem.nodeType !== 8 ) {
/*Line 4889 - 'jquery-1.5.1-vsdoc.js' */			ret += Sizzle.getText( elem.childNodes );
/*Line 4890 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 4891 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 4893 - 'jquery-1.5.1-vsdoc.js' */	return ret;
/*Line 4894 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 4896 - 'jquery-1.5.1-vsdoc.js' */// [vsdoc] The following function has been modified for IntelliSense.
/*Line 4897 - 'jquery-1.5.1-vsdoc.js' */// Check to see if the browser returns elements by name when
/*Line 4898 - 'jquery-1.5.1-vsdoc.js' */// querying by getElementById (and provide a workaround)
/*Line 4899 - 'jquery-1.5.1-vsdoc.js' */(function(){
/*Line 4900 - 'jquery-1.5.1-vsdoc.js' */	// We're going to inject a fake input element with a specified name
/*Line 4901 - 'jquery-1.5.1-vsdoc.js' */	//	var form = document.createElement("div"),
/*Line 4902 - 'jquery-1.5.1-vsdoc.js' */	//		id = "script" + (new Date()).getTime(),
/*Line 4903 - 'jquery-1.5.1-vsdoc.js' */	//		root = document.documentElement;

/*Line 4905 - 'jquery-1.5.1-vsdoc.js' */	//	form.innerHTML = "<a name='" + id + "'/>";

/*Line 4907 - 'jquery-1.5.1-vsdoc.js' */	//	// Inject it into the root element, check its status, and remove it quickly
/*Line 4908 - 'jquery-1.5.1-vsdoc.js' */	//	root.insertBefore( form, root.firstChild );

/*Line 4910 - 'jquery-1.5.1-vsdoc.js' */	//	// The workaround has to do additional checks after a getElementById
/*Line 4911 - 'jquery-1.5.1-vsdoc.js' */	//	// Which slows things down for other browsers (hence the branching)
/*Line 4912 - 'jquery-1.5.1-vsdoc.js' */	//	if ( document.getElementById( id ) ) {
/*Line 4913 - 'jquery-1.5.1-vsdoc.js' */		Expr.find.ID = function( match, context, isXML ) {
/*Line 4914 - 'jquery-1.5.1-vsdoc.js' */			if ( typeof context.getElementById !== "undefined" && !isXML ) {
/*Line 4915 - 'jquery-1.5.1-vsdoc.js' */				var m = context.getElementById(match[1]);

/*Line 4917 - 'jquery-1.5.1-vsdoc.js' */				return m ?
/*Line 4918 - 'jquery-1.5.1-vsdoc.js' */					m.id === match[1] || typeof m.getAttributeNode !== "undefined" && m.getAttributeNode("id").nodeValue === match[1] ?
/*Line 4919 - 'jquery-1.5.1-vsdoc.js' */						[m] :
/*Line 4920 - 'jquery-1.5.1-vsdoc.js' */						undefined :
/*Line 4921 - 'jquery-1.5.1-vsdoc.js' */					[];
/*Line 4922 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 4923 - 'jquery-1.5.1-vsdoc.js' */		};

/*Line 4925 - 'jquery-1.5.1-vsdoc.js' */		Expr.filter.ID = function( elem, match ) {
/*Line 4926 - 'jquery-1.5.1-vsdoc.js' */			var node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");

/*Line 4928 - 'jquery-1.5.1-vsdoc.js' */			return elem.nodeType === 1 && node && node.nodeValue === match;
/*Line 4929 - 'jquery-1.5.1-vsdoc.js' */		};
/*Line 4930 - 'jquery-1.5.1-vsdoc.js' */	//	}

/*Line 4932 - 'jquery-1.5.1-vsdoc.js' */	//	root.removeChild( form );

/*Line 4934 - 'jquery-1.5.1-vsdoc.js' */	// release memory in IE
/*Line 4935 - 'jquery-1.5.1-vsdoc.js' */	root = form = null;
/*Line 4936 - 'jquery-1.5.1-vsdoc.js' */})();

/*Line 4938 - 'jquery-1.5.1-vsdoc.js' */// [vsdoc] The following function has been modified for IntelliSense.
/*Line 4939 - 'jquery-1.5.1-vsdoc.js' */(function(){
/*Line 4940 - 'jquery-1.5.1-vsdoc.js' */	// Check to see if the browser returns only elements
/*Line 4941 - 'jquery-1.5.1-vsdoc.js' */	// when doing getElementsByTagName("*")

/*Line 4943 - 'jquery-1.5.1-vsdoc.js' */	// Create a fake element
/*Line 4944 - 'jquery-1.5.1-vsdoc.js' */	//	var div = document.createElement("div");
/*Line 4945 - 'jquery-1.5.1-vsdoc.js' */	//	div.appendChild( document.createComment("") );

/*Line 4947 - 'jquery-1.5.1-vsdoc.js' */	// Make sure no comments are found
/*Line 4948 - 'jquery-1.5.1-vsdoc.js' */	//	if ( div.getElementsByTagName("*").length > 0 ) {
/*Line 4949 - 'jquery-1.5.1-vsdoc.js' */		Expr.find.TAG = function( match, context ) {
/*Line 4950 - 'jquery-1.5.1-vsdoc.js' */			var results = context.getElementsByTagName( match[1] );

/*Line 4952 - 'jquery-1.5.1-vsdoc.js' */			// Filter out possible comments
/*Line 4953 - 'jquery-1.5.1-vsdoc.js' */			if ( match[1] === "*" ) {
/*Line 4954 - 'jquery-1.5.1-vsdoc.js' */				var tmp = [];

/*Line 4956 - 'jquery-1.5.1-vsdoc.js' */				for ( var i = 0; results[i]; i++ ) {
/*Line 4957 - 'jquery-1.5.1-vsdoc.js' */					if ( results[i].nodeType === 1 ) {
/*Line 4958 - 'jquery-1.5.1-vsdoc.js' */						tmp.push( results[i] );
/*Line 4959 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 4960 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 4962 - 'jquery-1.5.1-vsdoc.js' */				results = tmp;
/*Line 4963 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 4965 - 'jquery-1.5.1-vsdoc.js' */			return results;
/*Line 4966 - 'jquery-1.5.1-vsdoc.js' */		};
/*Line 4967 - 'jquery-1.5.1-vsdoc.js' */	//	}

/*Line 4969 - 'jquery-1.5.1-vsdoc.js' */	// Check to see if an attribute returns normalized href attributes
/*Line 4970 - 'jquery-1.5.1-vsdoc.js' */	//	div.innerHTML = "<a href='#'></a>";

/*Line 4972 - 'jquery-1.5.1-vsdoc.js' */	//	if ( div.firstChild && typeof div.firstChild.getAttribute !== "undefined" &&
/*Line 4973 - 'jquery-1.5.1-vsdoc.js' */	//			div.firstChild.getAttribute("href") !== "#" ) {

/*Line 4975 - 'jquery-1.5.1-vsdoc.js' */	//		Expr.attrHandle.href = function( elem ) {
/*Line 4976 - 'jquery-1.5.1-vsdoc.js' */	//			return elem.getAttribute( "href", 2 );
/*Line 4977 - 'jquery-1.5.1-vsdoc.js' */	//		};
/*Line 4978 - 'jquery-1.5.1-vsdoc.js' */	//	}

/*Line 4980 - 'jquery-1.5.1-vsdoc.js' */	// release memory in IE
/*Line 4981 - 'jquery-1.5.1-vsdoc.js' */	div = null;
/*Line 4982 - 'jquery-1.5.1-vsdoc.js' */})();

/*Line 4984 - 'jquery-1.5.1-vsdoc.js' */if ( document.querySelectorAll ) {
/*Line 4985 - 'jquery-1.5.1-vsdoc.js' */	(function(){
/*Line 4986 - 'jquery-1.5.1-vsdoc.js' */		var oldSizzle = Sizzle,
/*Line 4987 - 'jquery-1.5.1-vsdoc.js' */			div = document.createElement("div"),
/*Line 4988 - 'jquery-1.5.1-vsdoc.js' */			id = "__sizzle__";

/*Line 4990 - 'jquery-1.5.1-vsdoc.js' */		div.innerHTML = "<p class='TEST'></p>";

/*Line 4992 - 'jquery-1.5.1-vsdoc.js' */		// Safari can't handle uppercase or unicode characters when
/*Line 4993 - 'jquery-1.5.1-vsdoc.js' */		// in quirks mode.
/*Line 4994 - 'jquery-1.5.1-vsdoc.js' */		if ( div.querySelectorAll && div.querySelectorAll(".TEST").length === 0 ) {
/*Line 4995 - 'jquery-1.5.1-vsdoc.js' */			return;
/*Line 4996 - 'jquery-1.5.1-vsdoc.js' */		}
	
/*Line 4998 - 'jquery-1.5.1-vsdoc.js' */		Sizzle = function( query, context, extra, seed ) {
/*Line 4999 - 'jquery-1.5.1-vsdoc.js' */			context = context || document;

/*Line 5001 - 'jquery-1.5.1-vsdoc.js' */			// Make sure that attribute selectors are quoted
/*Line 5002 - 'jquery-1.5.1-vsdoc.js' */			query = query.replace(/\=\s*([^'"\]]*)\s*\]/g, "='$1']");

/*Line 5004 - 'jquery-1.5.1-vsdoc.js' */			// Only use querySelectorAll on non-XML documents
/*Line 5005 - 'jquery-1.5.1-vsdoc.js' */			// (ID selectors don't work in non-HTML documents)
/*Line 5006 - 'jquery-1.5.1-vsdoc.js' */			if ( !seed && !Sizzle.isXML(context) ) {
/*Line 5007 - 'jquery-1.5.1-vsdoc.js' */				if ( context.nodeType === 9 ) {
/*Line 5008 - 'jquery-1.5.1-vsdoc.js' */					try {
/*Line 5009 - 'jquery-1.5.1-vsdoc.js' */						return makeArray( context.querySelectorAll(query), extra );
/*Line 5010 - 'jquery-1.5.1-vsdoc.js' */					} catch(qsaError) {}

/*Line 5012 - 'jquery-1.5.1-vsdoc.js' */				// qSA works strangely on Element-rooted queries
/*Line 5013 - 'jquery-1.5.1-vsdoc.js' */				// We can work around this by specifying an extra ID on the root
/*Line 5014 - 'jquery-1.5.1-vsdoc.js' */				// and working up from there (Thanks to Andrew Dupont for the technique)
/*Line 5015 - 'jquery-1.5.1-vsdoc.js' */				// IE 8 doesn't work on object elements
/*Line 5016 - 'jquery-1.5.1-vsdoc.js' */				} else if ( context.nodeType === 1 && context.nodeName.toLowerCase() !== "object" ) {
/*Line 5017 - 'jquery-1.5.1-vsdoc.js' */					var old = context.getAttribute( "id" ),
/*Line 5018 - 'jquery-1.5.1-vsdoc.js' */						nid = old || id;

/*Line 5020 - 'jquery-1.5.1-vsdoc.js' */					if ( !old ) {
/*Line 5021 - 'jquery-1.5.1-vsdoc.js' */						context.setAttribute( "id", nid );
/*Line 5022 - 'jquery-1.5.1-vsdoc.js' */					}

/*Line 5024 - 'jquery-1.5.1-vsdoc.js' */					try {
/*Line 5025 - 'jquery-1.5.1-vsdoc.js' */						return makeArray( context.querySelectorAll( "#" + nid + " " + query ), extra );

/*Line 5027 - 'jquery-1.5.1-vsdoc.js' */					} catch(pseudoError) {
/*Line 5028 - 'jquery-1.5.1-vsdoc.js' */					} finally {
/*Line 5029 - 'jquery-1.5.1-vsdoc.js' */						if ( !old ) {
/*Line 5030 - 'jquery-1.5.1-vsdoc.js' */							context.removeAttribute( "id" );
/*Line 5031 - 'jquery-1.5.1-vsdoc.js' */						}
/*Line 5032 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 5033 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 5034 - 'jquery-1.5.1-vsdoc.js' */			}
		
/*Line 5036 - 'jquery-1.5.1-vsdoc.js' */			return oldSizzle(query, context, extra, seed);
/*Line 5037 - 'jquery-1.5.1-vsdoc.js' */		};

/*Line 5039 - 'jquery-1.5.1-vsdoc.js' */		for ( var prop in oldSizzle ) {
/*Line 5040 - 'jquery-1.5.1-vsdoc.js' */			Sizzle[ prop ] = oldSizzle[ prop ];
/*Line 5041 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 5043 - 'jquery-1.5.1-vsdoc.js' */		// release memory in IE
/*Line 5044 - 'jquery-1.5.1-vsdoc.js' */		div = null;
/*Line 5045 - 'jquery-1.5.1-vsdoc.js' */	})();
/*Line 5046 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 5048 - 'jquery-1.5.1-vsdoc.js' */(function(){
/*Line 5049 - 'jquery-1.5.1-vsdoc.js' */	var html = document.documentElement,
/*Line 5050 - 'jquery-1.5.1-vsdoc.js' */		matches = html.matchesSelector || html.mozMatchesSelector || html.webkitMatchesSelector || html.msMatchesSelector,
/*Line 5051 - 'jquery-1.5.1-vsdoc.js' */		pseudoWorks = false;

/*Line 5053 - 'jquery-1.5.1-vsdoc.js' */	try {
/*Line 5054 - 'jquery-1.5.1-vsdoc.js' */		// This should fail with an exception
/*Line 5055 - 'jquery-1.5.1-vsdoc.js' */		// Gecko does not error, returns false instead
/*Line 5056 - 'jquery-1.5.1-vsdoc.js' */		matches.call( document.documentElement, "[test!='']:sizzle" );
	
/*Line 5058 - 'jquery-1.5.1-vsdoc.js' */	} catch( pseudoError ) {
/*Line 5059 - 'jquery-1.5.1-vsdoc.js' */		pseudoWorks = true;
/*Line 5060 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 5062 - 'jquery-1.5.1-vsdoc.js' */	if ( matches ) {
/*Line 5063 - 'jquery-1.5.1-vsdoc.js' */		Sizzle.matchesSelector = function( node, expr ) {
/*Line 5064 - 'jquery-1.5.1-vsdoc.js' */			// Make sure that attribute selectors are quoted
/*Line 5065 - 'jquery-1.5.1-vsdoc.js' */			expr = expr.replace(/\=\s*([^'"\]]*)\s*\]/g, "='$1']");

/*Line 5067 - 'jquery-1.5.1-vsdoc.js' */			if ( !Sizzle.isXML( node ) ) {
/*Line 5068 - 'jquery-1.5.1-vsdoc.js' */				try { 
/*Line 5069 - 'jquery-1.5.1-vsdoc.js' */					if ( pseudoWorks || !Expr.match.PSEUDO.test( expr ) && !/!=/.test( expr ) ) {
/*Line 5070 - 'jquery-1.5.1-vsdoc.js' */						return matches.call( node, expr );
/*Line 5071 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 5072 - 'jquery-1.5.1-vsdoc.js' */				} catch(e) {}
/*Line 5073 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 5075 - 'jquery-1.5.1-vsdoc.js' */			return Sizzle(expr, null, null, [node]).length > 0;
/*Line 5076 - 'jquery-1.5.1-vsdoc.js' */		};
/*Line 5077 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 5078 - 'jquery-1.5.1-vsdoc.js' */})();

/*Line 5080 - 'jquery-1.5.1-vsdoc.js' */(function(){
/*Line 5081 - 'jquery-1.5.1-vsdoc.js' */	var div = document.createElement("div");

/*Line 5083 - 'jquery-1.5.1-vsdoc.js' */	div.innerHTML = "<div class='test e'></div><div class='test'></div>";

/*Line 5085 - 'jquery-1.5.1-vsdoc.js' */	// Opera can't find a second classname (in 9.6)
/*Line 5086 - 'jquery-1.5.1-vsdoc.js' */	// Also, make sure that getElementsByClassName actually exists
/*Line 5087 - 'jquery-1.5.1-vsdoc.js' */	if ( !div.getElementsByClassName || div.getElementsByClassName("e").length === 0 ) {
/*Line 5088 - 'jquery-1.5.1-vsdoc.js' */		return;
/*Line 5089 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 5091 - 'jquery-1.5.1-vsdoc.js' */	// Safari caches class attributes, doesn't catch changes (in 3.2)
/*Line 5092 - 'jquery-1.5.1-vsdoc.js' */	div.lastChild.className = "e";

/*Line 5094 - 'jquery-1.5.1-vsdoc.js' */	if ( div.getElementsByClassName("e").length === 1 ) {
/*Line 5095 - 'jquery-1.5.1-vsdoc.js' */		return;
/*Line 5096 - 'jquery-1.5.1-vsdoc.js' */	}
	
/*Line 5098 - 'jquery-1.5.1-vsdoc.js' */	Expr.order.splice(1, 0, "CLASS");
/*Line 5099 - 'jquery-1.5.1-vsdoc.js' */	Expr.find.CLASS = function( match, context, isXML ) {
/*Line 5100 - 'jquery-1.5.1-vsdoc.js' */		if ( typeof context.getElementsByClassName !== "undefined" && !isXML ) {
/*Line 5101 - 'jquery-1.5.1-vsdoc.js' */			return context.getElementsByClassName(match[1]);
/*Line 5102 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 5103 - 'jquery-1.5.1-vsdoc.js' */	};

/*Line 5105 - 'jquery-1.5.1-vsdoc.js' */	// release memory in IE
/*Line 5106 - 'jquery-1.5.1-vsdoc.js' */	div = null;
/*Line 5107 - 'jquery-1.5.1-vsdoc.js' */})();

/*Line 5109 - 'jquery-1.5.1-vsdoc.js' */function dirNodeCheck( dir, cur, doneName, checkSet, nodeCheck, isXML ) {
/*Line 5110 - 'jquery-1.5.1-vsdoc.js' */	for ( var i = 0, l = checkSet.length; i < l; i++ ) {
/*Line 5111 - 'jquery-1.5.1-vsdoc.js' */		var elem = checkSet[i];

/*Line 5113 - 'jquery-1.5.1-vsdoc.js' */		if ( elem ) {
/*Line 5114 - 'jquery-1.5.1-vsdoc.js' */			var match = false;

/*Line 5116 - 'jquery-1.5.1-vsdoc.js' */			elem = elem[dir];

/*Line 5118 - 'jquery-1.5.1-vsdoc.js' */			while ( elem ) {
/*Line 5119 - 'jquery-1.5.1-vsdoc.js' */				if ( elem.sizcache === doneName ) {
/*Line 5120 - 'jquery-1.5.1-vsdoc.js' */					match = checkSet[elem.sizset];
/*Line 5121 - 'jquery-1.5.1-vsdoc.js' */					break;
/*Line 5122 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 5124 - 'jquery-1.5.1-vsdoc.js' */				if ( elem.nodeType === 1 && !isXML ){
/*Line 5125 - 'jquery-1.5.1-vsdoc.js' */					elem.sizcache = doneName;
/*Line 5126 - 'jquery-1.5.1-vsdoc.js' */					elem.sizset = i;
/*Line 5127 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 5129 - 'jquery-1.5.1-vsdoc.js' */				if ( elem.nodeName.toLowerCase() === cur ) {
/*Line 5130 - 'jquery-1.5.1-vsdoc.js' */					match = elem;
/*Line 5131 - 'jquery-1.5.1-vsdoc.js' */					break;
/*Line 5132 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 5134 - 'jquery-1.5.1-vsdoc.js' */				elem = elem[dir];
/*Line 5135 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 5137 - 'jquery-1.5.1-vsdoc.js' */			checkSet[i] = match;
/*Line 5138 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 5139 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 5140 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 5142 - 'jquery-1.5.1-vsdoc.js' */function dirCheck( dir, cur, doneName, checkSet, nodeCheck, isXML ) {
/*Line 5143 - 'jquery-1.5.1-vsdoc.js' */	for ( var i = 0, l = checkSet.length; i < l; i++ ) {
/*Line 5144 - 'jquery-1.5.1-vsdoc.js' */		var elem = checkSet[i];

/*Line 5146 - 'jquery-1.5.1-vsdoc.js' */		if ( elem ) {
/*Line 5147 - 'jquery-1.5.1-vsdoc.js' */			var match = false;
			
/*Line 5149 - 'jquery-1.5.1-vsdoc.js' */			elem = elem[dir];

/*Line 5151 - 'jquery-1.5.1-vsdoc.js' */			while ( elem ) {
/*Line 5152 - 'jquery-1.5.1-vsdoc.js' */				if ( elem.sizcache === doneName ) {
/*Line 5153 - 'jquery-1.5.1-vsdoc.js' */					match = checkSet[elem.sizset];
/*Line 5154 - 'jquery-1.5.1-vsdoc.js' */					break;
/*Line 5155 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 5157 - 'jquery-1.5.1-vsdoc.js' */				if ( elem.nodeType === 1 ) {
/*Line 5158 - 'jquery-1.5.1-vsdoc.js' */					if ( !isXML ) {
/*Line 5159 - 'jquery-1.5.1-vsdoc.js' */						elem.sizcache = doneName;
/*Line 5160 - 'jquery-1.5.1-vsdoc.js' */						elem.sizset = i;
/*Line 5161 - 'jquery-1.5.1-vsdoc.js' */					}

/*Line 5163 - 'jquery-1.5.1-vsdoc.js' */					if ( typeof cur !== "string" ) {
/*Line 5164 - 'jquery-1.5.1-vsdoc.js' */						if ( elem === cur ) {
/*Line 5165 - 'jquery-1.5.1-vsdoc.js' */							match = true;
/*Line 5166 - 'jquery-1.5.1-vsdoc.js' */							break;
/*Line 5167 - 'jquery-1.5.1-vsdoc.js' */						}

/*Line 5169 - 'jquery-1.5.1-vsdoc.js' */					} else if ( Sizzle.filter( cur, [elem] ).length > 0 ) {
/*Line 5170 - 'jquery-1.5.1-vsdoc.js' */						match = elem;
/*Line 5171 - 'jquery-1.5.1-vsdoc.js' */						break;
/*Line 5172 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 5173 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 5175 - 'jquery-1.5.1-vsdoc.js' */				elem = elem[dir];
/*Line 5176 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 5178 - 'jquery-1.5.1-vsdoc.js' */			checkSet[i] = match;
/*Line 5179 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 5180 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 5181 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 5183 - 'jquery-1.5.1-vsdoc.js' */if ( document.documentElement.contains ) {
/*Line 5184 - 'jquery-1.5.1-vsdoc.js' */	Sizzle.contains = function( a, b ) {
/*Line 5185 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 5186 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Check to see if a DOM node is within another DOM node.
/*Line 5187 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 5188 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="a" type="Object">
/*Line 5189 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;The DOM element that may contain the other element.
/*Line 5190 - 'jquery-1.5.1-vsdoc.js' */	///	</param>
/*Line 5191 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="b" type="Object">
/*Line 5192 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;The DOM node that may be contained by the other element.
/*Line 5193 - 'jquery-1.5.1-vsdoc.js' */	///	</param>
/*Line 5194 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="Boolean" />

/*Line 5196 - 'jquery-1.5.1-vsdoc.js' */		return a !== b && (a.contains ? a.contains(b) : true);
/*Line 5197 - 'jquery-1.5.1-vsdoc.js' */	};

/*Line 5199 - 'jquery-1.5.1-vsdoc.js' */} else if ( document.documentElement.compareDocumentPosition ) {
/*Line 5200 - 'jquery-1.5.1-vsdoc.js' */	Sizzle.contains = function( a, b ) {
/*Line 5201 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 5202 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Check to see if a DOM node is within another DOM node.
/*Line 5203 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 5204 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="a" type="Object">
/*Line 5205 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;The DOM element that may contain the other element.
/*Line 5206 - 'jquery-1.5.1-vsdoc.js' */	///	</param>
/*Line 5207 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="b" type="Object">
/*Line 5208 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;The DOM node that may be contained by the other element.
/*Line 5209 - 'jquery-1.5.1-vsdoc.js' */	///	</param>
/*Line 5210 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="Boolean" />

/*Line 5212 - 'jquery-1.5.1-vsdoc.js' */		return !!(a.compareDocumentPosition(b) & 16);
/*Line 5213 - 'jquery-1.5.1-vsdoc.js' */	};

/*Line 5215 - 'jquery-1.5.1-vsdoc.js' */} else {
/*Line 5216 - 'jquery-1.5.1-vsdoc.js' */	Sizzle.contains = function() {
/*Line 5217 - 'jquery-1.5.1-vsdoc.js' */		return false;
/*Line 5218 - 'jquery-1.5.1-vsdoc.js' */	};
/*Line 5219 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 5221 - 'jquery-1.5.1-vsdoc.js' */Sizzle.isXML = function( elem ) {
/*Line 5222 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 5223 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Determines if the parameter passed is an XML document.
/*Line 5224 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 5225 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="elem" type="Object">The object to test</param>
/*Line 5226 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="Boolean">True if the parameter is an XML document; otherwise false.</returns>

/*Line 5228 - 'jquery-1.5.1-vsdoc.js' */	// documentElement is verified for cases where it doesn't yet exist
/*Line 5229 - 'jquery-1.5.1-vsdoc.js' */	// (such as loading iframes in IE - #4833) 
/*Line 5230 - 'jquery-1.5.1-vsdoc.js' */	var documentElement = (elem ? elem.ownerDocument || elem : 0).documentElement;

/*Line 5232 - 'jquery-1.5.1-vsdoc.js' */	return documentElement ? documentElement.nodeName !== "HTML" : false;
/*Line 5233 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 5235 - 'jquery-1.5.1-vsdoc.js' */var posProcess = function( selector, context ) {
/*Line 5236 - 'jquery-1.5.1-vsdoc.js' */	var match,
/*Line 5237 - 'jquery-1.5.1-vsdoc.js' */		tmpSet = [],
/*Line 5238 - 'jquery-1.5.1-vsdoc.js' */		later = "",
/*Line 5239 - 'jquery-1.5.1-vsdoc.js' */		root = context.nodeType ? [context] : context;

/*Line 5241 - 'jquery-1.5.1-vsdoc.js' */	// Position selectors must be done after the filter
/*Line 5242 - 'jquery-1.5.1-vsdoc.js' */	// And so must :not(positional) so we move all PSEUDOs to the end
/*Line 5243 - 'jquery-1.5.1-vsdoc.js' */	while ( (match = Expr.match.PSEUDO.exec( selector )) ) {
/*Line 5244 - 'jquery-1.5.1-vsdoc.js' */		later += match[0];
/*Line 5245 - 'jquery-1.5.1-vsdoc.js' */		selector = selector.replace( Expr.match.PSEUDO, "" );
/*Line 5246 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 5248 - 'jquery-1.5.1-vsdoc.js' */	selector = Expr.relative[selector] ? selector + "*" : selector;

/*Line 5250 - 'jquery-1.5.1-vsdoc.js' */	for ( var i = 0, l = root.length; i < l; i++ ) {
/*Line 5251 - 'jquery-1.5.1-vsdoc.js' */		Sizzle( selector, root[i], tmpSet );
/*Line 5252 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 5254 - 'jquery-1.5.1-vsdoc.js' */	return Sizzle.filter( later, tmpSet );
/*Line 5255 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 5257 - 'jquery-1.5.1-vsdoc.js' */// EXPOSE
/*Line 5258 - 'jquery-1.5.1-vsdoc.js' */jQuery.find = Sizzle;
/*Line 5259 - 'jquery-1.5.1-vsdoc.js' */jQuery.expr = Sizzle.selectors;
/*Line 5260 - 'jquery-1.5.1-vsdoc.js' */jQuery.expr[":"] = jQuery.expr.filters;
/*Line 5261 - 'jquery-1.5.1-vsdoc.js' */jQuery.unique = Sizzle.uniqueSort;
/*Line 5262 - 'jquery-1.5.1-vsdoc.js' */jQuery.text = Sizzle.getText;
/*Line 5263 - 'jquery-1.5.1-vsdoc.js' */jQuery.isXMLDoc = Sizzle.isXML;
/*Line 5264 - 'jquery-1.5.1-vsdoc.js' */jQuery.contains = Sizzle.contains;


/*Line 5267 - 'jquery-1.5.1-vsdoc.js' */})();


/*Line 5270 - 'jquery-1.5.1-vsdoc.js' */var runtil = /Until$/,
/*Line 5271 - 'jquery-1.5.1-vsdoc.js' */	rparentsprev = /^(?:parents|prevUntil|prevAll)/,
/*Line 5272 - 'jquery-1.5.1-vsdoc.js' */	// Note: This RegExp should be improved, or likely pulled from Sizzle
/*Line 5273 - 'jquery-1.5.1-vsdoc.js' */	rmultiselector = /,/,
/*Line 5274 - 'jquery-1.5.1-vsdoc.js' */	isSimple = /^.[^:#\[\.,]*$/,
/*Line 5275 - 'jquery-1.5.1-vsdoc.js' */	slice = Array.prototype.slice,
/*Line 5276 - 'jquery-1.5.1-vsdoc.js' */	POS = jQuery.expr.match.POS;

/*Line 5278 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn.extend({
/*Line 5279 - 'jquery-1.5.1-vsdoc.js' */	find: function( selector ) {
/*Line 5280 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 5281 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Searches for all elements that match the specified expression.
/*Line 5282 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This method is a good way to find additional descendant
/*Line 5283 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;elements with which to process.
/*Line 5284 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;All searching is done using a jQuery expression. The expression can be
/*Line 5285 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;written using CSS 1-3 Selector syntax, or basic XPath.
/*Line 5286 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of DOM/Traversing
/*Line 5287 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 5288 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />
/*Line 5289 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="selector" type="String">
/*Line 5290 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;An expression to search with.
/*Line 5291 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 5292 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 5294 - 'jquery-1.5.1-vsdoc.js' */		var ret = this.pushStack( "", "find", selector ),
/*Line 5295 - 'jquery-1.5.1-vsdoc.js' */			length = 0;

/*Line 5297 - 'jquery-1.5.1-vsdoc.js' */		for ( var i = 0, l = this.length; i < l; i++ ) {
/*Line 5298 - 'jquery-1.5.1-vsdoc.js' */			length = ret.length;
/*Line 5299 - 'jquery-1.5.1-vsdoc.js' */			jQuery.find( selector, this[i], ret );

/*Line 5301 - 'jquery-1.5.1-vsdoc.js' */			if ( i > 0 ) {
/*Line 5302 - 'jquery-1.5.1-vsdoc.js' */				// Make sure that the results are unique
/*Line 5303 - 'jquery-1.5.1-vsdoc.js' */				for ( var n = length; n < ret.length; n++ ) {
/*Line 5304 - 'jquery-1.5.1-vsdoc.js' */					for ( var r = 0; r < length; r++ ) {
/*Line 5305 - 'jquery-1.5.1-vsdoc.js' */						if ( ret[r] === ret[n] ) {
/*Line 5306 - 'jquery-1.5.1-vsdoc.js' */							ret.splice(n--, 1);
/*Line 5307 - 'jquery-1.5.1-vsdoc.js' */							break;
/*Line 5308 - 'jquery-1.5.1-vsdoc.js' */						}
/*Line 5309 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 5310 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 5311 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 5312 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 5314 - 'jquery-1.5.1-vsdoc.js' */		return ret;
/*Line 5315 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 5317 - 'jquery-1.5.1-vsdoc.js' */	has: function( target ) {
/*Line 5318 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 5319 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Reduce the set of matched elements to those that have a descendant that matches the
/*Line 5320 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;selector or DOM element.
/*Line 5321 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 5322 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="target" type="String">
/*Line 5323 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;A string containing a selector expression to match elements against.
/*Line 5324 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 5325 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 5327 - 'jquery-1.5.1-vsdoc.js' */		var targets = jQuery( target );
/*Line 5328 - 'jquery-1.5.1-vsdoc.js' */		return this.filter(function() {
/*Line 5329 - 'jquery-1.5.1-vsdoc.js' */			for ( var i = 0, l = targets.length; i < l; i++ ) {
/*Line 5330 - 'jquery-1.5.1-vsdoc.js' */				if ( jQuery.contains( this, targets[i] ) ) {
/*Line 5331 - 'jquery-1.5.1-vsdoc.js' */					return true;
/*Line 5332 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 5333 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 5334 - 'jquery-1.5.1-vsdoc.js' */		});
/*Line 5335 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 5337 - 'jquery-1.5.1-vsdoc.js' */	not: function( selector ) {
/*Line 5338 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 5339 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Removes any elements inside the array of elements from the set
/*Line 5340 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;of matched elements. This method is used to remove one or more
/*Line 5341 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;elements from a jQuery object.
/*Line 5342 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of DOM/Traversing
/*Line 5343 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 5344 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="selector" type="jQuery">
/*Line 5345 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;A set of elements to remove from the jQuery set of matched elements.
/*Line 5346 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 5347 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 5349 - 'jquery-1.5.1-vsdoc.js' */		return this.pushStack( winnow(this, selector, false), "not", selector);
/*Line 5350 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 5352 - 'jquery-1.5.1-vsdoc.js' */	filter: function( selector ) {
/*Line 5353 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 5354 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Removes all elements from the set of matched elements that do not
/*Line 5355 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;pass the specified filter. This method is used to narrow down
/*Line 5356 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;the results of a search.
/*Line 5357 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;})
/*Line 5358 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of DOM/Traversing
/*Line 5359 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 5360 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />
/*Line 5361 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="selector" type="Function">
/*Line 5362 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;A function to use for filtering
/*Line 5363 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 5364 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 5366 - 'jquery-1.5.1-vsdoc.js' */		return this.pushStack( winnow(this, selector, true), "filter", selector );
/*Line 5367 - 'jquery-1.5.1-vsdoc.js' */	},
	
/*Line 5369 - 'jquery-1.5.1-vsdoc.js' */	is: function( selector ) {
/*Line 5370 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 5371 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Checks the current selection against an expression and returns true,
/*Line 5372 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;if at least one element of the selection fits the given expression.
/*Line 5373 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Does return false, if no element fits or the expression is not valid.
/*Line 5374 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;filter(String) is used internally, therefore all rules that apply there
/*Line 5375 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;apply here, too.
/*Line 5376 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of DOM/Traversing
/*Line 5377 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 5378 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="Boolean" />
/*Line 5379 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="expr" type="String">
/*Line 5380 - 'jquery-1.5.1-vsdoc.js' */		///     &#10; The expression with which to filter
/*Line 5381 - 'jquery-1.5.1-vsdoc.js' */		///	</param>

/*Line 5383 - 'jquery-1.5.1-vsdoc.js' */		return !!selector && jQuery.filter( selector, this ).length > 0;
/*Line 5384 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 5386 - 'jquery-1.5.1-vsdoc.js' */	closest: function( selectors, context ) {
/*Line 5387 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 5388 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Get a set of elements containing the closest parent element that matches the specified selector, the starting element included.
/*Line 5389 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 5390 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="selectors" type="String">
/*Line 5391 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;A string containing a selector expression to match elements against.
/*Line 5392 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 5393 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="context" type="Element">
/*Line 5394 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;A DOM element within which a matching element may be found. If no context is passed
/*Line 5395 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;in then the context of the jQuery set will be used instead.
/*Line 5396 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 5397 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 5399 - 'jquery-1.5.1-vsdoc.js' */		var ret = [], i, l, cur = this[0];

/*Line 5401 - 'jquery-1.5.1-vsdoc.js' */		if ( jQuery.isArray( selectors ) ) {
/*Line 5402 - 'jquery-1.5.1-vsdoc.js' */			var match, selector,
/*Line 5403 - 'jquery-1.5.1-vsdoc.js' */				matches = {},
/*Line 5404 - 'jquery-1.5.1-vsdoc.js' */				level = 1;

/*Line 5406 - 'jquery-1.5.1-vsdoc.js' */			if ( cur && selectors.length ) {
/*Line 5407 - 'jquery-1.5.1-vsdoc.js' */				for ( i = 0, l = selectors.length; i < l; i++ ) {
/*Line 5408 - 'jquery-1.5.1-vsdoc.js' */					selector = selectors[i];

/*Line 5410 - 'jquery-1.5.1-vsdoc.js' */					if ( !matches[selector] ) {
/*Line 5411 - 'jquery-1.5.1-vsdoc.js' */						matches[selector] = jQuery.expr.match.POS.test( selector ) ? 
/*Line 5412 - 'jquery-1.5.1-vsdoc.js' */							jQuery( selector, context || this.context ) :
/*Line 5413 - 'jquery-1.5.1-vsdoc.js' */							selector;
/*Line 5414 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 5415 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 5417 - 'jquery-1.5.1-vsdoc.js' */				while ( cur && cur.ownerDocument && cur !== context ) {
/*Line 5418 - 'jquery-1.5.1-vsdoc.js' */					for ( selector in matches ) {
/*Line 5419 - 'jquery-1.5.1-vsdoc.js' */						match = matches[selector];

/*Line 5421 - 'jquery-1.5.1-vsdoc.js' */						if ( match.jquery ? match.index(cur) > -1 : jQuery(cur).is(match) ) {
/*Line 5422 - 'jquery-1.5.1-vsdoc.js' */							ret.push({ selector: selector, elem: cur, level: level });
/*Line 5423 - 'jquery-1.5.1-vsdoc.js' */						}
/*Line 5424 - 'jquery-1.5.1-vsdoc.js' */					}

/*Line 5426 - 'jquery-1.5.1-vsdoc.js' */					cur = cur.parentNode;
/*Line 5427 - 'jquery-1.5.1-vsdoc.js' */					level++;
/*Line 5428 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 5429 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 5431 - 'jquery-1.5.1-vsdoc.js' */			return ret;
/*Line 5432 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 5434 - 'jquery-1.5.1-vsdoc.js' */		var pos = POS.test( selectors ) ? 
/*Line 5435 - 'jquery-1.5.1-vsdoc.js' */			jQuery( selectors, context || this.context ) : null;

/*Line 5437 - 'jquery-1.5.1-vsdoc.js' */		for ( i = 0, l = this.length; i < l; i++ ) {
/*Line 5438 - 'jquery-1.5.1-vsdoc.js' */			cur = this[i];

/*Line 5440 - 'jquery-1.5.1-vsdoc.js' */			while ( cur ) {
/*Line 5441 - 'jquery-1.5.1-vsdoc.js' */				if ( pos ? pos.index(cur) > -1 : jQuery.find.matchesSelector(cur, selectors) ) {
/*Line 5442 - 'jquery-1.5.1-vsdoc.js' */					ret.push( cur );
/*Line 5443 - 'jquery-1.5.1-vsdoc.js' */					break;

/*Line 5445 - 'jquery-1.5.1-vsdoc.js' */				} else {
/*Line 5446 - 'jquery-1.5.1-vsdoc.js' */					cur = cur.parentNode;
/*Line 5447 - 'jquery-1.5.1-vsdoc.js' */					if ( !cur || !cur.ownerDocument || cur === context ) {
/*Line 5448 - 'jquery-1.5.1-vsdoc.js' */						break;
/*Line 5449 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 5450 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 5451 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 5452 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 5454 - 'jquery-1.5.1-vsdoc.js' */		ret = ret.length > 1 ? jQuery.unique(ret) : ret;
		
/*Line 5456 - 'jquery-1.5.1-vsdoc.js' */		return this.pushStack( ret, "closest", selectors );
/*Line 5457 - 'jquery-1.5.1-vsdoc.js' */	},
	
/*Line 5459 - 'jquery-1.5.1-vsdoc.js' */	// Determine the position of an element within
/*Line 5460 - 'jquery-1.5.1-vsdoc.js' */	// the matched set of elements
/*Line 5461 - 'jquery-1.5.1-vsdoc.js' */	index: function( elem ) {
/*Line 5462 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 5463 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Searches every matched element for the object and returns
/*Line 5464 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;the index of the element, if found, starting with zero. 
/*Line 5465 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Returns -1 if the object wasn't found.
/*Line 5466 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of Core
/*Line 5467 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 5468 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="Number" />
/*Line 5469 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="elem" type="Element">
/*Line 5470 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Object to search for
/*Line 5471 - 'jquery-1.5.1-vsdoc.js' */		///	</param>

/*Line 5473 - 'jquery-1.5.1-vsdoc.js' */		if ( !elem || typeof elem === "string" ) {
/*Line 5474 - 'jquery-1.5.1-vsdoc.js' */			return jQuery.inArray( this[0],
/*Line 5475 - 'jquery-1.5.1-vsdoc.js' */				// If it receives a string, the selector is used
/*Line 5476 - 'jquery-1.5.1-vsdoc.js' */				// If it receives nothing, the siblings are used
/*Line 5477 - 'jquery-1.5.1-vsdoc.js' */				elem ? jQuery( elem ) : this.parent().children() );
/*Line 5478 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 5479 - 'jquery-1.5.1-vsdoc.js' */		// Locate the position of the desired element
/*Line 5480 - 'jquery-1.5.1-vsdoc.js' */		return jQuery.inArray(
/*Line 5481 - 'jquery-1.5.1-vsdoc.js' */			// If it receives a jQuery object, the first element is used
/*Line 5482 - 'jquery-1.5.1-vsdoc.js' */			elem.jquery ? elem[0] : elem, this );
/*Line 5483 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 5485 - 'jquery-1.5.1-vsdoc.js' */	add: function( selector, context ) {
/*Line 5486 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 5487 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Adds one or more Elements to the set of matched elements.
/*Line 5488 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of DOM/Traversing
/*Line 5489 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 5490 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="selector" type="String">
/*Line 5491 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;A string containing a selector expression to match additional elements against.
/*Line 5492 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 5493 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="context" type="Element">
/*Line 5494 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Add some elements rooted against the specified context.
/*Line 5495 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 5496 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 5498 - 'jquery-1.5.1-vsdoc.js' */		var set = typeof selector === "string" ?
/*Line 5499 - 'jquery-1.5.1-vsdoc.js' */				jQuery( selector, context || this.context ) :
/*Line 5500 - 'jquery-1.5.1-vsdoc.js' */				jQuery.makeArray( selector ),
/*Line 5501 - 'jquery-1.5.1-vsdoc.js' */			all = jQuery.merge( this.get(), set );

/*Line 5503 - 'jquery-1.5.1-vsdoc.js' */		return this.pushStack( isDisconnected( set[0] ) || isDisconnected( all[0] ) ?
/*Line 5504 - 'jquery-1.5.1-vsdoc.js' */			all :
/*Line 5505 - 'jquery-1.5.1-vsdoc.js' */			jQuery.unique( all ) );
/*Line 5506 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 5508 - 'jquery-1.5.1-vsdoc.js' */	andSelf: function() {
/*Line 5509 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 5510 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Adds the previous selection to the current selection.
/*Line 5511 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 5512 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 5514 - 'jquery-1.5.1-vsdoc.js' */		return this.add( this.prevObject );
/*Line 5515 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 5516 - 'jquery-1.5.1-vsdoc.js' */});

/*Line 5518 - 'jquery-1.5.1-vsdoc.js' */// A painfully simple check to see if an element is disconnected
/*Line 5519 - 'jquery-1.5.1-vsdoc.js' */// from a document (should be improved, where feasible).
/*Line 5520 - 'jquery-1.5.1-vsdoc.js' */function isDisconnected( node ) {
/*Line 5521 - 'jquery-1.5.1-vsdoc.js' */	return !node || !node.parentNode || node.parentNode.nodeType === 11;
/*Line 5522 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 5524 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn.parents = function (until, selector) {
/*Line 5525 - 'jquery-1.5.1-vsdoc.js' */    /// <summary>
/*Line 5526 - 'jquery-1.5.1-vsdoc.js' */    ///     Get the ancestors of each element in the current set of matched elements, optionally filtered by a selector.
/*Line 5527 - 'jquery-1.5.1-vsdoc.js' */    /// </summary>
/*Line 5528 - 'jquery-1.5.1-vsdoc.js' */    /// <param name="until" type="String">
/*Line 5529 - 'jquery-1.5.1-vsdoc.js' */    ///     A string containing a selector expression to match elements against.
/*Line 5530 - 'jquery-1.5.1-vsdoc.js' */    /// </param>
/*Line 5531 - 'jquery-1.5.1-vsdoc.js' */    /// <returns type="jQuery" />
/*Line 5532 - 'jquery-1.5.1-vsdoc.js' */    return jQuery.dir(elem, "parentNode");
/*Line 5533 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 5535 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn.parentsUntil = function (until, selector) {
/*Line 5536 - 'jquery-1.5.1-vsdoc.js' */    /// <summary>
/*Line 5537 - 'jquery-1.5.1-vsdoc.js' */    ///     Get the ancestors of each element in the current set of matched elements, up to but not including the element matched by the selector.
/*Line 5538 - 'jquery-1.5.1-vsdoc.js' */    /// </summary>
/*Line 5539 - 'jquery-1.5.1-vsdoc.js' */    /// <param name="until" type="String">
/*Line 5540 - 'jquery-1.5.1-vsdoc.js' */    ///     A string containing a selector expression to indicate where to stop matching ancestor elements.
/*Line 5541 - 'jquery-1.5.1-vsdoc.js' */    /// </param>
/*Line 5542 - 'jquery-1.5.1-vsdoc.js' */    /// <returns type="jQuery" />
/*Line 5543 - 'jquery-1.5.1-vsdoc.js' */    return jQuery.dir(elem, "parentNode", until);
/*Line 5544 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 5546 - 'jquery-1.5.1-vsdoc.js' */jQuery.each({
/*Line 5547 - 'jquery-1.5.1-vsdoc.js' */	parent: function( elem ) {
/*Line 5548 - 'jquery-1.5.1-vsdoc.js' */		var parent = elem.parentNode;
/*Line 5549 - 'jquery-1.5.1-vsdoc.js' */		return parent && parent.nodeType !== 11 ? parent : null;
/*Line 5550 - 'jquery-1.5.1-vsdoc.js' */	},
/*Line 5551 - 'jquery-1.5.1-vsdoc.js' */    next: function( elem ) {
/*Line 5552 - 'jquery-1.5.1-vsdoc.js' */		return jQuery.nth( elem, 2, "nextSibling" );
/*Line 5553 - 'jquery-1.5.1-vsdoc.js' */	},
/*Line 5554 - 'jquery-1.5.1-vsdoc.js' */	prev: function( elem ) {
/*Line 5555 - 'jquery-1.5.1-vsdoc.js' */		return jQuery.nth( elem, 2, "previousSibling" );
/*Line 5556 - 'jquery-1.5.1-vsdoc.js' */	},
/*Line 5557 - 'jquery-1.5.1-vsdoc.js' */	nextAll: function( elem ) {
/*Line 5558 - 'jquery-1.5.1-vsdoc.js' */		return jQuery.dir( elem, "nextSibling" );
/*Line 5559 - 'jquery-1.5.1-vsdoc.js' */	},
/*Line 5560 - 'jquery-1.5.1-vsdoc.js' */	prevAll: function( elem ) {
/*Line 5561 - 'jquery-1.5.1-vsdoc.js' */		return jQuery.dir( elem, "previousSibling" );
/*Line 5562 - 'jquery-1.5.1-vsdoc.js' */	},
/*Line 5563 - 'jquery-1.5.1-vsdoc.js' */	nextUntil: function( elem, i, until ) {
/*Line 5564 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 5565 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Get all following siblings of each element up to but not including the element matched
/*Line 5566 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;by the selector.
/*Line 5567 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 5568 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="until" type="String">
/*Line 5569 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;A string containing a selector expression to indicate where to stop matching following
/*Line 5570 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;sibling elements.
/*Line 5571 - 'jquery-1.5.1-vsdoc.js' */	///	</param>
/*Line 5572 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 5574 - 'jquery-1.5.1-vsdoc.js' */		return jQuery.dir( elem, "nextSibling", until );
/*Line 5575 - 'jquery-1.5.1-vsdoc.js' */	},
/*Line 5576 - 'jquery-1.5.1-vsdoc.js' */	prevUntil: function( elem, i, until ) {
/*Line 5577 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 5578 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Get all preceding siblings of each element up to but not including the element matched
/*Line 5579 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;by the selector.
/*Line 5580 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 5581 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="until" type="String">
/*Line 5582 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;A string containing a selector expression to indicate where to stop matching preceding
/*Line 5583 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;sibling elements.
/*Line 5584 - 'jquery-1.5.1-vsdoc.js' */	///	</param>
/*Line 5585 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 5587 - 'jquery-1.5.1-vsdoc.js' */		return jQuery.dir( elem, "previousSibling", until );
/*Line 5588 - 'jquery-1.5.1-vsdoc.js' */	},
/*Line 5589 - 'jquery-1.5.1-vsdoc.js' */	siblings: function( elem ) {
/*Line 5590 - 'jquery-1.5.1-vsdoc.js' */		return jQuery.sibling( elem.parentNode.firstChild, elem );
/*Line 5591 - 'jquery-1.5.1-vsdoc.js' */	},
/*Line 5592 - 'jquery-1.5.1-vsdoc.js' */	children: function( elem ) {
/*Line 5593 - 'jquery-1.5.1-vsdoc.js' */		return jQuery.sibling( elem.firstChild );
/*Line 5594 - 'jquery-1.5.1-vsdoc.js' */	},
/*Line 5595 - 'jquery-1.5.1-vsdoc.js' */	contents: function( elem ) {
/*Line 5596 - 'jquery-1.5.1-vsdoc.js' */		return jQuery.nodeName( elem, "iframe" ) ?
/*Line 5597 - 'jquery-1.5.1-vsdoc.js' */			elem.contentDocument || elem.contentWindow.document :
/*Line 5598 - 'jquery-1.5.1-vsdoc.js' */			jQuery.makeArray( elem.childNodes );
/*Line 5599 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 5600 - 'jquery-1.5.1-vsdoc.js' */}, function( name, fn ) {
/*Line 5601 - 'jquery-1.5.1-vsdoc.js' */	jQuery.fn[ name ] = function( until, selector ) {
/*Line 5602 - 'jquery-1.5.1-vsdoc.js' */		var ret = jQuery.map( this, fn, until );
		
/*Line 5604 - 'jquery-1.5.1-vsdoc.js' */		if ( !runtil.test( name ) ) {
/*Line 5605 - 'jquery-1.5.1-vsdoc.js' */			selector = until;
/*Line 5606 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 5608 - 'jquery-1.5.1-vsdoc.js' */		if ( selector && typeof selector === "string" ) {
/*Line 5609 - 'jquery-1.5.1-vsdoc.js' */			ret = jQuery.filter( selector, ret );
/*Line 5610 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 5612 - 'jquery-1.5.1-vsdoc.js' */		ret = this.length > 1 ? jQuery.unique( ret ) : ret;

/*Line 5614 - 'jquery-1.5.1-vsdoc.js' */		if ( (this.length > 1 || rmultiselector.test( selector )) && rparentsprev.test( name ) ) {
/*Line 5615 - 'jquery-1.5.1-vsdoc.js' */			ret = ret.reverse();
/*Line 5616 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 5618 - 'jquery-1.5.1-vsdoc.js' */		return this.pushStack( ret, name, slice.call(arguments).join(",") );
/*Line 5619 - 'jquery-1.5.1-vsdoc.js' */	};
/*Line 5620 - 'jquery-1.5.1-vsdoc.js' */});

/*Line 5622 - 'jquery-1.5.1-vsdoc.js' */jQuery.extend({
/*Line 5623 - 'jquery-1.5.1-vsdoc.js' */	filter: function( expr, elems, not ) {
/*Line 5624 - 'jquery-1.5.1-vsdoc.js' */		if ( not ) {
/*Line 5625 - 'jquery-1.5.1-vsdoc.js' */			expr = ":not(" + expr + ")";
/*Line 5626 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 5628 - 'jquery-1.5.1-vsdoc.js' */		return elems.length === 1 ?
/*Line 5629 - 'jquery-1.5.1-vsdoc.js' */			jQuery.find.matchesSelector(elems[0], expr) ? [ elems[0] ] : [] :
/*Line 5630 - 'jquery-1.5.1-vsdoc.js' */			jQuery.find.matches(expr, elems);
/*Line 5631 - 'jquery-1.5.1-vsdoc.js' */	},
	
/*Line 5633 - 'jquery-1.5.1-vsdoc.js' */	dir: function( elem, dir, until ) {
/*Line 5634 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 5635 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This member is internal only.
/*Line 5636 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 5637 - 'jquery-1.5.1-vsdoc.js' */		///	<private />

/*Line 5639 - 'jquery-1.5.1-vsdoc.js' */		var matched = [],
/*Line 5640 - 'jquery-1.5.1-vsdoc.js' */			cur = elem[ dir ];

/*Line 5642 - 'jquery-1.5.1-vsdoc.js' */		while ( cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQuery( cur ).is( until )) ) {
/*Line 5643 - 'jquery-1.5.1-vsdoc.js' */			if ( cur.nodeType === 1 ) {
/*Line 5644 - 'jquery-1.5.1-vsdoc.js' */				matched.push( cur );
/*Line 5645 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 5646 - 'jquery-1.5.1-vsdoc.js' */			cur = cur[dir];
/*Line 5647 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 5648 - 'jquery-1.5.1-vsdoc.js' */		return matched;
/*Line 5649 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 5651 - 'jquery-1.5.1-vsdoc.js' */	nth: function( cur, result, dir, elem ) {
/*Line 5652 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 5653 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This member is internal only.
/*Line 5654 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 5655 - 'jquery-1.5.1-vsdoc.js' */		///	<private />

/*Line 5657 - 'jquery-1.5.1-vsdoc.js' */		result = result || 1;
/*Line 5658 - 'jquery-1.5.1-vsdoc.js' */		var num = 0;

/*Line 5660 - 'jquery-1.5.1-vsdoc.js' */		for ( ; cur; cur = cur[dir] ) {
/*Line 5661 - 'jquery-1.5.1-vsdoc.js' */			if ( cur.nodeType === 1 && ++num === result ) {
/*Line 5662 - 'jquery-1.5.1-vsdoc.js' */				break;
/*Line 5663 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 5664 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 5666 - 'jquery-1.5.1-vsdoc.js' */		return cur;
/*Line 5667 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 5669 - 'jquery-1.5.1-vsdoc.js' */	sibling: function( n, elem ) {
/*Line 5670 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 5671 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This member is internal only.
/*Line 5672 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 5673 - 'jquery-1.5.1-vsdoc.js' */		///	<private />

/*Line 5675 - 'jquery-1.5.1-vsdoc.js' */		var r = [];

/*Line 5677 - 'jquery-1.5.1-vsdoc.js' */		for ( ; n; n = n.nextSibling ) {
/*Line 5678 - 'jquery-1.5.1-vsdoc.js' */			if ( n.nodeType === 1 && n !== elem ) {
/*Line 5679 - 'jquery-1.5.1-vsdoc.js' */				r.push( n );
/*Line 5680 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 5681 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 5683 - 'jquery-1.5.1-vsdoc.js' */		return r;
/*Line 5684 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 5685 - 'jquery-1.5.1-vsdoc.js' */});

/*Line 5687 - 'jquery-1.5.1-vsdoc.js' */// Implement the identical functionality for filter and not
/*Line 5688 - 'jquery-1.5.1-vsdoc.js' */function winnow( elements, qualifier, keep ) {
/*Line 5689 - 'jquery-1.5.1-vsdoc.js' */	if ( jQuery.isFunction( qualifier ) ) {
/*Line 5690 - 'jquery-1.5.1-vsdoc.js' */		return jQuery.grep(elements, function( elem, i ) {
/*Line 5691 - 'jquery-1.5.1-vsdoc.js' */			var retVal = !!qualifier.call( elem, i, elem );
/*Line 5692 - 'jquery-1.5.1-vsdoc.js' */			return retVal === keep;
/*Line 5693 - 'jquery-1.5.1-vsdoc.js' */		});

/*Line 5695 - 'jquery-1.5.1-vsdoc.js' */	} else if ( qualifier.nodeType ) {
/*Line 5696 - 'jquery-1.5.1-vsdoc.js' */		return jQuery.grep(elements, function( elem, i ) {
/*Line 5697 - 'jquery-1.5.1-vsdoc.js' */			return (elem === qualifier) === keep;
/*Line 5698 - 'jquery-1.5.1-vsdoc.js' */		});

/*Line 5700 - 'jquery-1.5.1-vsdoc.js' */	} else if ( typeof qualifier === "string" ) {
/*Line 5701 - 'jquery-1.5.1-vsdoc.js' */		var filtered = jQuery.grep(elements, function( elem ) {
/*Line 5702 - 'jquery-1.5.1-vsdoc.js' */			return elem.nodeType === 1;
/*Line 5703 - 'jquery-1.5.1-vsdoc.js' */		});

/*Line 5705 - 'jquery-1.5.1-vsdoc.js' */		if ( isSimple.test( qualifier ) ) {
/*Line 5706 - 'jquery-1.5.1-vsdoc.js' */			return jQuery.filter(qualifier, filtered, !keep);
/*Line 5707 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 5708 - 'jquery-1.5.1-vsdoc.js' */			qualifier = jQuery.filter( qualifier, filtered );
/*Line 5709 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 5710 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 5712 - 'jquery-1.5.1-vsdoc.js' */	return jQuery.grep(elements, function( elem, i ) {
/*Line 5713 - 'jquery-1.5.1-vsdoc.js' */		return (jQuery.inArray( elem, qualifier ) >= 0) === keep;
/*Line 5714 - 'jquery-1.5.1-vsdoc.js' */	});
/*Line 5715 - 'jquery-1.5.1-vsdoc.js' */}




/*Line 5720 - 'jquery-1.5.1-vsdoc.js' */var rinlinejQuery = / jQuery\d+="(?:\d+|null)"/g,
/*Line 5721 - 'jquery-1.5.1-vsdoc.js' */	rleadingWhitespace = /^\s+/,
/*Line 5722 - 'jquery-1.5.1-vsdoc.js' */	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,
/*Line 5723 - 'jquery-1.5.1-vsdoc.js' */	rtagName = /<([\w:]+)/,
/*Line 5724 - 'jquery-1.5.1-vsdoc.js' */	rtbody = /<tbody/i,
/*Line 5725 - 'jquery-1.5.1-vsdoc.js' */	rhtml = /<|&#?\w+;/,
/*Line 5726 - 'jquery-1.5.1-vsdoc.js' */	rnocache = /<(?:script|object|embed|option|style)/i,
/*Line 5727 - 'jquery-1.5.1-vsdoc.js' */	// checked="checked" or checked (html5)
/*Line 5728 - 'jquery-1.5.1-vsdoc.js' */	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
/*Line 5729 - 'jquery-1.5.1-vsdoc.js' */	raction = /\=([^="'>\s]+\/)>/g,
/*Line 5730 - 'jquery-1.5.1-vsdoc.js' */	wrapMap = {
/*Line 5731 - 'jquery-1.5.1-vsdoc.js' */		option: [ 1, "<select multiple='multiple'>", "</select>" ],
/*Line 5732 - 'jquery-1.5.1-vsdoc.js' */		legend: [ 1, "<fieldset>", "</fieldset>" ],
/*Line 5733 - 'jquery-1.5.1-vsdoc.js' */		thead: [ 1, "<table>", "</table>" ],
/*Line 5734 - 'jquery-1.5.1-vsdoc.js' */		tr: [ 2, "<table><tbody>", "</tbody></table>" ],
/*Line 5735 - 'jquery-1.5.1-vsdoc.js' */		td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],
/*Line 5736 - 'jquery-1.5.1-vsdoc.js' */		col: [ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ],
/*Line 5737 - 'jquery-1.5.1-vsdoc.js' */		area: [ 1, "<map>", "</map>" ],
/*Line 5738 - 'jquery-1.5.1-vsdoc.js' */		_default: [ 0, "", "" ]
/*Line 5739 - 'jquery-1.5.1-vsdoc.js' */	};

/*Line 5741 - 'jquery-1.5.1-vsdoc.js' */wrapMap.optgroup = wrapMap.option;
/*Line 5742 - 'jquery-1.5.1-vsdoc.js' */wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
/*Line 5743 - 'jquery-1.5.1-vsdoc.js' */wrapMap.th = wrapMap.td;

/*Line 5745 - 'jquery-1.5.1-vsdoc.js' */// IE can't serialize <link> and <script> tags normally
/*Line 5746 - 'jquery-1.5.1-vsdoc.js' */if ( !jQuery.support.htmlSerialize ) {
/*Line 5747 - 'jquery-1.5.1-vsdoc.js' */	wrapMap._default = [ 1, "div<div>", "</div>" ];
/*Line 5748 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 5750 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn.extend({
/*Line 5751 - 'jquery-1.5.1-vsdoc.js' */	text: function( text ) {
/*Line 5752 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 5753 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Set the text contents of all matched elements.
/*Line 5754 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Similar to html(), but escapes HTML (replace &quot;&lt;&quot; and &quot;&gt;&quot; with their
/*Line 5755 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;HTML entities).
/*Line 5756 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of DOM/Attributes
/*Line 5757 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 5758 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />
/*Line 5759 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="text" type="String">
/*Line 5760 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;The text value to set the contents of the element to.
/*Line 5761 - 'jquery-1.5.1-vsdoc.js' */		///	</param>

/*Line 5763 - 'jquery-1.5.1-vsdoc.js' */		if ( jQuery.isFunction(text) ) {
/*Line 5764 - 'jquery-1.5.1-vsdoc.js' */			return this.each(function(i) {
/*Line 5765 - 'jquery-1.5.1-vsdoc.js' */				var self = jQuery( this );

/*Line 5767 - 'jquery-1.5.1-vsdoc.js' */				self.text( text.call(this, i, self.text()) );
/*Line 5768 - 'jquery-1.5.1-vsdoc.js' */			});
/*Line 5769 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 5771 - 'jquery-1.5.1-vsdoc.js' */		if ( typeof text !== "object" && text !== undefined ) {
/*Line 5772 - 'jquery-1.5.1-vsdoc.js' */			return this.empty().append( (this[0] && this[0].ownerDocument || document).createTextNode( text ) );
/*Line 5773 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 5775 - 'jquery-1.5.1-vsdoc.js' */		return jQuery.text( this );
/*Line 5776 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 5778 - 'jquery-1.5.1-vsdoc.js' */	wrapAll: function( html ) {
/*Line 5779 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 5780 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Wrap all matched elements with a structure of other elements.
/*Line 5781 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This wrapping process is most useful for injecting additional
/*Line 5782 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;stucture into a document, without ruining the original semantic
/*Line 5783 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;qualities of a document.
/*Line 5784 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This works by going through the first element
/*Line 5785 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;provided and finding the deepest ancestor element within its
/*Line 5786 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;structure - it is that element that will en-wrap everything else.
/*Line 5787 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This does not work with elements that contain text. Any necessary text
/*Line 5788 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;must be added after the wrapping is done.
/*Line 5789 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of DOM/Manipulation
/*Line 5790 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 5791 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />
/*Line 5792 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="html" type="Element">
/*Line 5793 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;A DOM element that will be wrapped around the target.
/*Line 5794 - 'jquery-1.5.1-vsdoc.js' */		///	</param>

/*Line 5796 - 'jquery-1.5.1-vsdoc.js' */		if ( jQuery.isFunction( html ) ) {
/*Line 5797 - 'jquery-1.5.1-vsdoc.js' */			return this.each(function(i) {
/*Line 5798 - 'jquery-1.5.1-vsdoc.js' */				jQuery(this).wrapAll( html.call(this, i) );
/*Line 5799 - 'jquery-1.5.1-vsdoc.js' */			});
/*Line 5800 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 5802 - 'jquery-1.5.1-vsdoc.js' */		if ( this[0] ) {
/*Line 5803 - 'jquery-1.5.1-vsdoc.js' */			// The elements to wrap the target around
/*Line 5804 - 'jquery-1.5.1-vsdoc.js' */			var wrap = jQuery( html, this[0].ownerDocument ).eq(0).clone(true);

/*Line 5806 - 'jquery-1.5.1-vsdoc.js' */			if ( this[0].parentNode ) {
/*Line 5807 - 'jquery-1.5.1-vsdoc.js' */				wrap.insertBefore( this[0] );
/*Line 5808 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 5810 - 'jquery-1.5.1-vsdoc.js' */			wrap.map(function() {
/*Line 5811 - 'jquery-1.5.1-vsdoc.js' */				var elem = this;

/*Line 5813 - 'jquery-1.5.1-vsdoc.js' */				while ( elem.firstChild && elem.firstChild.nodeType === 1 ) {
/*Line 5814 - 'jquery-1.5.1-vsdoc.js' */					elem = elem.firstChild;
/*Line 5815 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 5817 - 'jquery-1.5.1-vsdoc.js' */				return elem;
/*Line 5818 - 'jquery-1.5.1-vsdoc.js' */			}).append(this);
/*Line 5819 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 5821 - 'jquery-1.5.1-vsdoc.js' */		return this;
/*Line 5822 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 5824 - 'jquery-1.5.1-vsdoc.js' */	wrapInner: function( html ) {
/*Line 5825 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 5826 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Wraps the inner child contents of each matched elemenht (including text nodes) with an HTML structure.
/*Line 5827 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 5828 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="html" type="String">
/*Line 5829 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;A string of HTML or a DOM element that will be wrapped around the target contents.
/*Line 5830 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 5831 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 5833 - 'jquery-1.5.1-vsdoc.js' */		if ( jQuery.isFunction( html ) ) {
/*Line 5834 - 'jquery-1.5.1-vsdoc.js' */			return this.each(function(i) {
/*Line 5835 - 'jquery-1.5.1-vsdoc.js' */				jQuery(this).wrapInner( html.call(this, i) );
/*Line 5836 - 'jquery-1.5.1-vsdoc.js' */			});
/*Line 5837 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 5839 - 'jquery-1.5.1-vsdoc.js' */		return this.each(function() {
/*Line 5840 - 'jquery-1.5.1-vsdoc.js' */			var self = jQuery( this ),
/*Line 5841 - 'jquery-1.5.1-vsdoc.js' */				contents = self.contents();

/*Line 5843 - 'jquery-1.5.1-vsdoc.js' */			if ( contents.length ) {
/*Line 5844 - 'jquery-1.5.1-vsdoc.js' */				contents.wrapAll( html );

/*Line 5846 - 'jquery-1.5.1-vsdoc.js' */			} else {
/*Line 5847 - 'jquery-1.5.1-vsdoc.js' */				self.append( html );
/*Line 5848 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 5849 - 'jquery-1.5.1-vsdoc.js' */		});
/*Line 5850 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 5852 - 'jquery-1.5.1-vsdoc.js' */	wrap: function( html ) {
/*Line 5853 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 5854 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Wrap all matched elements with a structure of other elements.
/*Line 5855 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This wrapping process is most useful for injecting additional
/*Line 5856 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;stucture into a document, without ruining the original semantic
/*Line 5857 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;qualities of a document.
/*Line 5858 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This works by going through the first element
/*Line 5859 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;provided and finding the deepest ancestor element within its
/*Line 5860 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;structure - it is that element that will en-wrap everything else.
/*Line 5861 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This does not work with elements that contain text. Any necessary text
/*Line 5862 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;must be added after the wrapping is done.
/*Line 5863 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of DOM/Manipulation
/*Line 5864 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 5865 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />
/*Line 5866 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="html" type="Element">
/*Line 5867 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;A DOM element that will be wrapped around the target.
/*Line 5868 - 'jquery-1.5.1-vsdoc.js' */		///	</param>

/*Line 5870 - 'jquery-1.5.1-vsdoc.js' */		return this.each(function() {
/*Line 5871 - 'jquery-1.5.1-vsdoc.js' */			jQuery( this ).wrapAll( html );
/*Line 5872 - 'jquery-1.5.1-vsdoc.js' */		});
/*Line 5873 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 5875 - 'jquery-1.5.1-vsdoc.js' */	unwrap: function() {
/*Line 5876 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 5877 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Remove the parents of the set of matched elements from the DOM, leaving the matched
/*Line 5878 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;elements in their place.
/*Line 5879 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 5880 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />
/*Line 5881 - 'jquery-1.5.1-vsdoc.js' */		return this.parent().each(function() {
/*Line 5882 - 'jquery-1.5.1-vsdoc.js' */			if ( !jQuery.nodeName( this, "body" ) ) {
/*Line 5883 - 'jquery-1.5.1-vsdoc.js' */				jQuery( this ).replaceWith( this.childNodes );
/*Line 5884 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 5885 - 'jquery-1.5.1-vsdoc.js' */		}).end();
/*Line 5886 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 5888 - 'jquery-1.5.1-vsdoc.js' */	append: function() {
/*Line 5889 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 5890 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Append content to the inside of every matched element.
/*Line 5891 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This operation is similar to doing an appendChild to all the
/*Line 5892 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;specified elements, adding them into the document.
/*Line 5893 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of DOM/Manipulation
/*Line 5894 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 5895 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 5897 - 'jquery-1.5.1-vsdoc.js' */		return this.domManip(arguments, true, function( elem ) {
/*Line 5898 - 'jquery-1.5.1-vsdoc.js' */			if ( this.nodeType === 1 ) {
/*Line 5899 - 'jquery-1.5.1-vsdoc.js' */				this.appendChild( elem );
/*Line 5900 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 5901 - 'jquery-1.5.1-vsdoc.js' */		});
/*Line 5902 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 5904 - 'jquery-1.5.1-vsdoc.js' */	prepend: function() {
/*Line 5905 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 5906 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Prepend content to the inside of every matched element.
/*Line 5907 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This operation is the best way to insert elements
/*Line 5908 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;inside, at the beginning, of all matched elements.
/*Line 5909 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of DOM/Manipulation
/*Line 5910 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 5911 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 5913 - 'jquery-1.5.1-vsdoc.js' */		return this.domManip(arguments, true, function( elem ) {
/*Line 5914 - 'jquery-1.5.1-vsdoc.js' */			if ( this.nodeType === 1 ) {
/*Line 5915 - 'jquery-1.5.1-vsdoc.js' */				this.insertBefore( elem, this.firstChild );
/*Line 5916 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 5917 - 'jquery-1.5.1-vsdoc.js' */		});
/*Line 5918 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 5920 - 'jquery-1.5.1-vsdoc.js' */	before: function() {
/*Line 5921 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 5922 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Insert content before each of the matched elements.
/*Line 5923 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of DOM/Manipulation
/*Line 5924 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 5925 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 5927 - 'jquery-1.5.1-vsdoc.js' */		if ( this[0] && this[0].parentNode ) {
/*Line 5928 - 'jquery-1.5.1-vsdoc.js' */			return this.domManip(arguments, false, function( elem ) {
/*Line 5929 - 'jquery-1.5.1-vsdoc.js' */				this.parentNode.insertBefore( elem, this );
/*Line 5930 - 'jquery-1.5.1-vsdoc.js' */			});
/*Line 5931 - 'jquery-1.5.1-vsdoc.js' */		} else if ( arguments.length ) {
/*Line 5932 - 'jquery-1.5.1-vsdoc.js' */			var set = jQuery(arguments[0]);
/*Line 5933 - 'jquery-1.5.1-vsdoc.js' */			set.push.apply( set, this.toArray() );
/*Line 5934 - 'jquery-1.5.1-vsdoc.js' */			return this.pushStack( set, "before", arguments );
/*Line 5935 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 5936 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 5938 - 'jquery-1.5.1-vsdoc.js' */	after: function() {
/*Line 5939 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 5940 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Insert content after each of the matched elements.
/*Line 5941 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of DOM/Manipulation
/*Line 5942 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 5943 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 5945 - 'jquery-1.5.1-vsdoc.js' */		if ( this[0] && this[0].parentNode ) {
/*Line 5946 - 'jquery-1.5.1-vsdoc.js' */			return this.domManip(arguments, false, function( elem ) {
/*Line 5947 - 'jquery-1.5.1-vsdoc.js' */				this.parentNode.insertBefore( elem, this.nextSibling );
/*Line 5948 - 'jquery-1.5.1-vsdoc.js' */			});
/*Line 5949 - 'jquery-1.5.1-vsdoc.js' */		} else if ( arguments.length ) {
/*Line 5950 - 'jquery-1.5.1-vsdoc.js' */			var set = this.pushStack( this, "after", arguments );
/*Line 5951 - 'jquery-1.5.1-vsdoc.js' */			set.push.apply( set, jQuery(arguments[0]).toArray() );
/*Line 5952 - 'jquery-1.5.1-vsdoc.js' */			return set;
/*Line 5953 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 5954 - 'jquery-1.5.1-vsdoc.js' */	},
	
/*Line 5956 - 'jquery-1.5.1-vsdoc.js' */	// keepData is for internal use only--do not document
/*Line 5957 - 'jquery-1.5.1-vsdoc.js' */	remove: function( selector, keepData ) {
/*Line 5958 - 'jquery-1.5.1-vsdoc.js' */		for ( var i = 0, elem; (elem = this[i]) != null; i++ ) {
/*Line 5959 - 'jquery-1.5.1-vsdoc.js' */			if ( !selector || jQuery.filter( selector, [ elem ] ).length ) {
/*Line 5960 - 'jquery-1.5.1-vsdoc.js' */				if ( !keepData && elem.nodeType === 1 ) {
/*Line 5961 - 'jquery-1.5.1-vsdoc.js' */					jQuery.cleanData( elem.getElementsByTagName("*") );
/*Line 5962 - 'jquery-1.5.1-vsdoc.js' */					jQuery.cleanData( [ elem ] );
/*Line 5963 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 5965 - 'jquery-1.5.1-vsdoc.js' */				if ( elem.parentNode ) {
/*Line 5966 - 'jquery-1.5.1-vsdoc.js' */					 elem.parentNode.removeChild( elem );
/*Line 5967 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 5968 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 5969 - 'jquery-1.5.1-vsdoc.js' */		}
		
/*Line 5971 - 'jquery-1.5.1-vsdoc.js' */		return this;
/*Line 5972 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 5974 - 'jquery-1.5.1-vsdoc.js' */	empty: function() {
/*Line 5975 - 'jquery-1.5.1-vsdoc.js' */		for ( var i = 0, elem; (elem = this[i]) != null; i++ ) {
/*Line 5976 - 'jquery-1.5.1-vsdoc.js' */			// Remove element nodes and prevent memory leaks
/*Line 5977 - 'jquery-1.5.1-vsdoc.js' */			if ( elem.nodeType === 1 ) {
/*Line 5978 - 'jquery-1.5.1-vsdoc.js' */				jQuery.cleanData( elem.getElementsByTagName("*") );
/*Line 5979 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 5981 - 'jquery-1.5.1-vsdoc.js' */			// Remove any remaining nodes
/*Line 5982 - 'jquery-1.5.1-vsdoc.js' */			while ( elem.firstChild ) {
/*Line 5983 - 'jquery-1.5.1-vsdoc.js' */				elem.removeChild( elem.firstChild );
/*Line 5984 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 5985 - 'jquery-1.5.1-vsdoc.js' */		}
		
/*Line 5987 - 'jquery-1.5.1-vsdoc.js' */		return this;
/*Line 5988 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 5990 - 'jquery-1.5.1-vsdoc.js' */	clone: function( events ) {
/*Line 5991 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 5992 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Clone matched DOM Elements and select the clones. 
/*Line 5993 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This is useful for moving copies of the elements to another
/*Line 5994 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;location in the DOM.
/*Line 5995 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of DOM/Manipulation
/*Line 5996 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 5997 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />
/*Line 5998 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="deep" type="Boolean" optional="true">
/*Line 5999 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;(Optional) Set to false if you don't want to clone all descendant nodes, in addition to the element itself.
/*Line 6000 - 'jquery-1.5.1-vsdoc.js' */		///	</param>

/*Line 6002 - 'jquery-1.5.1-vsdoc.js' */		// Do the clone
/*Line 6003 - 'jquery-1.5.1-vsdoc.js' */		var ret = this.map(function() {
/*Line 6004 - 'jquery-1.5.1-vsdoc.js' */			if ( !jQuery.support.noCloneEvent && !jQuery.isXMLDoc(this) ) {
/*Line 6005 - 'jquery-1.5.1-vsdoc.js' */				// IE copies events bound via attachEvent when
/*Line 6006 - 'jquery-1.5.1-vsdoc.js' */				// using cloneNode. Calling detachEvent on the
/*Line 6007 - 'jquery-1.5.1-vsdoc.js' */				// clone will also remove the events from the orignal
/*Line 6008 - 'jquery-1.5.1-vsdoc.js' */				// In order to get around this, we use innerHTML.
/*Line 6009 - 'jquery-1.5.1-vsdoc.js' */				// Unfortunately, this means some modifications to
/*Line 6010 - 'jquery-1.5.1-vsdoc.js' */				// attributes in IE that are actually only stored
/*Line 6011 - 'jquery-1.5.1-vsdoc.js' */				// as properties will not be copied (such as the
/*Line 6012 - 'jquery-1.5.1-vsdoc.js' */				// the name attribute on an input).
/*Line 6013 - 'jquery-1.5.1-vsdoc.js' */				var html = this.outerHTML,
/*Line 6014 - 'jquery-1.5.1-vsdoc.js' */					ownerDocument = this.ownerDocument;

/*Line 6016 - 'jquery-1.5.1-vsdoc.js' */				if ( !html ) {
/*Line 6017 - 'jquery-1.5.1-vsdoc.js' */					var div = ownerDocument.createElement("div");
/*Line 6018 - 'jquery-1.5.1-vsdoc.js' */					div.appendChild( this.cloneNode(true) );
/*Line 6019 - 'jquery-1.5.1-vsdoc.js' */					html = div.innerHTML;
/*Line 6020 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 6022 - 'jquery-1.5.1-vsdoc.js' */				return jQuery.clean([html.replace(rinlinejQuery, "")
/*Line 6023 - 'jquery-1.5.1-vsdoc.js' */					// Handle the case in IE 8 where action=/test/> self-closes a tag
/*Line 6024 - 'jquery-1.5.1-vsdoc.js' */					.replace(raction, '="$1">')
/*Line 6025 - 'jquery-1.5.1-vsdoc.js' */					.replace(rleadingWhitespace, "")], ownerDocument)[0];
/*Line 6026 - 'jquery-1.5.1-vsdoc.js' */			} else {
/*Line 6027 - 'jquery-1.5.1-vsdoc.js' */				return this.cloneNode(true);
/*Line 6028 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 6029 - 'jquery-1.5.1-vsdoc.js' */		});

/*Line 6031 - 'jquery-1.5.1-vsdoc.js' */		// Copy the events from the original to the clone
/*Line 6032 - 'jquery-1.5.1-vsdoc.js' */		if ( events === true ) {
/*Line 6033 - 'jquery-1.5.1-vsdoc.js' */			cloneCopyEvent( this, ret );
/*Line 6034 - 'jquery-1.5.1-vsdoc.js' */			cloneCopyEvent( this.find("*"), ret.find("*") );
/*Line 6035 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 6037 - 'jquery-1.5.1-vsdoc.js' */		// Return the cloned set
/*Line 6038 - 'jquery-1.5.1-vsdoc.js' */		return ret;
/*Line 6039 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 6041 - 'jquery-1.5.1-vsdoc.js' */	html: function( value ) {
/*Line 6042 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 6043 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Set the html contents of every matched element.
/*Line 6044 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This property is not available on XML documents.
/*Line 6045 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of DOM/Attributes
/*Line 6046 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 6047 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />
/*Line 6048 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="value" type="String">
/*Line 6049 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;A string of HTML to set as the content of each matched element.
/*Line 6050 - 'jquery-1.5.1-vsdoc.js' */		///	</param>

/*Line 6052 - 'jquery-1.5.1-vsdoc.js' */		if ( value === undefined ) {
/*Line 6053 - 'jquery-1.5.1-vsdoc.js' */			return this[0] && this[0].nodeType === 1 ?
/*Line 6054 - 'jquery-1.5.1-vsdoc.js' */				this[0].innerHTML.replace(rinlinejQuery, "") :
/*Line 6055 - 'jquery-1.5.1-vsdoc.js' */				null;

/*Line 6057 - 'jquery-1.5.1-vsdoc.js' */		// See if we can take a shortcut and just use innerHTML
/*Line 6058 - 'jquery-1.5.1-vsdoc.js' */		} else if ( typeof value === "string" && !rnocache.test( value ) &&
/*Line 6059 - 'jquery-1.5.1-vsdoc.js' */			(jQuery.support.leadingWhitespace || !rleadingWhitespace.test( value )) &&
/*Line 6060 - 'jquery-1.5.1-vsdoc.js' */			!wrapMap[ (rtagName.exec( value ) || ["", ""])[1].toLowerCase() ] ) {

/*Line 6062 - 'jquery-1.5.1-vsdoc.js' */			value = value.replace(rxhtmlTag, "<$1></$2>");

/*Line 6064 - 'jquery-1.5.1-vsdoc.js' */			try {
/*Line 6065 - 'jquery-1.5.1-vsdoc.js' */				for ( var i = 0, l = this.length; i < l; i++ ) {
/*Line 6066 - 'jquery-1.5.1-vsdoc.js' */					// Remove element nodes and prevent memory leaks
/*Line 6067 - 'jquery-1.5.1-vsdoc.js' */					if ( this[i].nodeType === 1 ) {
/*Line 6068 - 'jquery-1.5.1-vsdoc.js' */						jQuery.cleanData( this[i].getElementsByTagName("*") );
/*Line 6069 - 'jquery-1.5.1-vsdoc.js' */						this[i].innerHTML = value;
/*Line 6070 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 6071 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 6073 - 'jquery-1.5.1-vsdoc.js' */			// If using innerHTML throws an exception, use the fallback method
/*Line 6074 - 'jquery-1.5.1-vsdoc.js' */			} catch(e) {
/*Line 6075 - 'jquery-1.5.1-vsdoc.js' */				this.empty().append( value );
/*Line 6076 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 6078 - 'jquery-1.5.1-vsdoc.js' */		} else if ( jQuery.isFunction( value ) ) {
/*Line 6079 - 'jquery-1.5.1-vsdoc.js' */			this.each(function(i){
/*Line 6080 - 'jquery-1.5.1-vsdoc.js' */				var self = jQuery( this );

/*Line 6082 - 'jquery-1.5.1-vsdoc.js' */				self.html( value.call(this, i, self.html()) );
/*Line 6083 - 'jquery-1.5.1-vsdoc.js' */			});

/*Line 6085 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 6086 - 'jquery-1.5.1-vsdoc.js' */			this.empty().append( value );
/*Line 6087 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 6089 - 'jquery-1.5.1-vsdoc.js' */		return this;
/*Line 6090 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 6092 - 'jquery-1.5.1-vsdoc.js' */	replaceWith: function( value ) {
/*Line 6093 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 6094 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Replaces all matched element with the specified HTML or DOM elements.
/*Line 6095 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 6096 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="value" type="Object">
/*Line 6097 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;The content to insert. May be an HTML string, DOM element, or jQuery object.
/*Line 6098 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 6099 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery">The element that was just replaced.</returns>

/*Line 6101 - 'jquery-1.5.1-vsdoc.js' */		if ( this[0] && this[0].parentNode ) {
/*Line 6102 - 'jquery-1.5.1-vsdoc.js' */			// Make sure that the elements are removed from the DOM before they are inserted
/*Line 6103 - 'jquery-1.5.1-vsdoc.js' */			// this can help fix replacing a parent with child elements
/*Line 6104 - 'jquery-1.5.1-vsdoc.js' */			if ( jQuery.isFunction( value ) ) {
/*Line 6105 - 'jquery-1.5.1-vsdoc.js' */				return this.each(function(i) {
/*Line 6106 - 'jquery-1.5.1-vsdoc.js' */					var self = jQuery(this), old = self.html();
/*Line 6107 - 'jquery-1.5.1-vsdoc.js' */					self.replaceWith( value.call( this, i, old ) );
/*Line 6108 - 'jquery-1.5.1-vsdoc.js' */				});
/*Line 6109 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 6111 - 'jquery-1.5.1-vsdoc.js' */			if ( typeof value !== "string" ) {
/*Line 6112 - 'jquery-1.5.1-vsdoc.js' */				value = jQuery( value ).detach();
/*Line 6113 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 6115 - 'jquery-1.5.1-vsdoc.js' */			return this.each(function() {
/*Line 6116 - 'jquery-1.5.1-vsdoc.js' */				var next = this.nextSibling,
/*Line 6117 - 'jquery-1.5.1-vsdoc.js' */					parent = this.parentNode;

/*Line 6119 - 'jquery-1.5.1-vsdoc.js' */				jQuery( this ).remove();

/*Line 6121 - 'jquery-1.5.1-vsdoc.js' */				if ( next ) {
/*Line 6122 - 'jquery-1.5.1-vsdoc.js' */					jQuery(next).before( value );
/*Line 6123 - 'jquery-1.5.1-vsdoc.js' */				} else {
/*Line 6124 - 'jquery-1.5.1-vsdoc.js' */					jQuery(parent).append( value );
/*Line 6125 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 6126 - 'jquery-1.5.1-vsdoc.js' */			});
/*Line 6127 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 6128 - 'jquery-1.5.1-vsdoc.js' */			return this.pushStack( jQuery(jQuery.isFunction(value) ? value() : value), "replaceWith", value );
/*Line 6129 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 6130 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 6132 - 'jquery-1.5.1-vsdoc.js' */	detach: function( selector ) {
/*Line 6133 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 6134 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Remove the set of matched elements from the DOM.
/*Line 6135 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 6136 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="selector" type="String">
/*Line 6137 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;A selector expression that filters the set of matched elements to be removed.
/*Line 6138 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 6139 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 6141 - 'jquery-1.5.1-vsdoc.js' */		return this.remove( selector, true );
/*Line 6142 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 6144 - 'jquery-1.5.1-vsdoc.js' */	domManip: function( args, table, callback ) {
/*Line 6145 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="args" type="Array">
/*Line 6146 - 'jquery-1.5.1-vsdoc.js' */		///     &#10; Args
/*Line 6147 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 6148 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="table" type="Boolean">
/*Line 6149 - 'jquery-1.5.1-vsdoc.js' */		///     &#10; Insert TBODY in TABLEs if one is not found.
/*Line 6150 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 6151 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="dir" type="Number">
/*Line 6152 - 'jquery-1.5.1-vsdoc.js' */		///     &#10; If dir&lt;0, process args in reverse order.
/*Line 6153 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 6154 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="fn" type="Function">
/*Line 6155 - 'jquery-1.5.1-vsdoc.js' */		///     &#10; The function doing the DOM manipulation.
/*Line 6156 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 6157 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />
/*Line 6158 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 6159 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of Core
/*Line 6160 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>

/*Line 6162 - 'jquery-1.5.1-vsdoc.js' */		var results, first, fragment, parent,
/*Line 6163 - 'jquery-1.5.1-vsdoc.js' */			value = args[0],
/*Line 6164 - 'jquery-1.5.1-vsdoc.js' */			scripts = [];

/*Line 6166 - 'jquery-1.5.1-vsdoc.js' */		// We can't cloneNode fragments that contain checked, in WebKit
/*Line 6167 - 'jquery-1.5.1-vsdoc.js' */		if ( !jQuery.support.checkClone && arguments.length === 3 && typeof value === "string" && rchecked.test( value ) ) {
/*Line 6168 - 'jquery-1.5.1-vsdoc.js' */			return this.each(function() {
/*Line 6169 - 'jquery-1.5.1-vsdoc.js' */				jQuery(this).domManip( args, table, callback, true );
/*Line 6170 - 'jquery-1.5.1-vsdoc.js' */			});
/*Line 6171 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 6173 - 'jquery-1.5.1-vsdoc.js' */		if ( jQuery.isFunction(value) ) {
/*Line 6174 - 'jquery-1.5.1-vsdoc.js' */			return this.each(function(i) {
/*Line 6175 - 'jquery-1.5.1-vsdoc.js' */				var self = jQuery(this);
/*Line 6176 - 'jquery-1.5.1-vsdoc.js' */				args[0] = value.call(this, i, table ? self.html() : undefined);
/*Line 6177 - 'jquery-1.5.1-vsdoc.js' */				self.domManip( args, table, callback );
/*Line 6178 - 'jquery-1.5.1-vsdoc.js' */			});
/*Line 6179 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 6181 - 'jquery-1.5.1-vsdoc.js' */		if ( this[0] ) {
/*Line 6182 - 'jquery-1.5.1-vsdoc.js' */			parent = value && value.parentNode;

/*Line 6184 - 'jquery-1.5.1-vsdoc.js' */			// If we're in a fragment, just use that instead of building a new one
/*Line 6185 - 'jquery-1.5.1-vsdoc.js' */			if ( jQuery.support.parentNode && parent && parent.nodeType === 11 && parent.childNodes.length === this.length ) {
/*Line 6186 - 'jquery-1.5.1-vsdoc.js' */				results = { fragment: parent };

/*Line 6188 - 'jquery-1.5.1-vsdoc.js' */			} else {
/*Line 6189 - 'jquery-1.5.1-vsdoc.js' */				results = jQuery.buildFragment( args, this, scripts );
/*Line 6190 - 'jquery-1.5.1-vsdoc.js' */			}
			
/*Line 6192 - 'jquery-1.5.1-vsdoc.js' */			fragment = results.fragment;
			
/*Line 6194 - 'jquery-1.5.1-vsdoc.js' */			if ( fragment.childNodes.length === 1 ) {
/*Line 6195 - 'jquery-1.5.1-vsdoc.js' */				first = fragment = fragment.firstChild;
/*Line 6196 - 'jquery-1.5.1-vsdoc.js' */			} else {
/*Line 6197 - 'jquery-1.5.1-vsdoc.js' */				first = fragment.firstChild;
/*Line 6198 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 6200 - 'jquery-1.5.1-vsdoc.js' */			if ( first ) {
/*Line 6201 - 'jquery-1.5.1-vsdoc.js' */				table = table && jQuery.nodeName( first, "tr" );

/*Line 6203 - 'jquery-1.5.1-vsdoc.js' */				for ( var i = 0, l = this.length; i < l; i++ ) {
/*Line 6204 - 'jquery-1.5.1-vsdoc.js' */					callback.call(
/*Line 6205 - 'jquery-1.5.1-vsdoc.js' */						table ?
/*Line 6206 - 'jquery-1.5.1-vsdoc.js' */							root(this[i], first) :
/*Line 6207 - 'jquery-1.5.1-vsdoc.js' */							this[i],
/*Line 6208 - 'jquery-1.5.1-vsdoc.js' */						i > 0 || results.cacheable || this.length > 1  ?
/*Line 6209 - 'jquery-1.5.1-vsdoc.js' */							fragment.cloneNode(true) :
/*Line 6210 - 'jquery-1.5.1-vsdoc.js' */							fragment
/*Line 6211 - 'jquery-1.5.1-vsdoc.js' */					);
/*Line 6212 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 6213 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 6215 - 'jquery-1.5.1-vsdoc.js' */			if ( scripts.length ) {
/*Line 6216 - 'jquery-1.5.1-vsdoc.js' */				jQuery.each( scripts, evalScript );
/*Line 6217 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 6218 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 6220 - 'jquery-1.5.1-vsdoc.js' */		return this;
/*Line 6221 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 6222 - 'jquery-1.5.1-vsdoc.js' */});

/*Line 6224 - 'jquery-1.5.1-vsdoc.js' */function root( elem, cur ) {
/*Line 6225 - 'jquery-1.5.1-vsdoc.js' */	return jQuery.nodeName(elem, "table") ?
/*Line 6226 - 'jquery-1.5.1-vsdoc.js' */		(elem.getElementsByTagName("tbody")[0] ||
/*Line 6227 - 'jquery-1.5.1-vsdoc.js' */		elem.appendChild(elem.ownerDocument.createElement("tbody"))) :
/*Line 6228 - 'jquery-1.5.1-vsdoc.js' */		elem;
/*Line 6229 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 6231 - 'jquery-1.5.1-vsdoc.js' */function cloneCopyEvent(orig, ret) {
/*Line 6232 - 'jquery-1.5.1-vsdoc.js' */	var i = 0;

/*Line 6234 - 'jquery-1.5.1-vsdoc.js' */	ret.each(function() {
/*Line 6235 - 'jquery-1.5.1-vsdoc.js' */		if ( this.nodeName !== (orig[i] && orig[i].nodeName) ) {
/*Line 6236 - 'jquery-1.5.1-vsdoc.js' */			return;
/*Line 6237 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 6239 - 'jquery-1.5.1-vsdoc.js' */		var oldData = jQuery.data( orig[i++] ),
/*Line 6240 - 'jquery-1.5.1-vsdoc.js' */			curData = jQuery.data( this, oldData ),
/*Line 6241 - 'jquery-1.5.1-vsdoc.js' */			events = oldData && oldData.events;

/*Line 6243 - 'jquery-1.5.1-vsdoc.js' */		if ( events ) {
/*Line 6244 - 'jquery-1.5.1-vsdoc.js' */			delete curData.handle;
/*Line 6245 - 'jquery-1.5.1-vsdoc.js' */			curData.events = {};

/*Line 6247 - 'jquery-1.5.1-vsdoc.js' */			for ( var type in events ) {
/*Line 6248 - 'jquery-1.5.1-vsdoc.js' */				for ( var handler in events[ type ] ) {
/*Line 6249 - 'jquery-1.5.1-vsdoc.js' */					jQuery.event.add( this, type, events[ type ][ handler ], events[ type ][ handler ].data );
/*Line 6250 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 6251 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 6252 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 6253 - 'jquery-1.5.1-vsdoc.js' */	});
/*Line 6254 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 6256 - 'jquery-1.5.1-vsdoc.js' */jQuery.buildFragment = function( args, nodes, scripts ) {
/*Line 6257 - 'jquery-1.5.1-vsdoc.js' */	var fragment, cacheable, cacheresults,
/*Line 6258 - 'jquery-1.5.1-vsdoc.js' */		doc = (nodes && nodes[0] ? nodes[0].ownerDocument || nodes[0] : document);

/*Line 6260 - 'jquery-1.5.1-vsdoc.js' */	// Only cache "small" (1/2 KB) strings that are associated with the main document
/*Line 6261 - 'jquery-1.5.1-vsdoc.js' */	// Cloning options loses the selected state, so don't cache them
/*Line 6262 - 'jquery-1.5.1-vsdoc.js' */	// IE 6 doesn't like it when you put <object> or <embed> elements in a fragment
/*Line 6263 - 'jquery-1.5.1-vsdoc.js' */	// Also, WebKit does not clone 'checked' attributes on cloneNode, so don't cache
/*Line 6264 - 'jquery-1.5.1-vsdoc.js' */	if ( args.length === 1 && typeof args[0] === "string" && args[0].length < 512 && doc === document &&
/*Line 6265 - 'jquery-1.5.1-vsdoc.js' */		!rnocache.test( args[0] ) && (jQuery.support.checkClone || !rchecked.test( args[0] )) ) {

/*Line 6267 - 'jquery-1.5.1-vsdoc.js' */		cacheable = true;
/*Line 6268 - 'jquery-1.5.1-vsdoc.js' */		cacheresults = jQuery.fragments[ args[0] ];
/*Line 6269 - 'jquery-1.5.1-vsdoc.js' */		if ( cacheresults ) {
/*Line 6270 - 'jquery-1.5.1-vsdoc.js' */			if ( cacheresults !== 1 ) {
/*Line 6271 - 'jquery-1.5.1-vsdoc.js' */				fragment = cacheresults;
/*Line 6272 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 6273 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 6274 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 6276 - 'jquery-1.5.1-vsdoc.js' */	if ( !fragment ) {
/*Line 6277 - 'jquery-1.5.1-vsdoc.js' */		fragment = doc.createDocumentFragment();
/*Line 6278 - 'jquery-1.5.1-vsdoc.js' */		jQuery.clean( args, doc, fragment, scripts );
/*Line 6279 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 6281 - 'jquery-1.5.1-vsdoc.js' */	if ( cacheable ) {
/*Line 6282 - 'jquery-1.5.1-vsdoc.js' */		jQuery.fragments[ args[0] ] = cacheresults ? fragment : 1;
/*Line 6283 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 6285 - 'jquery-1.5.1-vsdoc.js' */	return { fragment: fragment, cacheable: cacheable };
/*Line 6286 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 6288 - 'jquery-1.5.1-vsdoc.js' */jQuery.fragments = {};

/*Line 6290 - 'jquery-1.5.1-vsdoc.js' *///	jQuery.each({
/*Line 6291 - 'jquery-1.5.1-vsdoc.js' *///		appendTo: "append",
/*Line 6292 - 'jquery-1.5.1-vsdoc.js' *///		prependTo: "prepend",
/*Line 6293 - 'jquery-1.5.1-vsdoc.js' *///		insertBefore: "before",
/*Line 6294 - 'jquery-1.5.1-vsdoc.js' *///		insertAfter: "after",
/*Line 6295 - 'jquery-1.5.1-vsdoc.js' *///		replaceAll: "replaceWith"
/*Line 6296 - 'jquery-1.5.1-vsdoc.js' *///	}, function( name, original ) {
/*Line 6297 - 'jquery-1.5.1-vsdoc.js' *///		jQuery.fn[ name ] = function( selector ) {
/*Line 6298 - 'jquery-1.5.1-vsdoc.js' *///			var ret = [],
/*Line 6299 - 'jquery-1.5.1-vsdoc.js' *///				insert = jQuery( selector ),
/*Line 6300 - 'jquery-1.5.1-vsdoc.js' *///				parent = this.length === 1 && this[0].parentNode;
		
/*Line 6302 - 'jquery-1.5.1-vsdoc.js' *///			if ( parent && parent.nodeType === 11 && parent.childNodes.length === 1 && insert.length === 1 ) {
/*Line 6303 - 'jquery-1.5.1-vsdoc.js' *///				insert[ original ]( this[0] );
/*Line 6304 - 'jquery-1.5.1-vsdoc.js' *///				return this;
			
/*Line 6306 - 'jquery-1.5.1-vsdoc.js' *///			} else {
/*Line 6307 - 'jquery-1.5.1-vsdoc.js' *///				for ( var i = 0, l = insert.length; i < l; i++ ) {
/*Line 6308 - 'jquery-1.5.1-vsdoc.js' *///					var elems = (i > 0 ? this.clone(true) : this).get();
/*Line 6309 - 'jquery-1.5.1-vsdoc.js' *///					jQuery( insert[i] )[ original ]( elems );
/*Line 6310 - 'jquery-1.5.1-vsdoc.js' *///					ret = ret.concat( elems );
/*Line 6311 - 'jquery-1.5.1-vsdoc.js' *///				}
/*Line 6312 - 'jquery-1.5.1-vsdoc.js' *///			
/*Line 6313 - 'jquery-1.5.1-vsdoc.js' *///				return this.pushStack( ret, name, insert.selector );
/*Line 6314 - 'jquery-1.5.1-vsdoc.js' *///			}
/*Line 6315 - 'jquery-1.5.1-vsdoc.js' *///		};
/*Line 6316 - 'jquery-1.5.1-vsdoc.js' *///	});
/*Line 6317 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "appendTo" ] = function( selector ) {
/*Line 6318 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 6319 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Append all of the matched elements to another, specified, set of elements.
/*Line 6320 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;As of jQuery 1.3.2, returns all of the inserted elements.
/*Line 6321 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;This operation is, essentially, the reverse of doing a regular
/*Line 6322 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;$(A).append(B), in that instead of appending B to A, you're appending
/*Line 6323 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;A to B.
/*Line 6324 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 6325 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="selector" type="Selector">
/*Line 6326 - 'jquery-1.5.1-vsdoc.js' */	///     &#10; target to which the content will be appended.
/*Line 6327 - 'jquery-1.5.1-vsdoc.js' */	///	</param>
/*Line 6328 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 6330 - 'jquery-1.5.1-vsdoc.js' */	var ret = [], insert = jQuery( selector );

/*Line 6332 - 'jquery-1.5.1-vsdoc.js' */	for ( var i = 0, l = insert.length; i < l; i++ ) {
/*Line 6333 - 'jquery-1.5.1-vsdoc.js' */		var elems = (i > 0 ? this.clone(true) : this).get();
/*Line 6334 - 'jquery-1.5.1-vsdoc.js' */		jQuery.fn[ "append" ].apply( jQuery(insert[i]), elems );
/*Line 6335 - 'jquery-1.5.1-vsdoc.js' */		ret = ret.concat( elems );
/*Line 6336 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 6337 - 'jquery-1.5.1-vsdoc.js' */	return this.pushStack( ret, "appendTo", insert.selector );
/*Line 6338 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 6340 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "prependTo" ] = function( selector ) {
/*Line 6341 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 6342 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Prepend all of the matched elements to another, specified, set of elements.
/*Line 6343 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;As of jQuery 1.3.2, returns all of the inserted elements.
/*Line 6344 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;This operation is, essentially, the reverse of doing a regular
/*Line 6345 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;$(A).prepend(B), in that instead of prepending B to A, you're prepending
/*Line 6346 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;A to B.
/*Line 6347 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 6348 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="selector" type="Selector">
/*Line 6349 - 'jquery-1.5.1-vsdoc.js' */	///     &#10; target to which the content will be appended.
/*Line 6350 - 'jquery-1.5.1-vsdoc.js' */	///	</param>
/*Line 6351 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 6353 - 'jquery-1.5.1-vsdoc.js' */	var ret = [], insert = jQuery( selector );

/*Line 6355 - 'jquery-1.5.1-vsdoc.js' */	for ( var i = 0, l = insert.length; i < l; i++ ) {
/*Line 6356 - 'jquery-1.5.1-vsdoc.js' */		var elems = (i > 0 ? this.clone(true) : this).get();
/*Line 6357 - 'jquery-1.5.1-vsdoc.js' */		jQuery.fn[ "prepend" ].apply( jQuery(insert[i]), elems );
/*Line 6358 - 'jquery-1.5.1-vsdoc.js' */		ret = ret.concat( elems );
/*Line 6359 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 6360 - 'jquery-1.5.1-vsdoc.js' */	return this.pushStack( ret, "prependTo", insert.selector );
/*Line 6361 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 6363 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "insertBefore" ] = function( selector ) {
/*Line 6364 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 6365 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Insert all of the matched elements before another, specified, set of elements.
/*Line 6366 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;As of jQuery 1.3.2, returns all of the inserted elements.
/*Line 6367 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;This operation is, essentially, the reverse of doing a regular
/*Line 6368 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;$(A).before(B), in that instead of inserting B before A, you're inserting
/*Line 6369 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;A before B.
/*Line 6370 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 6371 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="content" type="String">
/*Line 6372 - 'jquery-1.5.1-vsdoc.js' */	///     &#10; Content after which the selected element(s) is inserted.
/*Line 6373 - 'jquery-1.5.1-vsdoc.js' */	///	</param>
/*Line 6374 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 6376 - 'jquery-1.5.1-vsdoc.js' */	var ret = [], insert = jQuery( selector );

/*Line 6378 - 'jquery-1.5.1-vsdoc.js' */	for ( var i = 0, l = insert.length; i < l; i++ ) {
/*Line 6379 - 'jquery-1.5.1-vsdoc.js' */		var elems = (i > 0 ? this.clone(true) : this).get();
/*Line 6380 - 'jquery-1.5.1-vsdoc.js' */		jQuery.fn[ "before" ].apply( jQuery(insert[i]), elems );
/*Line 6381 - 'jquery-1.5.1-vsdoc.js' */		ret = ret.concat( elems );
/*Line 6382 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 6383 - 'jquery-1.5.1-vsdoc.js' */	return this.pushStack( ret, "insertBefore", insert.selector );
/*Line 6384 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 6386 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "insertAfter" ] = function( selector ) {
/*Line 6387 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 6388 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Insert all of the matched elements after another, specified, set of elements.
/*Line 6389 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;As of jQuery 1.3.2, returns all of the inserted elements.
/*Line 6390 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;This operation is, essentially, the reverse of doing a regular
/*Line 6391 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;$(A).after(B), in that instead of inserting B after A, you're inserting
/*Line 6392 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;A after B.
/*Line 6393 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 6394 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="content" type="String">
/*Line 6395 - 'jquery-1.5.1-vsdoc.js' */	///     &#10; Content after which the selected element(s) is inserted.
/*Line 6396 - 'jquery-1.5.1-vsdoc.js' */	///	</param>
/*Line 6397 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 6399 - 'jquery-1.5.1-vsdoc.js' */	var ret = [], insert = jQuery( selector );

/*Line 6401 - 'jquery-1.5.1-vsdoc.js' */	for ( var i = 0, l = insert.length; i < l; i++ ) {
/*Line 6402 - 'jquery-1.5.1-vsdoc.js' */		var elems = (i > 0 ? this.clone(true) : this).get();
/*Line 6403 - 'jquery-1.5.1-vsdoc.js' */		jQuery.fn[ "after" ].apply( jQuery(insert[i]), elems );
/*Line 6404 - 'jquery-1.5.1-vsdoc.js' */		ret = ret.concat( elems );
/*Line 6405 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 6406 - 'jquery-1.5.1-vsdoc.js' */	return this.pushStack( ret, "insertAfter", insert.selector );
/*Line 6407 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 6409 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "replaceAll" ] = function( selector ) {
/*Line 6410 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 6411 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Replaces the elements matched by the specified selector with the matched elements.
/*Line 6412 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;As of jQuery 1.3.2, returns all of the inserted elements.
/*Line 6413 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 6414 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="selector" type="Selector">The elements to find and replace the matched elements with.</param>
/*Line 6415 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 6417 - 'jquery-1.5.1-vsdoc.js' */	var ret = [], insert = jQuery( selector );

/*Line 6419 - 'jquery-1.5.1-vsdoc.js' */	for ( var i = 0, l = insert.length; i < l; i++ ) {
/*Line 6420 - 'jquery-1.5.1-vsdoc.js' */		var elems = (i > 0 ? this.clone(true) : this).get();
/*Line 6421 - 'jquery-1.5.1-vsdoc.js' */		jQuery.fn[ "replaceWith" ].apply( jQuery(insert[i]), elems );
/*Line 6422 - 'jquery-1.5.1-vsdoc.js' */		ret = ret.concat( elems );
/*Line 6423 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 6424 - 'jquery-1.5.1-vsdoc.js' */	return this.pushStack( ret, "replaceAll", insert.selector );
/*Line 6425 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 6427 - 'jquery-1.5.1-vsdoc.js' */jQuery.each({
/*Line 6428 - 'jquery-1.5.1-vsdoc.js' */	// keepData is for internal use only--do not document
/*Line 6429 - 'jquery-1.5.1-vsdoc.js' */	remove: function( selector, keepData ) {
/*Line 6430 - 'jquery-1.5.1-vsdoc.js' */		if ( !selector || jQuery.filter( selector, [ this ] ).length ) {
/*Line 6431 - 'jquery-1.5.1-vsdoc.js' */			if ( !keepData && this.nodeType === 1 ) {
/*Line 6432 - 'jquery-1.5.1-vsdoc.js' */				jQuery.cleanData( this.getElementsByTagName("*") );
/*Line 6433 - 'jquery-1.5.1-vsdoc.js' */				jQuery.cleanData( [ this ] );
/*Line 6434 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 6436 - 'jquery-1.5.1-vsdoc.js' */			if ( this.parentNode ) {
/*Line 6437 - 'jquery-1.5.1-vsdoc.js' */				 this.parentNode.removeChild( this );
/*Line 6438 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 6439 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 6440 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 6442 - 'jquery-1.5.1-vsdoc.js' */	empty: function() {
/*Line 6443 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 6444 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Removes all child nodes from the set of matched elements.
/*Line 6445 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of DOM/Manipulation
/*Line 6446 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 6447 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 6449 - 'jquery-1.5.1-vsdoc.js' */		// Remove element nodes and prevent memory leaks
/*Line 6450 - 'jquery-1.5.1-vsdoc.js' */		if ( this.nodeType === 1 ) {
/*Line 6451 - 'jquery-1.5.1-vsdoc.js' */			jQuery.cleanData( this.getElementsByTagName("*") );
/*Line 6452 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 6454 - 'jquery-1.5.1-vsdoc.js' */		// Remove any remaining nodes
/*Line 6455 - 'jquery-1.5.1-vsdoc.js' */		while ( this.firstChild ) {
/*Line 6456 - 'jquery-1.5.1-vsdoc.js' */			this.removeChild( this.firstChild );
/*Line 6457 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 6458 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 6459 - 'jquery-1.5.1-vsdoc.js' */}, function( name, fn ) {
/*Line 6460 - 'jquery-1.5.1-vsdoc.js' */	jQuery.fn[ name ] = function() {
/*Line 6461 - 'jquery-1.5.1-vsdoc.js' */		return this.each( fn, arguments );
/*Line 6462 - 'jquery-1.5.1-vsdoc.js' */	};
/*Line 6463 - 'jquery-1.5.1-vsdoc.js' */});

/*Line 6465 - 'jquery-1.5.1-vsdoc.js' */jQuery.extend({
/*Line 6466 - 'jquery-1.5.1-vsdoc.js' */	clean: function( elems, context, fragment, scripts ) {
/*Line 6467 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 6468 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This method is internal only.
/*Line 6469 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 6470 - 'jquery-1.5.1-vsdoc.js' */		///	<private />

/*Line 6472 - 'jquery-1.5.1-vsdoc.js' */		context = context || document;

/*Line 6474 - 'jquery-1.5.1-vsdoc.js' */		// !context.createElement fails in IE with an error but returns typeof 'object'
/*Line 6475 - 'jquery-1.5.1-vsdoc.js' */		if ( typeof context.createElement === "undefined" ) {
/*Line 6476 - 'jquery-1.5.1-vsdoc.js' */			context = context.ownerDocument || context[0] && context[0].ownerDocument || document;
/*Line 6477 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 6479 - 'jquery-1.5.1-vsdoc.js' */		var ret = [];

/*Line 6481 - 'jquery-1.5.1-vsdoc.js' */		for ( var i = 0, elem; (elem = elems[i]) != null; i++ ) {
/*Line 6482 - 'jquery-1.5.1-vsdoc.js' */			if ( typeof elem === "number" ) {
/*Line 6483 - 'jquery-1.5.1-vsdoc.js' */				elem += "";
/*Line 6484 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 6486 - 'jquery-1.5.1-vsdoc.js' */			if ( !elem ) {
/*Line 6487 - 'jquery-1.5.1-vsdoc.js' */				continue;
/*Line 6488 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 6490 - 'jquery-1.5.1-vsdoc.js' */			// Convert html string into DOM nodes
/*Line 6491 - 'jquery-1.5.1-vsdoc.js' */			if ( typeof elem === "string" && !rhtml.test( elem ) ) {
/*Line 6492 - 'jquery-1.5.1-vsdoc.js' */				elem = context.createTextNode( elem );

/*Line 6494 - 'jquery-1.5.1-vsdoc.js' */			} else if ( typeof elem === "string" ) {
/*Line 6495 - 'jquery-1.5.1-vsdoc.js' */				// Fix "XHTML"-style tags in all browsers
/*Line 6496 - 'jquery-1.5.1-vsdoc.js' */				elem = elem.replace(rxhtmlTag, "<$1></$2>");

/*Line 6498 - 'jquery-1.5.1-vsdoc.js' */				// Trim whitespace, otherwise indexOf won't work as expected
/*Line 6499 - 'jquery-1.5.1-vsdoc.js' */				var tag = (rtagName.exec( elem ) || ["", ""])[1].toLowerCase(),
/*Line 6500 - 'jquery-1.5.1-vsdoc.js' */					wrap = wrapMap[ tag ] || wrapMap._default,
/*Line 6501 - 'jquery-1.5.1-vsdoc.js' */					depth = wrap[0],
/*Line 6502 - 'jquery-1.5.1-vsdoc.js' */					div = context.createElement("div");

/*Line 6504 - 'jquery-1.5.1-vsdoc.js' */				// Go to html and back, then peel off extra wrappers
/*Line 6505 - 'jquery-1.5.1-vsdoc.js' */				div.innerHTML = wrap[1] + elem + wrap[2];

/*Line 6507 - 'jquery-1.5.1-vsdoc.js' */				// Move to the right depth
/*Line 6508 - 'jquery-1.5.1-vsdoc.js' */				while ( depth-- ) {
/*Line 6509 - 'jquery-1.5.1-vsdoc.js' */					div = div.lastChild;
/*Line 6510 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 6512 - 'jquery-1.5.1-vsdoc.js' */				// Remove IE's autoinserted <tbody> from table fragments
/*Line 6513 - 'jquery-1.5.1-vsdoc.js' */				if ( !jQuery.support.tbody ) {

/*Line 6515 - 'jquery-1.5.1-vsdoc.js' */					// String was a <table>, *may* have spurious <tbody>
/*Line 6516 - 'jquery-1.5.1-vsdoc.js' */					var hasBody = rtbody.test(elem),
/*Line 6517 - 'jquery-1.5.1-vsdoc.js' */						tbody = tag === "table" && !hasBody ?
/*Line 6518 - 'jquery-1.5.1-vsdoc.js' */							div.firstChild && div.firstChild.childNodes :

/*Line 6520 - 'jquery-1.5.1-vsdoc.js' */							// String was a bare <thead> or <tfoot>
/*Line 6521 - 'jquery-1.5.1-vsdoc.js' */							wrap[1] === "<table>" && !hasBody ?
/*Line 6522 - 'jquery-1.5.1-vsdoc.js' */								div.childNodes :
/*Line 6523 - 'jquery-1.5.1-vsdoc.js' */								[];

/*Line 6525 - 'jquery-1.5.1-vsdoc.js' */					for ( var j = tbody.length - 1; j >= 0 ; --j ) {
/*Line 6526 - 'jquery-1.5.1-vsdoc.js' */						if ( jQuery.nodeName( tbody[ j ], "tbody" ) && !tbody[ j ].childNodes.length ) {
/*Line 6527 - 'jquery-1.5.1-vsdoc.js' */							tbody[ j ].parentNode.removeChild( tbody[ j ] );
/*Line 6528 - 'jquery-1.5.1-vsdoc.js' */						}
/*Line 6529 - 'jquery-1.5.1-vsdoc.js' */					}

/*Line 6531 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 6533 - 'jquery-1.5.1-vsdoc.js' */				// IE completely kills leading whitespace when innerHTML is used
/*Line 6534 - 'jquery-1.5.1-vsdoc.js' */				if ( !jQuery.support.leadingWhitespace && rleadingWhitespace.test( elem ) ) {
/*Line 6535 - 'jquery-1.5.1-vsdoc.js' */					div.insertBefore( context.createTextNode( rleadingWhitespace.exec(elem)[0] ), div.firstChild );
/*Line 6536 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 6538 - 'jquery-1.5.1-vsdoc.js' */				elem = div.childNodes;
/*Line 6539 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 6541 - 'jquery-1.5.1-vsdoc.js' */			if ( elem.nodeType ) {
/*Line 6542 - 'jquery-1.5.1-vsdoc.js' */				ret.push( elem );
/*Line 6543 - 'jquery-1.5.1-vsdoc.js' */			} else {
/*Line 6544 - 'jquery-1.5.1-vsdoc.js' */				ret = jQuery.merge( ret, elem );
/*Line 6545 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 6546 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 6548 - 'jquery-1.5.1-vsdoc.js' */		if ( fragment ) {
/*Line 6549 - 'jquery-1.5.1-vsdoc.js' */			for ( i = 0; ret[i]; i++ ) {
/*Line 6550 - 'jquery-1.5.1-vsdoc.js' */				if ( scripts && jQuery.nodeName( ret[i], "script" ) && (!ret[i].type || ret[i].type.toLowerCase() === "text/javascript") ) {
/*Line 6551 - 'jquery-1.5.1-vsdoc.js' */					scripts.push( ret[i].parentNode ? ret[i].parentNode.removeChild( ret[i] ) : ret[i] );
				
/*Line 6553 - 'jquery-1.5.1-vsdoc.js' */				} else {
/*Line 6554 - 'jquery-1.5.1-vsdoc.js' */					if ( ret[i].nodeType === 1 ) {
/*Line 6555 - 'jquery-1.5.1-vsdoc.js' */						ret.splice.apply( ret, [i + 1, 0].concat(jQuery.makeArray(ret[i].getElementsByTagName("script"))) );
/*Line 6556 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 6557 - 'jquery-1.5.1-vsdoc.js' */					fragment.appendChild( ret[i] );
/*Line 6558 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 6559 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 6560 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 6562 - 'jquery-1.5.1-vsdoc.js' */		return ret;
/*Line 6563 - 'jquery-1.5.1-vsdoc.js' */	},
	
/*Line 6565 - 'jquery-1.5.1-vsdoc.js' */	cleanData: function( elems ) {
/*Line 6566 - 'jquery-1.5.1-vsdoc.js' */		var data, id, cache = jQuery.cache,
/*Line 6567 - 'jquery-1.5.1-vsdoc.js' */			special = jQuery.event.special,
/*Line 6568 - 'jquery-1.5.1-vsdoc.js' */			deleteExpando = jQuery.support.deleteExpando;
		
/*Line 6570 - 'jquery-1.5.1-vsdoc.js' */		for ( var i = 0, elem; (elem = elems[i]) != null; i++ ) {
/*Line 6571 - 'jquery-1.5.1-vsdoc.js' */			if ( elem.nodeName && jQuery.noData[elem.nodeName.toLowerCase()] ) {
/*Line 6572 - 'jquery-1.5.1-vsdoc.js' */				continue;
/*Line 6573 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 6575 - 'jquery-1.5.1-vsdoc.js' */			id = elem[ jQuery.expando ];
			
/*Line 6577 - 'jquery-1.5.1-vsdoc.js' */			if ( id ) {
/*Line 6578 - 'jquery-1.5.1-vsdoc.js' */				data = cache[ id ];
				
/*Line 6580 - 'jquery-1.5.1-vsdoc.js' */				if ( data && data.events ) {
/*Line 6581 - 'jquery-1.5.1-vsdoc.js' */					for ( var type in data.events ) {
/*Line 6582 - 'jquery-1.5.1-vsdoc.js' */						if ( special[ type ] ) {
/*Line 6583 - 'jquery-1.5.1-vsdoc.js' */							jQuery.event.remove( elem, type );

/*Line 6585 - 'jquery-1.5.1-vsdoc.js' */						} else {
/*Line 6586 - 'jquery-1.5.1-vsdoc.js' */							jQuery.removeEvent( elem, type, data.handle );
/*Line 6587 - 'jquery-1.5.1-vsdoc.js' */						}
/*Line 6588 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 6589 - 'jquery-1.5.1-vsdoc.js' */				}
				
/*Line 6591 - 'jquery-1.5.1-vsdoc.js' */				if ( deleteExpando ) {
/*Line 6592 - 'jquery-1.5.1-vsdoc.js' */					delete elem[ jQuery.expando ];

/*Line 6594 - 'jquery-1.5.1-vsdoc.js' */				} else if ( elem.removeAttribute ) {
/*Line 6595 - 'jquery-1.5.1-vsdoc.js' */					elem.removeAttribute( jQuery.expando );
/*Line 6596 - 'jquery-1.5.1-vsdoc.js' */				}
				
/*Line 6598 - 'jquery-1.5.1-vsdoc.js' */				delete cache[ id ];
/*Line 6599 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 6600 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 6601 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 6602 - 'jquery-1.5.1-vsdoc.js' */});

/*Line 6604 - 'jquery-1.5.1-vsdoc.js' */function evalScript( i, elem ) {
/*Line 6605 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 6606 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;This method is internal.
/*Line 6607 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 6608 - 'jquery-1.5.1-vsdoc.js' */	/// <private />

/*Line 6610 - 'jquery-1.5.1-vsdoc.js' */	if ( elem.src ) {
/*Line 6611 - 'jquery-1.5.1-vsdoc.js' */		jQuery.ajax({
/*Line 6612 - 'jquery-1.5.1-vsdoc.js' */			url: elem.src,
/*Line 6613 - 'jquery-1.5.1-vsdoc.js' */			async: false,
/*Line 6614 - 'jquery-1.5.1-vsdoc.js' */			dataType: "script"
/*Line 6615 - 'jquery-1.5.1-vsdoc.js' */		});
/*Line 6616 - 'jquery-1.5.1-vsdoc.js' */	} else {
/*Line 6617 - 'jquery-1.5.1-vsdoc.js' */		jQuery.globalEval( elem.text || elem.textContent || elem.innerHTML || "" );
/*Line 6618 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 6620 - 'jquery-1.5.1-vsdoc.js' */	if ( elem.parentNode ) {
/*Line 6621 - 'jquery-1.5.1-vsdoc.js' */		elem.parentNode.removeChild( elem );
/*Line 6622 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 6623 - 'jquery-1.5.1-vsdoc.js' */}




/*Line 6628 - 'jquery-1.5.1-vsdoc.js' */var ralpha = /alpha\([^)]*\)/i,
/*Line 6629 - 'jquery-1.5.1-vsdoc.js' */	ropacity = /opacity=([^)]*)/,
/*Line 6630 - 'jquery-1.5.1-vsdoc.js' */	rdashAlpha = /-([a-z])/ig,
/*Line 6631 - 'jquery-1.5.1-vsdoc.js' */	rupper = /([A-Z])/g,
/*Line 6632 - 'jquery-1.5.1-vsdoc.js' */	rnumpx = /^-?\d+(?:px)?$/i,
/*Line 6633 - 'jquery-1.5.1-vsdoc.js' */	rnum = /^-?\d/,

/*Line 6635 - 'jquery-1.5.1-vsdoc.js' */	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
/*Line 6636 - 'jquery-1.5.1-vsdoc.js' */	cssWidth = [ "Left", "Right" ],
/*Line 6637 - 'jquery-1.5.1-vsdoc.js' */	cssHeight = [ "Top", "Bottom" ],
/*Line 6638 - 'jquery-1.5.1-vsdoc.js' */	curCSS,

/*Line 6640 - 'jquery-1.5.1-vsdoc.js' */	getComputedStyle,
/*Line 6641 - 'jquery-1.5.1-vsdoc.js' */	currentStyle,

/*Line 6643 - 'jquery-1.5.1-vsdoc.js' */	fcamelCase = function( all, letter ) {
/*Line 6644 - 'jquery-1.5.1-vsdoc.js' */		return letter.toUpperCase();
/*Line 6645 - 'jquery-1.5.1-vsdoc.js' */	};

/*Line 6647 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn.css = function( name, value ) {
/*Line 6648 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 6649 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Set a single style property to a value, on all matched elements.
/*Line 6650 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;If a number is provided, it is automatically converted into a pixel value.
/*Line 6651 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Part of CSS
/*Line 6652 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 6653 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />
/*Line 6654 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="name" type="String">
/*Line 6655 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;A CSS property name.
/*Line 6656 - 'jquery-1.5.1-vsdoc.js' */	///	</param>
/*Line 6657 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="value" type="String">
/*Line 6658 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;A value to set for the property.
/*Line 6659 - 'jquery-1.5.1-vsdoc.js' */	///	</param>

/*Line 6661 - 'jquery-1.5.1-vsdoc.js' */	// Setting 'undefined' is a no-op
/*Line 6662 - 'jquery-1.5.1-vsdoc.js' */	if ( arguments.length === 2 && value === undefined ) {
/*Line 6663 - 'jquery-1.5.1-vsdoc.js' */		return this;
/*Line 6664 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 6666 - 'jquery-1.5.1-vsdoc.js' */	return jQuery.access( this, name, value, true, function( elem, name, value ) {
/*Line 6667 - 'jquery-1.5.1-vsdoc.js' */		return value !== undefined ?
/*Line 6668 - 'jquery-1.5.1-vsdoc.js' */			jQuery.style( elem, name, value ) :
/*Line 6669 - 'jquery-1.5.1-vsdoc.js' */			jQuery.css( elem, name );
/*Line 6670 - 'jquery-1.5.1-vsdoc.js' */	});
/*Line 6671 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 6673 - 'jquery-1.5.1-vsdoc.js' */jQuery.extend({
/*Line 6674 - 'jquery-1.5.1-vsdoc.js' */	// Add in style property hooks for overriding the default
/*Line 6675 - 'jquery-1.5.1-vsdoc.js' */	// behavior of getting and setting a style property
/*Line 6676 - 'jquery-1.5.1-vsdoc.js' */	cssHooks: {
/*Line 6677 - 'jquery-1.5.1-vsdoc.js' */		opacity: {
/*Line 6678 - 'jquery-1.5.1-vsdoc.js' */			get: function( elem, computed ) {
/*Line 6679 - 'jquery-1.5.1-vsdoc.js' */				if ( computed ) {
/*Line 6680 - 'jquery-1.5.1-vsdoc.js' */					// We should always get a number back from opacity
/*Line 6681 - 'jquery-1.5.1-vsdoc.js' */					var ret = curCSS( elem, "opacity", "opacity" );
/*Line 6682 - 'jquery-1.5.1-vsdoc.js' */					return ret === "" ? "1" : ret;

/*Line 6684 - 'jquery-1.5.1-vsdoc.js' */				} else {
/*Line 6685 - 'jquery-1.5.1-vsdoc.js' */					return elem.style.opacity;
/*Line 6686 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 6687 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 6688 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 6689 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 6691 - 'jquery-1.5.1-vsdoc.js' */	// Exclude the following css properties to add px
/*Line 6692 - 'jquery-1.5.1-vsdoc.js' */	cssNumber: {
/*Line 6693 - 'jquery-1.5.1-vsdoc.js' */		"zIndex": true,
/*Line 6694 - 'jquery-1.5.1-vsdoc.js' */		"fontWeight": true,
/*Line 6695 - 'jquery-1.5.1-vsdoc.js' */		"opacity": true,
/*Line 6696 - 'jquery-1.5.1-vsdoc.js' */		"zoom": true,
/*Line 6697 - 'jquery-1.5.1-vsdoc.js' */		"lineHeight": true
/*Line 6698 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 6700 - 'jquery-1.5.1-vsdoc.js' */	// Add in properties whose names you wish to fix before
/*Line 6701 - 'jquery-1.5.1-vsdoc.js' */	// setting or getting the value
/*Line 6702 - 'jquery-1.5.1-vsdoc.js' */	cssProps: {
/*Line 6703 - 'jquery-1.5.1-vsdoc.js' */		// normalize float css property
/*Line 6704 - 'jquery-1.5.1-vsdoc.js' */		"float": jQuery.support.cssFloat ? "cssFloat" : "styleFloat"
/*Line 6705 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 6707 - 'jquery-1.5.1-vsdoc.js' */	// Get and set the style property on a DOM Node
/*Line 6708 - 'jquery-1.5.1-vsdoc.js' */	style: function( elem, name, value, extra ) {
/*Line 6709 - 'jquery-1.5.1-vsdoc.js' */		// Don't set styles on text and comment nodes
/*Line 6710 - 'jquery-1.5.1-vsdoc.js' */		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
/*Line 6711 - 'jquery-1.5.1-vsdoc.js' */			return;
/*Line 6712 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 6714 - 'jquery-1.5.1-vsdoc.js' */		// Make sure that we're working with the right name
/*Line 6715 - 'jquery-1.5.1-vsdoc.js' */		var ret, origName = jQuery.camelCase( name ),
/*Line 6716 - 'jquery-1.5.1-vsdoc.js' */			style = elem.style, hooks = jQuery.cssHooks[ origName ];

/*Line 6718 - 'jquery-1.5.1-vsdoc.js' */		name = jQuery.cssProps[ origName ] || origName;

/*Line 6720 - 'jquery-1.5.1-vsdoc.js' */		// Check if we're setting a value
/*Line 6721 - 'jquery-1.5.1-vsdoc.js' */		if ( value !== undefined ) {
/*Line 6722 - 'jquery-1.5.1-vsdoc.js' */			// Make sure that NaN and null values aren't set. See: #7116
/*Line 6723 - 'jquery-1.5.1-vsdoc.js' */			if ( typeof value === "number" && isNaN( value ) || value == null ) {
/*Line 6724 - 'jquery-1.5.1-vsdoc.js' */				return;
/*Line 6725 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 6727 - 'jquery-1.5.1-vsdoc.js' */			// If a number was passed in, add 'px' to the (except for certain CSS properties)
/*Line 6728 - 'jquery-1.5.1-vsdoc.js' */			if ( typeof value === "number" && !jQuery.cssNumber[ origName ] ) {
/*Line 6729 - 'jquery-1.5.1-vsdoc.js' */				value += "px";
/*Line 6730 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 6732 - 'jquery-1.5.1-vsdoc.js' */			// If a hook was provided, use that value, otherwise just set the specified value
/*Line 6733 - 'jquery-1.5.1-vsdoc.js' */			if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value )) !== undefined ) {
/*Line 6734 - 'jquery-1.5.1-vsdoc.js' */				// Wrapped to prevent IE from throwing errors when 'invalid' values are provided
/*Line 6735 - 'jquery-1.5.1-vsdoc.js' */				// Fixes bug #5509
/*Line 6736 - 'jquery-1.5.1-vsdoc.js' */				try {
/*Line 6737 - 'jquery-1.5.1-vsdoc.js' */					style[ name ] = value;
/*Line 6738 - 'jquery-1.5.1-vsdoc.js' */				} catch(e) {}
/*Line 6739 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 6741 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 6742 - 'jquery-1.5.1-vsdoc.js' */			// If a hook was provided get the non-computed value from there
/*Line 6743 - 'jquery-1.5.1-vsdoc.js' */			if ( hooks && "get" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {
/*Line 6744 - 'jquery-1.5.1-vsdoc.js' */				return ret;
/*Line 6745 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 6747 - 'jquery-1.5.1-vsdoc.js' */			// Otherwise just get the value from the style object
/*Line 6748 - 'jquery-1.5.1-vsdoc.js' */			return style[ name ];
/*Line 6749 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 6750 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 6752 - 'jquery-1.5.1-vsdoc.js' */	css: function( elem, name, extra ) {
/*Line 6753 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 6754 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This method is internal only.
/*Line 6755 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 6756 - 'jquery-1.5.1-vsdoc.js' */		///	<private />

/*Line 6758 - 'jquery-1.5.1-vsdoc.js' */		// Make sure that we're working with the right name
/*Line 6759 - 'jquery-1.5.1-vsdoc.js' */		var ret, origName = jQuery.camelCase( name ),
/*Line 6760 - 'jquery-1.5.1-vsdoc.js' */			hooks = jQuery.cssHooks[ origName ];

/*Line 6762 - 'jquery-1.5.1-vsdoc.js' */		name = jQuery.cssProps[ origName ] || origName;

/*Line 6764 - 'jquery-1.5.1-vsdoc.js' */		// If a hook was provided get the computed value from there
/*Line 6765 - 'jquery-1.5.1-vsdoc.js' */		if ( hooks && "get" in hooks && (ret = hooks.get( elem, true, extra )) !== undefined ) {
/*Line 6766 - 'jquery-1.5.1-vsdoc.js' */			return ret;

/*Line 6768 - 'jquery-1.5.1-vsdoc.js' */		// Otherwise, if a way to get the computed value exists, use that
/*Line 6769 - 'jquery-1.5.1-vsdoc.js' */		} else if ( curCSS ) {
/*Line 6770 - 'jquery-1.5.1-vsdoc.js' */			return curCSS( elem, name, origName );
/*Line 6771 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 6772 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 6774 - 'jquery-1.5.1-vsdoc.js' */	// A method for quickly swapping in/out CSS properties to get correct calculations
/*Line 6775 - 'jquery-1.5.1-vsdoc.js' */	swap: function( elem, options, callback ) {
/*Line 6776 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 6777 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Swap in/out style options.
/*Line 6778 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>

/*Line 6780 - 'jquery-1.5.1-vsdoc.js' */		var old = {};

/*Line 6782 - 'jquery-1.5.1-vsdoc.js' */		// Remember the old values, and insert the new ones
/*Line 6783 - 'jquery-1.5.1-vsdoc.js' */		for ( var name in options ) {
/*Line 6784 - 'jquery-1.5.1-vsdoc.js' */			old[ name ] = elem.style[ name ];
/*Line 6785 - 'jquery-1.5.1-vsdoc.js' */			elem.style[ name ] = options[ name ];
/*Line 6786 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 6788 - 'jquery-1.5.1-vsdoc.js' */		callback.call( elem );

/*Line 6790 - 'jquery-1.5.1-vsdoc.js' */		// Revert the old values
/*Line 6791 - 'jquery-1.5.1-vsdoc.js' */		for ( name in options ) {
/*Line 6792 - 'jquery-1.5.1-vsdoc.js' */			elem.style[ name ] = old[ name ];
/*Line 6793 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 6794 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 6796 - 'jquery-1.5.1-vsdoc.js' */	camelCase: function( string ) {
/*Line 6797 - 'jquery-1.5.1-vsdoc.js' */		return string.replace( rdashAlpha, fcamelCase );
/*Line 6798 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 6799 - 'jquery-1.5.1-vsdoc.js' */});

/*Line 6801 - 'jquery-1.5.1-vsdoc.js' */// DEPRECATED, Use jQuery.css() instead
/*Line 6802 - 'jquery-1.5.1-vsdoc.js' */jQuery.curCSS = jQuery.css;

/*Line 6804 - 'jquery-1.5.1-vsdoc.js' */jQuery.each(["height", "width"], function( i, name ) {
/*Line 6805 - 'jquery-1.5.1-vsdoc.js' */	jQuery.cssHooks[ name ] = {
/*Line 6806 - 'jquery-1.5.1-vsdoc.js' */		get: function( elem, computed, extra ) {
/*Line 6807 - 'jquery-1.5.1-vsdoc.js' */			var val;

/*Line 6809 - 'jquery-1.5.1-vsdoc.js' */			if ( computed ) {
/*Line 6810 - 'jquery-1.5.1-vsdoc.js' */				if ( elem.offsetWidth !== 0 ) {
/*Line 6811 - 'jquery-1.5.1-vsdoc.js' */					val = getWH( elem, name, extra );

/*Line 6813 - 'jquery-1.5.1-vsdoc.js' */				} else {
/*Line 6814 - 'jquery-1.5.1-vsdoc.js' */					jQuery.swap( elem, cssShow, function() {
/*Line 6815 - 'jquery-1.5.1-vsdoc.js' */						val = getWH( elem, name, extra );
/*Line 6816 - 'jquery-1.5.1-vsdoc.js' */					});
/*Line 6817 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 6819 - 'jquery-1.5.1-vsdoc.js' */				if ( val <= 0 ) {
/*Line 6820 - 'jquery-1.5.1-vsdoc.js' */					val = curCSS( elem, name, name );

/*Line 6822 - 'jquery-1.5.1-vsdoc.js' */					if ( val === "0px" && currentStyle ) {
/*Line 6823 - 'jquery-1.5.1-vsdoc.js' */						val = currentStyle( elem, name, name );
/*Line 6824 - 'jquery-1.5.1-vsdoc.js' */					}

/*Line 6826 - 'jquery-1.5.1-vsdoc.js' */					if ( val != null ) {
/*Line 6827 - 'jquery-1.5.1-vsdoc.js' */						// Should return "auto" instead of 0, use 0 for
/*Line 6828 - 'jquery-1.5.1-vsdoc.js' */						// temporary backwards-compat
/*Line 6829 - 'jquery-1.5.1-vsdoc.js' */						return val === "" || val === "auto" ? "0px" : val;
/*Line 6830 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 6831 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 6833 - 'jquery-1.5.1-vsdoc.js' */				if ( val < 0 || val == null ) {
/*Line 6834 - 'jquery-1.5.1-vsdoc.js' */					val = elem.style[ name ];

/*Line 6836 - 'jquery-1.5.1-vsdoc.js' */					// Should return "auto" instead of 0, use 0 for
/*Line 6837 - 'jquery-1.5.1-vsdoc.js' */					// temporary backwards-compat
/*Line 6838 - 'jquery-1.5.1-vsdoc.js' */					return val === "" || val === "auto" ? "0px" : val;
/*Line 6839 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 6841 - 'jquery-1.5.1-vsdoc.js' */				return typeof val === "string" ? val : val + "px";
/*Line 6842 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 6843 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 6845 - 'jquery-1.5.1-vsdoc.js' */		set: function( elem, value ) {
/*Line 6846 - 'jquery-1.5.1-vsdoc.js' */			if ( rnumpx.test( value ) ) {
/*Line 6847 - 'jquery-1.5.1-vsdoc.js' */				// ignore negative width and height values #1599
/*Line 6848 - 'jquery-1.5.1-vsdoc.js' */				value = parseFloat(value);

/*Line 6850 - 'jquery-1.5.1-vsdoc.js' */				if ( value >= 0 ) {
/*Line 6851 - 'jquery-1.5.1-vsdoc.js' */					return value + "px";
/*Line 6852 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 6854 - 'jquery-1.5.1-vsdoc.js' */			} else {
/*Line 6855 - 'jquery-1.5.1-vsdoc.js' */				return value;
/*Line 6856 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 6857 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 6858 - 'jquery-1.5.1-vsdoc.js' */	};
/*Line 6859 - 'jquery-1.5.1-vsdoc.js' */});

/*Line 6861 - 'jquery-1.5.1-vsdoc.js' */if ( !jQuery.support.opacity ) {
/*Line 6862 - 'jquery-1.5.1-vsdoc.js' */	jQuery.cssHooks.opacity = {
/*Line 6863 - 'jquery-1.5.1-vsdoc.js' */		get: function( elem, computed ) {
/*Line 6864 - 'jquery-1.5.1-vsdoc.js' */			// IE uses filters for opacity
/*Line 6865 - 'jquery-1.5.1-vsdoc.js' */			return ropacity.test((computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || "") ?
/*Line 6866 - 'jquery-1.5.1-vsdoc.js' */				(parseFloat(RegExp.$1) / 100) + "" :
/*Line 6867 - 'jquery-1.5.1-vsdoc.js' */				computed ? "1" : "";
/*Line 6868 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 6870 - 'jquery-1.5.1-vsdoc.js' */		set: function( elem, value ) {
/*Line 6871 - 'jquery-1.5.1-vsdoc.js' */			var style = elem.style;

/*Line 6873 - 'jquery-1.5.1-vsdoc.js' */			// IE has trouble with opacity if it does not have layout
/*Line 6874 - 'jquery-1.5.1-vsdoc.js' */			// Force it by setting the zoom level
/*Line 6875 - 'jquery-1.5.1-vsdoc.js' */			style.zoom = 1;

/*Line 6877 - 'jquery-1.5.1-vsdoc.js' */			// Set the alpha filter to set the opacity
/*Line 6878 - 'jquery-1.5.1-vsdoc.js' */			var opacity = jQuery.isNaN(value) ?
/*Line 6879 - 'jquery-1.5.1-vsdoc.js' */				"" :
/*Line 6880 - 'jquery-1.5.1-vsdoc.js' */				"alpha(opacity=" + value * 100 + ")",
/*Line 6881 - 'jquery-1.5.1-vsdoc.js' */				filter = style.filter || "";

/*Line 6883 - 'jquery-1.5.1-vsdoc.js' */			style.filter = ralpha.test(filter) ?
/*Line 6884 - 'jquery-1.5.1-vsdoc.js' */				filter.replace(ralpha, opacity) :
/*Line 6885 - 'jquery-1.5.1-vsdoc.js' */				style.filter + ' ' + opacity;
/*Line 6886 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 6887 - 'jquery-1.5.1-vsdoc.js' */	};
/*Line 6888 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 6890 - 'jquery-1.5.1-vsdoc.js' */if ( document.defaultView && document.defaultView.getComputedStyle ) {
/*Line 6891 - 'jquery-1.5.1-vsdoc.js' */	getComputedStyle = function( elem, newName, name ) {
/*Line 6892 - 'jquery-1.5.1-vsdoc.js' */		var ret, defaultView, computedStyle;

/*Line 6894 - 'jquery-1.5.1-vsdoc.js' */		name = name.replace( rupper, "-$1" ).toLowerCase();

/*Line 6896 - 'jquery-1.5.1-vsdoc.js' */		if ( !(defaultView = elem.ownerDocument.defaultView) ) {
/*Line 6897 - 'jquery-1.5.1-vsdoc.js' */			return undefined;
/*Line 6898 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 6900 - 'jquery-1.5.1-vsdoc.js' */		if ( (computedStyle = defaultView.getComputedStyle( elem, null )) ) {
/*Line 6901 - 'jquery-1.5.1-vsdoc.js' */			ret = computedStyle.getPropertyValue( name );
/*Line 6902 - 'jquery-1.5.1-vsdoc.js' */			if ( ret === "" && !jQuery.contains( elem.ownerDocument.documentElement, elem ) ) {
/*Line 6903 - 'jquery-1.5.1-vsdoc.js' */				ret = jQuery.style( elem, name );
/*Line 6904 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 6905 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 6907 - 'jquery-1.5.1-vsdoc.js' */		return ret;
/*Line 6908 - 'jquery-1.5.1-vsdoc.js' */	};
/*Line 6909 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 6911 - 'jquery-1.5.1-vsdoc.js' */if ( document.documentElement.currentStyle ) {
/*Line 6912 - 'jquery-1.5.1-vsdoc.js' */	currentStyle = function( elem, name ) {
/*Line 6913 - 'jquery-1.5.1-vsdoc.js' */		var left, rsLeft,
/*Line 6914 - 'jquery-1.5.1-vsdoc.js' */			ret = elem.currentStyle && elem.currentStyle[ name ],
/*Line 6915 - 'jquery-1.5.1-vsdoc.js' */			style = elem.style;

/*Line 6917 - 'jquery-1.5.1-vsdoc.js' */		// From the awesome hack by Dean Edwards
/*Line 6918 - 'jquery-1.5.1-vsdoc.js' */		// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291

/*Line 6920 - 'jquery-1.5.1-vsdoc.js' */		// If we're not dealing with a regular pixel number
/*Line 6921 - 'jquery-1.5.1-vsdoc.js' */		// but a number that has a weird ending, we need to convert it to pixels
/*Line 6922 - 'jquery-1.5.1-vsdoc.js' */		if ( !rnumpx.test( ret ) && rnum.test( ret ) ) {
/*Line 6923 - 'jquery-1.5.1-vsdoc.js' */			// Remember the original values
/*Line 6924 - 'jquery-1.5.1-vsdoc.js' */			left = style.left;
/*Line 6925 - 'jquery-1.5.1-vsdoc.js' */			rsLeft = elem.runtimeStyle.left;

/*Line 6927 - 'jquery-1.5.1-vsdoc.js' */			// Put in the new values to get a computed value out
/*Line 6928 - 'jquery-1.5.1-vsdoc.js' */			elem.runtimeStyle.left = elem.currentStyle.left;
/*Line 6929 - 'jquery-1.5.1-vsdoc.js' */			style.left = name === "fontSize" ? "1em" : (ret || 0);
/*Line 6930 - 'jquery-1.5.1-vsdoc.js' */			ret = style.pixelLeft + "px";

/*Line 6932 - 'jquery-1.5.1-vsdoc.js' */			// Revert the changed values
/*Line 6933 - 'jquery-1.5.1-vsdoc.js' */			style.left = left;
/*Line 6934 - 'jquery-1.5.1-vsdoc.js' */			elem.runtimeStyle.left = rsLeft;
/*Line 6935 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 6937 - 'jquery-1.5.1-vsdoc.js' */		return ret === "" ? "auto" : ret;
/*Line 6938 - 'jquery-1.5.1-vsdoc.js' */	};
/*Line 6939 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 6941 - 'jquery-1.5.1-vsdoc.js' */curCSS = getComputedStyle || currentStyle;

/*Line 6943 - 'jquery-1.5.1-vsdoc.js' */function getWH( elem, name, extra ) {
/*Line 6944 - 'jquery-1.5.1-vsdoc.js' */	var which = name === "width" ? cssWidth : cssHeight,
/*Line 6945 - 'jquery-1.5.1-vsdoc.js' */		val = name === "width" ? elem.offsetWidth : elem.offsetHeight;

/*Line 6947 - 'jquery-1.5.1-vsdoc.js' */	if ( extra === "border" ) {
/*Line 6948 - 'jquery-1.5.1-vsdoc.js' */		return val;
/*Line 6949 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 6951 - 'jquery-1.5.1-vsdoc.js' */	jQuery.each( which, function() {
/*Line 6952 - 'jquery-1.5.1-vsdoc.js' */		if ( !extra ) {
/*Line 6953 - 'jquery-1.5.1-vsdoc.js' */			val -= parseFloat(jQuery.css( elem, "padding" + this )) || 0;
/*Line 6954 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 6956 - 'jquery-1.5.1-vsdoc.js' */		if ( extra === "margin" ) {
/*Line 6957 - 'jquery-1.5.1-vsdoc.js' */			val += parseFloat(jQuery.css( elem, "margin" + this )) || 0;

/*Line 6959 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 6960 - 'jquery-1.5.1-vsdoc.js' */			val -= parseFloat(jQuery.css( elem, "border" + this + "Width" )) || 0;
/*Line 6961 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 6962 - 'jquery-1.5.1-vsdoc.js' */	});

/*Line 6964 - 'jquery-1.5.1-vsdoc.js' */	return val;
/*Line 6965 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 6967 - 'jquery-1.5.1-vsdoc.js' */if ( jQuery.expr && jQuery.expr.filters ) {
/*Line 6968 - 'jquery-1.5.1-vsdoc.js' */	jQuery.expr.filters.hidden = function( elem ) {
/*Line 6969 - 'jquery-1.5.1-vsdoc.js' */		var width = elem.offsetWidth,
/*Line 6970 - 'jquery-1.5.1-vsdoc.js' */			height = elem.offsetHeight;

/*Line 6972 - 'jquery-1.5.1-vsdoc.js' */		return (width === 0 && height === 0) || (!jQuery.support.reliableHiddenOffsets && (elem.style.display || jQuery.css( elem, "display" )) === "none");
/*Line 6973 - 'jquery-1.5.1-vsdoc.js' */	};

/*Line 6975 - 'jquery-1.5.1-vsdoc.js' */	jQuery.expr.filters.visible = function( elem ) {
/*Line 6976 - 'jquery-1.5.1-vsdoc.js' */		return !jQuery.expr.filters.hidden( elem );
/*Line 6977 - 'jquery-1.5.1-vsdoc.js' */	};
/*Line 6978 - 'jquery-1.5.1-vsdoc.js' */}




/*Line 6983 - 'jquery-1.5.1-vsdoc.js' */var jsc = jQuery.now(),
/*Line 6984 - 'jquery-1.5.1-vsdoc.js' */	rscript = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
/*Line 6985 - 'jquery-1.5.1-vsdoc.js' */	rselectTextarea = /^(?:select|textarea)/i,
/*Line 6986 - 'jquery-1.5.1-vsdoc.js' */	rinput = /^(?:color|date|datetime|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,
/*Line 6987 - 'jquery-1.5.1-vsdoc.js' */	rnoContent = /^(?:GET|HEAD)$/,
/*Line 6988 - 'jquery-1.5.1-vsdoc.js' */	rbracket = /\[\]$/,
/*Line 6989 - 'jquery-1.5.1-vsdoc.js' */	jsre = /\=\?(&|$)/,
/*Line 6990 - 'jquery-1.5.1-vsdoc.js' */	rquery = /\?/,
/*Line 6991 - 'jquery-1.5.1-vsdoc.js' */	rts = /([?&])_=[^&]*/,
/*Line 6992 - 'jquery-1.5.1-vsdoc.js' */	rurl = /^(\w+:)?\/\/([^\/?#]+)/,
/*Line 6993 - 'jquery-1.5.1-vsdoc.js' */	r20 = /%20/g,
/*Line 6994 - 'jquery-1.5.1-vsdoc.js' */	rhash = /#.*$/,

/*Line 6996 - 'jquery-1.5.1-vsdoc.js' */	// Keep a copy of the old load method
/*Line 6997 - 'jquery-1.5.1-vsdoc.js' */	_load = jQuery.fn.load;

/*Line 6999 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn.extend({
/*Line 7000 - 'jquery-1.5.1-vsdoc.js' */	load: function( url, params, callback ) {
/*Line 7001 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 7002 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Loads HTML from a remote file and injects it into the DOM.  By default performs a GET request, but if parameters are included
/*Line 7003 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;then a POST will be performed.
/*Line 7004 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 7005 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="url" type="String">The URL of the HTML page to load.</param>
/*Line 7006 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="data" optional="true" type="Map">Key/value pairs that will be sent to the server.</param>
/*Line 7007 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="callback" optional="true" type="Function">The function called when the AJAX request is complete.  It should map function(responseText, textStatus, XMLHttpRequest) such that this maps the injected DOM element.</param>
/*Line 7008 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 7010 - 'jquery-1.5.1-vsdoc.js' */		if ( typeof url !== "string" && _load ) {
/*Line 7011 - 'jquery-1.5.1-vsdoc.js' */			return _load.apply( this, arguments );

/*Line 7013 - 'jquery-1.5.1-vsdoc.js' */		// Don't do a request if no elements are being requested
/*Line 7014 - 'jquery-1.5.1-vsdoc.js' */		} else if ( !this.length ) {
/*Line 7015 - 'jquery-1.5.1-vsdoc.js' */			return this;
/*Line 7016 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 7018 - 'jquery-1.5.1-vsdoc.js' */		var off = url.indexOf(" ");
/*Line 7019 - 'jquery-1.5.1-vsdoc.js' */		if ( off >= 0 ) {
/*Line 7020 - 'jquery-1.5.1-vsdoc.js' */			var selector = url.slice(off, url.length);
/*Line 7021 - 'jquery-1.5.1-vsdoc.js' */			url = url.slice(0, off);
/*Line 7022 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 7024 - 'jquery-1.5.1-vsdoc.js' */		// Default to a GET request
/*Line 7025 - 'jquery-1.5.1-vsdoc.js' */		var type = "GET";

/*Line 7027 - 'jquery-1.5.1-vsdoc.js' */		// If the second parameter was provided
/*Line 7028 - 'jquery-1.5.1-vsdoc.js' */		if ( params ) {
/*Line 7029 - 'jquery-1.5.1-vsdoc.js' */			// If it's a function
/*Line 7030 - 'jquery-1.5.1-vsdoc.js' */			if ( jQuery.isFunction( params ) ) {
/*Line 7031 - 'jquery-1.5.1-vsdoc.js' */				// We assume that it's the callback
/*Line 7032 - 'jquery-1.5.1-vsdoc.js' */				callback = params;
/*Line 7033 - 'jquery-1.5.1-vsdoc.js' */				params = null;

/*Line 7035 - 'jquery-1.5.1-vsdoc.js' */			// Otherwise, build a param string
/*Line 7036 - 'jquery-1.5.1-vsdoc.js' */			} else if ( typeof params === "object" ) {
/*Line 7037 - 'jquery-1.5.1-vsdoc.js' */				params = jQuery.param( params, jQuery.ajaxSettings.traditional );
/*Line 7038 - 'jquery-1.5.1-vsdoc.js' */				type = "POST";
/*Line 7039 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 7040 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 7042 - 'jquery-1.5.1-vsdoc.js' */		var self = this;

/*Line 7044 - 'jquery-1.5.1-vsdoc.js' */		// Request the remote document
/*Line 7045 - 'jquery-1.5.1-vsdoc.js' */		jQuery.ajax({
/*Line 7046 - 'jquery-1.5.1-vsdoc.js' */			url: url,
/*Line 7047 - 'jquery-1.5.1-vsdoc.js' */			type: type,
/*Line 7048 - 'jquery-1.5.1-vsdoc.js' */			dataType: "html",
/*Line 7049 - 'jquery-1.5.1-vsdoc.js' */			data: params,
/*Line 7050 - 'jquery-1.5.1-vsdoc.js' */			complete: function( res, status ) {
/*Line 7051 - 'jquery-1.5.1-vsdoc.js' */				// If successful, inject the HTML into all the matched elements
/*Line 7052 - 'jquery-1.5.1-vsdoc.js' */				if ( status === "success" || status === "notmodified" ) {
/*Line 7053 - 'jquery-1.5.1-vsdoc.js' */					// See if a selector was specified
/*Line 7054 - 'jquery-1.5.1-vsdoc.js' */					self.html( selector ?
/*Line 7055 - 'jquery-1.5.1-vsdoc.js' */						// Create a dummy div to hold the results
/*Line 7056 - 'jquery-1.5.1-vsdoc.js' */						jQuery("<div>")
/*Line 7057 - 'jquery-1.5.1-vsdoc.js' */							// inject the contents of the document in, removing the scripts
/*Line 7058 - 'jquery-1.5.1-vsdoc.js' */							// to avoid any 'Permission Denied' errors in IE
/*Line 7059 - 'jquery-1.5.1-vsdoc.js' */							.append(res.responseText.replace(rscript, ""))

/*Line 7061 - 'jquery-1.5.1-vsdoc.js' */							// Locate the specified elements
/*Line 7062 - 'jquery-1.5.1-vsdoc.js' */							.find(selector) :

/*Line 7064 - 'jquery-1.5.1-vsdoc.js' */						// If not, just inject the full result
/*Line 7065 - 'jquery-1.5.1-vsdoc.js' */						res.responseText );
/*Line 7066 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 7068 - 'jquery-1.5.1-vsdoc.js' */				if ( callback ) {
/*Line 7069 - 'jquery-1.5.1-vsdoc.js' */					self.each( callback, [res.responseText, status, res] );
/*Line 7070 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 7071 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 7072 - 'jquery-1.5.1-vsdoc.js' */		});

/*Line 7074 - 'jquery-1.5.1-vsdoc.js' */		return this;
/*Line 7075 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 7077 - 'jquery-1.5.1-vsdoc.js' */	serialize: function() {
/*Line 7078 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 7079 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Serializes a set of input elements into a string of data.
/*Line 7080 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 7081 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="String">The serialized result</returns>

/*Line 7083 - 'jquery-1.5.1-vsdoc.js' */		return jQuery.param(this.serializeArray());
/*Line 7084 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 7086 - 'jquery-1.5.1-vsdoc.js' */	serializeArray: function() {
/*Line 7087 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 7088 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Serializes all forms and form elements but returns a JSON data structure.
/*Line 7089 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 7090 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="String">A JSON data structure representing the serialized items.</returns>

/*Line 7092 - 'jquery-1.5.1-vsdoc.js' */		return this.map(function() {
/*Line 7093 - 'jquery-1.5.1-vsdoc.js' */			return this.elements ? jQuery.makeArray(this.elements) : this;
/*Line 7094 - 'jquery-1.5.1-vsdoc.js' */		})
/*Line 7095 - 'jquery-1.5.1-vsdoc.js' */		.filter(function() {
/*Line 7096 - 'jquery-1.5.1-vsdoc.js' */			return this.name && !this.disabled &&
/*Line 7097 - 'jquery-1.5.1-vsdoc.js' */				(this.checked || rselectTextarea.test(this.nodeName) ||
/*Line 7098 - 'jquery-1.5.1-vsdoc.js' */					rinput.test(this.type));
/*Line 7099 - 'jquery-1.5.1-vsdoc.js' */		})
/*Line 7100 - 'jquery-1.5.1-vsdoc.js' */		.map(function( i, elem ) {
/*Line 7101 - 'jquery-1.5.1-vsdoc.js' */			var val = jQuery(this).val();

/*Line 7103 - 'jquery-1.5.1-vsdoc.js' */			return val == null ?
/*Line 7104 - 'jquery-1.5.1-vsdoc.js' */				null :
/*Line 7105 - 'jquery-1.5.1-vsdoc.js' */				jQuery.isArray(val) ?
/*Line 7106 - 'jquery-1.5.1-vsdoc.js' */					jQuery.map( val, function( val, i ) {
/*Line 7107 - 'jquery-1.5.1-vsdoc.js' */						return { name: elem.name, value: val };
/*Line 7108 - 'jquery-1.5.1-vsdoc.js' */					}) :
/*Line 7109 - 'jquery-1.5.1-vsdoc.js' */					{ name: elem.name, value: val };
/*Line 7110 - 'jquery-1.5.1-vsdoc.js' */		}).get();
/*Line 7111 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 7112 - 'jquery-1.5.1-vsdoc.js' */});

/*Line 7114 - 'jquery-1.5.1-vsdoc.js' */// Attach a bunch of functions for handling common AJAX events
/*Line 7115 - 'jquery-1.5.1-vsdoc.js' *///	jQuery.each( "ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "), function( i, o ) {
/*Line 7116 - 'jquery-1.5.1-vsdoc.js' *///		jQuery.fn[o] = function( f ) {
/*Line 7117 - 'jquery-1.5.1-vsdoc.js' *///			return this.bind(o, f);
/*Line 7118 - 'jquery-1.5.1-vsdoc.js' *///		};
/*Line 7119 - 'jquery-1.5.1-vsdoc.js' *///	});

/*Line 7121 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn["ajaxStart"] = function( f ) {
/*Line 7122 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 7123 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Attach a function to be executed whenever an AJAX request begins and there is none already active. This is an Ajax Event.
/*Line 7124 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 7125 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="f" type="Function">The function to execute.</param>
/*Line 7126 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 7128 - 'jquery-1.5.1-vsdoc.js' */	return this.bind("ajaxStart", f);
/*Line 7129 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 7131 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn["ajaxStop"] = function( f ) {
/*Line 7132 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 7133 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Attach a function to be executed whenever all AJAX requests have ended. This is an Ajax Event.
/*Line 7134 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 7135 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="f" type="Function">The function to execute.</param>
/*Line 7136 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 7138 - 'jquery-1.5.1-vsdoc.js' */	return this.bind("ajaxStop", f);
/*Line 7139 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 7141 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn["ajaxComplete"] = function( f ) {
/*Line 7142 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 7143 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Attach a function to be executed whenever an AJAX request completes. This is an Ajax Event.
/*Line 7144 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 7145 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="f" type="Function">The function to execute.</param>
/*Line 7146 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 7148 - 'jquery-1.5.1-vsdoc.js' */	return this.bind("ajaxComplete", f);
/*Line 7149 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 7151 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn["ajaxError"] = function( f ) {
/*Line 7152 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 7153 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Attach a function to be executed whenever an AJAX request fails. This is an Ajax Event.
/*Line 7154 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 7155 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="f" type="Function">The function to execute.</param>
/*Line 7156 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 7158 - 'jquery-1.5.1-vsdoc.js' */	return this.bind("ajaxError", f);
/*Line 7159 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 7161 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn["ajaxSuccess"] = function( f ) {
/*Line 7162 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 7163 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Attach a function to be executed whenever an AJAX request completes successfully. This is an Ajax Event.
/*Line 7164 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 7165 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="f" type="Function">The function to execute.</param>
/*Line 7166 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 7168 - 'jquery-1.5.1-vsdoc.js' */	return this.bind("ajaxSuccess", f);
/*Line 7169 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 7171 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn["ajaxSend"] = function( f ) {
/*Line 7172 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 7173 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Attach a function to be executed before an AJAX request is sent. This is an Ajax Event.
/*Line 7174 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 7175 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="f" type="Function">The function to execute.</param>
/*Line 7176 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 7178 - 'jquery-1.5.1-vsdoc.js' */	return this.bind("ajaxSend", f);
/*Line 7179 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 7181 - 'jquery-1.5.1-vsdoc.js' */jQuery.extend({
/*Line 7182 - 'jquery-1.5.1-vsdoc.js' */	get: function( url, data, callback, type ) {
/*Line 7183 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 7184 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Loads a remote page using an HTTP GET request.
/*Line 7185 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 7186 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="url" type="String">The URL of the HTML page to load.</param>
/*Line 7187 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="data" optional="true" type="Map">Key/value pairs that will be sent to the server.</param>
/*Line 7188 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="callback" optional="true" type="Function">The function called when the AJAX request is complete.  It should map function(responseText, textStatus) such that this maps the options for this AJAX request.</param>
/*Line 7189 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="type" optional="true" type="String">Type of data to be returned to callback function.  Valid valiues are xml, html, script, json, text, _default.</param>
/*Line 7190 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="XMLHttpRequest" />

/*Line 7192 - 'jquery-1.5.1-vsdoc.js' */		// shift arguments if data argument was omited
/*Line 7193 - 'jquery-1.5.1-vsdoc.js' */		if ( jQuery.isFunction( data ) ) {
/*Line 7194 - 'jquery-1.5.1-vsdoc.js' */			type = type || callback;
/*Line 7195 - 'jquery-1.5.1-vsdoc.js' */			callback = data;
/*Line 7196 - 'jquery-1.5.1-vsdoc.js' */			data = null;
/*Line 7197 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 7199 - 'jquery-1.5.1-vsdoc.js' */		return jQuery.ajax({
/*Line 7200 - 'jquery-1.5.1-vsdoc.js' */			type: "GET",
/*Line 7201 - 'jquery-1.5.1-vsdoc.js' */			url: url,
/*Line 7202 - 'jquery-1.5.1-vsdoc.js' */			data: data,
/*Line 7203 - 'jquery-1.5.1-vsdoc.js' */			success: callback,
/*Line 7204 - 'jquery-1.5.1-vsdoc.js' */			dataType: type
/*Line 7205 - 'jquery-1.5.1-vsdoc.js' */		});
/*Line 7206 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 7208 - 'jquery-1.5.1-vsdoc.js' */	getScript: function( url, callback ) {
/*Line 7209 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 7210 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Loads and executes a local JavaScript file using an HTTP GET request.
/*Line 7211 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 7212 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="url" type="String">The URL of the script to load.</param>
/*Line 7213 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="callback" optional="true" type="Function">The function called when the AJAX request is complete.  It should map function(data, textStatus) such that this maps the options for the AJAX request.</param>
/*Line 7214 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="XMLHttpRequest" />

/*Line 7216 - 'jquery-1.5.1-vsdoc.js' */		return jQuery.get(url, null, callback, "script");
/*Line 7217 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 7219 - 'jquery-1.5.1-vsdoc.js' */	getJSON: function( url, data, callback ) {
/*Line 7220 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 7221 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Loads JSON data using an HTTP GET request.
/*Line 7222 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 7223 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="url" type="String">The URL of the JSON data to load.</param>
/*Line 7224 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="data" optional="true" type="Map">Key/value pairs that will be sent to the server.</param>
/*Line 7225 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="callback" optional="true" type="Function">The function called when the AJAX request is complete if the data is loaded successfully.  It should map function(data, textStatus) such that this maps the options for this AJAX request.</param>
/*Line 7226 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="XMLHttpRequest" />

/*Line 7228 - 'jquery-1.5.1-vsdoc.js' */		return jQuery.get(url, data, callback, "json");
/*Line 7229 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 7231 - 'jquery-1.5.1-vsdoc.js' */	post: function( url, data, callback, type ) {
/*Line 7232 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 7233 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Loads a remote page using an HTTP POST request.
/*Line 7234 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 7235 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="url" type="String">The URL of the HTML page to load.</param>
/*Line 7236 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="data" optional="true" type="Map">Key/value pairs that will be sent to the server.</param>
/*Line 7237 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="callback" optional="true" type="Function">The function called when the AJAX request is complete.  It should map function(responseText, textStatus) such that this maps the options for this AJAX request.</param>
/*Line 7238 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="type" optional="true" type="String">Type of data to be returned to callback function.  Valid valiues are xml, html, script, json, text, _default.</param>
/*Line 7239 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="XMLHttpRequest" />

/*Line 7241 - 'jquery-1.5.1-vsdoc.js' */		// shift arguments if data argument was omited
/*Line 7242 - 'jquery-1.5.1-vsdoc.js' */		if ( jQuery.isFunction( data ) ) {
/*Line 7243 - 'jquery-1.5.1-vsdoc.js' */			type = type || callback;
/*Line 7244 - 'jquery-1.5.1-vsdoc.js' */			callback = data;
/*Line 7245 - 'jquery-1.5.1-vsdoc.js' */			data = {};
/*Line 7246 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 7248 - 'jquery-1.5.1-vsdoc.js' */		return jQuery.ajax({
/*Line 7249 - 'jquery-1.5.1-vsdoc.js' */			type: "POST",
/*Line 7250 - 'jquery-1.5.1-vsdoc.js' */			url: url,
/*Line 7251 - 'jquery-1.5.1-vsdoc.js' */			data: data,
/*Line 7252 - 'jquery-1.5.1-vsdoc.js' */			success: callback,
/*Line 7253 - 'jquery-1.5.1-vsdoc.js' */			dataType: type
/*Line 7254 - 'jquery-1.5.1-vsdoc.js' */		});
/*Line 7255 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 7257 - 'jquery-1.5.1-vsdoc.js' */	ajaxSetup: function( settings ) {
/*Line 7258 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 7259 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Sets up global settings for AJAX requests.
/*Line 7260 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 7261 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="settings" type="Options">A set of key/value pairs that configure the default Ajax request.</param>

/*Line 7263 - 'jquery-1.5.1-vsdoc.js' */		jQuery.extend( jQuery.ajaxSettings, settings );
/*Line 7264 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 7266 - 'jquery-1.5.1-vsdoc.js' */	ajaxSettings: {
/*Line 7267 - 'jquery-1.5.1-vsdoc.js' */		url: location.href,
/*Line 7268 - 'jquery-1.5.1-vsdoc.js' */		global: true,
/*Line 7269 - 'jquery-1.5.1-vsdoc.js' */		type: "GET",
/*Line 7270 - 'jquery-1.5.1-vsdoc.js' */		contentType: "application/x-www-form-urlencoded",
/*Line 7271 - 'jquery-1.5.1-vsdoc.js' */		processData: true,
/*Line 7272 - 'jquery-1.5.1-vsdoc.js' */		async: true,
/*Line 7273 - 'jquery-1.5.1-vsdoc.js' */		/*
/*Line 7274 - 'jquery-1.5.1-vsdoc.js' */		timeout: 0,
/*Line 7275 - 'jquery-1.5.1-vsdoc.js' */		data: null,
/*Line 7276 - 'jquery-1.5.1-vsdoc.js' */		username: null,
/*Line 7277 - 'jquery-1.5.1-vsdoc.js' */		password: null,
/*Line 7278 - 'jquery-1.5.1-vsdoc.js' */		traditional: false,
/*Line 7279 - 'jquery-1.5.1-vsdoc.js' */		*/
/*Line 7280 - 'jquery-1.5.1-vsdoc.js' */		// This function can be overriden by calling jQuery.ajaxSetup
/*Line 7281 - 'jquery-1.5.1-vsdoc.js' */		xhr: function() {
/*Line 7282 - 'jquery-1.5.1-vsdoc.js' */			return new window.XMLHttpRequest();
/*Line 7283 - 'jquery-1.5.1-vsdoc.js' */		},
/*Line 7284 - 'jquery-1.5.1-vsdoc.js' */		accepts: {
/*Line 7285 - 'jquery-1.5.1-vsdoc.js' */			xml: "application/xml, text/xml",
/*Line 7286 - 'jquery-1.5.1-vsdoc.js' */			html: "text/html",
/*Line 7287 - 'jquery-1.5.1-vsdoc.js' */			script: "text/javascript, application/javascript",
/*Line 7288 - 'jquery-1.5.1-vsdoc.js' */			json: "application/json, text/javascript",
/*Line 7289 - 'jquery-1.5.1-vsdoc.js' */			text: "text/plain",
/*Line 7290 - 'jquery-1.5.1-vsdoc.js' */			_default: "*/*"
/*Line 7291 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 7292 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 7294 - 'jquery-1.5.1-vsdoc.js' */    ajax: function (url, options) {
/*Line 7295 - 'jquery-1.5.1-vsdoc.js' */        /// <summary>
/*Line 7296 - 'jquery-1.5.1-vsdoc.js' */        ///     Perform an asynchronous HTTP (Ajax) request.
/*Line 7297 - 'jquery-1.5.1-vsdoc.js' */        ///     &#10;1 - jQuery.ajax(url, settings) 
/*Line 7298 - 'jquery-1.5.1-vsdoc.js' */        ///     &#10;2 - jQuery.ajax(settings)
/*Line 7299 - 'jquery-1.5.1-vsdoc.js' */        /// </summary>
/*Line 7300 - 'jquery-1.5.1-vsdoc.js' */        /// <param name="url" type="String">
/*Line 7301 - 'jquery-1.5.1-vsdoc.js' */        ///     A string containing the URL to which the request is sent.
/*Line 7302 - 'jquery-1.5.1-vsdoc.js' */        /// </param>
/*Line 7303 - 'jquery-1.5.1-vsdoc.js' */        /// <param name="options" type="Object">
/*Line 7304 - 'jquery-1.5.1-vsdoc.js' */        ///     A set of key/value pairs that configure the Ajax request.
/*Line 7305 - 'jquery-1.5.1-vsdoc.js' */        /// </param>

/*Line 7307 - 'jquery-1.5.1-vsdoc.js' */        // If url is an object, simulate pre-1.5 signature
/*Line 7308 - 'jquery-1.5.1-vsdoc.js' */        if (typeof url === "object") {
/*Line 7309 - 'jquery-1.5.1-vsdoc.js' */            options = url;
/*Line 7310 - 'jquery-1.5.1-vsdoc.js' */            url = undefined;
/*Line 7311 - 'jquery-1.5.1-vsdoc.js' */        }

/*Line 7313 - 'jquery-1.5.1-vsdoc.js' */        // Force options to be an object
/*Line 7314 - 'jquery-1.5.1-vsdoc.js' */        options = options || {};

/*Line 7316 - 'jquery-1.5.1-vsdoc.js' */        // Create the final options object
/*Line 7317 - 'jquery-1.5.1-vsdoc.js' */        var s = jQuery.ajaxSetup({}, options),
/*Line 7318 - 'jquery-1.5.1-vsdoc.js' */        // Callbacks context
/*Line 7319 - 'jquery-1.5.1-vsdoc.js' */			    callbackContext = s.context || s,
/*Line 7320 - 'jquery-1.5.1-vsdoc.js' */        // Context for global events
/*Line 7321 - 'jquery-1.5.1-vsdoc.js' */        // It's the callbackContext if one was provided in the options
/*Line 7322 - 'jquery-1.5.1-vsdoc.js' */        // and if it's a DOM node or a jQuery collection
/*Line 7323 - 'jquery-1.5.1-vsdoc.js' */			    globalEventContext = callbackContext !== s &&
/*Line 7324 - 'jquery-1.5.1-vsdoc.js' */				    (callbackContext.nodeType || callbackContext instanceof jQuery) ?
/*Line 7325 - 'jquery-1.5.1-vsdoc.js' */						    jQuery(callbackContext) : jQuery.event,
/*Line 7326 - 'jquery-1.5.1-vsdoc.js' */        // Deferreds
/*Line 7327 - 'jquery-1.5.1-vsdoc.js' */			    deferred = jQuery.Deferred(),
/*Line 7328 - 'jquery-1.5.1-vsdoc.js' */			    completeDeferred = jQuery._Deferred(),
/*Line 7329 - 'jquery-1.5.1-vsdoc.js' */        // Status-dependent callbacks
/*Line 7330 - 'jquery-1.5.1-vsdoc.js' */			    statusCode = s.statusCode || {},
/*Line 7331 - 'jquery-1.5.1-vsdoc.js' */        // ifModified key
/*Line 7332 - 'jquery-1.5.1-vsdoc.js' */			    ifModifiedKey,
/*Line 7333 - 'jquery-1.5.1-vsdoc.js' */        // Headers (they are sent all at once)
/*Line 7334 - 'jquery-1.5.1-vsdoc.js' */			    requestHeaders = {},
/*Line 7335 - 'jquery-1.5.1-vsdoc.js' */        // Response headers
/*Line 7336 - 'jquery-1.5.1-vsdoc.js' */			    responseHeadersString,
/*Line 7337 - 'jquery-1.5.1-vsdoc.js' */			    responseHeaders,
/*Line 7338 - 'jquery-1.5.1-vsdoc.js' */        // transport
/*Line 7339 - 'jquery-1.5.1-vsdoc.js' */			    transport,
/*Line 7340 - 'jquery-1.5.1-vsdoc.js' */        // timeout handle
/*Line 7341 - 'jquery-1.5.1-vsdoc.js' */			    timeoutTimer,
/*Line 7342 - 'jquery-1.5.1-vsdoc.js' */        // Cross-domain detection vars
/*Line 7343 - 'jquery-1.5.1-vsdoc.js' */			    parts,
/*Line 7344 - 'jquery-1.5.1-vsdoc.js' */        // The jqXHR state
/*Line 7345 - 'jquery-1.5.1-vsdoc.js' */			    state = 0,
/*Line 7346 - 'jquery-1.5.1-vsdoc.js' */        // To know if global events are to be dispatched
/*Line 7347 - 'jquery-1.5.1-vsdoc.js' */			    fireGlobals,
/*Line 7348 - 'jquery-1.5.1-vsdoc.js' */        // Loop variable
/*Line 7349 - 'jquery-1.5.1-vsdoc.js' */			    i,
/*Line 7350 - 'jquery-1.5.1-vsdoc.js' */        // Fake xhr
/*Line 7351 - 'jquery-1.5.1-vsdoc.js' */			    jqXHR = {

/*Line 7353 - 'jquery-1.5.1-vsdoc.js' */			        readyState: 0,

/*Line 7355 - 'jquery-1.5.1-vsdoc.js' */			        // Caches the header
/*Line 7356 - 'jquery-1.5.1-vsdoc.js' */			        setRequestHeader: function (name, value) {
/*Line 7357 - 'jquery-1.5.1-vsdoc.js' */			            if (!state) {
/*Line 7358 - 'jquery-1.5.1-vsdoc.js' */			                requestHeaders[name.toLowerCase().replace(rucHeaders, rucHeadersFunc)] = value;
/*Line 7359 - 'jquery-1.5.1-vsdoc.js' */			            }
/*Line 7360 - 'jquery-1.5.1-vsdoc.js' */			            return this;
/*Line 7361 - 'jquery-1.5.1-vsdoc.js' */			        },

/*Line 7363 - 'jquery-1.5.1-vsdoc.js' */			        // Raw string
/*Line 7364 - 'jquery-1.5.1-vsdoc.js' */			        getAllResponseHeaders: function () {
/*Line 7365 - 'jquery-1.5.1-vsdoc.js' */			            return state === 2 ? responseHeadersString : null;
/*Line 7366 - 'jquery-1.5.1-vsdoc.js' */			        },

/*Line 7368 - 'jquery-1.5.1-vsdoc.js' */			        // Builds headers hashtable if needed
/*Line 7369 - 'jquery-1.5.1-vsdoc.js' */			        getResponseHeader: function (key) {
/*Line 7370 - 'jquery-1.5.1-vsdoc.js' */			            var match;
/*Line 7371 - 'jquery-1.5.1-vsdoc.js' */			            if (state === 2) {
/*Line 7372 - 'jquery-1.5.1-vsdoc.js' */			                if (!responseHeaders) {
/*Line 7373 - 'jquery-1.5.1-vsdoc.js' */			                    responseHeaders = {};
/*Line 7374 - 'jquery-1.5.1-vsdoc.js' */			                    while ((match = rheaders.exec(responseHeadersString))) {
/*Line 7375 - 'jquery-1.5.1-vsdoc.js' */			                        responseHeaders[match[1].toLowerCase()] = match[2];
/*Line 7376 - 'jquery-1.5.1-vsdoc.js' */			                    }
/*Line 7377 - 'jquery-1.5.1-vsdoc.js' */			                }
/*Line 7378 - 'jquery-1.5.1-vsdoc.js' */			                match = responseHeaders[key.toLowerCase()];
/*Line 7379 - 'jquery-1.5.1-vsdoc.js' */			            }
/*Line 7380 - 'jquery-1.5.1-vsdoc.js' */			            return match === undefined ? null : match;
/*Line 7381 - 'jquery-1.5.1-vsdoc.js' */			        },

/*Line 7383 - 'jquery-1.5.1-vsdoc.js' */			        // Overrides response content-type header
/*Line 7384 - 'jquery-1.5.1-vsdoc.js' */			        overrideMimeType: function (type) {
/*Line 7385 - 'jquery-1.5.1-vsdoc.js' */			            if (!state) {
/*Line 7386 - 'jquery-1.5.1-vsdoc.js' */			                s.mimeType = type;
/*Line 7387 - 'jquery-1.5.1-vsdoc.js' */			            }
/*Line 7388 - 'jquery-1.5.1-vsdoc.js' */			            return this;
/*Line 7389 - 'jquery-1.5.1-vsdoc.js' */			        },

/*Line 7391 - 'jquery-1.5.1-vsdoc.js' */			        // Cancel the request
/*Line 7392 - 'jquery-1.5.1-vsdoc.js' */			        abort: function (statusText) {
/*Line 7393 - 'jquery-1.5.1-vsdoc.js' */			            statusText = statusText || "abort";
/*Line 7394 - 'jquery-1.5.1-vsdoc.js' */			            if (transport) {
/*Line 7395 - 'jquery-1.5.1-vsdoc.js' */			                transport.abort(statusText);
/*Line 7396 - 'jquery-1.5.1-vsdoc.js' */			            }
/*Line 7397 - 'jquery-1.5.1-vsdoc.js' */			            done(0, statusText);
/*Line 7398 - 'jquery-1.5.1-vsdoc.js' */			            return this;
/*Line 7399 - 'jquery-1.5.1-vsdoc.js' */			        }
/*Line 7400 - 'jquery-1.5.1-vsdoc.js' */			    };

/*Line 7402 - 'jquery-1.5.1-vsdoc.js' */        // Callback for when everything is done
/*Line 7403 - 'jquery-1.5.1-vsdoc.js' */        // It is defined here because jslint complains if it is declared
/*Line 7404 - 'jquery-1.5.1-vsdoc.js' */        // at the end of the function (which would be more logical and readable)
/*Line 7405 - 'jquery-1.5.1-vsdoc.js' */        function done(status, statusText, responses, headers) {

/*Line 7407 - 'jquery-1.5.1-vsdoc.js' */            // Called once
/*Line 7408 - 'jquery-1.5.1-vsdoc.js' */            if (state === 2) {
/*Line 7409 - 'jquery-1.5.1-vsdoc.js' */                return;
/*Line 7410 - 'jquery-1.5.1-vsdoc.js' */            }

/*Line 7412 - 'jquery-1.5.1-vsdoc.js' */            // State is "done" now
/*Line 7413 - 'jquery-1.5.1-vsdoc.js' */            state = 2;

/*Line 7415 - 'jquery-1.5.1-vsdoc.js' */            // Clear timeout if it exists
/*Line 7416 - 'jquery-1.5.1-vsdoc.js' */            if (timeoutTimer) {
/*Line 7417 - 'jquery-1.5.1-vsdoc.js' */                clearTimeout(timeoutTimer);
/*Line 7418 - 'jquery-1.5.1-vsdoc.js' */            }

/*Line 7420 - 'jquery-1.5.1-vsdoc.js' */            // Dereference transport for early garbage collection
/*Line 7421 - 'jquery-1.5.1-vsdoc.js' */            // (no matter how long the jqXHR object will be used)
/*Line 7422 - 'jquery-1.5.1-vsdoc.js' */            transport = undefined;

/*Line 7424 - 'jquery-1.5.1-vsdoc.js' */            // Cache response headers
/*Line 7425 - 'jquery-1.5.1-vsdoc.js' */            responseHeadersString = headers || "";

/*Line 7427 - 'jquery-1.5.1-vsdoc.js' */            // Set readyState
/*Line 7428 - 'jquery-1.5.1-vsdoc.js' */            jqXHR.readyState = status ? 4 : 0;

/*Line 7430 - 'jquery-1.5.1-vsdoc.js' */            var isSuccess,
/*Line 7431 - 'jquery-1.5.1-vsdoc.js' */				    success,
/*Line 7432 - 'jquery-1.5.1-vsdoc.js' */				    error,
/*Line 7433 - 'jquery-1.5.1-vsdoc.js' */				    response = responses ? ajaxHandleResponses(s, jqXHR, responses) : undefined,
/*Line 7434 - 'jquery-1.5.1-vsdoc.js' */				    lastModified,
/*Line 7435 - 'jquery-1.5.1-vsdoc.js' */				    etag;

/*Line 7437 - 'jquery-1.5.1-vsdoc.js' */            // If successful, handle type chaining
/*Line 7438 - 'jquery-1.5.1-vsdoc.js' */            if (status >= 200 && status < 300 || status === 304) {

/*Line 7440 - 'jquery-1.5.1-vsdoc.js' */                // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
/*Line 7441 - 'jquery-1.5.1-vsdoc.js' */                if (s.ifModified) {

/*Line 7443 - 'jquery-1.5.1-vsdoc.js' */                    if ((lastModified = jqXHR.getResponseHeader("Last-Modified"))) {
/*Line 7444 - 'jquery-1.5.1-vsdoc.js' */                        jQuery.lastModified[ifModifiedKey] = lastModified;
/*Line 7445 - 'jquery-1.5.1-vsdoc.js' */                    }
/*Line 7446 - 'jquery-1.5.1-vsdoc.js' */                    if ((etag = jqXHR.getResponseHeader("Etag"))) {
/*Line 7447 - 'jquery-1.5.1-vsdoc.js' */                        jQuery.etag[ifModifiedKey] = etag;
/*Line 7448 - 'jquery-1.5.1-vsdoc.js' */                    }
/*Line 7449 - 'jquery-1.5.1-vsdoc.js' */                }

/*Line 7451 - 'jquery-1.5.1-vsdoc.js' */                // If not modified
/*Line 7452 - 'jquery-1.5.1-vsdoc.js' */                if (status === 304) {

/*Line 7454 - 'jquery-1.5.1-vsdoc.js' */                    statusText = "notmodified";
/*Line 7455 - 'jquery-1.5.1-vsdoc.js' */                    isSuccess = true;

/*Line 7457 - 'jquery-1.5.1-vsdoc.js' */                    // If we have data
/*Line 7458 - 'jquery-1.5.1-vsdoc.js' */                } else {

/*Line 7460 - 'jquery-1.5.1-vsdoc.js' */                    try {
/*Line 7461 - 'jquery-1.5.1-vsdoc.js' */                        success = ajaxConvert(s, response);
/*Line 7462 - 'jquery-1.5.1-vsdoc.js' */                        statusText = "success";
/*Line 7463 - 'jquery-1.5.1-vsdoc.js' */                        isSuccess = true;
/*Line 7464 - 'jquery-1.5.1-vsdoc.js' */                    } catch (e) {
/*Line 7465 - 'jquery-1.5.1-vsdoc.js' */                        // We have a parsererror
/*Line 7466 - 'jquery-1.5.1-vsdoc.js' */                        statusText = "parsererror";
/*Line 7467 - 'jquery-1.5.1-vsdoc.js' */                        error = e;
/*Line 7468 - 'jquery-1.5.1-vsdoc.js' */                    }
/*Line 7469 - 'jquery-1.5.1-vsdoc.js' */                }
/*Line 7470 - 'jquery-1.5.1-vsdoc.js' */            } else {
/*Line 7471 - 'jquery-1.5.1-vsdoc.js' */                // We extract error from statusText
/*Line 7472 - 'jquery-1.5.1-vsdoc.js' */                // then normalize statusText and status for non-aborts
/*Line 7473 - 'jquery-1.5.1-vsdoc.js' */                error = statusText;
/*Line 7474 - 'jquery-1.5.1-vsdoc.js' */                if (!statusText || status) {
/*Line 7475 - 'jquery-1.5.1-vsdoc.js' */                    statusText = "error";
/*Line 7476 - 'jquery-1.5.1-vsdoc.js' */                    if (status < 0) {
/*Line 7477 - 'jquery-1.5.1-vsdoc.js' */                        status = 0;
/*Line 7478 - 'jquery-1.5.1-vsdoc.js' */                    }
/*Line 7479 - 'jquery-1.5.1-vsdoc.js' */                }
/*Line 7480 - 'jquery-1.5.1-vsdoc.js' */            }

/*Line 7482 - 'jquery-1.5.1-vsdoc.js' */            // Set data for the fake xhr object
/*Line 7483 - 'jquery-1.5.1-vsdoc.js' */            jqXHR.status = status;
/*Line 7484 - 'jquery-1.5.1-vsdoc.js' */            jqXHR.statusText = statusText;

/*Line 7486 - 'jquery-1.5.1-vsdoc.js' */            // Success/Error
/*Line 7487 - 'jquery-1.5.1-vsdoc.js' */            if (isSuccess) {
/*Line 7488 - 'jquery-1.5.1-vsdoc.js' */                deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);
/*Line 7489 - 'jquery-1.5.1-vsdoc.js' */            } else {
/*Line 7490 - 'jquery-1.5.1-vsdoc.js' */                deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);
/*Line 7491 - 'jquery-1.5.1-vsdoc.js' */            }

/*Line 7493 - 'jquery-1.5.1-vsdoc.js' */            // Status-dependent callbacks
/*Line 7494 - 'jquery-1.5.1-vsdoc.js' */            jqXHR.statusCode(statusCode);
/*Line 7495 - 'jquery-1.5.1-vsdoc.js' */            statusCode = undefined;

/*Line 7497 - 'jquery-1.5.1-vsdoc.js' */            if (fireGlobals) {
/*Line 7498 - 'jquery-1.5.1-vsdoc.js' */                globalEventContext.trigger("ajax" + (isSuccess ? "Success" : "Error"),
/*Line 7499 - 'jquery-1.5.1-vsdoc.js' */						    [jqXHR, s, isSuccess ? success : error]);
/*Line 7500 - 'jquery-1.5.1-vsdoc.js' */            }

/*Line 7502 - 'jquery-1.5.1-vsdoc.js' */            // Complete
/*Line 7503 - 'jquery-1.5.1-vsdoc.js' */            completeDeferred.resolveWith(callbackContext, [jqXHR, statusText]);

/*Line 7505 - 'jquery-1.5.1-vsdoc.js' */            if (fireGlobals) {
/*Line 7506 - 'jquery-1.5.1-vsdoc.js' */                globalEventContext.trigger("ajaxComplete", [jqXHR, s]);
/*Line 7507 - 'jquery-1.5.1-vsdoc.js' */                // Handle the global AJAX counter
/*Line 7508 - 'jquery-1.5.1-vsdoc.js' */                if (!(--jQuery.active)) {
/*Line 7509 - 'jquery-1.5.1-vsdoc.js' */                    jQuery.event.trigger("ajaxStop");
/*Line 7510 - 'jquery-1.5.1-vsdoc.js' */                }
/*Line 7511 - 'jquery-1.5.1-vsdoc.js' */            }
/*Line 7512 - 'jquery-1.5.1-vsdoc.js' */        }

/*Line 7514 - 'jquery-1.5.1-vsdoc.js' */        // Attach deferreds
/*Line 7515 - 'jquery-1.5.1-vsdoc.js' */        deferred.promise(jqXHR);
/*Line 7516 - 'jquery-1.5.1-vsdoc.js' */        jqXHR.success = jqXHR.done;
/*Line 7517 - 'jquery-1.5.1-vsdoc.js' */        jqXHR.error = jqXHR.fail;
/*Line 7518 - 'jquery-1.5.1-vsdoc.js' */        jqXHR.complete = completeDeferred.done;

/*Line 7520 - 'jquery-1.5.1-vsdoc.js' */        // Status-dependent callbacks
/*Line 7521 - 'jquery-1.5.1-vsdoc.js' */        jqXHR.statusCode = function (map) {
/*Line 7522 - 'jquery-1.5.1-vsdoc.js' */            if (map) {
/*Line 7523 - 'jquery-1.5.1-vsdoc.js' */                var tmp;
/*Line 7524 - 'jquery-1.5.1-vsdoc.js' */                if (state < 2) {
/*Line 7525 - 'jquery-1.5.1-vsdoc.js' */                    for (tmp in map) {
/*Line 7526 - 'jquery-1.5.1-vsdoc.js' */                        statusCode[tmp] = [statusCode[tmp], map[tmp]];
/*Line 7527 - 'jquery-1.5.1-vsdoc.js' */                    }
/*Line 7528 - 'jquery-1.5.1-vsdoc.js' */                } else {
/*Line 7529 - 'jquery-1.5.1-vsdoc.js' */                    tmp = map[jqXHR.status];
/*Line 7530 - 'jquery-1.5.1-vsdoc.js' */                    jqXHR.then(tmp, tmp);
/*Line 7531 - 'jquery-1.5.1-vsdoc.js' */                }
/*Line 7532 - 'jquery-1.5.1-vsdoc.js' */            }
/*Line 7533 - 'jquery-1.5.1-vsdoc.js' */            return this;
/*Line 7534 - 'jquery-1.5.1-vsdoc.js' */        };

/*Line 7536 - 'jquery-1.5.1-vsdoc.js' */        // Remove hash character (#7531: and string promotion)
/*Line 7537 - 'jquery-1.5.1-vsdoc.js' */        // Add protocol if not provided (#5866: IE7 issue with protocol-less urls)
/*Line 7538 - 'jquery-1.5.1-vsdoc.js' */        // We also use the url parameter if available
/*Line 7539 - 'jquery-1.5.1-vsdoc.js' */        s.url = ((url || s.url) + "").replace(rhash, "").replace(rprotocol, ajaxLocParts[1] + "//");

/*Line 7541 - 'jquery-1.5.1-vsdoc.js' */        // Extract dataTypes list
/*Line 7542 - 'jquery-1.5.1-vsdoc.js' */        s.dataTypes = jQuery.trim(s.dataType || "*").toLowerCase().split(rspacesAjax);

/*Line 7544 - 'jquery-1.5.1-vsdoc.js' */        // Determine if a cross-domain request is in order
/*Line 7545 - 'jquery-1.5.1-vsdoc.js' */        if (!s.crossDomain) {
/*Line 7546 - 'jquery-1.5.1-vsdoc.js' */            parts = rurl.exec(s.url.toLowerCase());
/*Line 7547 - 'jquery-1.5.1-vsdoc.js' */            s.crossDomain = !!(parts &&
/*Line 7548 - 'jquery-1.5.1-vsdoc.js' */				    (parts[1] != ajaxLocParts[1] || parts[2] != ajaxLocParts[2] ||
/*Line 7549 - 'jquery-1.5.1-vsdoc.js' */					    (parts[3] || (parts[1] === "http:" ? 80 : 443)) !=
/*Line 7550 - 'jquery-1.5.1-vsdoc.js' */						    (ajaxLocParts[3] || (ajaxLocParts[1] === "http:" ? 80 : 443)))
/*Line 7551 - 'jquery-1.5.1-vsdoc.js' */			    );
/*Line 7552 - 'jquery-1.5.1-vsdoc.js' */        }

/*Line 7554 - 'jquery-1.5.1-vsdoc.js' */        // Convert data if not already a string
/*Line 7555 - 'jquery-1.5.1-vsdoc.js' */        if (s.data && s.processData && typeof s.data !== "string") {
/*Line 7556 - 'jquery-1.5.1-vsdoc.js' */            s.data = jQuery.param(s.data, s.traditional);
/*Line 7557 - 'jquery-1.5.1-vsdoc.js' */        }

/*Line 7559 - 'jquery-1.5.1-vsdoc.js' */        // Apply prefilters
/*Line 7560 - 'jquery-1.5.1-vsdoc.js' */        inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);

/*Line 7562 - 'jquery-1.5.1-vsdoc.js' */        // If request was aborted inside a prefiler, stop there
/*Line 7563 - 'jquery-1.5.1-vsdoc.js' */        if (state === 2) {
/*Line 7564 - 'jquery-1.5.1-vsdoc.js' */            return false;
/*Line 7565 - 'jquery-1.5.1-vsdoc.js' */        }

/*Line 7567 - 'jquery-1.5.1-vsdoc.js' */        // We can fire global events as of now if asked to
/*Line 7568 - 'jquery-1.5.1-vsdoc.js' */        fireGlobals = s.global;

/*Line 7570 - 'jquery-1.5.1-vsdoc.js' */        // Uppercase the type
/*Line 7571 - 'jquery-1.5.1-vsdoc.js' */        s.type = s.type.toUpperCase();

/*Line 7573 - 'jquery-1.5.1-vsdoc.js' */        // Determine if request has content
/*Line 7574 - 'jquery-1.5.1-vsdoc.js' */        s.hasContent = !rnoContent.test(s.type);

/*Line 7576 - 'jquery-1.5.1-vsdoc.js' */        // Watch for a new set of requests
/*Line 7577 - 'jquery-1.5.1-vsdoc.js' */        if (fireGlobals && jQuery.active++ === 0) {
/*Line 7578 - 'jquery-1.5.1-vsdoc.js' */            jQuery.event.trigger("ajaxStart");
/*Line 7579 - 'jquery-1.5.1-vsdoc.js' */        }

/*Line 7581 - 'jquery-1.5.1-vsdoc.js' */        // More options handling for requests with no content
/*Line 7582 - 'jquery-1.5.1-vsdoc.js' */        if (!s.hasContent) {

/*Line 7584 - 'jquery-1.5.1-vsdoc.js' */            // If data is available, append data to url
/*Line 7585 - 'jquery-1.5.1-vsdoc.js' */            if (s.data) {
/*Line 7586 - 'jquery-1.5.1-vsdoc.js' */                s.url += (rquery.test(s.url) ? "&" : "?") + s.data;
/*Line 7587 - 'jquery-1.5.1-vsdoc.js' */            }

/*Line 7589 - 'jquery-1.5.1-vsdoc.js' */            // Get ifModifiedKey before adding the anti-cache parameter
/*Line 7590 - 'jquery-1.5.1-vsdoc.js' */            ifModifiedKey = s.url;

/*Line 7592 - 'jquery-1.5.1-vsdoc.js' */            // Add anti-cache in url if needed
/*Line 7593 - 'jquery-1.5.1-vsdoc.js' */            if (s.cache === false) {

/*Line 7595 - 'jquery-1.5.1-vsdoc.js' */                var ts = jQuery.now(),
/*Line 7596 - 'jquery-1.5.1-vsdoc.js' */                // try replacing _= if it is there
/*Line 7597 - 'jquery-1.5.1-vsdoc.js' */					    ret = s.url.replace(rts, "$1_=" + ts);

/*Line 7599 - 'jquery-1.5.1-vsdoc.js' */                // if nothing was replaced, add timestamp to the end
/*Line 7600 - 'jquery-1.5.1-vsdoc.js' */                s.url = ret + ((ret === s.url) ? (rquery.test(s.url) ? "&" : "?") + "_=" + ts : "");
/*Line 7601 - 'jquery-1.5.1-vsdoc.js' */            }
/*Line 7602 - 'jquery-1.5.1-vsdoc.js' */        }

/*Line 7604 - 'jquery-1.5.1-vsdoc.js' */        // Set the correct header, if data is being sent
/*Line 7605 - 'jquery-1.5.1-vsdoc.js' */        if (s.data && s.hasContent && s.contentType !== false || options.contentType) {
/*Line 7606 - 'jquery-1.5.1-vsdoc.js' */            requestHeaders["Content-Type"] = s.contentType;
/*Line 7607 - 'jquery-1.5.1-vsdoc.js' */        }

/*Line 7609 - 'jquery-1.5.1-vsdoc.js' */        // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
/*Line 7610 - 'jquery-1.5.1-vsdoc.js' */        if (s.ifModified) {
/*Line 7611 - 'jquery-1.5.1-vsdoc.js' */            ifModifiedKey = ifModifiedKey || s.url;
/*Line 7612 - 'jquery-1.5.1-vsdoc.js' */            if (jQuery.lastModified[ifModifiedKey]) {
/*Line 7613 - 'jquery-1.5.1-vsdoc.js' */                requestHeaders["If-Modified-Since"] = jQuery.lastModified[ifModifiedKey];
/*Line 7614 - 'jquery-1.5.1-vsdoc.js' */            }
/*Line 7615 - 'jquery-1.5.1-vsdoc.js' */            if (jQuery.etag[ifModifiedKey]) {
/*Line 7616 - 'jquery-1.5.1-vsdoc.js' */                requestHeaders["If-None-Match"] = jQuery.etag[ifModifiedKey];
/*Line 7617 - 'jquery-1.5.1-vsdoc.js' */            }
/*Line 7618 - 'jquery-1.5.1-vsdoc.js' */        }

/*Line 7620 - 'jquery-1.5.1-vsdoc.js' */        // Set the Accepts header for the server, depending on the dataType
/*Line 7621 - 'jquery-1.5.1-vsdoc.js' */        requestHeaders.Accept = s.dataTypes[0] && s.accepts[s.dataTypes[0]] ?
/*Line 7622 - 'jquery-1.5.1-vsdoc.js' */			    s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== "*" ? ", */*; q=0.01" : "") :
/*Line 7623 - 'jquery-1.5.1-vsdoc.js' */			    s.accepts["*"];

/*Line 7625 - 'jquery-1.5.1-vsdoc.js' */        // Check for headers option
/*Line 7626 - 'jquery-1.5.1-vsdoc.js' */        for (i in s.headers) {
/*Line 7627 - 'jquery-1.5.1-vsdoc.js' */            jqXHR.setRequestHeader(i, s.headers[i]);
/*Line 7628 - 'jquery-1.5.1-vsdoc.js' */        }

/*Line 7630 - 'jquery-1.5.1-vsdoc.js' */        // Allow custom headers/mimetypes and early abort
/*Line 7631 - 'jquery-1.5.1-vsdoc.js' */        if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || state === 2)) {
/*Line 7632 - 'jquery-1.5.1-vsdoc.js' */            // Abort if not done already
/*Line 7633 - 'jquery-1.5.1-vsdoc.js' */            jqXHR.abort();
/*Line 7634 - 'jquery-1.5.1-vsdoc.js' */            return false;

/*Line 7636 - 'jquery-1.5.1-vsdoc.js' */        }

/*Line 7638 - 'jquery-1.5.1-vsdoc.js' */        // Install callbacks on deferreds
/*Line 7639 - 'jquery-1.5.1-vsdoc.js' */        for (i in { success: 1, error: 1, complete: 1 }) {
/*Line 7640 - 'jquery-1.5.1-vsdoc.js' */            jqXHR[i](s[i]);
/*Line 7641 - 'jquery-1.5.1-vsdoc.js' */        }

/*Line 7643 - 'jquery-1.5.1-vsdoc.js' */        // Get transport
/*Line 7644 - 'jquery-1.5.1-vsdoc.js' */        transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);

/*Line 7646 - 'jquery-1.5.1-vsdoc.js' */        // If no transport, we auto-abort
/*Line 7647 - 'jquery-1.5.1-vsdoc.js' */        if (!transport) {
/*Line 7648 - 'jquery-1.5.1-vsdoc.js' */            done(-1, "No Transport");
/*Line 7649 - 'jquery-1.5.1-vsdoc.js' */        } else {
/*Line 7650 - 'jquery-1.5.1-vsdoc.js' */            jqXHR.readyState = 1;
/*Line 7651 - 'jquery-1.5.1-vsdoc.js' */            // Send global event
/*Line 7652 - 'jquery-1.5.1-vsdoc.js' */            if (fireGlobals) {
/*Line 7653 - 'jquery-1.5.1-vsdoc.js' */                globalEventContext.trigger("ajaxSend", [jqXHR, s]);
/*Line 7654 - 'jquery-1.5.1-vsdoc.js' */            }
/*Line 7655 - 'jquery-1.5.1-vsdoc.js' */            // Timeout
/*Line 7656 - 'jquery-1.5.1-vsdoc.js' */            if (s.async && s.timeout > 0) {
/*Line 7657 - 'jquery-1.5.1-vsdoc.js' */                timeoutTimer = setTimeout(function () {
/*Line 7658 - 'jquery-1.5.1-vsdoc.js' */                    jqXHR.abort("timeout");
/*Line 7659 - 'jquery-1.5.1-vsdoc.js' */                }, s.timeout);
/*Line 7660 - 'jquery-1.5.1-vsdoc.js' */            }

/*Line 7662 - 'jquery-1.5.1-vsdoc.js' */            try {
/*Line 7663 - 'jquery-1.5.1-vsdoc.js' */                state = 1;
/*Line 7664 - 'jquery-1.5.1-vsdoc.js' */                transport.send(requestHeaders, done);
/*Line 7665 - 'jquery-1.5.1-vsdoc.js' */            } catch (e) {
/*Line 7666 - 'jquery-1.5.1-vsdoc.js' */                // Propagate exception as error if not done
/*Line 7667 - 'jquery-1.5.1-vsdoc.js' */                if (status < 2) {
/*Line 7668 - 'jquery-1.5.1-vsdoc.js' */                    done(-1, e);
/*Line 7669 - 'jquery-1.5.1-vsdoc.js' */                    // Simply rethrow otherwise
/*Line 7670 - 'jquery-1.5.1-vsdoc.js' */                } else {
/*Line 7671 - 'jquery-1.5.1-vsdoc.js' */                    jQuery.error(e);
/*Line 7672 - 'jquery-1.5.1-vsdoc.js' */                }
/*Line 7673 - 'jquery-1.5.1-vsdoc.js' */            }
/*Line 7674 - 'jquery-1.5.1-vsdoc.js' */        }

/*Line 7676 - 'jquery-1.5.1-vsdoc.js' */        return jqXHR;
/*Line 7677 - 'jquery-1.5.1-vsdoc.js' */    },

/*Line 7679 - 'jquery-1.5.1-vsdoc.js' */	// Serialize an array of form elements or a set of
/*Line 7680 - 'jquery-1.5.1-vsdoc.js' */	// key/values into a query string
/*Line 7681 - 'jquery-1.5.1-vsdoc.js' */	param: function( a, traditional ) {
/*Line 7682 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 7683 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Create a serialized representation of an array or object, suitable for use in a URL
/*Line 7684 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;query string or Ajax request.
/*Line 7685 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 7686 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="a" type="Object">
/*Line 7687 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;An array or object to serialize.
/*Line 7688 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 7689 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="traditional" type="Boolean">
/*Line 7690 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;A Boolean indicating whether to perform a traditional "shallow" serialization.
/*Line 7691 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 7692 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="String" />

/*Line 7694 - 'jquery-1.5.1-vsdoc.js' */		var s = [],
/*Line 7695 - 'jquery-1.5.1-vsdoc.js' */			add = function( key, value ) {
/*Line 7696 - 'jquery-1.5.1-vsdoc.js' */				// If value is a function, invoke it and return its value
/*Line 7697 - 'jquery-1.5.1-vsdoc.js' */				value = jQuery.isFunction(value) ? value() : value;
/*Line 7698 - 'jquery-1.5.1-vsdoc.js' */				s[ s.length ] = encodeURIComponent(key) + "=" + encodeURIComponent(value);
/*Line 7699 - 'jquery-1.5.1-vsdoc.js' */			};
		
/*Line 7701 - 'jquery-1.5.1-vsdoc.js' */		// Set traditional to true for jQuery <= 1.3.2 behavior.
/*Line 7702 - 'jquery-1.5.1-vsdoc.js' */		if ( traditional === undefined ) {
/*Line 7703 - 'jquery-1.5.1-vsdoc.js' */			traditional = jQuery.ajaxSettings.traditional;
/*Line 7704 - 'jquery-1.5.1-vsdoc.js' */		}
		
/*Line 7706 - 'jquery-1.5.1-vsdoc.js' */		// If an array was passed in, assume that it is an array of form elements.
/*Line 7707 - 'jquery-1.5.1-vsdoc.js' */		if ( jQuery.isArray(a) || a.jquery ) {
/*Line 7708 - 'jquery-1.5.1-vsdoc.js' */			// Serialize the form elements
/*Line 7709 - 'jquery-1.5.1-vsdoc.js' */			jQuery.each( a, function() {
/*Line 7710 - 'jquery-1.5.1-vsdoc.js' */				add( this.name, this.value );
/*Line 7711 - 'jquery-1.5.1-vsdoc.js' */			});
			
/*Line 7713 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 7714 - 'jquery-1.5.1-vsdoc.js' */			// If traditional, encode the "old" way (the way 1.3.2 or older
/*Line 7715 - 'jquery-1.5.1-vsdoc.js' */			// did it), otherwise encode params recursively.
/*Line 7716 - 'jquery-1.5.1-vsdoc.js' */			for ( var prefix in a ) {
/*Line 7717 - 'jquery-1.5.1-vsdoc.js' */				buildParams( prefix, a[prefix], traditional, add );
/*Line 7718 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 7719 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 7721 - 'jquery-1.5.1-vsdoc.js' */		// Return the resulting serialization
/*Line 7722 - 'jquery-1.5.1-vsdoc.js' */		return s.join("&").replace(r20, "+");
/*Line 7723 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 7724 - 'jquery-1.5.1-vsdoc.js' */});

/*Line 7726 - 'jquery-1.5.1-vsdoc.js' */function buildParams( prefix, obj, traditional, add ) {
/*Line 7727 - 'jquery-1.5.1-vsdoc.js' */	if ( jQuery.isArray(obj) && obj.length ) {
/*Line 7728 - 'jquery-1.5.1-vsdoc.js' */		// Serialize array item.
/*Line 7729 - 'jquery-1.5.1-vsdoc.js' */		jQuery.each( obj, function( i, v ) {
/*Line 7730 - 'jquery-1.5.1-vsdoc.js' */			if ( traditional || rbracket.test( prefix ) ) {
/*Line 7731 - 'jquery-1.5.1-vsdoc.js' */				// Treat each array item as a scalar.
/*Line 7732 - 'jquery-1.5.1-vsdoc.js' */				add( prefix, v );

/*Line 7734 - 'jquery-1.5.1-vsdoc.js' */			} else {
/*Line 7735 - 'jquery-1.5.1-vsdoc.js' */				// If array item is non-scalar (array or object), encode its
/*Line 7736 - 'jquery-1.5.1-vsdoc.js' */				// numeric index to resolve deserialization ambiguity issues.
/*Line 7737 - 'jquery-1.5.1-vsdoc.js' */				// Note that rack (as of 1.0.0) can't currently deserialize
/*Line 7738 - 'jquery-1.5.1-vsdoc.js' */				// nested arrays properly, and attempting to do so may cause
/*Line 7739 - 'jquery-1.5.1-vsdoc.js' */				// a server error. Possible fixes are to modify rack's
/*Line 7740 - 'jquery-1.5.1-vsdoc.js' */				// deserialization algorithm or to provide an option or flag
/*Line 7741 - 'jquery-1.5.1-vsdoc.js' */				// to force array serialization to be shallow.
/*Line 7742 - 'jquery-1.5.1-vsdoc.js' */				buildParams( prefix + "[" + ( typeof v === "object" || jQuery.isArray(v) ? i : "" ) + "]", v, traditional, add );
/*Line 7743 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 7744 - 'jquery-1.5.1-vsdoc.js' */		});
			
/*Line 7746 - 'jquery-1.5.1-vsdoc.js' */	} else if ( !traditional && obj != null && typeof obj === "object" ) {
/*Line 7747 - 'jquery-1.5.1-vsdoc.js' */		if ( jQuery.isEmptyObject( obj ) ) {
/*Line 7748 - 'jquery-1.5.1-vsdoc.js' */			add( prefix, "" );

/*Line 7750 - 'jquery-1.5.1-vsdoc.js' */		// Serialize object item.
/*Line 7751 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 7752 - 'jquery-1.5.1-vsdoc.js' */			jQuery.each( obj, function( k, v ) {
/*Line 7753 - 'jquery-1.5.1-vsdoc.js' */				buildParams( prefix + "[" + k + "]", v, traditional, add );
/*Line 7754 - 'jquery-1.5.1-vsdoc.js' */			});
/*Line 7755 - 'jquery-1.5.1-vsdoc.js' */		}
					
/*Line 7757 - 'jquery-1.5.1-vsdoc.js' */	} else {
/*Line 7758 - 'jquery-1.5.1-vsdoc.js' */		// Serialize scalar item.
/*Line 7759 - 'jquery-1.5.1-vsdoc.js' */		add( prefix, obj );
/*Line 7760 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 7761 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 7763 - 'jquery-1.5.1-vsdoc.js' */// This is still on the jQuery object... for now
/*Line 7764 - 'jquery-1.5.1-vsdoc.js' */// Want to move this to jQuery.ajax some day
/*Line 7765 - 'jquery-1.5.1-vsdoc.js' */jQuery.extend({

/*Line 7767 - 'jquery-1.5.1-vsdoc.js' */	// Counter for holding the number of active queries
/*Line 7768 - 'jquery-1.5.1-vsdoc.js' */	active: 0,

/*Line 7770 - 'jquery-1.5.1-vsdoc.js' */	// Last-Modified header cache for next request
/*Line 7771 - 'jquery-1.5.1-vsdoc.js' */	lastModified: {},
/*Line 7772 - 'jquery-1.5.1-vsdoc.js' */	etag: {},

/*Line 7774 - 'jquery-1.5.1-vsdoc.js' */	handleError: function( s, xhr, status, e ) {
/*Line 7775 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 7776 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This method is internal.
/*Line 7777 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 7778 - 'jquery-1.5.1-vsdoc.js' */		///	<private />

/*Line 7780 - 'jquery-1.5.1-vsdoc.js' */		// If a local callback was specified, fire it
/*Line 7781 - 'jquery-1.5.1-vsdoc.js' */		if ( s.error ) {
/*Line 7782 - 'jquery-1.5.1-vsdoc.js' */			s.error.call( s.context, xhr, status, e );
/*Line 7783 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 7785 - 'jquery-1.5.1-vsdoc.js' */		// Fire the global callback
/*Line 7786 - 'jquery-1.5.1-vsdoc.js' */		if ( s.global ) {
/*Line 7787 - 'jquery-1.5.1-vsdoc.js' */			jQuery.triggerGlobal( s, "ajaxError", [xhr, s, e] );
/*Line 7788 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 7789 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 7791 - 'jquery-1.5.1-vsdoc.js' */	handleSuccess: function( s, xhr, status, data ) {
/*Line 7792 - 'jquery-1.5.1-vsdoc.js' */		// If a local callback was specified, fire it and pass it the data
/*Line 7793 - 'jquery-1.5.1-vsdoc.js' */		if ( s.success ) {
/*Line 7794 - 'jquery-1.5.1-vsdoc.js' */			s.success.call( s.context, data, status, xhr );
/*Line 7795 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 7797 - 'jquery-1.5.1-vsdoc.js' */		// Fire the global callback
/*Line 7798 - 'jquery-1.5.1-vsdoc.js' */		if ( s.global ) {
/*Line 7799 - 'jquery-1.5.1-vsdoc.js' */			jQuery.triggerGlobal( s, "ajaxSuccess", [xhr, s] );
/*Line 7800 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 7801 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 7803 - 'jquery-1.5.1-vsdoc.js' */	handleComplete: function( s, xhr, status ) {
/*Line 7804 - 'jquery-1.5.1-vsdoc.js' */		// Process result
/*Line 7805 - 'jquery-1.5.1-vsdoc.js' */		if ( s.complete ) {
/*Line 7806 - 'jquery-1.5.1-vsdoc.js' */			s.complete.call( s.context, xhr, status );
/*Line 7807 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 7809 - 'jquery-1.5.1-vsdoc.js' */		// The request was completed
/*Line 7810 - 'jquery-1.5.1-vsdoc.js' */		if ( s.global ) {
/*Line 7811 - 'jquery-1.5.1-vsdoc.js' */			jQuery.triggerGlobal( s, "ajaxComplete", [xhr, s] );
/*Line 7812 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 7814 - 'jquery-1.5.1-vsdoc.js' */		// Handle the global AJAX counter
/*Line 7815 - 'jquery-1.5.1-vsdoc.js' */		if ( s.global && jQuery.active-- === 1 ) {
/*Line 7816 - 'jquery-1.5.1-vsdoc.js' */			jQuery.event.trigger( "ajaxStop" );
/*Line 7817 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 7818 - 'jquery-1.5.1-vsdoc.js' */	},
		
/*Line 7820 - 'jquery-1.5.1-vsdoc.js' */	triggerGlobal: function( s, type, args ) {
/*Line 7821 - 'jquery-1.5.1-vsdoc.js' */		(s.context && s.context.url == null ? jQuery(s.context) : jQuery.event).trigger(type, args);
/*Line 7822 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 7824 - 'jquery-1.5.1-vsdoc.js' */	// Determines if an XMLHttpRequest was successful or not
/*Line 7825 - 'jquery-1.5.1-vsdoc.js' */	httpSuccess: function( xhr ) {
/*Line 7826 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 7827 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This method is internal.
/*Line 7828 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 7829 - 'jquery-1.5.1-vsdoc.js' */		///	<private />

/*Line 7831 - 'jquery-1.5.1-vsdoc.js' */		try {
/*Line 7832 - 'jquery-1.5.1-vsdoc.js' */			// IE error sometimes returns 1223 when it should be 204 so treat it as success, see #1450
/*Line 7833 - 'jquery-1.5.1-vsdoc.js' */			return !xhr.status && location.protocol === "file:" ||
/*Line 7834 - 'jquery-1.5.1-vsdoc.js' */				xhr.status >= 200 && xhr.status < 300 ||
/*Line 7835 - 'jquery-1.5.1-vsdoc.js' */				xhr.status === 304 || xhr.status === 1223;
/*Line 7836 - 'jquery-1.5.1-vsdoc.js' */		} catch(e) {}

/*Line 7838 - 'jquery-1.5.1-vsdoc.js' */		return false;
/*Line 7839 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 7841 - 'jquery-1.5.1-vsdoc.js' */	// Determines if an XMLHttpRequest returns NotModified
/*Line 7842 - 'jquery-1.5.1-vsdoc.js' */	httpNotModified: function( xhr, url ) {
/*Line 7843 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 7844 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This method is internal.
/*Line 7845 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 7846 - 'jquery-1.5.1-vsdoc.js' */		///	<private />

/*Line 7848 - 'jquery-1.5.1-vsdoc.js' */		var lastModified = xhr.getResponseHeader("Last-Modified"),
/*Line 7849 - 'jquery-1.5.1-vsdoc.js' */			etag = xhr.getResponseHeader("Etag");

/*Line 7851 - 'jquery-1.5.1-vsdoc.js' */		if ( lastModified ) {
/*Line 7852 - 'jquery-1.5.1-vsdoc.js' */			jQuery.lastModified[url] = lastModified;
/*Line 7853 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 7855 - 'jquery-1.5.1-vsdoc.js' */		if ( etag ) {
/*Line 7856 - 'jquery-1.5.1-vsdoc.js' */			jQuery.etag[url] = etag;
/*Line 7857 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 7859 - 'jquery-1.5.1-vsdoc.js' */		return xhr.status === 304;
/*Line 7860 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 7862 - 'jquery-1.5.1-vsdoc.js' */	httpData: function( xhr, type, s ) {
/*Line 7863 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 7864 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This method is internal.
/*Line 7865 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 7866 - 'jquery-1.5.1-vsdoc.js' */		///	<private />

/*Line 7868 - 'jquery-1.5.1-vsdoc.js' */		var ct = xhr.getResponseHeader("content-type") || "",
/*Line 7869 - 'jquery-1.5.1-vsdoc.js' */			xml = type === "xml" || !type && ct.indexOf("xml") >= 0,
/*Line 7870 - 'jquery-1.5.1-vsdoc.js' */			data = xml ? xhr.responseXML : xhr.responseText;

/*Line 7872 - 'jquery-1.5.1-vsdoc.js' */		if ( xml && data.documentElement.nodeName === "parsererror" ) {
/*Line 7873 - 'jquery-1.5.1-vsdoc.js' */			jQuery.error( "parsererror" );
/*Line 7874 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 7876 - 'jquery-1.5.1-vsdoc.js' */		// Allow a pre-filtering function to sanitize the response
/*Line 7877 - 'jquery-1.5.1-vsdoc.js' */		// s is checked to keep backwards compatibility
/*Line 7878 - 'jquery-1.5.1-vsdoc.js' */		if ( s && s.dataFilter ) {
/*Line 7879 - 'jquery-1.5.1-vsdoc.js' */			data = s.dataFilter( data, type );
/*Line 7880 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 7882 - 'jquery-1.5.1-vsdoc.js' */		// The filter can actually parse the response
/*Line 7883 - 'jquery-1.5.1-vsdoc.js' */		if ( typeof data === "string" ) {
/*Line 7884 - 'jquery-1.5.1-vsdoc.js' */			// Get the JavaScript object, if JSON is used.
/*Line 7885 - 'jquery-1.5.1-vsdoc.js' */			if ( type === "json" || !type && ct.indexOf("json") >= 0 ) {
/*Line 7886 - 'jquery-1.5.1-vsdoc.js' */				data = jQuery.parseJSON( data );

/*Line 7888 - 'jquery-1.5.1-vsdoc.js' */			// If the type is "script", eval it in global context
/*Line 7889 - 'jquery-1.5.1-vsdoc.js' */			} else if ( type === "script" || !type && ct.indexOf("javascript") >= 0 ) {
/*Line 7890 - 'jquery-1.5.1-vsdoc.js' */				jQuery.globalEval( data );
/*Line 7891 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 7892 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 7894 - 'jquery-1.5.1-vsdoc.js' */		return data;
/*Line 7895 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 7897 - 'jquery-1.5.1-vsdoc.js' */});

/*Line 7899 - 'jquery-1.5.1-vsdoc.js' *//*
/*Line 7900 - 'jquery-1.5.1-vsdoc.js' */ * Create the request object; Microsoft failed to properly
/*Line 7901 - 'jquery-1.5.1-vsdoc.js' */ * implement the XMLHttpRequest in IE7 (can't request local files),
/*Line 7902 - 'jquery-1.5.1-vsdoc.js' */ * so we use the ActiveXObject when it is available
/*Line 7903 - 'jquery-1.5.1-vsdoc.js' */ * Additionally XMLHttpRequest can be disabled in IE7/IE8 so
/*Line 7904 - 'jquery-1.5.1-vsdoc.js' */ * we need a fallback.
/*Line 7905 - 'jquery-1.5.1-vsdoc.js' */ */
/*Line 7906 - 'jquery-1.5.1-vsdoc.js' */if ( window.ActiveXObject ) {
/*Line 7907 - 'jquery-1.5.1-vsdoc.js' */	jQuery.ajaxSettings.xhr = function() {
/*Line 7908 - 'jquery-1.5.1-vsdoc.js' */		if ( window.location.protocol !== "file:" ) {
/*Line 7909 - 'jquery-1.5.1-vsdoc.js' */			try {
/*Line 7910 - 'jquery-1.5.1-vsdoc.js' */				return new window.XMLHttpRequest();
/*Line 7911 - 'jquery-1.5.1-vsdoc.js' */			} catch(xhrError) {}
/*Line 7912 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 7914 - 'jquery-1.5.1-vsdoc.js' */		try {
/*Line 7915 - 'jquery-1.5.1-vsdoc.js' */			return new window.ActiveXObject("Microsoft.XMLHTTP");
/*Line 7916 - 'jquery-1.5.1-vsdoc.js' */		} catch(activeError) {}
/*Line 7917 - 'jquery-1.5.1-vsdoc.js' */	};
/*Line 7918 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 7920 - 'jquery-1.5.1-vsdoc.js' */// Does this browser support XHR requests?
/*Line 7921 - 'jquery-1.5.1-vsdoc.js' */jQuery.support.ajax = !!jQuery.ajaxSettings.xhr();




/*Line 7926 - 'jquery-1.5.1-vsdoc.js' */var elemdisplay = {},
/*Line 7927 - 'jquery-1.5.1-vsdoc.js' */	rfxtypes = /^(?:toggle|show|hide)$/,
/*Line 7928 - 'jquery-1.5.1-vsdoc.js' */	rfxnum = /^([+\-]=)?([\d+.\-]+)(.*)$/,
/*Line 7929 - 'jquery-1.5.1-vsdoc.js' */	timerId,
/*Line 7930 - 'jquery-1.5.1-vsdoc.js' */	fxAttrs = [
/*Line 7931 - 'jquery-1.5.1-vsdoc.js' */		// height animations
/*Line 7932 - 'jquery-1.5.1-vsdoc.js' */		[ "height", "marginTop", "marginBottom", "paddingTop", "paddingBottom" ],
/*Line 7933 - 'jquery-1.5.1-vsdoc.js' */		// width animations
/*Line 7934 - 'jquery-1.5.1-vsdoc.js' */		[ "width", "marginLeft", "marginRight", "paddingLeft", "paddingRight" ],
/*Line 7935 - 'jquery-1.5.1-vsdoc.js' */		// opacity animations
/*Line 7936 - 'jquery-1.5.1-vsdoc.js' */		[ "opacity" ]
/*Line 7937 - 'jquery-1.5.1-vsdoc.js' */	];

/*Line 7939 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn.extend({
/*Line 7940 - 'jquery-1.5.1-vsdoc.js' */	show: function( speed, easing, callback ) {
/*Line 7941 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 7942 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Show all matched elements using a graceful animation and firing an optional callback after completion.
/*Line 7943 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 7944 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="speed" type="String">A string representing one of three predefined speeds ('slow', 'normal', or 'fast'), or
/*Line 7945 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;the number of milliseconds to run the animation</param>
/*Line 7946 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="callback" optional="true" type="Function">A function to be executed whenever the animation completes, once for each animated element.  It should map function callback() such that this is the DOM element being animated.</param>
/*Line 7947 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 7949 - 'jquery-1.5.1-vsdoc.js' */		var elem, display;

/*Line 7951 - 'jquery-1.5.1-vsdoc.js' */		if ( speed || speed === 0 ) {
/*Line 7952 - 'jquery-1.5.1-vsdoc.js' */			return this.animate( genFx("show", 3), speed, easing, callback);

/*Line 7954 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 7955 - 'jquery-1.5.1-vsdoc.js' */			for ( var i = 0, j = this.length; i < j; i++ ) {
/*Line 7956 - 'jquery-1.5.1-vsdoc.js' */				elem = this[i];
/*Line 7957 - 'jquery-1.5.1-vsdoc.js' */				display = elem.style.display;

/*Line 7959 - 'jquery-1.5.1-vsdoc.js' */				// Reset the inline display of this element to learn if it is
/*Line 7960 - 'jquery-1.5.1-vsdoc.js' */				// being hidden by cascaded rules or not
/*Line 7961 - 'jquery-1.5.1-vsdoc.js' */				if ( !jQuery.data(elem, "olddisplay") && display === "none" ) {
/*Line 7962 - 'jquery-1.5.1-vsdoc.js' */					display = elem.style.display = "";
/*Line 7963 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 7965 - 'jquery-1.5.1-vsdoc.js' */				// Set elements which have been overridden with display: none
/*Line 7966 - 'jquery-1.5.1-vsdoc.js' */				// in a stylesheet to whatever the default browser style is
/*Line 7967 - 'jquery-1.5.1-vsdoc.js' */				// for such an element
/*Line 7968 - 'jquery-1.5.1-vsdoc.js' */				if ( display === "" && jQuery.css( elem, "display" ) === "none" ) {
/*Line 7969 - 'jquery-1.5.1-vsdoc.js' */					jQuery.data(elem, "olddisplay", defaultDisplay(elem.nodeName));
/*Line 7970 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 7971 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 7973 - 'jquery-1.5.1-vsdoc.js' */			// Set the display of most of the elements in a second loop
/*Line 7974 - 'jquery-1.5.1-vsdoc.js' */			// to avoid the constant reflow
/*Line 7975 - 'jquery-1.5.1-vsdoc.js' */			for ( i = 0; i < j; i++ ) {
/*Line 7976 - 'jquery-1.5.1-vsdoc.js' */				elem = this[i];
/*Line 7977 - 'jquery-1.5.1-vsdoc.js' */				display = elem.style.display;

/*Line 7979 - 'jquery-1.5.1-vsdoc.js' */				if ( display === "" || display === "none" ) {
/*Line 7980 - 'jquery-1.5.1-vsdoc.js' */					elem.style.display = jQuery.data(elem, "olddisplay") || "";
/*Line 7981 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 7982 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 7984 - 'jquery-1.5.1-vsdoc.js' */			return this;
/*Line 7985 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 7986 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 7988 - 'jquery-1.5.1-vsdoc.js' */	hide: function( speed, callback ) {
/*Line 7989 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 7990 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Hides all matched elements using a graceful animation and firing an optional callback after completion.
/*Line 7991 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 7992 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="speed" type="String">A string representing one of three predefined speeds ('slow', 'normal', or 'fast'), or
/*Line 7993 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;the number of milliseconds to run the animation</param>
/*Line 7994 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="callback" optional="true" type="Function">A function to be executed whenever the animation completes, once for each animated element.  It should map function callback() such that this is the DOM element being animated.</param>
/*Line 7995 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 7997 - 'jquery-1.5.1-vsdoc.js' */		if ( speed || speed === 0 ) {
/*Line 7998 - 'jquery-1.5.1-vsdoc.js' */			return this.animate( genFx("hide", 3), speed, easing, callback);

/*Line 8000 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 8001 - 'jquery-1.5.1-vsdoc.js' */			for ( var i = 0, j = this.length; i < j; i++ ) {
/*Line 8002 - 'jquery-1.5.1-vsdoc.js' */				var display = jQuery.css( this[i], "display" );

/*Line 8004 - 'jquery-1.5.1-vsdoc.js' */				if ( display !== "none" ) {
/*Line 8005 - 'jquery-1.5.1-vsdoc.js' */					jQuery.data( this[i], "olddisplay", display );
/*Line 8006 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 8007 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 8009 - 'jquery-1.5.1-vsdoc.js' */			// Set the display of the elements in a second loop
/*Line 8010 - 'jquery-1.5.1-vsdoc.js' */			// to avoid the constant reflow
/*Line 8011 - 'jquery-1.5.1-vsdoc.js' */			for ( i = 0; i < j; i++ ) {
/*Line 8012 - 'jquery-1.5.1-vsdoc.js' */				this[i].style.display = "none";
/*Line 8013 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 8015 - 'jquery-1.5.1-vsdoc.js' */			return this;
/*Line 8016 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 8017 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 8019 - 'jquery-1.5.1-vsdoc.js' */	// Save the old toggle function
/*Line 8020 - 'jquery-1.5.1-vsdoc.js' */	_toggle: jQuery.fn.toggle,

/*Line 8022 - 'jquery-1.5.1-vsdoc.js' */	toggle: function( fn, fn2, callback ) {
/*Line 8023 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 8024 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Toggles displaying each of the set of matched elements.
/*Line 8025 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 8026 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 8028 - 'jquery-1.5.1-vsdoc.js' */		var bool = typeof fn === "boolean";

/*Line 8030 - 'jquery-1.5.1-vsdoc.js' */		if ( jQuery.isFunction(fn) && jQuery.isFunction(fn2) ) {
/*Line 8031 - 'jquery-1.5.1-vsdoc.js' */			this._toggle.apply( this, arguments );

/*Line 8033 - 'jquery-1.5.1-vsdoc.js' */		} else if ( fn == null || bool ) {
/*Line 8034 - 'jquery-1.5.1-vsdoc.js' */			this.each(function() {
/*Line 8035 - 'jquery-1.5.1-vsdoc.js' */				var state = bool ? fn : jQuery(this).is(":hidden");
/*Line 8036 - 'jquery-1.5.1-vsdoc.js' */				jQuery(this)[ state ? "show" : "hide" ]();
/*Line 8037 - 'jquery-1.5.1-vsdoc.js' */			});

/*Line 8039 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 8040 - 'jquery-1.5.1-vsdoc.js' */			this.animate(genFx("toggle", 3), fn, fn2, callback);
/*Line 8041 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 8043 - 'jquery-1.5.1-vsdoc.js' */		return this;
/*Line 8044 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 8046 - 'jquery-1.5.1-vsdoc.js' */	fadeTo: function( speed, to, easing, callback ) {
/*Line 8047 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 8048 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Fades the opacity of all matched elements to a specified opacity.
/*Line 8049 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 8050 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="speed" type="String">A string representing one of three predefined speeds ('slow', 'normal', or 'fast'), or
/*Line 8051 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;the number of milliseconds to run the animation</param>
/*Line 8052 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="callback" optional="true" type="Function">A function to be executed whenever the animation completes, once for each animated element.  It should map function callback() such that this is the DOM element being animated.</param>
/*Line 8053 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 8055 - 'jquery-1.5.1-vsdoc.js' */		return this.filter(":hidden").css("opacity", 0).show().end()
/*Line 8056 - 'jquery-1.5.1-vsdoc.js' */					.animate({opacity: to}, speed, easing, callback);
/*Line 8057 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 8059 - 'jquery-1.5.1-vsdoc.js' */	animate: function( prop, speed, easing, callback ) {
/*Line 8060 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 8061 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;A function for making custom animations.
/*Line 8062 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 8063 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="prop" type="Options">A set of style attributes that you wish to animate and to what end.</param>
/*Line 8064 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="speed" optional="true" type="String">A string representing one of three predefined speeds ('slow', 'normal', or 'fast'), or
/*Line 8065 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;the number of milliseconds to run the animation</param>
/*Line 8066 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="easing" optional="true" type="String">The name of the easing effect that you want to use.  There are two built-in values, 'linear' and 'swing'.</param>
/*Line 8067 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="callback" optional="true" type="Function">A function to be executed whenever the animation completes, once for each animated element.  It should map function callback() such that this is the DOM element being animated.</param>
/*Line 8068 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 8070 - 'jquery-1.5.1-vsdoc.js' */		var optall = jQuery.speed(speed, easing, callback);

/*Line 8072 - 'jquery-1.5.1-vsdoc.js' */		if ( jQuery.isEmptyObject( prop ) ) {
/*Line 8073 - 'jquery-1.5.1-vsdoc.js' */			return this.each( optall.complete );
/*Line 8074 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 8076 - 'jquery-1.5.1-vsdoc.js' */		return this[ optall.queue === false ? "each" : "queue" ](function() {
/*Line 8077 - 'jquery-1.5.1-vsdoc.js' */			// XXX 'this' does not always have a nodeName when running the
/*Line 8078 - 'jquery-1.5.1-vsdoc.js' */			// test suite

/*Line 8080 - 'jquery-1.5.1-vsdoc.js' */			var opt = jQuery.extend({}, optall), p,
/*Line 8081 - 'jquery-1.5.1-vsdoc.js' */				isElement = this.nodeType === 1,
/*Line 8082 - 'jquery-1.5.1-vsdoc.js' */				hidden = isElement && jQuery(this).is(":hidden"),
/*Line 8083 - 'jquery-1.5.1-vsdoc.js' */				self = this;

/*Line 8085 - 'jquery-1.5.1-vsdoc.js' */			for ( p in prop ) {
/*Line 8086 - 'jquery-1.5.1-vsdoc.js' */				var name = jQuery.camelCase( p );

/*Line 8088 - 'jquery-1.5.1-vsdoc.js' */				if ( p !== name ) {
/*Line 8089 - 'jquery-1.5.1-vsdoc.js' */					prop[ name ] = prop[ p ];
/*Line 8090 - 'jquery-1.5.1-vsdoc.js' */					delete prop[ p ];
/*Line 8091 - 'jquery-1.5.1-vsdoc.js' */					p = name;
/*Line 8092 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 8094 - 'jquery-1.5.1-vsdoc.js' */				if ( prop[p] === "hide" && hidden || prop[p] === "show" && !hidden ) {
/*Line 8095 - 'jquery-1.5.1-vsdoc.js' */					return opt.complete.call(this);
/*Line 8096 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 8098 - 'jquery-1.5.1-vsdoc.js' */				if ( isElement && ( p === "height" || p === "width" ) ) {
/*Line 8099 - 'jquery-1.5.1-vsdoc.js' */					// Make sure that nothing sneaks out
/*Line 8100 - 'jquery-1.5.1-vsdoc.js' */					// Record all 3 overflow attributes because IE does not
/*Line 8101 - 'jquery-1.5.1-vsdoc.js' */					// change the overflow attribute when overflowX and
/*Line 8102 - 'jquery-1.5.1-vsdoc.js' */					// overflowY are set to the same value
/*Line 8103 - 'jquery-1.5.1-vsdoc.js' */					opt.overflow = [ this.style.overflow, this.style.overflowX, this.style.overflowY ];

/*Line 8105 - 'jquery-1.5.1-vsdoc.js' */					// Set display property to inline-block for height/width
/*Line 8106 - 'jquery-1.5.1-vsdoc.js' */					// animations on inline elements that are having width/height
/*Line 8107 - 'jquery-1.5.1-vsdoc.js' */					// animated
/*Line 8108 - 'jquery-1.5.1-vsdoc.js' */					if ( jQuery.css( this, "display" ) === "inline" &&
/*Line 8109 - 'jquery-1.5.1-vsdoc.js' */							jQuery.css( this, "float" ) === "none" ) {
/*Line 8110 - 'jquery-1.5.1-vsdoc.js' */						if ( !jQuery.support.inlineBlockNeedsLayout ) {
/*Line 8111 - 'jquery-1.5.1-vsdoc.js' */							this.style.display = "inline-block";

/*Line 8113 - 'jquery-1.5.1-vsdoc.js' */						} else {
/*Line 8114 - 'jquery-1.5.1-vsdoc.js' */							var display = defaultDisplay(this.nodeName);

/*Line 8116 - 'jquery-1.5.1-vsdoc.js' */							// inline-level elements accept inline-block;
/*Line 8117 - 'jquery-1.5.1-vsdoc.js' */							// block-level elements need to be inline with layout
/*Line 8118 - 'jquery-1.5.1-vsdoc.js' */							if ( display === "inline" ) {
/*Line 8119 - 'jquery-1.5.1-vsdoc.js' */								this.style.display = "inline-block";

/*Line 8121 - 'jquery-1.5.1-vsdoc.js' */							} else {
/*Line 8122 - 'jquery-1.5.1-vsdoc.js' */								this.style.display = "inline";
/*Line 8123 - 'jquery-1.5.1-vsdoc.js' */								this.style.zoom = 1;
/*Line 8124 - 'jquery-1.5.1-vsdoc.js' */							}
/*Line 8125 - 'jquery-1.5.1-vsdoc.js' */						}
/*Line 8126 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 8127 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 8129 - 'jquery-1.5.1-vsdoc.js' */				if ( jQuery.isArray( prop[p] ) ) {
/*Line 8130 - 'jquery-1.5.1-vsdoc.js' */					// Create (if needed) and add to specialEasing
/*Line 8131 - 'jquery-1.5.1-vsdoc.js' */					(opt.specialEasing = opt.specialEasing || {})[p] = prop[p][1];
/*Line 8132 - 'jquery-1.5.1-vsdoc.js' */					prop[p] = prop[p][0];
/*Line 8133 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 8134 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 8136 - 'jquery-1.5.1-vsdoc.js' */			if ( opt.overflow != null ) {
/*Line 8137 - 'jquery-1.5.1-vsdoc.js' */				this.style.overflow = "hidden";
/*Line 8138 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 8140 - 'jquery-1.5.1-vsdoc.js' */			opt.curAnim = jQuery.extend({}, prop);

/*Line 8142 - 'jquery-1.5.1-vsdoc.js' */			jQuery.each( prop, function( name, val ) {
/*Line 8143 - 'jquery-1.5.1-vsdoc.js' */				var e = new jQuery.fx( self, opt, name );

/*Line 8145 - 'jquery-1.5.1-vsdoc.js' */				if ( rfxtypes.test(val) ) {
/*Line 8146 - 'jquery-1.5.1-vsdoc.js' */					e[ val === "toggle" ? hidden ? "show" : "hide" : val ]( prop );

/*Line 8148 - 'jquery-1.5.1-vsdoc.js' */				} else {
/*Line 8149 - 'jquery-1.5.1-vsdoc.js' */					var parts = rfxnum.exec(val),
/*Line 8150 - 'jquery-1.5.1-vsdoc.js' */						start = e.cur() || 0;

/*Line 8152 - 'jquery-1.5.1-vsdoc.js' */					if ( parts ) {
/*Line 8153 - 'jquery-1.5.1-vsdoc.js' */						var end = parseFloat( parts[2] ),
/*Line 8154 - 'jquery-1.5.1-vsdoc.js' */							unit = parts[3] || "px";

/*Line 8156 - 'jquery-1.5.1-vsdoc.js' */						// We need to compute starting value
/*Line 8157 - 'jquery-1.5.1-vsdoc.js' */						if ( unit !== "px" ) {
/*Line 8158 - 'jquery-1.5.1-vsdoc.js' */							jQuery.style( self, name, (end || 1) + unit);
/*Line 8159 - 'jquery-1.5.1-vsdoc.js' */							start = ((end || 1) / e.cur()) * start;
/*Line 8160 - 'jquery-1.5.1-vsdoc.js' */							jQuery.style( self, name, start + unit);
/*Line 8161 - 'jquery-1.5.1-vsdoc.js' */						}

/*Line 8163 - 'jquery-1.5.1-vsdoc.js' */						// If a +=/-= token was provided, we're doing a relative animation
/*Line 8164 - 'jquery-1.5.1-vsdoc.js' */						if ( parts[1] ) {
/*Line 8165 - 'jquery-1.5.1-vsdoc.js' */							end = ((parts[1] === "-=" ? -1 : 1) * end) + start;
/*Line 8166 - 'jquery-1.5.1-vsdoc.js' */						}

/*Line 8168 - 'jquery-1.5.1-vsdoc.js' */						e.custom( start, end, unit );

/*Line 8170 - 'jquery-1.5.1-vsdoc.js' */					} else {
/*Line 8171 - 'jquery-1.5.1-vsdoc.js' */						e.custom( start, val, "" );
/*Line 8172 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 8173 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 8174 - 'jquery-1.5.1-vsdoc.js' */			});

/*Line 8176 - 'jquery-1.5.1-vsdoc.js' */			// For JS strict compliance
/*Line 8177 - 'jquery-1.5.1-vsdoc.js' */			return true;
/*Line 8178 - 'jquery-1.5.1-vsdoc.js' */		});
/*Line 8179 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 8181 - 'jquery-1.5.1-vsdoc.js' */	stop: function( clearQueue, gotoEnd ) {
/*Line 8182 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 8183 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Stops all currently animations on the specified elements.
/*Line 8184 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 8185 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="clearQueue" optional="true" type="Boolean">True to clear animations that are queued to run.</param>
/*Line 8186 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="gotoEnd" optional="true" type="Boolean">True to move the element value to the end of its animation target.</param>
/*Line 8187 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 8189 - 'jquery-1.5.1-vsdoc.js' */		var timers = jQuery.timers;

/*Line 8191 - 'jquery-1.5.1-vsdoc.js' */		if ( clearQueue ) {
/*Line 8192 - 'jquery-1.5.1-vsdoc.js' */			this.queue([]);
/*Line 8193 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 8195 - 'jquery-1.5.1-vsdoc.js' */		this.each(function() {
/*Line 8196 - 'jquery-1.5.1-vsdoc.js' */			// go in reverse order so anything added to the queue during the loop is ignored
/*Line 8197 - 'jquery-1.5.1-vsdoc.js' */			for ( var i = timers.length - 1; i >= 0; i-- ) {
/*Line 8198 - 'jquery-1.5.1-vsdoc.js' */				if ( timers[i].elem === this ) {
/*Line 8199 - 'jquery-1.5.1-vsdoc.js' */					if (gotoEnd) {
/*Line 8200 - 'jquery-1.5.1-vsdoc.js' */						// force the next step to be the last
/*Line 8201 - 'jquery-1.5.1-vsdoc.js' */						timers[i](true);
/*Line 8202 - 'jquery-1.5.1-vsdoc.js' */					}

/*Line 8204 - 'jquery-1.5.1-vsdoc.js' */					timers.splice(i, 1);
/*Line 8205 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 8206 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 8207 - 'jquery-1.5.1-vsdoc.js' */		});

/*Line 8209 - 'jquery-1.5.1-vsdoc.js' */		// start the next in the queue if the last step wasn't forced
/*Line 8210 - 'jquery-1.5.1-vsdoc.js' */		if ( !gotoEnd ) {
/*Line 8211 - 'jquery-1.5.1-vsdoc.js' */			this.dequeue();
/*Line 8212 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 8214 - 'jquery-1.5.1-vsdoc.js' */		return this;
/*Line 8215 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 8217 - 'jquery-1.5.1-vsdoc.js' */});

/*Line 8219 - 'jquery-1.5.1-vsdoc.js' */function genFx( type, num ) {
/*Line 8220 - 'jquery-1.5.1-vsdoc.js' */	var obj = {};

/*Line 8222 - 'jquery-1.5.1-vsdoc.js' */	jQuery.each( fxAttrs.concat.apply([], fxAttrs.slice(0,num)), function() {
/*Line 8223 - 'jquery-1.5.1-vsdoc.js' */		obj[ this ] = type;
/*Line 8224 - 'jquery-1.5.1-vsdoc.js' */	});

/*Line 8226 - 'jquery-1.5.1-vsdoc.js' */	return obj;
/*Line 8227 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 8229 - 'jquery-1.5.1-vsdoc.js' */// Generate shortcuts for custom animations
/*Line 8230 - 'jquery-1.5.1-vsdoc.js' *///	jQuery.each({
/*Line 8231 - 'jquery-1.5.1-vsdoc.js' *///		slideDown: genFx("show", 1),
/*Line 8232 - 'jquery-1.5.1-vsdoc.js' *///		slideUp: genFx("hide", 1),
/*Line 8233 - 'jquery-1.5.1-vsdoc.js' *///		slideToggle: genFx("toggle", 1),
/*Line 8234 - 'jquery-1.5.1-vsdoc.js' *///		fadeIn: { opacity: "show" },
/*Line 8235 - 'jquery-1.5.1-vsdoc.js' *///		fadeOut: { opacity: "hide" },
/*Line 8236 - 'jquery-1.5.1-vsdoc.js' *///		fadeToggle: { opacity: "toggle" }
/*Line 8237 - 'jquery-1.5.1-vsdoc.js' *///	}, function( name, props ) {
/*Line 8238 - 'jquery-1.5.1-vsdoc.js' *///		jQuery.fn[ name ] = function( speed, easing, callback ) {
/*Line 8239 - 'jquery-1.5.1-vsdoc.js' *///			return this.animate( props, speed, easing, callback );
/*Line 8240 - 'jquery-1.5.1-vsdoc.js' *///		};
/*Line 8241 - 'jquery-1.5.1-vsdoc.js' *///	});

/*Line 8243 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "slideDown" ] = function( speed, callback ) {
/*Line 8244 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 8245 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Reveal all matched elements by adjusting their height.
/*Line 8246 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 8247 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="speed" type="String">A string representing one of three predefined speeds ('slow', 'normal', or 'fast'), or
/*Line 8248 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;the number of milliseconds to run the animation</param>
/*Line 8249 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="callback" optional="true" type="Function">A function to be executed whenever the animation completes, once for each animated element.  It should map function callback() such that this is the DOM element being animated.</param>
/*Line 8250 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 8252 - 'jquery-1.5.1-vsdoc.js' */	return this.animate( genFx("show", 1), speed, callback );
/*Line 8253 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 8255 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "slideUp" ] = function( speed, callback ) {
/*Line 8256 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 8257 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Hiding all matched elements by adjusting their height.
/*Line 8258 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 8259 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="speed" type="String">A string representing one of three predefined speeds ('slow', 'normal', or 'fast'), or
/*Line 8260 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;the number of milliseconds to run the animation</param>
/*Line 8261 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="callback" optional="true" type="Function">A function to be executed whenever the animation completes, once for each animated element.  It should map function callback() such that this is the DOM element being animated.</param>
/*Line 8262 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 8264 - 'jquery-1.5.1-vsdoc.js' */	return this.animate( genFx("hide", 1), speed, callback );
/*Line 8265 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 8267 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "slideToggle" ] = function( speed, callback ) {
/*Line 8268 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 8269 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Toggles the visibility of all matched elements by adjusting their height.
/*Line 8270 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 8271 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="speed" type="String">A string representing one of three predefined speeds ('slow', 'normal', or 'fast'), or
/*Line 8272 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;the number of milliseconds to run the animation</param>
/*Line 8273 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="callback" optional="true" type="Function">A function to be executed whenever the animation completes, once for each animated element.  It should map function callback() such that this is the DOM element being animated.</param>
/*Line 8274 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 8276 - 'jquery-1.5.1-vsdoc.js' */	return this.animate( genFx("toggle", 1), speed, callback );
/*Line 8277 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 8279 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "fadeIn" ] = function( speed, callback ) {
/*Line 8280 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 8281 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Fades in all matched elements by adjusting their opacity.
/*Line 8282 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 8283 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="speed" type="String">A string representing one of three predefined speeds ('slow', 'normal', or 'fast'), or
/*Line 8284 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;the number of milliseconds to run the animation</param>
/*Line 8285 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="callback" optional="true" type="Function">A function to be executed whenever the animation completes, once for each animated element.  It should map function callback() such that this is the DOM element being animated.</param>
/*Line 8286 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 8288 - 'jquery-1.5.1-vsdoc.js' */	return this.animate( { opacity: "show" }, speed, callback );
/*Line 8289 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 8291 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn[ "fadeOut" ] = function( speed, callback ) {
/*Line 8292 - 'jquery-1.5.1-vsdoc.js' */	///	<summary>
/*Line 8293 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;Fades the opacity of all matched elements to a specified opacity.
/*Line 8294 - 'jquery-1.5.1-vsdoc.js' */	///	</summary>
/*Line 8295 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="speed" type="String">A string representing one of three predefined speeds ('slow', 'normal', or 'fast'), or
/*Line 8296 - 'jquery-1.5.1-vsdoc.js' */	///     &#10;the number of milliseconds to run the animation</param>
/*Line 8297 - 'jquery-1.5.1-vsdoc.js' */	///	<param name="callback" optional="true" type="Function">A function to be executed whenever the animation completes, once for each animated element.  It should map function callback() such that this is the DOM element being animated.</param>
/*Line 8298 - 'jquery-1.5.1-vsdoc.js' */	///	<returns type="jQuery" />

/*Line 8300 - 'jquery-1.5.1-vsdoc.js' */	return this.animate( { opacity: "hide" }, speed, callback );
/*Line 8301 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 8303 - 'jquery-1.5.1-vsdoc.js' */jQuery.extend({
/*Line 8304 - 'jquery-1.5.1-vsdoc.js' */	speed: function( speed, easing, fn ) {
/*Line 8305 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 8306 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This member is internal.
/*Line 8307 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 8308 - 'jquery-1.5.1-vsdoc.js' */		///	<private />

/*Line 8310 - 'jquery-1.5.1-vsdoc.js' */		var opt = speed && typeof speed === "object" ? jQuery.extend({}, speed) : {
/*Line 8311 - 'jquery-1.5.1-vsdoc.js' */			complete: fn || !fn && easing ||
/*Line 8312 - 'jquery-1.5.1-vsdoc.js' */				jQuery.isFunction( speed ) && speed,
/*Line 8313 - 'jquery-1.5.1-vsdoc.js' */			duration: speed,
/*Line 8314 - 'jquery-1.5.1-vsdoc.js' */			easing: fn && easing || easing && !jQuery.isFunction(easing) && easing
/*Line 8315 - 'jquery-1.5.1-vsdoc.js' */		};

/*Line 8317 - 'jquery-1.5.1-vsdoc.js' */		opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
/*Line 8318 - 'jquery-1.5.1-vsdoc.js' */			opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[opt.duration] : jQuery.fx.speeds._default;

/*Line 8320 - 'jquery-1.5.1-vsdoc.js' */		// Queueing
/*Line 8321 - 'jquery-1.5.1-vsdoc.js' */		opt.old = opt.complete;
/*Line 8322 - 'jquery-1.5.1-vsdoc.js' */		opt.complete = function() {
/*Line 8323 - 'jquery-1.5.1-vsdoc.js' */			if ( opt.queue !== false ) {
/*Line 8324 - 'jquery-1.5.1-vsdoc.js' */				jQuery(this).dequeue();
/*Line 8325 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 8326 - 'jquery-1.5.1-vsdoc.js' */			if ( jQuery.isFunction( opt.old ) ) {
/*Line 8327 - 'jquery-1.5.1-vsdoc.js' */				opt.old.call( this );
/*Line 8328 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 8329 - 'jquery-1.5.1-vsdoc.js' */		};

/*Line 8331 - 'jquery-1.5.1-vsdoc.js' */		return opt;
/*Line 8332 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 8334 - 'jquery-1.5.1-vsdoc.js' */	easing: {
/*Line 8335 - 'jquery-1.5.1-vsdoc.js' */		linear: function( p, n, firstNum, diff ) {
/*Line 8336 - 'jquery-1.5.1-vsdoc.js' */			///	<summary>
/*Line 8337 - 'jquery-1.5.1-vsdoc.js' */			///     &#10;This member is internal.
/*Line 8338 - 'jquery-1.5.1-vsdoc.js' */			///	</summary>
/*Line 8339 - 'jquery-1.5.1-vsdoc.js' */			///	<private />

/*Line 8341 - 'jquery-1.5.1-vsdoc.js' */			return firstNum + diff * p;
/*Line 8342 - 'jquery-1.5.1-vsdoc.js' */		},
/*Line 8343 - 'jquery-1.5.1-vsdoc.js' */		swing: function( p, n, firstNum, diff ) {
/*Line 8344 - 'jquery-1.5.1-vsdoc.js' */			///	<summary>
/*Line 8345 - 'jquery-1.5.1-vsdoc.js' */			///     &#10;This member is internal.
/*Line 8346 - 'jquery-1.5.1-vsdoc.js' */			///	</summary>
/*Line 8347 - 'jquery-1.5.1-vsdoc.js' */			///	<private />

/*Line 8349 - 'jquery-1.5.1-vsdoc.js' */			return ((-Math.cos(p*Math.PI)/2) + 0.5) * diff + firstNum;
/*Line 8350 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 8351 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 8353 - 'jquery-1.5.1-vsdoc.js' */	timers: [],

/*Line 8355 - 'jquery-1.5.1-vsdoc.js' */	fx: function( elem, options, prop ) {
/*Line 8356 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 8357 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This member is internal.
/*Line 8358 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 8359 - 'jquery-1.5.1-vsdoc.js' */		///	<private />

/*Line 8361 - 'jquery-1.5.1-vsdoc.js' */		this.options = options;
/*Line 8362 - 'jquery-1.5.1-vsdoc.js' */		this.elem = elem;
/*Line 8363 - 'jquery-1.5.1-vsdoc.js' */		this.prop = prop;

/*Line 8365 - 'jquery-1.5.1-vsdoc.js' */		if ( !options.orig ) {
/*Line 8366 - 'jquery-1.5.1-vsdoc.js' */			options.orig = {};
/*Line 8367 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 8368 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 8370 - 'jquery-1.5.1-vsdoc.js' */});

/*Line 8372 - 'jquery-1.5.1-vsdoc.js' */jQuery.fx.prototype = {
/*Line 8373 - 'jquery-1.5.1-vsdoc.js' */	// Simple function for setting a style value
/*Line 8374 - 'jquery-1.5.1-vsdoc.js' */	update: function() {
/*Line 8375 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 8376 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This member is internal.
/*Line 8377 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 8378 - 'jquery-1.5.1-vsdoc.js' */		///	<private />

/*Line 8380 - 'jquery-1.5.1-vsdoc.js' */		if ( this.options.step ) {
/*Line 8381 - 'jquery-1.5.1-vsdoc.js' */			this.options.step.call( this.elem, this.now, this );
/*Line 8382 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 8384 - 'jquery-1.5.1-vsdoc.js' */		(jQuery.fx.step[this.prop] || jQuery.fx.step._default)( this );
/*Line 8385 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 8387 - 'jquery-1.5.1-vsdoc.js' */	// Get the current size
/*Line 8388 - 'jquery-1.5.1-vsdoc.js' */	cur: function() {
/*Line 8389 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 8390 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This member is internal.
/*Line 8391 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 8392 - 'jquery-1.5.1-vsdoc.js' */		///	<private />

/*Line 8394 - 'jquery-1.5.1-vsdoc.js' */		if ( this.elem[this.prop] != null && (!this.elem.style || this.elem.style[this.prop] == null) ) {
/*Line 8395 - 'jquery-1.5.1-vsdoc.js' */			return this.elem[ this.prop ];
/*Line 8396 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 8398 - 'jquery-1.5.1-vsdoc.js' */		var r = parseFloat( jQuery.css( this.elem, this.prop ) );
/*Line 8399 - 'jquery-1.5.1-vsdoc.js' */		return r && r > -10000 ? r : 0;
/*Line 8400 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 8402 - 'jquery-1.5.1-vsdoc.js' */	// Start an animation from one number to another
/*Line 8403 - 'jquery-1.5.1-vsdoc.js' */	custom: function( from, to, unit ) {
/*Line 8404 - 'jquery-1.5.1-vsdoc.js' */		var self = this,
/*Line 8405 - 'jquery-1.5.1-vsdoc.js' */			fx = jQuery.fx;

/*Line 8407 - 'jquery-1.5.1-vsdoc.js' */		this.startTime = jQuery.now();
/*Line 8408 - 'jquery-1.5.1-vsdoc.js' */		this.start = from;
/*Line 8409 - 'jquery-1.5.1-vsdoc.js' */		this.end = to;
/*Line 8410 - 'jquery-1.5.1-vsdoc.js' */		this.unit = unit || this.unit || "px";
/*Line 8411 - 'jquery-1.5.1-vsdoc.js' */		this.now = this.start;
/*Line 8412 - 'jquery-1.5.1-vsdoc.js' */		this.pos = this.state = 0;

/*Line 8414 - 'jquery-1.5.1-vsdoc.js' */		function t( gotoEnd ) {
/*Line 8415 - 'jquery-1.5.1-vsdoc.js' */			return self.step(gotoEnd);
/*Line 8416 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 8418 - 'jquery-1.5.1-vsdoc.js' */		t.elem = this.elem;

/*Line 8420 - 'jquery-1.5.1-vsdoc.js' */		if ( t() && jQuery.timers.push(t) && !timerId ) {
/*Line 8421 - 'jquery-1.5.1-vsdoc.js' */			timerId = setInterval(fx.tick, fx.interval);
/*Line 8422 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 8423 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 8425 - 'jquery-1.5.1-vsdoc.js' */	// Simple 'show' function
/*Line 8426 - 'jquery-1.5.1-vsdoc.js' */	show: function() {
/*Line 8427 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 8428 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Displays each of the set of matched elements if they are hidden.
/*Line 8429 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>

/*Line 8431 - 'jquery-1.5.1-vsdoc.js' */		// Remember where we started, so that we can go back to it later
/*Line 8432 - 'jquery-1.5.1-vsdoc.js' */		this.options.orig[this.prop] = jQuery.style( this.elem, this.prop );
/*Line 8433 - 'jquery-1.5.1-vsdoc.js' */		this.options.show = true;

/*Line 8435 - 'jquery-1.5.1-vsdoc.js' */		// Begin the animation
/*Line 8436 - 'jquery-1.5.1-vsdoc.js' */		// Make sure that we start at a small width/height to avoid any
/*Line 8437 - 'jquery-1.5.1-vsdoc.js' */		// flash of content
/*Line 8438 - 'jquery-1.5.1-vsdoc.js' */		this.custom(this.prop === "width" || this.prop === "height" ? 1 : 0, this.cur());

/*Line 8440 - 'jquery-1.5.1-vsdoc.js' */		// Start by showing the element
/*Line 8441 - 'jquery-1.5.1-vsdoc.js' */		jQuery( this.elem ).show();
/*Line 8442 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 8444 - 'jquery-1.5.1-vsdoc.js' */	// Simple 'hide' function
/*Line 8445 - 'jquery-1.5.1-vsdoc.js' */	hide: function() {
/*Line 8446 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 8447 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Hides each of the set of matched elements if they are shown.
/*Line 8448 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>

/*Line 8450 - 'jquery-1.5.1-vsdoc.js' */		// Remember where we started, so that we can go back to it later
/*Line 8451 - 'jquery-1.5.1-vsdoc.js' */		this.options.orig[this.prop] = jQuery.style( this.elem, this.prop );
/*Line 8452 - 'jquery-1.5.1-vsdoc.js' */		this.options.hide = true;

/*Line 8454 - 'jquery-1.5.1-vsdoc.js' */		// Begin the animation
/*Line 8455 - 'jquery-1.5.1-vsdoc.js' */		this.custom(this.cur(), 0);
/*Line 8456 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 8458 - 'jquery-1.5.1-vsdoc.js' */	// Each step of an animation
/*Line 8459 - 'jquery-1.5.1-vsdoc.js' */	step: function( gotoEnd ) {
/*Line 8460 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 8461 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This method is internal.
/*Line 8462 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 8463 - 'jquery-1.5.1-vsdoc.js' */		///	<private />

/*Line 8465 - 'jquery-1.5.1-vsdoc.js' */		var t = jQuery.now(), done = true;

/*Line 8467 - 'jquery-1.5.1-vsdoc.js' */		if ( gotoEnd || t >= this.options.duration + this.startTime ) {
/*Line 8468 - 'jquery-1.5.1-vsdoc.js' */			this.now = this.end;
/*Line 8469 - 'jquery-1.5.1-vsdoc.js' */			this.pos = this.state = 1;
/*Line 8470 - 'jquery-1.5.1-vsdoc.js' */			this.update();

/*Line 8472 - 'jquery-1.5.1-vsdoc.js' */			this.options.curAnim[ this.prop ] = true;

/*Line 8474 - 'jquery-1.5.1-vsdoc.js' */			for ( var i in this.options.curAnim ) {
/*Line 8475 - 'jquery-1.5.1-vsdoc.js' */				if ( this.options.curAnim[i] !== true ) {
/*Line 8476 - 'jquery-1.5.1-vsdoc.js' */					done = false;
/*Line 8477 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 8478 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 8480 - 'jquery-1.5.1-vsdoc.js' */			if ( done ) {
/*Line 8481 - 'jquery-1.5.1-vsdoc.js' */				// Reset the overflow
/*Line 8482 - 'jquery-1.5.1-vsdoc.js' */				if ( this.options.overflow != null && !jQuery.support.shrinkWrapBlocks ) {
/*Line 8483 - 'jquery-1.5.1-vsdoc.js' */					var elem = this.elem,
/*Line 8484 - 'jquery-1.5.1-vsdoc.js' */						options = this.options;

/*Line 8486 - 'jquery-1.5.1-vsdoc.js' */					jQuery.each( [ "", "X", "Y" ], function (index, value) {
/*Line 8487 - 'jquery-1.5.1-vsdoc.js' */						elem.style[ "overflow" + value ] = options.overflow[index];
/*Line 8488 - 'jquery-1.5.1-vsdoc.js' */					} );
/*Line 8489 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 8491 - 'jquery-1.5.1-vsdoc.js' */				// Hide the element if the "hide" operation was done
/*Line 8492 - 'jquery-1.5.1-vsdoc.js' */				if ( this.options.hide ) {
/*Line 8493 - 'jquery-1.5.1-vsdoc.js' */					jQuery(this.elem).hide();
/*Line 8494 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 8496 - 'jquery-1.5.1-vsdoc.js' */				// Reset the properties, if the item has been hidden or shown
/*Line 8497 - 'jquery-1.5.1-vsdoc.js' */				if ( this.options.hide || this.options.show ) {
/*Line 8498 - 'jquery-1.5.1-vsdoc.js' */					for ( var p in this.options.curAnim ) {
/*Line 8499 - 'jquery-1.5.1-vsdoc.js' */						jQuery.style( this.elem, p, this.options.orig[p] );
/*Line 8500 - 'jquery-1.5.1-vsdoc.js' */					}
/*Line 8501 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 8503 - 'jquery-1.5.1-vsdoc.js' */				// Execute the complete function
/*Line 8504 - 'jquery-1.5.1-vsdoc.js' */				this.options.complete.call( this.elem );
/*Line 8505 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 8507 - 'jquery-1.5.1-vsdoc.js' */			return false;

/*Line 8509 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 8510 - 'jquery-1.5.1-vsdoc.js' */			var n = t - this.startTime;
/*Line 8511 - 'jquery-1.5.1-vsdoc.js' */			this.state = n / this.options.duration;

/*Line 8513 - 'jquery-1.5.1-vsdoc.js' */			// Perform the easing function, defaults to swing
/*Line 8514 - 'jquery-1.5.1-vsdoc.js' */			var specialEasing = this.options.specialEasing && this.options.specialEasing[this.prop];
/*Line 8515 - 'jquery-1.5.1-vsdoc.js' */			var defaultEasing = this.options.easing || (jQuery.easing.swing ? "swing" : "linear");
/*Line 8516 - 'jquery-1.5.1-vsdoc.js' */			this.pos = jQuery.easing[specialEasing || defaultEasing](this.state, n, 0, 1, this.options.duration);
/*Line 8517 - 'jquery-1.5.1-vsdoc.js' */			this.now = this.start + ((this.end - this.start) * this.pos);

/*Line 8519 - 'jquery-1.5.1-vsdoc.js' */			// Perform the next step of the animation
/*Line 8520 - 'jquery-1.5.1-vsdoc.js' */			this.update();
/*Line 8521 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 8523 - 'jquery-1.5.1-vsdoc.js' */		return true;
/*Line 8524 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 8525 - 'jquery-1.5.1-vsdoc.js' */};

/*Line 8527 - 'jquery-1.5.1-vsdoc.js' */jQuery.extend( jQuery.fx, {
/*Line 8528 - 'jquery-1.5.1-vsdoc.js' */	tick: function() {
/*Line 8529 - 'jquery-1.5.1-vsdoc.js' */		var timers = jQuery.timers;

/*Line 8531 - 'jquery-1.5.1-vsdoc.js' */		for ( var i = 0; i < timers.length; i++ ) {
/*Line 8532 - 'jquery-1.5.1-vsdoc.js' */			if ( !timers[i]() ) {
/*Line 8533 - 'jquery-1.5.1-vsdoc.js' */				timers.splice(i--, 1);
/*Line 8534 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 8535 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 8537 - 'jquery-1.5.1-vsdoc.js' */		if ( !timers.length ) {
/*Line 8538 - 'jquery-1.5.1-vsdoc.js' */			jQuery.fx.stop();
/*Line 8539 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 8540 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 8542 - 'jquery-1.5.1-vsdoc.js' */	interval: 13,

/*Line 8544 - 'jquery-1.5.1-vsdoc.js' */	stop: function() {
/*Line 8545 - 'jquery-1.5.1-vsdoc.js' */		clearInterval( timerId );
/*Line 8546 - 'jquery-1.5.1-vsdoc.js' */		timerId = null;
/*Line 8547 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 8549 - 'jquery-1.5.1-vsdoc.js' */	speeds: {
/*Line 8550 - 'jquery-1.5.1-vsdoc.js' */		slow: 600,
/*Line 8551 - 'jquery-1.5.1-vsdoc.js' */		fast: 200,
/*Line 8552 - 'jquery-1.5.1-vsdoc.js' */		// Default speed
/*Line 8553 - 'jquery-1.5.1-vsdoc.js' */		_default: 400
/*Line 8554 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 8556 - 'jquery-1.5.1-vsdoc.js' */	step: {
/*Line 8557 - 'jquery-1.5.1-vsdoc.js' */		opacity: function( fx ) {
/*Line 8558 - 'jquery-1.5.1-vsdoc.js' */			jQuery.style( fx.elem, "opacity", fx.now );
/*Line 8559 - 'jquery-1.5.1-vsdoc.js' */		},

/*Line 8561 - 'jquery-1.5.1-vsdoc.js' */		_default: function( fx ) {
/*Line 8562 - 'jquery-1.5.1-vsdoc.js' */			if ( fx.elem.style && fx.elem.style[ fx.prop ] != null ) {
/*Line 8563 - 'jquery-1.5.1-vsdoc.js' */				fx.elem.style[ fx.prop ] = (fx.prop === "width" || fx.prop === "height" ? Math.max(0, fx.now) : fx.now) + fx.unit;
/*Line 8564 - 'jquery-1.5.1-vsdoc.js' */			} else {
/*Line 8565 - 'jquery-1.5.1-vsdoc.js' */				fx.elem[ fx.prop ] = fx.now;
/*Line 8566 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 8567 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 8568 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 8569 - 'jquery-1.5.1-vsdoc.js' */});

/*Line 8571 - 'jquery-1.5.1-vsdoc.js' */if ( jQuery.expr && jQuery.expr.filters ) {
/*Line 8572 - 'jquery-1.5.1-vsdoc.js' */	jQuery.expr.filters.animated = function( elem ) {
/*Line 8573 - 'jquery-1.5.1-vsdoc.js' */		return jQuery.grep(jQuery.timers, function( fn ) {
/*Line 8574 - 'jquery-1.5.1-vsdoc.js' */			return elem === fn.elem;
/*Line 8575 - 'jquery-1.5.1-vsdoc.js' */		}).length;
/*Line 8576 - 'jquery-1.5.1-vsdoc.js' */	};
/*Line 8577 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 8579 - 'jquery-1.5.1-vsdoc.js' */function defaultDisplay( nodeName ) {
/*Line 8580 - 'jquery-1.5.1-vsdoc.js' */	if ( !elemdisplay[ nodeName ] ) {
/*Line 8581 - 'jquery-1.5.1-vsdoc.js' */		var elem = jQuery("<" + nodeName + ">").appendTo("body"),
/*Line 8582 - 'jquery-1.5.1-vsdoc.js' */			display = elem.css("display");

/*Line 8584 - 'jquery-1.5.1-vsdoc.js' */		elem.remove();

/*Line 8586 - 'jquery-1.5.1-vsdoc.js' */		if ( display === "none" || display === "" ) {
/*Line 8587 - 'jquery-1.5.1-vsdoc.js' */			display = "block";
/*Line 8588 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 8590 - 'jquery-1.5.1-vsdoc.js' */		elemdisplay[ nodeName ] = display;
/*Line 8591 - 'jquery-1.5.1-vsdoc.js' */	}

/*Line 8593 - 'jquery-1.5.1-vsdoc.js' */	return elemdisplay[ nodeName ];
/*Line 8594 - 'jquery-1.5.1-vsdoc.js' */}




/*Line 8599 - 'jquery-1.5.1-vsdoc.js' */var rtable = /^t(?:able|d|h)$/i,
/*Line 8600 - 'jquery-1.5.1-vsdoc.js' */	rroot = /^(?:body|html)$/i;

/*Line 8602 - 'jquery-1.5.1-vsdoc.js' */if ( "getBoundingClientRect" in document.documentElement ) {
/*Line 8603 - 'jquery-1.5.1-vsdoc.js' */	jQuery.fn.offset = function( options ) {
/*Line 8604 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 8605 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Set the current coordinates of every element in the set of matched elements,
/*Line 8606 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;relative to the document.
/*Line 8607 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 8608 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="options" type="Object">
/*Line 8609 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;An object containing the properties top and left, which are integers indicating the
/*Line 8610 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;new top and left coordinates for the elements.
/*Line 8611 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 8612 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 8614 - 'jquery-1.5.1-vsdoc.js' */		var elem = this[0], box;

/*Line 8616 - 'jquery-1.5.1-vsdoc.js' */		if ( options ) { 
/*Line 8617 - 'jquery-1.5.1-vsdoc.js' */			return this.each(function( i ) {
/*Line 8618 - 'jquery-1.5.1-vsdoc.js' */				jQuery.offset.setOffset( this, options, i );
/*Line 8619 - 'jquery-1.5.1-vsdoc.js' */			});
/*Line 8620 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 8622 - 'jquery-1.5.1-vsdoc.js' */		if ( !elem || !elem.ownerDocument ) {
/*Line 8623 - 'jquery-1.5.1-vsdoc.js' */			return null;
/*Line 8624 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 8626 - 'jquery-1.5.1-vsdoc.js' */		if ( elem === elem.ownerDocument.body ) {
/*Line 8627 - 'jquery-1.5.1-vsdoc.js' */			return jQuery.offset.bodyOffset( elem );
/*Line 8628 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 8630 - 'jquery-1.5.1-vsdoc.js' */		try {
/*Line 8631 - 'jquery-1.5.1-vsdoc.js' */			box = elem.getBoundingClientRect();
/*Line 8632 - 'jquery-1.5.1-vsdoc.js' */		} catch(e) {}

/*Line 8634 - 'jquery-1.5.1-vsdoc.js' */		var doc = elem.ownerDocument,
/*Line 8635 - 'jquery-1.5.1-vsdoc.js' */			docElem = doc.documentElement;

/*Line 8637 - 'jquery-1.5.1-vsdoc.js' */		// Make sure we're not dealing with a disconnected DOM node
/*Line 8638 - 'jquery-1.5.1-vsdoc.js' */		if ( !box || !jQuery.contains( docElem, elem ) ) {
/*Line 8639 - 'jquery-1.5.1-vsdoc.js' */			return box || { top: 0, left: 0 };
/*Line 8640 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 8642 - 'jquery-1.5.1-vsdoc.js' */		var body = doc.body,
/*Line 8643 - 'jquery-1.5.1-vsdoc.js' */			win = getWindow(doc),
/*Line 8644 - 'jquery-1.5.1-vsdoc.js' */			clientTop  = docElem.clientTop  || body.clientTop  || 0,
/*Line 8645 - 'jquery-1.5.1-vsdoc.js' */			clientLeft = docElem.clientLeft || body.clientLeft || 0,
/*Line 8646 - 'jquery-1.5.1-vsdoc.js' */			scrollTop  = (win.pageYOffset || jQuery.support.boxModel && docElem.scrollTop  || body.scrollTop ),
/*Line 8647 - 'jquery-1.5.1-vsdoc.js' */			scrollLeft = (win.pageXOffset || jQuery.support.boxModel && docElem.scrollLeft || body.scrollLeft),
/*Line 8648 - 'jquery-1.5.1-vsdoc.js' */			top  = box.top  + scrollTop  - clientTop,
/*Line 8649 - 'jquery-1.5.1-vsdoc.js' */			left = box.left + scrollLeft - clientLeft;

/*Line 8651 - 'jquery-1.5.1-vsdoc.js' */		return { top: top, left: left };
/*Line 8652 - 'jquery-1.5.1-vsdoc.js' */	};

/*Line 8654 - 'jquery-1.5.1-vsdoc.js' */} else {
/*Line 8655 - 'jquery-1.5.1-vsdoc.js' */	jQuery.fn.offset = function( options ) {
/*Line 8656 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 8657 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Set the current coordinates of every element in the set of matched elements,
/*Line 8658 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;relative to the document.
/*Line 8659 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 8660 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="options" type="Object">
/*Line 8661 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;An object containing the properties top and left, which are integers indicating the
/*Line 8662 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;new top and left coordinates for the elements.
/*Line 8663 - 'jquery-1.5.1-vsdoc.js' */		///	</param>
/*Line 8664 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" />

/*Line 8666 - 'jquery-1.5.1-vsdoc.js' */		var elem = this[0];

/*Line 8668 - 'jquery-1.5.1-vsdoc.js' */		if ( options ) { 
/*Line 8669 - 'jquery-1.5.1-vsdoc.js' */			return this.each(function( i ) {
/*Line 8670 - 'jquery-1.5.1-vsdoc.js' */				jQuery.offset.setOffset( this, options, i );
/*Line 8671 - 'jquery-1.5.1-vsdoc.js' */			});
/*Line 8672 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 8674 - 'jquery-1.5.1-vsdoc.js' */		if ( !elem || !elem.ownerDocument ) {
/*Line 8675 - 'jquery-1.5.1-vsdoc.js' */			return null;
/*Line 8676 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 8678 - 'jquery-1.5.1-vsdoc.js' */		if ( elem === elem.ownerDocument.body ) {
/*Line 8679 - 'jquery-1.5.1-vsdoc.js' */			return jQuery.offset.bodyOffset( elem );
/*Line 8680 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 8682 - 'jquery-1.5.1-vsdoc.js' */		jQuery.offset.initialize();

/*Line 8684 - 'jquery-1.5.1-vsdoc.js' */		var computedStyle,
/*Line 8685 - 'jquery-1.5.1-vsdoc.js' */			offsetParent = elem.offsetParent,
/*Line 8686 - 'jquery-1.5.1-vsdoc.js' */			prevOffsetParent = elem,
/*Line 8687 - 'jquery-1.5.1-vsdoc.js' */			doc = elem.ownerDocument,
/*Line 8688 - 'jquery-1.5.1-vsdoc.js' */			docElem = doc.documentElement,
/*Line 8689 - 'jquery-1.5.1-vsdoc.js' */			body = doc.body,
/*Line 8690 - 'jquery-1.5.1-vsdoc.js' */			defaultView = doc.defaultView,
/*Line 8691 - 'jquery-1.5.1-vsdoc.js' */			prevComputedStyle = defaultView ? defaultView.getComputedStyle( elem, null ) : elem.currentStyle,
/*Line 8692 - 'jquery-1.5.1-vsdoc.js' */			top = elem.offsetTop,
/*Line 8693 - 'jquery-1.5.1-vsdoc.js' */			left = elem.offsetLeft;

/*Line 8695 - 'jquery-1.5.1-vsdoc.js' */		while ( (elem = elem.parentNode) && elem !== body && elem !== docElem ) {
/*Line 8696 - 'jquery-1.5.1-vsdoc.js' */			if ( jQuery.offset.supportsFixedPosition && prevComputedStyle.position === "fixed" ) {
/*Line 8697 - 'jquery-1.5.1-vsdoc.js' */				break;
/*Line 8698 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 8700 - 'jquery-1.5.1-vsdoc.js' */			computedStyle = defaultView ? defaultView.getComputedStyle(elem, null) : elem.currentStyle;
/*Line 8701 - 'jquery-1.5.1-vsdoc.js' */			top  -= elem.scrollTop;
/*Line 8702 - 'jquery-1.5.1-vsdoc.js' */			left -= elem.scrollLeft;

/*Line 8704 - 'jquery-1.5.1-vsdoc.js' */			if ( elem === offsetParent ) {
/*Line 8705 - 'jquery-1.5.1-vsdoc.js' */				top  += elem.offsetTop;
/*Line 8706 - 'jquery-1.5.1-vsdoc.js' */				left += elem.offsetLeft;

/*Line 8708 - 'jquery-1.5.1-vsdoc.js' */				if ( jQuery.offset.doesNotAddBorder && !(jQuery.offset.doesAddBorderForTableAndCells && rtable.test(elem.nodeName)) ) {
/*Line 8709 - 'jquery-1.5.1-vsdoc.js' */					top  += parseFloat( computedStyle.borderTopWidth  ) || 0;
/*Line 8710 - 'jquery-1.5.1-vsdoc.js' */					left += parseFloat( computedStyle.borderLeftWidth ) || 0;
/*Line 8711 - 'jquery-1.5.1-vsdoc.js' */				}

/*Line 8713 - 'jquery-1.5.1-vsdoc.js' */				prevOffsetParent = offsetParent;
/*Line 8714 - 'jquery-1.5.1-vsdoc.js' */				offsetParent = elem.offsetParent;
/*Line 8715 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 8717 - 'jquery-1.5.1-vsdoc.js' */			if ( jQuery.offset.subtractsBorderForOverflowNotVisible && computedStyle.overflow !== "visible" ) {
/*Line 8718 - 'jquery-1.5.1-vsdoc.js' */				top  += parseFloat( computedStyle.borderTopWidth  ) || 0;
/*Line 8719 - 'jquery-1.5.1-vsdoc.js' */				left += parseFloat( computedStyle.borderLeftWidth ) || 0;
/*Line 8720 - 'jquery-1.5.1-vsdoc.js' */			}

/*Line 8722 - 'jquery-1.5.1-vsdoc.js' */			prevComputedStyle = computedStyle;
/*Line 8723 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 8725 - 'jquery-1.5.1-vsdoc.js' */		if ( prevComputedStyle.position === "relative" || prevComputedStyle.position === "static" ) {
/*Line 8726 - 'jquery-1.5.1-vsdoc.js' */			top  += body.offsetTop;
/*Line 8727 - 'jquery-1.5.1-vsdoc.js' */			left += body.offsetLeft;
/*Line 8728 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 8730 - 'jquery-1.5.1-vsdoc.js' */		if ( jQuery.offset.supportsFixedPosition && prevComputedStyle.position === "fixed" ) {
/*Line 8731 - 'jquery-1.5.1-vsdoc.js' */			top  += Math.max( docElem.scrollTop, body.scrollTop );
/*Line 8732 - 'jquery-1.5.1-vsdoc.js' */			left += Math.max( docElem.scrollLeft, body.scrollLeft );
/*Line 8733 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 8735 - 'jquery-1.5.1-vsdoc.js' */		return { top: top, left: left };
/*Line 8736 - 'jquery-1.5.1-vsdoc.js' */	};
/*Line 8737 - 'jquery-1.5.1-vsdoc.js' */}

/*Line 8739 - 'jquery-1.5.1-vsdoc.js' */jQuery.offset = {
/*Line 8740 - 'jquery-1.5.1-vsdoc.js' */	initialize: function() {
/*Line 8741 - 'jquery-1.5.1-vsdoc.js' */		var body = document.body, container = document.createElement("div"), innerDiv, checkDiv, table, td, bodyMarginTop = parseFloat( jQuery.css(body, "marginTop") ) || 0,
/*Line 8742 - 'jquery-1.5.1-vsdoc.js' */			html = "<div style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;'><div></div></div><table style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>";

/*Line 8744 - 'jquery-1.5.1-vsdoc.js' */		jQuery.extend( container.style, { position: "absolute", top: 0, left: 0, margin: 0, border: 0, width: "1px", height: "1px", visibility: "hidden" } );

/*Line 8746 - 'jquery-1.5.1-vsdoc.js' */		container.innerHTML = html;
/*Line 8747 - 'jquery-1.5.1-vsdoc.js' */		body.insertBefore( container, body.firstChild );
/*Line 8748 - 'jquery-1.5.1-vsdoc.js' */		innerDiv = container.firstChild;
/*Line 8749 - 'jquery-1.5.1-vsdoc.js' */		checkDiv = innerDiv.firstChild;
/*Line 8750 - 'jquery-1.5.1-vsdoc.js' */		td = innerDiv.nextSibling.firstChild.firstChild;

/*Line 8752 - 'jquery-1.5.1-vsdoc.js' */		this.doesNotAddBorder = (checkDiv.offsetTop !== 5);
/*Line 8753 - 'jquery-1.5.1-vsdoc.js' */		this.doesAddBorderForTableAndCells = (td.offsetTop === 5);

/*Line 8755 - 'jquery-1.5.1-vsdoc.js' */		checkDiv.style.position = "fixed";
/*Line 8756 - 'jquery-1.5.1-vsdoc.js' */		checkDiv.style.top = "20px";

/*Line 8758 - 'jquery-1.5.1-vsdoc.js' */		// safari subtracts parent border width here which is 5px
/*Line 8759 - 'jquery-1.5.1-vsdoc.js' */		this.supportsFixedPosition = (checkDiv.offsetTop === 20 || checkDiv.offsetTop === 15);
/*Line 8760 - 'jquery-1.5.1-vsdoc.js' */		checkDiv.style.position = checkDiv.style.top = "";

/*Line 8762 - 'jquery-1.5.1-vsdoc.js' */		innerDiv.style.overflow = "hidden";
/*Line 8763 - 'jquery-1.5.1-vsdoc.js' */		innerDiv.style.position = "relative";

/*Line 8765 - 'jquery-1.5.1-vsdoc.js' */		this.subtractsBorderForOverflowNotVisible = (checkDiv.offsetTop === -5);

/*Line 8767 - 'jquery-1.5.1-vsdoc.js' */		this.doesNotIncludeMarginInBodyOffset = (body.offsetTop !== bodyMarginTop);

/*Line 8769 - 'jquery-1.5.1-vsdoc.js' */		body.removeChild( container );
/*Line 8770 - 'jquery-1.5.1-vsdoc.js' */		body = container = innerDiv = checkDiv = table = td = null;
/*Line 8771 - 'jquery-1.5.1-vsdoc.js' */		jQuery.offset.initialize = jQuery.noop;
/*Line 8772 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 8774 - 'jquery-1.5.1-vsdoc.js' */	bodyOffset: function( body ) {
/*Line 8775 - 'jquery-1.5.1-vsdoc.js' */		var top = body.offsetTop,
/*Line 8776 - 'jquery-1.5.1-vsdoc.js' */			left = body.offsetLeft;

/*Line 8778 - 'jquery-1.5.1-vsdoc.js' */		jQuery.offset.initialize();

/*Line 8780 - 'jquery-1.5.1-vsdoc.js' */		if ( jQuery.offset.doesNotIncludeMarginInBodyOffset ) {
/*Line 8781 - 'jquery-1.5.1-vsdoc.js' */			top  += parseFloat( jQuery.css(body, "marginTop") ) || 0;
/*Line 8782 - 'jquery-1.5.1-vsdoc.js' */			left += parseFloat( jQuery.css(body, "marginLeft") ) || 0;
/*Line 8783 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 8785 - 'jquery-1.5.1-vsdoc.js' */		return { top: top, left: left };
/*Line 8786 - 'jquery-1.5.1-vsdoc.js' */	},
	
/*Line 8788 - 'jquery-1.5.1-vsdoc.js' */	setOffset: function( elem, options, i ) {
/*Line 8789 - 'jquery-1.5.1-vsdoc.js' */		var position = jQuery.css( elem, "position" );

/*Line 8791 - 'jquery-1.5.1-vsdoc.js' */		// set position first, in-case top/left are set even on static elem
/*Line 8792 - 'jquery-1.5.1-vsdoc.js' */		if ( position === "static" ) {
/*Line 8793 - 'jquery-1.5.1-vsdoc.js' */			elem.style.position = "relative";
/*Line 8794 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 8796 - 'jquery-1.5.1-vsdoc.js' */		var curElem = jQuery( elem ),
/*Line 8797 - 'jquery-1.5.1-vsdoc.js' */			curOffset = curElem.offset(),
/*Line 8798 - 'jquery-1.5.1-vsdoc.js' */			curCSSTop = jQuery.css( elem, "top" ),
/*Line 8799 - 'jquery-1.5.1-vsdoc.js' */			curCSSLeft = jQuery.css( elem, "left" ),
/*Line 8800 - 'jquery-1.5.1-vsdoc.js' */			calculatePosition = (position === "absolute" && jQuery.inArray('auto', [curCSSTop, curCSSLeft]) > -1),
/*Line 8801 - 'jquery-1.5.1-vsdoc.js' */			props = {}, curPosition = {}, curTop, curLeft;

/*Line 8803 - 'jquery-1.5.1-vsdoc.js' */		// need to be able to calculate position if either top or left is auto and position is absolute
/*Line 8804 - 'jquery-1.5.1-vsdoc.js' */		if ( calculatePosition ) {
/*Line 8805 - 'jquery-1.5.1-vsdoc.js' */			curPosition = curElem.position();
/*Line 8806 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 8808 - 'jquery-1.5.1-vsdoc.js' */		curTop  = calculatePosition ? curPosition.top  : parseInt( curCSSTop,  10 ) || 0;
/*Line 8809 - 'jquery-1.5.1-vsdoc.js' */		curLeft = calculatePosition ? curPosition.left : parseInt( curCSSLeft, 10 ) || 0;

/*Line 8811 - 'jquery-1.5.1-vsdoc.js' */		if ( jQuery.isFunction( options ) ) {
/*Line 8812 - 'jquery-1.5.1-vsdoc.js' */			options = options.call( elem, i, curOffset );
/*Line 8813 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 8815 - 'jquery-1.5.1-vsdoc.js' */		if (options.top != null) {
/*Line 8816 - 'jquery-1.5.1-vsdoc.js' */			props.top = (options.top - curOffset.top) + curTop;
/*Line 8817 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 8818 - 'jquery-1.5.1-vsdoc.js' */		if (options.left != null) {
/*Line 8819 - 'jquery-1.5.1-vsdoc.js' */			props.left = (options.left - curOffset.left) + curLeft;
/*Line 8820 - 'jquery-1.5.1-vsdoc.js' */		}
		
/*Line 8822 - 'jquery-1.5.1-vsdoc.js' */		if ( "using" in options ) {
/*Line 8823 - 'jquery-1.5.1-vsdoc.js' */			options.using.call( elem, props );
/*Line 8824 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 8825 - 'jquery-1.5.1-vsdoc.js' */			curElem.css( props );
/*Line 8826 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 8827 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 8828 - 'jquery-1.5.1-vsdoc.js' */};


/*Line 8831 - 'jquery-1.5.1-vsdoc.js' */jQuery.fn.extend({
/*Line 8832 - 'jquery-1.5.1-vsdoc.js' */	position: function() {
/*Line 8833 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 8834 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Gets the top and left positions of an element relative to its offset parent.
/*Line 8835 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 8836 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="Object">An object with two integer properties, 'top' and 'left'.</returns>

/*Line 8838 - 'jquery-1.5.1-vsdoc.js' */		if ( !this[0] ) {
/*Line 8839 - 'jquery-1.5.1-vsdoc.js' */			return null;
/*Line 8840 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 8842 - 'jquery-1.5.1-vsdoc.js' */		var elem = this[0],

/*Line 8844 - 'jquery-1.5.1-vsdoc.js' */		// Get *real* offsetParent
/*Line 8845 - 'jquery-1.5.1-vsdoc.js' */		offsetParent = this.offsetParent(),

/*Line 8847 - 'jquery-1.5.1-vsdoc.js' */		// Get correct offsets
/*Line 8848 - 'jquery-1.5.1-vsdoc.js' */		offset       = this.offset(),
/*Line 8849 - 'jquery-1.5.1-vsdoc.js' */		parentOffset = rroot.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset();

/*Line 8851 - 'jquery-1.5.1-vsdoc.js' */		// Subtract element margins
/*Line 8852 - 'jquery-1.5.1-vsdoc.js' */		// note: when an element has margin: auto the offsetLeft and marginLeft
/*Line 8853 - 'jquery-1.5.1-vsdoc.js' */		// are the same in Safari causing offset.left to incorrectly be 0
/*Line 8854 - 'jquery-1.5.1-vsdoc.js' */		offset.top  -= parseFloat( jQuery.css(elem, "marginTop") ) || 0;
/*Line 8855 - 'jquery-1.5.1-vsdoc.js' */		offset.left -= parseFloat( jQuery.css(elem, "marginLeft") ) || 0;

/*Line 8857 - 'jquery-1.5.1-vsdoc.js' */		// Add offsetParent borders
/*Line 8858 - 'jquery-1.5.1-vsdoc.js' */		parentOffset.top  += parseFloat( jQuery.css(offsetParent[0], "borderTopWidth") ) || 0;
/*Line 8859 - 'jquery-1.5.1-vsdoc.js' */		parentOffset.left += parseFloat( jQuery.css(offsetParent[0], "borderLeftWidth") ) || 0;

/*Line 8861 - 'jquery-1.5.1-vsdoc.js' */		// Subtract the two offsets
/*Line 8862 - 'jquery-1.5.1-vsdoc.js' */		return {
/*Line 8863 - 'jquery-1.5.1-vsdoc.js' */			top:  offset.top  - parentOffset.top,
/*Line 8864 - 'jquery-1.5.1-vsdoc.js' */			left: offset.left - parentOffset.left
/*Line 8865 - 'jquery-1.5.1-vsdoc.js' */		};
/*Line 8866 - 'jquery-1.5.1-vsdoc.js' */	},

/*Line 8868 - 'jquery-1.5.1-vsdoc.js' */	offsetParent: function() {
/*Line 8869 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 8870 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;This method is internal.
/*Line 8871 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 8872 - 'jquery-1.5.1-vsdoc.js' */		///	<private />

/*Line 8874 - 'jquery-1.5.1-vsdoc.js' */		return this.map(function() {
/*Line 8875 - 'jquery-1.5.1-vsdoc.js' */			var offsetParent = this.offsetParent || document.body;
/*Line 8876 - 'jquery-1.5.1-vsdoc.js' */			while ( offsetParent && (!rroot.test(offsetParent.nodeName) && jQuery.css(offsetParent, "position") === "static") ) {
/*Line 8877 - 'jquery-1.5.1-vsdoc.js' */				offsetParent = offsetParent.offsetParent;
/*Line 8878 - 'jquery-1.5.1-vsdoc.js' */			}
/*Line 8879 - 'jquery-1.5.1-vsdoc.js' */			return offsetParent;
/*Line 8880 - 'jquery-1.5.1-vsdoc.js' */		});
/*Line 8881 - 'jquery-1.5.1-vsdoc.js' */	}
/*Line 8882 - 'jquery-1.5.1-vsdoc.js' */});


/*Line 8885 - 'jquery-1.5.1-vsdoc.js' */// Create scrollLeft and scrollTop methods
/*Line 8886 - 'jquery-1.5.1-vsdoc.js' */jQuery.each( ["Left", "Top"], function( i, name ) {
/*Line 8887 - 'jquery-1.5.1-vsdoc.js' */	var method = "scroll" + name;

/*Line 8889 - 'jquery-1.5.1-vsdoc.js' */	jQuery.fn[ method ] = function(val) {
/*Line 8890 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 8891 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Gets and optionally sets the scroll left offset of the first matched element.
/*Line 8892 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 8893 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="val" type="Number" integer="true" optional="true">A positive number representing the desired scroll left offset.</param>
/*Line 8894 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="Number" integer="true">The scroll left offset of the first matched element.</returns>

/*Line 8896 - 'jquery-1.5.1-vsdoc.js' */		var elem = this[0], win;
		
/*Line 8898 - 'jquery-1.5.1-vsdoc.js' */		if ( !elem ) {
/*Line 8899 - 'jquery-1.5.1-vsdoc.js' */			return null;
/*Line 8900 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 8902 - 'jquery-1.5.1-vsdoc.js' */		if ( val !== undefined ) {
/*Line 8903 - 'jquery-1.5.1-vsdoc.js' */			// Set the scroll offset
/*Line 8904 - 'jquery-1.5.1-vsdoc.js' */			return this.each(function() {
/*Line 8905 - 'jquery-1.5.1-vsdoc.js' */				win = getWindow( this );

/*Line 8907 - 'jquery-1.5.1-vsdoc.js' */				if ( win ) {
/*Line 8908 - 'jquery-1.5.1-vsdoc.js' */					win.scrollTo(
/*Line 8909 - 'jquery-1.5.1-vsdoc.js' */						!i ? val : jQuery(win).scrollLeft(),
/*Line 8910 - 'jquery-1.5.1-vsdoc.js' */						 i ? val : jQuery(win).scrollTop()
/*Line 8911 - 'jquery-1.5.1-vsdoc.js' */					);

/*Line 8913 - 'jquery-1.5.1-vsdoc.js' */				} else {
/*Line 8914 - 'jquery-1.5.1-vsdoc.js' */					this[ method ] = val;
/*Line 8915 - 'jquery-1.5.1-vsdoc.js' */				}
/*Line 8916 - 'jquery-1.5.1-vsdoc.js' */			});
/*Line 8917 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 8918 - 'jquery-1.5.1-vsdoc.js' */			win = getWindow( elem );

/*Line 8920 - 'jquery-1.5.1-vsdoc.js' */			// Return the scroll offset
/*Line 8921 - 'jquery-1.5.1-vsdoc.js' */			return win ? ("pageXOffset" in win) ? win[ i ? "pageYOffset" : "pageXOffset" ] :
/*Line 8922 - 'jquery-1.5.1-vsdoc.js' */				jQuery.support.boxModel && win.document.documentElement[ method ] ||
/*Line 8923 - 'jquery-1.5.1-vsdoc.js' */					win.document.body[ method ] :
/*Line 8924 - 'jquery-1.5.1-vsdoc.js' */				elem[ method ];
/*Line 8925 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 8926 - 'jquery-1.5.1-vsdoc.js' */	};
/*Line 8927 - 'jquery-1.5.1-vsdoc.js' */});

/*Line 8929 - 'jquery-1.5.1-vsdoc.js' */function getWindow( elem ) {
/*Line 8930 - 'jquery-1.5.1-vsdoc.js' */	return jQuery.isWindow( elem ) ?
/*Line 8931 - 'jquery-1.5.1-vsdoc.js' */		elem :
/*Line 8932 - 'jquery-1.5.1-vsdoc.js' */		elem.nodeType === 9 ?
/*Line 8933 - 'jquery-1.5.1-vsdoc.js' */			elem.defaultView || elem.parentWindow :
/*Line 8934 - 'jquery-1.5.1-vsdoc.js' */			false;
/*Line 8935 - 'jquery-1.5.1-vsdoc.js' */}




/*Line 8940 - 'jquery-1.5.1-vsdoc.js' */// Create innerHeight, innerWidth, outerHeight and outerWidth methods
/*Line 8941 - 'jquery-1.5.1-vsdoc.js' */jQuery.each([ "Height" ], function( i, name ) {

/*Line 8943 - 'jquery-1.5.1-vsdoc.js' */	var type = name.toLowerCase();

/*Line 8945 - 'jquery-1.5.1-vsdoc.js' */	// innerHeight and innerWidth
/*Line 8946 - 'jquery-1.5.1-vsdoc.js' */	jQuery.fn["inner" + name] = function() {
/*Line 8947 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 8948 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Gets the inner height of the first matched element, excluding border but including padding.
/*Line 8949 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 8950 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="Number" integer="true">The outer height of the first matched element.</returns>

/*Line 8952 - 'jquery-1.5.1-vsdoc.js' */		return this[0] ?
/*Line 8953 - 'jquery-1.5.1-vsdoc.js' */			parseFloat( jQuery.css( this[0], type, "padding" ) ) :
/*Line 8954 - 'jquery-1.5.1-vsdoc.js' */			null;
/*Line 8955 - 'jquery-1.5.1-vsdoc.js' */	};

/*Line 8957 - 'jquery-1.5.1-vsdoc.js' */	// outerHeight and outerWidth
/*Line 8958 - 'jquery-1.5.1-vsdoc.js' */	jQuery.fn["outer" + name] = function( margin ) {
/*Line 8959 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 8960 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Gets the outer height of the first matched element, including border and padding by default.
/*Line 8961 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 8962 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="margins" type="Map">A set of key/value pairs that specify the options for the method.</param>
/*Line 8963 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="Number" integer="true">The outer height of the first matched element.</returns>

/*Line 8965 - 'jquery-1.5.1-vsdoc.js' */		return this[0] ?
/*Line 8966 - 'jquery-1.5.1-vsdoc.js' */			parseFloat( jQuery.css( this[0], type, margin ? "margin" : "border" ) ) :
/*Line 8967 - 'jquery-1.5.1-vsdoc.js' */			null;
/*Line 8968 - 'jquery-1.5.1-vsdoc.js' */	};

/*Line 8970 - 'jquery-1.5.1-vsdoc.js' */	jQuery.fn[ type ] = function( size ) {
/*Line 8971 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 8972 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Set the CSS height of every matched element. If no explicit unit
/*Line 8973 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;was specified (like 'em' or '%') then &quot;px&quot; is added to the width.  If no parameter is specified, it gets
/*Line 8974 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;the current computed pixel height of the first matched element.
/*Line 8975 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of CSS
/*Line 8976 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 8977 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" type="jQuery" />
/*Line 8978 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="cssProperty" type="String">
/*Line 8979 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Set the CSS property to the specified value. Omit to get the value of the first matched element.
/*Line 8980 - 'jquery-1.5.1-vsdoc.js' */		///	</param>

/*Line 8982 - 'jquery-1.5.1-vsdoc.js' */		// Get window width or height
/*Line 8983 - 'jquery-1.5.1-vsdoc.js' */		var elem = this[0];
/*Line 8984 - 'jquery-1.5.1-vsdoc.js' */		if ( !elem ) {
/*Line 8985 - 'jquery-1.5.1-vsdoc.js' */			return size == null ? null : this;
/*Line 8986 - 'jquery-1.5.1-vsdoc.js' */		}
		
/*Line 8988 - 'jquery-1.5.1-vsdoc.js' */		if ( jQuery.isFunction( size ) ) {
/*Line 8989 - 'jquery-1.5.1-vsdoc.js' */			return this.each(function( i ) {
/*Line 8990 - 'jquery-1.5.1-vsdoc.js' */				var self = jQuery( this );
/*Line 8991 - 'jquery-1.5.1-vsdoc.js' */				self[ type ]( size.call( this, i, self[ type ]() ) );
/*Line 8992 - 'jquery-1.5.1-vsdoc.js' */			});
/*Line 8993 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 8995 - 'jquery-1.5.1-vsdoc.js' */		if ( jQuery.isWindow( elem ) ) {
/*Line 8996 - 'jquery-1.5.1-vsdoc.js' */			// Everyone else use document.documentElement or document.body depending on Quirks vs Standards mode
/*Line 8997 - 'jquery-1.5.1-vsdoc.js' */			return elem.document.compatMode === "CSS1Compat" && elem.document.documentElement[ "client" + name ] ||
/*Line 8998 - 'jquery-1.5.1-vsdoc.js' */				elem.document.body[ "client" + name ];

/*Line 9000 - 'jquery-1.5.1-vsdoc.js' */		// Get document width or height
/*Line 9001 - 'jquery-1.5.1-vsdoc.js' */		} else if ( elem.nodeType === 9 ) {
/*Line 9002 - 'jquery-1.5.1-vsdoc.js' */			// Either scroll[Width/Height] or offset[Width/Height], whichever is greater
/*Line 9003 - 'jquery-1.5.1-vsdoc.js' */			return Math.max(
/*Line 9004 - 'jquery-1.5.1-vsdoc.js' */				elem.documentElement["client" + name],
/*Line 9005 - 'jquery-1.5.1-vsdoc.js' */				elem.body["scroll" + name], elem.documentElement["scroll" + name],
/*Line 9006 - 'jquery-1.5.1-vsdoc.js' */				elem.body["offset" + name], elem.documentElement["offset" + name]
/*Line 9007 - 'jquery-1.5.1-vsdoc.js' */			);

/*Line 9009 - 'jquery-1.5.1-vsdoc.js' */		// Get or set width or height on the element
/*Line 9010 - 'jquery-1.5.1-vsdoc.js' */		} else if ( size === undefined ) {
/*Line 9011 - 'jquery-1.5.1-vsdoc.js' */			var orig = jQuery.css( elem, type ),
/*Line 9012 - 'jquery-1.5.1-vsdoc.js' */				ret = parseFloat( orig );

/*Line 9014 - 'jquery-1.5.1-vsdoc.js' */			return jQuery.isNaN( ret ) ? orig : ret;

/*Line 9016 - 'jquery-1.5.1-vsdoc.js' */		// Set the width or height on the element (default to pixels if value is unitless)
/*Line 9017 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 9018 - 'jquery-1.5.1-vsdoc.js' */			return this.css( type, typeof size === "string" ? size : size + "px" );
/*Line 9019 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 9020 - 'jquery-1.5.1-vsdoc.js' */	};

/*Line 9022 - 'jquery-1.5.1-vsdoc.js' */});

/*Line 9024 - 'jquery-1.5.1-vsdoc.js' */// Create innerHeight, innerWidth, outerHeight and outerWidth methods
/*Line 9025 - 'jquery-1.5.1-vsdoc.js' */jQuery.each([ "Width" ], function( i, name ) {

/*Line 9027 - 'jquery-1.5.1-vsdoc.js' */	var type = name.toLowerCase();

/*Line 9029 - 'jquery-1.5.1-vsdoc.js' */	// innerHeight and innerWidth
/*Line 9030 - 'jquery-1.5.1-vsdoc.js' */	jQuery.fn["inner" + name] = function() {
/*Line 9031 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 9032 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Gets the inner width of the first matched element, excluding border but including padding.
/*Line 9033 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 9034 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="Number" integer="true">The outer width of the first matched element.</returns>

/*Line 9036 - 'jquery-1.5.1-vsdoc.js' */		return this[0] ?
/*Line 9037 - 'jquery-1.5.1-vsdoc.js' */			parseFloat( jQuery.css( this[0], type, "padding" ) ) :
/*Line 9038 - 'jquery-1.5.1-vsdoc.js' */			null;
/*Line 9039 - 'jquery-1.5.1-vsdoc.js' */	};

/*Line 9041 - 'jquery-1.5.1-vsdoc.js' */	// outerHeight and outerWidth
/*Line 9042 - 'jquery-1.5.1-vsdoc.js' */	jQuery.fn["outer" + name] = function( margin ) {
/*Line 9043 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 9044 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Gets the outer width of the first matched element, including border and padding by default.
/*Line 9045 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 9046 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="margin" type="Map">A set of key/value pairs that specify the options for the method.</param>
/*Line 9047 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="Number" integer="true">The outer width of the first matched element.</returns>

/*Line 9049 - 'jquery-1.5.1-vsdoc.js' */		return this[0] ?
/*Line 9050 - 'jquery-1.5.1-vsdoc.js' */			parseFloat( jQuery.css( this[0], type, margin ? "margin" : "border" ) ) :
/*Line 9051 - 'jquery-1.5.1-vsdoc.js' */			null;
/*Line 9052 - 'jquery-1.5.1-vsdoc.js' */	};

/*Line 9054 - 'jquery-1.5.1-vsdoc.js' */	jQuery.fn[ type ] = function( size ) {
/*Line 9055 - 'jquery-1.5.1-vsdoc.js' */		///	<summary>
/*Line 9056 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Set the CSS width of every matched element. If no explicit unit
/*Line 9057 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;was specified (like 'em' or '%') then &quot;px&quot; is added to the width.  If no parameter is specified, it gets
/*Line 9058 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;the current computed pixel width of the first matched element.
/*Line 9059 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Part of CSS
/*Line 9060 - 'jquery-1.5.1-vsdoc.js' */		///	</summary>
/*Line 9061 - 'jquery-1.5.1-vsdoc.js' */		///	<returns type="jQuery" type="jQuery" />
/*Line 9062 - 'jquery-1.5.1-vsdoc.js' */		///	<param name="cssProperty" type="String">
/*Line 9063 - 'jquery-1.5.1-vsdoc.js' */		///     &#10;Set the CSS property to the specified value. Omit to get the value of the first matched element.
/*Line 9064 - 'jquery-1.5.1-vsdoc.js' */		///	</param>

/*Line 9066 - 'jquery-1.5.1-vsdoc.js' */		// Get window width or height
/*Line 9067 - 'jquery-1.5.1-vsdoc.js' */		var elem = this[0];
/*Line 9068 - 'jquery-1.5.1-vsdoc.js' */		if ( !elem ) {
/*Line 9069 - 'jquery-1.5.1-vsdoc.js' */			return size == null ? null : this;
/*Line 9070 - 'jquery-1.5.1-vsdoc.js' */		}
		
/*Line 9072 - 'jquery-1.5.1-vsdoc.js' */		if ( jQuery.isFunction( size ) ) {
/*Line 9073 - 'jquery-1.5.1-vsdoc.js' */			return this.each(function( i ) {
/*Line 9074 - 'jquery-1.5.1-vsdoc.js' */				var self = jQuery( this );
/*Line 9075 - 'jquery-1.5.1-vsdoc.js' */				self[ type ]( size.call( this, i, self[ type ]() ) );
/*Line 9076 - 'jquery-1.5.1-vsdoc.js' */			});
/*Line 9077 - 'jquery-1.5.1-vsdoc.js' */		}

/*Line 9079 - 'jquery-1.5.1-vsdoc.js' */		if ( jQuery.isWindow( elem ) ) {
/*Line 9080 - 'jquery-1.5.1-vsdoc.js' */			// Everyone else use document.documentElement or document.body depending on Quirks vs Standards mode
/*Line 9081 - 'jquery-1.5.1-vsdoc.js' */			return elem.document.compatMode === "CSS1Compat" && elem.document.documentElement[ "client" + name ] ||
/*Line 9082 - 'jquery-1.5.1-vsdoc.js' */				elem.document.body[ "client" + name ];

/*Line 9084 - 'jquery-1.5.1-vsdoc.js' */		// Get document width or height
/*Line 9085 - 'jquery-1.5.1-vsdoc.js' */		} else if ( elem.nodeType === 9 ) {
/*Line 9086 - 'jquery-1.5.1-vsdoc.js' */			// Either scroll[Width/Height] or offset[Width/Height], whichever is greater
/*Line 9087 - 'jquery-1.5.1-vsdoc.js' */			return Math.max(
/*Line 9088 - 'jquery-1.5.1-vsdoc.js' */				elem.documentElement["client" + name],
/*Line 9089 - 'jquery-1.5.1-vsdoc.js' */				elem.body["scroll" + name], elem.documentElement["scroll" + name],
/*Line 9090 - 'jquery-1.5.1-vsdoc.js' */				elem.body["offset" + name], elem.documentElement["offset" + name]
/*Line 9091 - 'jquery-1.5.1-vsdoc.js' */			);

/*Line 9093 - 'jquery-1.5.1-vsdoc.js' */		// Get or set width or height on the element
/*Line 9094 - 'jquery-1.5.1-vsdoc.js' */		} else if ( size === undefined ) {
/*Line 9095 - 'jquery-1.5.1-vsdoc.js' */			var orig = jQuery.css( elem, type ),
/*Line 9096 - 'jquery-1.5.1-vsdoc.js' */				ret = parseFloat( orig );

/*Line 9098 - 'jquery-1.5.1-vsdoc.js' */			return jQuery.isNaN( ret ) ? orig : ret;

/*Line 9100 - 'jquery-1.5.1-vsdoc.js' */		// Set the width or height on the element (default to pixels if value is unitless)
/*Line 9101 - 'jquery-1.5.1-vsdoc.js' */		} else {
/*Line 9102 - 'jquery-1.5.1-vsdoc.js' */			return this.css( type, typeof size === "string" ? size : size + "px" );
/*Line 9103 - 'jquery-1.5.1-vsdoc.js' */		}
/*Line 9104 - 'jquery-1.5.1-vsdoc.js' */	};

/*Line 9106 - 'jquery-1.5.1-vsdoc.js' */});


/*Line 9109 - 'jquery-1.5.1-vsdoc.js' */})(window);
/*Line 0 - 'FlashPlayer.js' */



/*Line 4 - 'FlashPlayer.js' *//*!	SWFObject v2.2 <http://code.google.com/p/swfobject/> 
/*Line 5 - 'FlashPlayer.js' */is released under the MIT License <http://www.opensource.org/licenses/mit-license.php> 
/*Line 6 - 'FlashPlayer.js' */*/

/*Line 8 - 'FlashPlayer.js' */var swfobject = function () {

/*Line 10 - 'FlashPlayer.js' */    var UNDEF = "undefined",
/*Line 11 - 'FlashPlayer.js' */		OBJECT = "object",
/*Line 12 - 'FlashPlayer.js' */		SHOCKWAVE_FLASH = "Shockwave Flash",
/*Line 13 - 'FlashPlayer.js' */		SHOCKWAVE_FLASH_AX = "ShockwaveFlash.ShockwaveFlash",
/*Line 14 - 'FlashPlayer.js' */		FLASH_MIME_TYPE = "application/x-shockwave-flash",
/*Line 15 - 'FlashPlayer.js' */		EXPRESS_INSTALL_ID = "SWFObjectExprInst",
/*Line 16 - 'FlashPlayer.js' */		ON_READY_STATE_CHANGE = "onreadystatechange",

/*Line 18 - 'FlashPlayer.js' */		win = window,
/*Line 19 - 'FlashPlayer.js' */		doc = document,
/*Line 20 - 'FlashPlayer.js' */		nav = navigator,

/*Line 22 - 'FlashPlayer.js' */		plugin = false,
/*Line 23 - 'FlashPlayer.js' */		domLoadFnArr = [main],
/*Line 24 - 'FlashPlayer.js' */		regObjArr = [],
/*Line 25 - 'FlashPlayer.js' */		objIdArr = [],
/*Line 26 - 'FlashPlayer.js' */		listenersArr = [],
/*Line 27 - 'FlashPlayer.js' */		storedAltContent,
/*Line 28 - 'FlashPlayer.js' */		storedAltContentId,
/*Line 29 - 'FlashPlayer.js' */		storedCallbackFn,
/*Line 30 - 'FlashPlayer.js' */		storedCallbackObj,
/*Line 31 - 'FlashPlayer.js' */		isDomLoaded = false,
/*Line 32 - 'FlashPlayer.js' */		isExpressInstallActive = false,
/*Line 33 - 'FlashPlayer.js' */		dynamicStylesheet,
/*Line 34 - 'FlashPlayer.js' */		dynamicStylesheetMedia,
/*Line 35 - 'FlashPlayer.js' */		autoHideShow = true,

/*Line 37 - 'FlashPlayer.js' */    /* Centralized function for browser feature detection
/*Line 38 - 'FlashPlayer.js' */    - User agent string detection is only used when no good alternative is possible
/*Line 39 - 'FlashPlayer.js' */    - Is executed directly for optimal performance
/*Line 40 - 'FlashPlayer.js' */    */
/*Line 41 - 'FlashPlayer.js' */	ua = function () {
/*Line 42 - 'FlashPlayer.js' */	    var w3cdom = typeof doc.getElementById != UNDEF && typeof doc.getElementsByTagName != UNDEF && typeof doc.createElement != UNDEF,
/*Line 43 - 'FlashPlayer.js' */			u = nav.userAgent.toLowerCase(),
/*Line 44 - 'FlashPlayer.js' */			p = nav.platform.toLowerCase(),
/*Line 45 - 'FlashPlayer.js' */			windows = p ? /win/.test(p) : /win/.test(u),
/*Line 46 - 'FlashPlayer.js' */			mac = p ? /mac/.test(p) : /mac/.test(u),
/*Line 47 - 'FlashPlayer.js' */			webkit = /webkit/.test(u) ? parseFloat(u.replace(/^.*webkit\/(\d+(\.\d+)?).*$/, "$1")) : false, // returns either the webkit version or false if not webkit
/*Line 48 - 'FlashPlayer.js' */			ie = ! +"\v1", // feature detection based on Andrea Giammarchi's solution: http://webreflection.blogspot.com/2009/01/32-bytes-to-know-if-your-browser-is-ie.html
/*Line 49 - 'FlashPlayer.js' */			playerVersion = [0, 0, 0],
/*Line 50 - 'FlashPlayer.js' */			d = null;
/*Line 51 - 'FlashPlayer.js' */	    if (typeof nav.plugins != UNDEF && typeof nav.plugins[SHOCKWAVE_FLASH] == OBJECT) {
/*Line 52 - 'FlashPlayer.js' */	        d = nav.plugins[SHOCKWAVE_FLASH].description;
/*Line 53 - 'FlashPlayer.js' */	        if (d && !(typeof nav.mimeTypes != UNDEF && nav.mimeTypes[FLASH_MIME_TYPE] && !nav.mimeTypes[FLASH_MIME_TYPE].enabledPlugin)) { // navigator.mimeTypes["application/x-shockwave-flash"].enabledPlugin indicates whether plug-ins are enabled or disabled in Safari 3+
/*Line 54 - 'FlashPlayer.js' */	            plugin = true;
/*Line 55 - 'FlashPlayer.js' */	            ie = false; // cascaded feature detection for Internet Explorer
/*Line 56 - 'FlashPlayer.js' */	            d = d.replace(/^.*\s+(\S+\s+\S+$)/, "$1");
/*Line 57 - 'FlashPlayer.js' */	            playerVersion[0] = parseInt(d.replace(/^(.*)\..*$/, "$1"), 10);
/*Line 58 - 'FlashPlayer.js' */	            playerVersion[1] = parseInt(d.replace(/^.*\.(.*)\s.*$/, "$1"), 10);
/*Line 59 - 'FlashPlayer.js' */	            playerVersion[2] = /[a-zA-Z]/.test(d) ? parseInt(d.replace(/^.*[a-zA-Z]+(.*)$/, "$1"), 10) : 0;
/*Line 60 - 'FlashPlayer.js' */	        }
/*Line 61 - 'FlashPlayer.js' */	    }
/*Line 62 - 'FlashPlayer.js' */	    else if (typeof win.ActiveXObject != UNDEF) {
/*Line 63 - 'FlashPlayer.js' */	        try {
/*Line 64 - 'FlashPlayer.js' */	            var a = new ActiveXObject(SHOCKWAVE_FLASH_AX);
/*Line 65 - 'FlashPlayer.js' */	            if (a) { // a will return null when ActiveX is disabled
/*Line 66 - 'FlashPlayer.js' */	                d = a.GetVariable("$version");
/*Line 67 - 'FlashPlayer.js' */	                if (d) {
/*Line 68 - 'FlashPlayer.js' */	                    ie = true; // cascaded feature detection for Internet Explorer
/*Line 69 - 'FlashPlayer.js' */	                    d = d.split(" ")[1].split(",");
/*Line 70 - 'FlashPlayer.js' */	                    playerVersion = [parseInt(d[0], 10), parseInt(d[1], 10), parseInt(d[2], 10)];
/*Line 71 - 'FlashPlayer.js' */	                }
/*Line 72 - 'FlashPlayer.js' */	            }
/*Line 73 - 'FlashPlayer.js' */	        }
/*Line 74 - 'FlashPlayer.js' */	        catch (e) { }
/*Line 75 - 'FlashPlayer.js' */	    }
/*Line 76 - 'FlashPlayer.js' */	    return { w3: w3cdom, pv: playerVersion, wk: webkit, ie: ie, win: windows, mac: mac };
/*Line 77 - 'FlashPlayer.js' */	} (),

/*Line 79 - 'FlashPlayer.js' */    /* Cross-browser onDomLoad
/*Line 80 - 'FlashPlayer.js' */    - Will fire an event as soon as the DOM of a web page is loaded
/*Line 81 - 'FlashPlayer.js' */    - Internet Explorer workaround based on Diego Perini's solution: http://javascript.nwbox.com/IEContentLoaded/
/*Line 82 - 'FlashPlayer.js' */    - Regular onload serves as fallback
/*Line 83 - 'FlashPlayer.js' */    */
/*Line 84 - 'FlashPlayer.js' */	onDomLoad = function () {
/*Line 85 - 'FlashPlayer.js' */	    if (!ua.w3) { return; }
/*Line 86 - 'FlashPlayer.js' */	    if ((typeof doc.readyState != UNDEF && doc.readyState == "complete") || (typeof doc.readyState == UNDEF && (doc.getElementsByTagName("body")[0] || doc.body))) { // function is fired after onload, e.g. when script is inserted dynamically 
/*Line 87 - 'FlashPlayer.js' */	        callDomLoadFunctions();
/*Line 88 - 'FlashPlayer.js' */	    }
/*Line 89 - 'FlashPlayer.js' */	    if (!isDomLoaded) {
/*Line 90 - 'FlashPlayer.js' */	        if (typeof doc.addEventListener != UNDEF) {
/*Line 91 - 'FlashPlayer.js' */	            doc.addEventListener("DOMContentLoaded", callDomLoadFunctions, false);
/*Line 92 - 'FlashPlayer.js' */	        }
/*Line 93 - 'FlashPlayer.js' */	        if (ua.ie && ua.win) {
/*Line 94 - 'FlashPlayer.js' */	            doc.attachEvent(ON_READY_STATE_CHANGE, function () {
/*Line 95 - 'FlashPlayer.js' */	                if (doc.readyState == "complete") {
/*Line 96 - 'FlashPlayer.js' */	                    doc.detachEvent(ON_READY_STATE_CHANGE, arguments.callee);
/*Line 97 - 'FlashPlayer.js' */	                    callDomLoadFunctions();
/*Line 98 - 'FlashPlayer.js' */	                }
/*Line 99 - 'FlashPlayer.js' */	            });
/*Line 100 - 'FlashPlayer.js' */	            if (win == top) { // if not inside an iframe
/*Line 101 - 'FlashPlayer.js' */	                (function () {
/*Line 102 - 'FlashPlayer.js' */	                    if (isDomLoaded) { return; }
/*Line 103 - 'FlashPlayer.js' */	                    try {
/*Line 104 - 'FlashPlayer.js' */	                        doc.documentElement.doScroll("left");
/*Line 105 - 'FlashPlayer.js' */	                    }
/*Line 106 - 'FlashPlayer.js' */	                    catch (e) {
/*Line 107 - 'FlashPlayer.js' */	                        setTimeout(arguments.callee, 0);
/*Line 108 - 'FlashPlayer.js' */	                        return;
/*Line 109 - 'FlashPlayer.js' */	                    }
/*Line 110 - 'FlashPlayer.js' */	                    callDomLoadFunctions();
/*Line 111 - 'FlashPlayer.js' */	                })();
/*Line 112 - 'FlashPlayer.js' */	            }
/*Line 113 - 'FlashPlayer.js' */	        }
/*Line 114 - 'FlashPlayer.js' */	        if (ua.wk) {
/*Line 115 - 'FlashPlayer.js' */	            (function () {
/*Line 116 - 'FlashPlayer.js' */	                if (isDomLoaded) { return; }
/*Line 117 - 'FlashPlayer.js' */	                if (!/loaded|complete/.test(doc.readyState)) {
/*Line 118 - 'FlashPlayer.js' */	                    setTimeout(arguments.callee, 0);
/*Line 119 - 'FlashPlayer.js' */	                    return;
/*Line 120 - 'FlashPlayer.js' */	                }
/*Line 121 - 'FlashPlayer.js' */	                callDomLoadFunctions();
/*Line 122 - 'FlashPlayer.js' */	            })();
/*Line 123 - 'FlashPlayer.js' */	        }
/*Line 124 - 'FlashPlayer.js' */	        addLoadEvent(callDomLoadFunctions);
/*Line 125 - 'FlashPlayer.js' */	    }
/*Line 126 - 'FlashPlayer.js' */	} ();

/*Line 128 - 'FlashPlayer.js' */    function callDomLoadFunctions() {
/*Line 129 - 'FlashPlayer.js' */        if (isDomLoaded) { return; }
/*Line 130 - 'FlashPlayer.js' */        try { // test if we can really add/remove elements to/from the DOM; we don't want to fire it too early
/*Line 131 - 'FlashPlayer.js' */            var t = doc.getElementsByTagName("body")[0].appendChild(createElement("span"));
/*Line 132 - 'FlashPlayer.js' */            t.parentNode.removeChild(t);
/*Line 133 - 'FlashPlayer.js' */        }
/*Line 134 - 'FlashPlayer.js' */        catch (e) { return; }
/*Line 135 - 'FlashPlayer.js' */        isDomLoaded = true;
/*Line 136 - 'FlashPlayer.js' */        var dl = domLoadFnArr.length;
/*Line 137 - 'FlashPlayer.js' */        for (var i = 0; i < dl; i++) {
/*Line 138 - 'FlashPlayer.js' */            domLoadFnArr[i]();
/*Line 139 - 'FlashPlayer.js' */        }
/*Line 140 - 'FlashPlayer.js' */    }

/*Line 142 - 'FlashPlayer.js' */    function addDomLoadEvent(fn) {
/*Line 143 - 'FlashPlayer.js' */        if (isDomLoaded) {
/*Line 144 - 'FlashPlayer.js' */            fn();
/*Line 145 - 'FlashPlayer.js' */        }
/*Line 146 - 'FlashPlayer.js' */        else {
/*Line 147 - 'FlashPlayer.js' */            domLoadFnArr[domLoadFnArr.length] = fn; // Array.push() is only available in IE5.5+
/*Line 148 - 'FlashPlayer.js' */        }
/*Line 149 - 'FlashPlayer.js' */    }

/*Line 151 - 'FlashPlayer.js' */    /* Cross-browser onload
/*Line 152 - 'FlashPlayer.js' */    - Based on James Edwards' solution: http://brothercake.com/site/resources/scripts/onload/
/*Line 153 - 'FlashPlayer.js' */    - Will fire an event as soon as a web page including all of its assets are loaded 
/*Line 154 - 'FlashPlayer.js' */    */
/*Line 155 - 'FlashPlayer.js' */    function addLoadEvent(fn) {
/*Line 156 - 'FlashPlayer.js' */        if (typeof win.addEventListener != UNDEF) {
/*Line 157 - 'FlashPlayer.js' */            win.addEventListener("load", fn, false);
/*Line 158 - 'FlashPlayer.js' */        }
/*Line 159 - 'FlashPlayer.js' */        else if (typeof doc.addEventListener != UNDEF) {
/*Line 160 - 'FlashPlayer.js' */            doc.addEventListener("load", fn, false);
/*Line 161 - 'FlashPlayer.js' */        }
/*Line 162 - 'FlashPlayer.js' */        else if (typeof win.attachEvent != UNDEF) {
/*Line 163 - 'FlashPlayer.js' */            addListener(win, "onload", fn);
/*Line 164 - 'FlashPlayer.js' */        }
/*Line 165 - 'FlashPlayer.js' */        else if (typeof win.onload == "function") {
/*Line 166 - 'FlashPlayer.js' */            var fnOld = win.onload;
/*Line 167 - 'FlashPlayer.js' */            win.onload = function () {
/*Line 168 - 'FlashPlayer.js' */                fnOld();
/*Line 169 - 'FlashPlayer.js' */                fn();
/*Line 170 - 'FlashPlayer.js' */            };
/*Line 171 - 'FlashPlayer.js' */        }
/*Line 172 - 'FlashPlayer.js' */        else {
/*Line 173 - 'FlashPlayer.js' */            win.onload = fn;
/*Line 174 - 'FlashPlayer.js' */        }
/*Line 175 - 'FlashPlayer.js' */    }

/*Line 177 - 'FlashPlayer.js' */    /* Main function
/*Line 178 - 'FlashPlayer.js' */    - Will preferably execute onDomLoad, otherwise onload (as a fallback)
/*Line 179 - 'FlashPlayer.js' */    */
/*Line 180 - 'FlashPlayer.js' */    function main() {
/*Line 181 - 'FlashPlayer.js' */        if (plugin) {
/*Line 182 - 'FlashPlayer.js' */            testPlayerVersion();
/*Line 183 - 'FlashPlayer.js' */        }
/*Line 184 - 'FlashPlayer.js' */        else {
/*Line 185 - 'FlashPlayer.js' */            matchVersions();
/*Line 186 - 'FlashPlayer.js' */        }
/*Line 187 - 'FlashPlayer.js' */    }

/*Line 189 - 'FlashPlayer.js' */    /* Detect the Flash Player version for non-Internet Explorer browsers
/*Line 190 - 'FlashPlayer.js' */    - Detecting the plug-in version via the object element is more precise than using the plugins collection item's description:
/*Line 191 - 'FlashPlayer.js' */    a. Both release and build numbers can be detected
/*Line 192 - 'FlashPlayer.js' */    b. Avoid wrong descriptions by corrupt installers provided by Adobe
/*Line 193 - 'FlashPlayer.js' */    c. Avoid wrong descriptions by multiple Flash Player entries in the plugin Array, caused by incorrect browser imports
/*Line 194 - 'FlashPlayer.js' */    - Disadvantage of this method is that it depends on the availability of the DOM, while the plugins collection is immediately available
/*Line 195 - 'FlashPlayer.js' */    */
/*Line 196 - 'FlashPlayer.js' */    function testPlayerVersion() {
/*Line 197 - 'FlashPlayer.js' */        var b = doc.getElementsByTagName("body")[0];
/*Line 198 - 'FlashPlayer.js' */        var o = createElement(OBJECT);
/*Line 199 - 'FlashPlayer.js' */        o.setAttribute("type", FLASH_MIME_TYPE);
/*Line 200 - 'FlashPlayer.js' */        var t = b.appendChild(o);
/*Line 201 - 'FlashPlayer.js' */        if (t) {
/*Line 202 - 'FlashPlayer.js' */            var counter = 0;
/*Line 203 - 'FlashPlayer.js' */            (function () {
/*Line 204 - 'FlashPlayer.js' */                if (typeof t.GetVariable != UNDEF) {
/*Line 205 - 'FlashPlayer.js' */                    var d = t.GetVariable("$version");
/*Line 206 - 'FlashPlayer.js' */                    if (d) {
/*Line 207 - 'FlashPlayer.js' */                        d = d.split(" ")[1].split(",");
/*Line 208 - 'FlashPlayer.js' */                        ua.pv = [parseInt(d[0], 10), parseInt(d[1], 10), parseInt(d[2], 10)];
/*Line 209 - 'FlashPlayer.js' */                    }
/*Line 210 - 'FlashPlayer.js' */                }
/*Line 211 - 'FlashPlayer.js' */                else if (counter < 10) {
/*Line 212 - 'FlashPlayer.js' */                    counter++;
/*Line 213 - 'FlashPlayer.js' */                    setTimeout(arguments.callee, 10);
/*Line 214 - 'FlashPlayer.js' */                    return;
/*Line 215 - 'FlashPlayer.js' */                }
/*Line 216 - 'FlashPlayer.js' */                b.removeChild(o);
/*Line 217 - 'FlashPlayer.js' */                t = null;
/*Line 218 - 'FlashPlayer.js' */                matchVersions();
/*Line 219 - 'FlashPlayer.js' */            })();
/*Line 220 - 'FlashPlayer.js' */        }
/*Line 221 - 'FlashPlayer.js' */        else {
/*Line 222 - 'FlashPlayer.js' */            matchVersions();
/*Line 223 - 'FlashPlayer.js' */        }
/*Line 224 - 'FlashPlayer.js' */    }

/*Line 226 - 'FlashPlayer.js' */    /* Perform Flash Player and SWF version matching; static publishing only
/*Line 227 - 'FlashPlayer.js' */    */
/*Line 228 - 'FlashPlayer.js' */    function matchVersions() {
/*Line 229 - 'FlashPlayer.js' */        var rl = regObjArr.length;
/*Line 230 - 'FlashPlayer.js' */        if (rl > 0) {
/*Line 231 - 'FlashPlayer.js' */            for (var i = 0; i < rl; i++) { // for each registered object element
/*Line 232 - 'FlashPlayer.js' */                var id = regObjArr[i].id;
/*Line 233 - 'FlashPlayer.js' */                var cb = regObjArr[i].callbackFn;
/*Line 234 - 'FlashPlayer.js' */                var cbObj = { success: false, id: id };
/*Line 235 - 'FlashPlayer.js' */                if (ua.pv[0] > 0) {
/*Line 236 - 'FlashPlayer.js' */                    var obj = getElementById(id);
/*Line 237 - 'FlashPlayer.js' */                    if (obj) {
/*Line 238 - 'FlashPlayer.js' */                        if (hasPlayerVersion(regObjArr[i].swfVersion) && !(ua.wk && ua.wk < 312)) { // Flash Player version >= published SWF version: Houston, we have a match!
/*Line 239 - 'FlashPlayer.js' */                            setVisibility(id, true);
/*Line 240 - 'FlashPlayer.js' */                            if (cb) {
/*Line 241 - 'FlashPlayer.js' */                                cbObj.success = true;
/*Line 242 - 'FlashPlayer.js' */                                cbObj.ref = getObjectById(id);
/*Line 243 - 'FlashPlayer.js' */                                cb(cbObj);
/*Line 244 - 'FlashPlayer.js' */                            }
/*Line 245 - 'FlashPlayer.js' */                        }
/*Line 246 - 'FlashPlayer.js' */                        else if (regObjArr[i].expressInstall && canExpressInstall()) { // show the Adobe Express Install dialog if set by the web page author and if supported
/*Line 247 - 'FlashPlayer.js' */                            var att = {};
/*Line 248 - 'FlashPlayer.js' */                            att.data = regObjArr[i].expressInstall;
/*Line 249 - 'FlashPlayer.js' */                            att.width = obj.getAttribute("width") || "0";
/*Line 250 - 'FlashPlayer.js' */                            att.height = obj.getAttribute("height") || "0";
/*Line 251 - 'FlashPlayer.js' */                            if (obj.getAttribute("class")) { att.styleclass = obj.getAttribute("class"); }
/*Line 252 - 'FlashPlayer.js' */                            if (obj.getAttribute("align")) { att.align = obj.getAttribute("align"); }
/*Line 253 - 'FlashPlayer.js' */                            // parse HTML object param element's name-value pairs
/*Line 254 - 'FlashPlayer.js' */                            var par = {};
/*Line 255 - 'FlashPlayer.js' */                            var p = obj.getElementsByTagName("param");
/*Line 256 - 'FlashPlayer.js' */                            var pl = p.length;
/*Line 257 - 'FlashPlayer.js' */                            for (var j = 0; j < pl; j++) {
/*Line 258 - 'FlashPlayer.js' */                                if (p[j].getAttribute("name").toLowerCase() != "movie") {
/*Line 259 - 'FlashPlayer.js' */                                    par[p[j].getAttribute("name")] = p[j].getAttribute("value");
/*Line 260 - 'FlashPlayer.js' */                                }
/*Line 261 - 'FlashPlayer.js' */                            }
/*Line 262 - 'FlashPlayer.js' */                            showExpressInstall(att, par, id, cb);
/*Line 263 - 'FlashPlayer.js' */                        }
/*Line 264 - 'FlashPlayer.js' */                        else { // Flash Player and SWF version mismatch or an older Webkit engine that ignores the HTML object element's nested param elements: display alternative content instead of SWF
/*Line 265 - 'FlashPlayer.js' */                            displayAltContent(obj);
/*Line 266 - 'FlashPlayer.js' */                            if (cb) { cb(cbObj); }
/*Line 267 - 'FlashPlayer.js' */                        }
/*Line 268 - 'FlashPlayer.js' */                    }
/*Line 269 - 'FlashPlayer.js' */                }
/*Line 270 - 'FlashPlayer.js' */                else {	// if no Flash Player is installed or the fp version cannot be detected we let the HTML object element do its job (either show a SWF or alternative content)
/*Line 271 - 'FlashPlayer.js' */                    setVisibility(id, true);
/*Line 272 - 'FlashPlayer.js' */                    if (cb) {
/*Line 273 - 'FlashPlayer.js' */                        var o = getObjectById(id); // test whether there is an HTML object element or not
/*Line 274 - 'FlashPlayer.js' */                        if (o && typeof o.SetVariable != UNDEF) {
/*Line 275 - 'FlashPlayer.js' */                            cbObj.success = true;
/*Line 276 - 'FlashPlayer.js' */                            cbObj.ref = o;
/*Line 277 - 'FlashPlayer.js' */                        }
/*Line 278 - 'FlashPlayer.js' */                        cb(cbObj);
/*Line 279 - 'FlashPlayer.js' */                    }
/*Line 280 - 'FlashPlayer.js' */                }
/*Line 281 - 'FlashPlayer.js' */            }
/*Line 282 - 'FlashPlayer.js' */        }
/*Line 283 - 'FlashPlayer.js' */    }

/*Line 285 - 'FlashPlayer.js' */    function getObjectById(objectIdStr) {
/*Line 286 - 'FlashPlayer.js' */        var r = null;
/*Line 287 - 'FlashPlayer.js' */        var o = getElementById(objectIdStr);
/*Line 288 - 'FlashPlayer.js' */        if (o && o.nodeName == "OBJECT") {
/*Line 289 - 'FlashPlayer.js' */            if (typeof o.SetVariable != UNDEF) {
/*Line 290 - 'FlashPlayer.js' */                r = o;
/*Line 291 - 'FlashPlayer.js' */            }
/*Line 292 - 'FlashPlayer.js' */            else {
/*Line 293 - 'FlashPlayer.js' */                var n = o.getElementsByTagName(OBJECT)[0];
/*Line 294 - 'FlashPlayer.js' */                if (n) {
/*Line 295 - 'FlashPlayer.js' */                    r = n;
/*Line 296 - 'FlashPlayer.js' */                }
/*Line 297 - 'FlashPlayer.js' */            }
/*Line 298 - 'FlashPlayer.js' */        }
/*Line 299 - 'FlashPlayer.js' */        return r;
/*Line 300 - 'FlashPlayer.js' */    }

/*Line 302 - 'FlashPlayer.js' */    /* Requirements for Adobe Express Install
/*Line 303 - 'FlashPlayer.js' */    - only one instance can be active at a time
/*Line 304 - 'FlashPlayer.js' */    - fp 6.0.65 or higher
/*Line 305 - 'FlashPlayer.js' */    - Win/Mac OS only
/*Line 306 - 'FlashPlayer.js' */    - no Webkit engines older than version 312
/*Line 307 - 'FlashPlayer.js' */    */
/*Line 308 - 'FlashPlayer.js' */    function canExpressInstall() {
/*Line 309 - 'FlashPlayer.js' */        return !isExpressInstallActive && hasPlayerVersion("6.0.65") && (ua.win || ua.mac) && !(ua.wk && ua.wk < 312);
/*Line 310 - 'FlashPlayer.js' */    }

/*Line 312 - 'FlashPlayer.js' */    /* Show the Adobe Express Install dialog
/*Line 313 - 'FlashPlayer.js' */    - Reference: http://www.adobe.com/cfusion/knowledgebase/index.cfm?id=6a253b75
/*Line 314 - 'FlashPlayer.js' */    */
/*Line 315 - 'FlashPlayer.js' */    function showExpressInstall(att, par, replaceElemIdStr, callbackFn) {
/*Line 316 - 'FlashPlayer.js' */        isExpressInstallActive = true;
/*Line 317 - 'FlashPlayer.js' */        storedCallbackFn = callbackFn || null;
/*Line 318 - 'FlashPlayer.js' */        storedCallbackObj = { success: false, id: replaceElemIdStr };
/*Line 319 - 'FlashPlayer.js' */        var obj = getElementById(replaceElemIdStr);
/*Line 320 - 'FlashPlayer.js' */        if (obj) {
/*Line 321 - 'FlashPlayer.js' */            if (obj.nodeName == "OBJECT") { // static publishing
/*Line 322 - 'FlashPlayer.js' */                storedAltContent = abstractAltContent(obj);
/*Line 323 - 'FlashPlayer.js' */                storedAltContentId = null;
/*Line 324 - 'FlashPlayer.js' */            }
/*Line 325 - 'FlashPlayer.js' */            else { // dynamic publishing
/*Line 326 - 'FlashPlayer.js' */                storedAltContent = obj;
/*Line 327 - 'FlashPlayer.js' */                storedAltContentId = replaceElemIdStr;
/*Line 328 - 'FlashPlayer.js' */            }
/*Line 329 - 'FlashPlayer.js' */            att.id = EXPRESS_INSTALL_ID;
/*Line 330 - 'FlashPlayer.js' */            if (typeof att.width == UNDEF || (!/%$/.test(att.width) && parseInt(att.width, 10) < 310)) { att.width = "310"; }
/*Line 331 - 'FlashPlayer.js' */            if (typeof att.height == UNDEF || (!/%$/.test(att.height) && parseInt(att.height, 10) < 137)) { att.height = "137"; }
/*Line 332 - 'FlashPlayer.js' */            doc.title = doc.title.slice(0, 47) + " - Flash Player Installation";
/*Line 333 - 'FlashPlayer.js' */            var pt = ua.ie && ua.win ? "ActiveX" : "PlugIn",
/*Line 334 - 'FlashPlayer.js' */				fv = "MMredirectURL=" + encodeURI(window.location).toString().replace(/&/g, "%26") + "&MMplayerType=" + pt + "&MMdoctitle=" + doc.title;
/*Line 335 - 'FlashPlayer.js' */            if (typeof par.flashvars != UNDEF) {
/*Line 336 - 'FlashPlayer.js' */                par.flashvars += "&" + fv;
/*Line 337 - 'FlashPlayer.js' */            }
/*Line 338 - 'FlashPlayer.js' */            else {
/*Line 339 - 'FlashPlayer.js' */                par.flashvars = fv;
/*Line 340 - 'FlashPlayer.js' */            }
/*Line 341 - 'FlashPlayer.js' */            // IE only: when a SWF is loading (AND: not available in cache) wait for the readyState of the object element to become 4 before removing it,
/*Line 342 - 'FlashPlayer.js' */            // because you cannot properly cancel a loading SWF file without breaking browser load references, also obj.onreadystatechange doesn't work
/*Line 343 - 'FlashPlayer.js' */            if (ua.ie && ua.win && obj.readyState != 4) {
/*Line 344 - 'FlashPlayer.js' */                var newObj = createElement("div");
/*Line 345 - 'FlashPlayer.js' */                replaceElemIdStr += "SWFObjectNew";
/*Line 346 - 'FlashPlayer.js' */                newObj.setAttribute("id", replaceElemIdStr);
/*Line 347 - 'FlashPlayer.js' */                obj.parentNode.insertBefore(newObj, obj); // insert placeholder div that will be replaced by the object element that loads expressinstall.swf
/*Line 348 - 'FlashPlayer.js' */                obj.style.display = "none";
/*Line 349 - 'FlashPlayer.js' */                (function () {
/*Line 350 - 'FlashPlayer.js' */                    if (obj.readyState == 4) {
/*Line 351 - 'FlashPlayer.js' */                        obj.parentNode.removeChild(obj);
/*Line 352 - 'FlashPlayer.js' */                    }
/*Line 353 - 'FlashPlayer.js' */                    else {
/*Line 354 - 'FlashPlayer.js' */                        setTimeout(arguments.callee, 10);
/*Line 355 - 'FlashPlayer.js' */                    }
/*Line 356 - 'FlashPlayer.js' */                })();
/*Line 357 - 'FlashPlayer.js' */            }
/*Line 358 - 'FlashPlayer.js' */            createSWF(att, par, replaceElemIdStr);
/*Line 359 - 'FlashPlayer.js' */        }
/*Line 360 - 'FlashPlayer.js' */    }

/*Line 362 - 'FlashPlayer.js' */    /* Functions to abstract and display alternative content
/*Line 363 - 'FlashPlayer.js' */    */
/*Line 364 - 'FlashPlayer.js' */    function displayAltContent(obj) {
/*Line 365 - 'FlashPlayer.js' */        if (ua.ie && ua.win && obj.readyState != 4) {
/*Line 366 - 'FlashPlayer.js' */            // IE only: when a SWF is loading (AND: not available in cache) wait for the readyState of the object element to become 4 before removing it,
/*Line 367 - 'FlashPlayer.js' */            // because you cannot properly cancel a loading SWF file without breaking browser load references, also obj.onreadystatechange doesn't work
/*Line 368 - 'FlashPlayer.js' */            var el = createElement("div");
/*Line 369 - 'FlashPlayer.js' */            obj.parentNode.insertBefore(el, obj); // insert placeholder div that will be replaced by the alternative content
/*Line 370 - 'FlashPlayer.js' */            el.parentNode.replaceChild(abstractAltContent(obj), el);
/*Line 371 - 'FlashPlayer.js' */            obj.style.display = "none";
/*Line 372 - 'FlashPlayer.js' */            (function () {
/*Line 373 - 'FlashPlayer.js' */                if (obj.readyState == 4) {
/*Line 374 - 'FlashPlayer.js' */                    obj.parentNode.removeChild(obj);
/*Line 375 - 'FlashPlayer.js' */                }
/*Line 376 - 'FlashPlayer.js' */                else {
/*Line 377 - 'FlashPlayer.js' */                    setTimeout(arguments.callee, 10);
/*Line 378 - 'FlashPlayer.js' */                }
/*Line 379 - 'FlashPlayer.js' */            })();
/*Line 380 - 'FlashPlayer.js' */        }
/*Line 381 - 'FlashPlayer.js' */        else {
/*Line 382 - 'FlashPlayer.js' */            obj.parentNode.replaceChild(abstractAltContent(obj), obj);
/*Line 383 - 'FlashPlayer.js' */        }
/*Line 384 - 'FlashPlayer.js' */    }

/*Line 386 - 'FlashPlayer.js' */    function abstractAltContent(obj) {
/*Line 387 - 'FlashPlayer.js' */        var ac = createElement("div");
/*Line 388 - 'FlashPlayer.js' */        if (ua.win && ua.ie) {
/*Line 389 - 'FlashPlayer.js' */            ac.innerHTML = obj.innerHTML;
/*Line 390 - 'FlashPlayer.js' */        }
/*Line 391 - 'FlashPlayer.js' */        else {
/*Line 392 - 'FlashPlayer.js' */            var nestedObj = obj.getElementsByTagName(OBJECT)[0];
/*Line 393 - 'FlashPlayer.js' */            if (nestedObj) {
/*Line 394 - 'FlashPlayer.js' */                var c = nestedObj.childNodes;
/*Line 395 - 'FlashPlayer.js' */                if (c) {
/*Line 396 - 'FlashPlayer.js' */                    var cl = c.length;
/*Line 397 - 'FlashPlayer.js' */                    for (var i = 0; i < cl; i++) {
/*Line 398 - 'FlashPlayer.js' */                        if (!(c[i].nodeType == 1 && c[i].nodeName == "PARAM") && !(c[i].nodeType == 8)) {
/*Line 399 - 'FlashPlayer.js' */                            ac.appendChild(c[i].cloneNode(true));
/*Line 400 - 'FlashPlayer.js' */                        }
/*Line 401 - 'FlashPlayer.js' */                    }
/*Line 402 - 'FlashPlayer.js' */                }
/*Line 403 - 'FlashPlayer.js' */            }
/*Line 404 - 'FlashPlayer.js' */        }
/*Line 405 - 'FlashPlayer.js' */        return ac;
/*Line 406 - 'FlashPlayer.js' */    }

/*Line 408 - 'FlashPlayer.js' */    /* Cross-browser dynamic SWF creation
/*Line 409 - 'FlashPlayer.js' */    */
/*Line 410 - 'FlashPlayer.js' */    function createSWF(attObj, parObj, id) {
/*Line 411 - 'FlashPlayer.js' */        var r, el = getElementById(id);
/*Line 412 - 'FlashPlayer.js' */        if (ua.wk && ua.wk < 312) { return r; }
/*Line 413 - 'FlashPlayer.js' */        if (el) {
/*Line 414 - 'FlashPlayer.js' */            if (typeof attObj.id == UNDEF) { // if no 'id' is defined for the object element, it will inherit the 'id' from the alternative content
/*Line 415 - 'FlashPlayer.js' */                attObj.id = id;
/*Line 416 - 'FlashPlayer.js' */            }
/*Line 417 - 'FlashPlayer.js' */            if (ua.ie && ua.win) { // Internet Explorer + the HTML object element + W3C DOM methods do not combine: fall back to outerHTML
/*Line 418 - 'FlashPlayer.js' */                var att = "";
/*Line 419 - 'FlashPlayer.js' */                for (var i in attObj) {
/*Line 420 - 'FlashPlayer.js' */                    if (attObj[i] != Object.prototype[i]) { // filter out prototype additions from other potential libraries
/*Line 421 - 'FlashPlayer.js' */                        if (i.toLowerCase() == "data") {
/*Line 422 - 'FlashPlayer.js' */                            parObj.movie = attObj[i];
/*Line 423 - 'FlashPlayer.js' */                        }
/*Line 424 - 'FlashPlayer.js' */                        else if (i.toLowerCase() == "styleclass") { // 'class' is an ECMA4 reserved keyword
/*Line 425 - 'FlashPlayer.js' */                            att += ' class="' + attObj[i] + '"';
/*Line 426 - 'FlashPlayer.js' */                        }
/*Line 427 - 'FlashPlayer.js' */                        else if (i.toLowerCase() != "classid") {
/*Line 428 - 'FlashPlayer.js' */                            att += ' ' + i + '="' + attObj[i] + '"';
/*Line 429 - 'FlashPlayer.js' */                        }
/*Line 430 - 'FlashPlayer.js' */                    }
/*Line 431 - 'FlashPlayer.js' */                }
/*Line 432 - 'FlashPlayer.js' */                var par = "";
/*Line 433 - 'FlashPlayer.js' */                for (var j in parObj) {
/*Line 434 - 'FlashPlayer.js' */                    if (parObj[j] != Object.prototype[j]) { // filter out prototype additions from other potential libraries
/*Line 435 - 'FlashPlayer.js' */                        par += '<param name="' + j + '" value="' + parObj[j] + '" />';
/*Line 436 - 'FlashPlayer.js' */                    }
/*Line 437 - 'FlashPlayer.js' */                }
/*Line 438 - 'FlashPlayer.js' */                el.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"' + att + '>' + par + '</object>';
/*Line 439 - 'FlashPlayer.js' */                objIdArr[objIdArr.length] = attObj.id; // stored to fix object 'leaks' on unload (dynamic publishing only)
/*Line 440 - 'FlashPlayer.js' */                r = getElementById(attObj.id);
/*Line 441 - 'FlashPlayer.js' */            }
/*Line 442 - 'FlashPlayer.js' */            else { // well-behaving browsers
/*Line 443 - 'FlashPlayer.js' */                var o = createElement(OBJECT);
/*Line 444 - 'FlashPlayer.js' */                o.setAttribute("type", FLASH_MIME_TYPE);
/*Line 445 - 'FlashPlayer.js' */                for (var m in attObj) {
/*Line 446 - 'FlashPlayer.js' */                    if (attObj[m] != Object.prototype[m]) { // filter out prototype additions from other potential libraries
/*Line 447 - 'FlashPlayer.js' */                        if (m.toLowerCase() == "styleclass") { // 'class' is an ECMA4 reserved keyword
/*Line 448 - 'FlashPlayer.js' */                            o.setAttribute("class", attObj[m]);
/*Line 449 - 'FlashPlayer.js' */                        }
/*Line 450 - 'FlashPlayer.js' */                        else if (m.toLowerCase() != "classid") { // filter out IE specific attribute
/*Line 451 - 'FlashPlayer.js' */                            o.setAttribute(m, attObj[m]);
/*Line 452 - 'FlashPlayer.js' */                        }
/*Line 453 - 'FlashPlayer.js' */                    }
/*Line 454 - 'FlashPlayer.js' */                }
/*Line 455 - 'FlashPlayer.js' */                for (var n in parObj) {
/*Line 456 - 'FlashPlayer.js' */                    if (parObj[n] != Object.prototype[n] && n.toLowerCase() != "movie") { // filter out prototype additions from other potential libraries and IE specific param element
/*Line 457 - 'FlashPlayer.js' */                        createObjParam(o, n, parObj[n]);
/*Line 458 - 'FlashPlayer.js' */                    }
/*Line 459 - 'FlashPlayer.js' */                }
/*Line 460 - 'FlashPlayer.js' */                el.parentNode.replaceChild(o, el);
/*Line 461 - 'FlashPlayer.js' */                r = o;
/*Line 462 - 'FlashPlayer.js' */            }
/*Line 463 - 'FlashPlayer.js' */        }
/*Line 464 - 'FlashPlayer.js' */        return r;
/*Line 465 - 'FlashPlayer.js' */    }

/*Line 467 - 'FlashPlayer.js' */    function createObjParam(el, pName, pValue) {
/*Line 468 - 'FlashPlayer.js' */        var p = createElement("param");
/*Line 469 - 'FlashPlayer.js' */        p.setAttribute("name", pName);
/*Line 470 - 'FlashPlayer.js' */        p.setAttribute("value", pValue);
/*Line 471 - 'FlashPlayer.js' */        el.appendChild(p);
/*Line 472 - 'FlashPlayer.js' */    }

/*Line 474 - 'FlashPlayer.js' */    /* Cross-browser SWF removal
/*Line 475 - 'FlashPlayer.js' */    - Especially needed to safely and completely remove a SWF in Internet Explorer
/*Line 476 - 'FlashPlayer.js' */    */
/*Line 477 - 'FlashPlayer.js' */    function removeSWF(id) {
/*Line 478 - 'FlashPlayer.js' */        var obj = getElementById(id);
/*Line 479 - 'FlashPlayer.js' */        if (obj && obj.nodeName == "OBJECT") {
/*Line 480 - 'FlashPlayer.js' */            if (ua.ie && ua.win) {
/*Line 481 - 'FlashPlayer.js' */                obj.style.display = "none";
/*Line 482 - 'FlashPlayer.js' */                (function () {
/*Line 483 - 'FlashPlayer.js' */                    if (obj.readyState == 4) {
/*Line 484 - 'FlashPlayer.js' */                        removeObjectInIE(id);
/*Line 485 - 'FlashPlayer.js' */                    }
/*Line 486 - 'FlashPlayer.js' */                    else {
/*Line 487 - 'FlashPlayer.js' */                        setTimeout(arguments.callee, 10);
/*Line 488 - 'FlashPlayer.js' */                    }
/*Line 489 - 'FlashPlayer.js' */                })();
/*Line 490 - 'FlashPlayer.js' */            }
/*Line 491 - 'FlashPlayer.js' */            else {
/*Line 492 - 'FlashPlayer.js' */                obj.parentNode.removeChild(obj);
/*Line 493 - 'FlashPlayer.js' */            }
/*Line 494 - 'FlashPlayer.js' */        }
/*Line 495 - 'FlashPlayer.js' */    }

/*Line 497 - 'FlashPlayer.js' */    function removeObjectInIE(id) {
/*Line 498 - 'FlashPlayer.js' */        var obj = getElementById(id);
/*Line 499 - 'FlashPlayer.js' */        if (obj) {
/*Line 500 - 'FlashPlayer.js' */            for (var i in obj) {
/*Line 501 - 'FlashPlayer.js' */                if (typeof obj[i] == "function") {
/*Line 502 - 'FlashPlayer.js' */                    obj[i] = null;
/*Line 503 - 'FlashPlayer.js' */                }
/*Line 504 - 'FlashPlayer.js' */            }
/*Line 505 - 'FlashPlayer.js' */            obj.parentNode.removeChild(obj);
/*Line 506 - 'FlashPlayer.js' */        }
/*Line 507 - 'FlashPlayer.js' */    }

/*Line 509 - 'FlashPlayer.js' */    /* Functions to optimize JavaScript compression
/*Line 510 - 'FlashPlayer.js' */    */
/*Line 511 - 'FlashPlayer.js' */    function getElementById(id) {
/*Line 512 - 'FlashPlayer.js' */        var el = null;
/*Line 513 - 'FlashPlayer.js' */        try {
/*Line 514 - 'FlashPlayer.js' */            el = doc.getElementById(id);
/*Line 515 - 'FlashPlayer.js' */        }
/*Line 516 - 'FlashPlayer.js' */        catch (e) { }
/*Line 517 - 'FlashPlayer.js' */        return el;
/*Line 518 - 'FlashPlayer.js' */    }

/*Line 520 - 'FlashPlayer.js' */    function createElement(el) {
/*Line 521 - 'FlashPlayer.js' */        return doc.createElement(el);
/*Line 522 - 'FlashPlayer.js' */    }

/*Line 524 - 'FlashPlayer.js' */    /* Updated attachEvent function for Internet Explorer
/*Line 525 - 'FlashPlayer.js' */    - Stores attachEvent information in an Array, so on unload the detachEvent functions can be called to avoid memory leaks
/*Line 526 - 'FlashPlayer.js' */    */
/*Line 527 - 'FlashPlayer.js' */    function addListener(target, eventType, fn) {
/*Line 528 - 'FlashPlayer.js' */        target.attachEvent(eventType, fn);
/*Line 529 - 'FlashPlayer.js' */        listenersArr[listenersArr.length] = [target, eventType, fn];
/*Line 530 - 'FlashPlayer.js' */    }

/*Line 532 - 'FlashPlayer.js' */    /* Flash Player and SWF content version matching
/*Line 533 - 'FlashPlayer.js' */    */
/*Line 534 - 'FlashPlayer.js' */    function hasPlayerVersion(rv) {
/*Line 535 - 'FlashPlayer.js' */        var pv = ua.pv, v = rv.split(".");
/*Line 536 - 'FlashPlayer.js' */        v[0] = parseInt(v[0], 10);
/*Line 537 - 'FlashPlayer.js' */        v[1] = parseInt(v[1], 10) || 0; // supports short notation, e.g. "9" instead of "9.0.0"
/*Line 538 - 'FlashPlayer.js' */        v[2] = parseInt(v[2], 10) || 0;
/*Line 539 - 'FlashPlayer.js' */        return (pv[0] > v[0] || (pv[0] == v[0] && pv[1] > v[1]) || (pv[0] == v[0] && pv[1] == v[1] && pv[2] >= v[2])) ? true : false;
/*Line 540 - 'FlashPlayer.js' */    }

/*Line 542 - 'FlashPlayer.js' */    /* Cross-browser dynamic CSS creation
/*Line 543 - 'FlashPlayer.js' */    - Based on Bobby van der Sluis' solution: http://www.bobbyvandersluis.com/articles/dynamicCSS.php
/*Line 544 - 'FlashPlayer.js' */    */
/*Line 545 - 'FlashPlayer.js' */    function createCSS(sel, decl, media, newStyle) {
/*Line 546 - 'FlashPlayer.js' */        if (ua.ie && ua.mac) { return; }
/*Line 547 - 'FlashPlayer.js' */        var h = doc.getElementsByTagName("head")[0];
/*Line 548 - 'FlashPlayer.js' */        if (!h) { return; } // to also support badly authored HTML pages that lack a head element
/*Line 549 - 'FlashPlayer.js' */        var m = (media && typeof media == "string") ? media : "screen";
/*Line 550 - 'FlashPlayer.js' */        if (newStyle) {
/*Line 551 - 'FlashPlayer.js' */            dynamicStylesheet = null;
/*Line 552 - 'FlashPlayer.js' */            dynamicStylesheetMedia = null;
/*Line 553 - 'FlashPlayer.js' */        }
/*Line 554 - 'FlashPlayer.js' */        if (!dynamicStylesheet || dynamicStylesheetMedia != m) {
/*Line 555 - 'FlashPlayer.js' */            // create dynamic stylesheet + get a global reference to it
/*Line 556 - 'FlashPlayer.js' */            var s = createElement("style");
/*Line 557 - 'FlashPlayer.js' */            s.setAttribute("type", "text/css");
/*Line 558 - 'FlashPlayer.js' */            s.setAttribute("media", m);
/*Line 559 - 'FlashPlayer.js' */            dynamicStylesheet = h.appendChild(s);
/*Line 560 - 'FlashPlayer.js' */            if (ua.ie && ua.win && typeof doc.styleSheets != UNDEF && doc.styleSheets.length > 0) {
/*Line 561 - 'FlashPlayer.js' */                dynamicStylesheet = doc.styleSheets[doc.styleSheets.length - 1];
/*Line 562 - 'FlashPlayer.js' */            }
/*Line 563 - 'FlashPlayer.js' */            dynamicStylesheetMedia = m;
/*Line 564 - 'FlashPlayer.js' */        }
/*Line 565 - 'FlashPlayer.js' */        // add style rule
/*Line 566 - 'FlashPlayer.js' */        if (ua.ie && ua.win) {
/*Line 567 - 'FlashPlayer.js' */            if (dynamicStylesheet && typeof dynamicStylesheet.addRule == OBJECT) {
/*Line 568 - 'FlashPlayer.js' */                dynamicStylesheet.addRule(sel, decl);
/*Line 569 - 'FlashPlayer.js' */            }
/*Line 570 - 'FlashPlayer.js' */        }
/*Line 571 - 'FlashPlayer.js' */        else {
/*Line 572 - 'FlashPlayer.js' */            if (dynamicStylesheet && typeof doc.createTextNode != UNDEF) {
/*Line 573 - 'FlashPlayer.js' */                dynamicStylesheet.appendChild(doc.createTextNode(sel + " {" + decl + "}"));
/*Line 574 - 'FlashPlayer.js' */            }
/*Line 575 - 'FlashPlayer.js' */        }
/*Line 576 - 'FlashPlayer.js' */    }

/*Line 578 - 'FlashPlayer.js' */    function setVisibility(id, isVisible) {
/*Line 579 - 'FlashPlayer.js' */        if (!autoHideShow) { return; }
/*Line 580 - 'FlashPlayer.js' */        var v = isVisible ? "visible" : "hidden";
/*Line 581 - 'FlashPlayer.js' */        if (isDomLoaded && getElementById(id)) {
/*Line 582 - 'FlashPlayer.js' */            getElementById(id).style.visibility = v;
/*Line 583 - 'FlashPlayer.js' */        }
/*Line 584 - 'FlashPlayer.js' */        else {
/*Line 585 - 'FlashPlayer.js' */            createCSS("#" + id, "visibility:" + v);
/*Line 586 - 'FlashPlayer.js' */        }
/*Line 587 - 'FlashPlayer.js' */    }

/*Line 589 - 'FlashPlayer.js' */    /* Filter to avoid XSS attacks
/*Line 590 - 'FlashPlayer.js' */    */
/*Line 591 - 'FlashPlayer.js' */    function urlEncodeIfNecessary(s) {
/*Line 592 - 'FlashPlayer.js' */        var regex = /[\\\"<>\.;]/;
/*Line 593 - 'FlashPlayer.js' */        var hasBadChars = regex.exec(s) != null;
/*Line 594 - 'FlashPlayer.js' */        return hasBadChars && typeof encodeURIComponent != UNDEF ? encodeURIComponent(s) : s;
/*Line 595 - 'FlashPlayer.js' */    }

/*Line 597 - 'FlashPlayer.js' */    /* Release memory to avoid memory leaks caused by closures, fix hanging audio/video threads and force open sockets/NetConnections to disconnect (Internet Explorer only)
/*Line 598 - 'FlashPlayer.js' */    */
/*Line 599 - 'FlashPlayer.js' */    var cleanup = function () {
/*Line 600 - 'FlashPlayer.js' */        if (ua.ie && ua.win) {
/*Line 601 - 'FlashPlayer.js' */            window.attachEvent("onunload", function () {
/*Line 602 - 'FlashPlayer.js' */                // remove listeners to avoid memory leaks
/*Line 603 - 'FlashPlayer.js' */                var ll = listenersArr.length;
/*Line 604 - 'FlashPlayer.js' */                for (var i = 0; i < ll; i++) {
/*Line 605 - 'FlashPlayer.js' */                    listenersArr[i][0].detachEvent(listenersArr[i][1], listenersArr[i][2]);
/*Line 606 - 'FlashPlayer.js' */                }
/*Line 607 - 'FlashPlayer.js' */                // cleanup dynamically embedded objects to fix audio/video threads and force open sockets and NetConnections to disconnect
/*Line 608 - 'FlashPlayer.js' */                var il = objIdArr.length;
/*Line 609 - 'FlashPlayer.js' */                for (var j = 0; j < il; j++) {
/*Line 610 - 'FlashPlayer.js' */                    removeSWF(objIdArr[j]);
/*Line 611 - 'FlashPlayer.js' */                }
/*Line 612 - 'FlashPlayer.js' */                // cleanup library's main closures to avoid memory leaks
/*Line 613 - 'FlashPlayer.js' */                for (var k in ua) {
/*Line 614 - 'FlashPlayer.js' */                    ua[k] = null;
/*Line 615 - 'FlashPlayer.js' */                }
/*Line 616 - 'FlashPlayer.js' */                ua = null;
/*Line 617 - 'FlashPlayer.js' */                for (var l in swfobject) {
/*Line 618 - 'FlashPlayer.js' */                    swfobject[l] = null;
/*Line 619 - 'FlashPlayer.js' */                }
/*Line 620 - 'FlashPlayer.js' */                swfobject = null;
/*Line 621 - 'FlashPlayer.js' */            });
/*Line 622 - 'FlashPlayer.js' */        }
/*Line 623 - 'FlashPlayer.js' */    } ();

/*Line 625 - 'FlashPlayer.js' */    return {
/*Line 626 - 'FlashPlayer.js' */        /* Public API
/*Line 627 - 'FlashPlayer.js' */        - Reference: http://code.google.com/p/swfobject/wiki/documentation
/*Line 628 - 'FlashPlayer.js' */        */
/*Line 629 - 'FlashPlayer.js' */        registerObject: function (objectIdStr, swfVersionStr, xiSwfUrlStr, callbackFn) {
/*Line 630 - 'FlashPlayer.js' */            if (ua.w3 && objectIdStr && swfVersionStr) {
/*Line 631 - 'FlashPlayer.js' */                var regObj = {};
/*Line 632 - 'FlashPlayer.js' */                regObj.id = objectIdStr;
/*Line 633 - 'FlashPlayer.js' */                regObj.swfVersion = swfVersionStr;
/*Line 634 - 'FlashPlayer.js' */                regObj.expressInstall = xiSwfUrlStr;
/*Line 635 - 'FlashPlayer.js' */                regObj.callbackFn = callbackFn;
/*Line 636 - 'FlashPlayer.js' */                regObjArr[regObjArr.length] = regObj;
/*Line 637 - 'FlashPlayer.js' */                setVisibility(objectIdStr, false);
/*Line 638 - 'FlashPlayer.js' */            }
/*Line 639 - 'FlashPlayer.js' */            else if (callbackFn) {
/*Line 640 - 'FlashPlayer.js' */                callbackFn({ success: false, id: objectIdStr });
/*Line 641 - 'FlashPlayer.js' */            }
/*Line 642 - 'FlashPlayer.js' */        },

/*Line 644 - 'FlashPlayer.js' */        getObjectById: function (objectIdStr) {
/*Line 645 - 'FlashPlayer.js' */            if (ua.w3) {
/*Line 646 - 'FlashPlayer.js' */                return getObjectById(objectIdStr);
/*Line 647 - 'FlashPlayer.js' */            }
/*Line 648 - 'FlashPlayer.js' */        },

/*Line 650 - 'FlashPlayer.js' */        embedSWF: function (swfUrlStr, replaceElemIdStr, widthStr, heightStr, swfVersionStr, xiSwfUrlStr, flashvarsObj, parObj, attObj, callbackFn) {
/*Line 651 - 'FlashPlayer.js' */            var callbackObj = { success: false, id: replaceElemIdStr };
/*Line 652 - 'FlashPlayer.js' */            if (ua.w3 && !(ua.wk && ua.wk < 312) && swfUrlStr && replaceElemIdStr && widthStr && heightStr && swfVersionStr) {
/*Line 653 - 'FlashPlayer.js' */                setVisibility(replaceElemIdStr, false);
/*Line 654 - 'FlashPlayer.js' */                addDomLoadEvent(function () {
/*Line 655 - 'FlashPlayer.js' */                    widthStr += ""; // auto-convert to string
/*Line 656 - 'FlashPlayer.js' */                    heightStr += "";
/*Line 657 - 'FlashPlayer.js' */                    var att = {};
/*Line 658 - 'FlashPlayer.js' */                    if (attObj && typeof attObj === OBJECT) {
/*Line 659 - 'FlashPlayer.js' */                        for (var i in attObj) { // copy object to avoid the use of references, because web authors often reuse attObj for multiple SWFs
/*Line 660 - 'FlashPlayer.js' */                            att[i] = attObj[i];
/*Line 661 - 'FlashPlayer.js' */                        }
/*Line 662 - 'FlashPlayer.js' */                    }
/*Line 663 - 'FlashPlayer.js' */                    att.data = swfUrlStr;
/*Line 664 - 'FlashPlayer.js' */                    att.width = widthStr;
/*Line 665 - 'FlashPlayer.js' */                    att.height = heightStr;
/*Line 666 - 'FlashPlayer.js' */                    var par = {};
/*Line 667 - 'FlashPlayer.js' */                    if (parObj && typeof parObj === OBJECT) {
/*Line 668 - 'FlashPlayer.js' */                        for (var j in parObj) { // copy object to avoid the use of references, because web authors often reuse parObj for multiple SWFs
/*Line 669 - 'FlashPlayer.js' */                            par[j] = parObj[j];
/*Line 670 - 'FlashPlayer.js' */                        }
/*Line 671 - 'FlashPlayer.js' */                    }
/*Line 672 - 'FlashPlayer.js' */                    if (flashvarsObj && typeof flashvarsObj === OBJECT) {
/*Line 673 - 'FlashPlayer.js' */                        for (var k in flashvarsObj) { // copy object to avoid the use of references, because web authors often reuse flashvarsObj for multiple SWFs
/*Line 674 - 'FlashPlayer.js' */                            if (typeof par.flashvars != UNDEF) {
/*Line 675 - 'FlashPlayer.js' */                                par.flashvars += "&" + k + "=" + flashvarsObj[k];
/*Line 676 - 'FlashPlayer.js' */                            }
/*Line 677 - 'FlashPlayer.js' */                            else {
/*Line 678 - 'FlashPlayer.js' */                                par.flashvars = k + "=" + flashvarsObj[k];
/*Line 679 - 'FlashPlayer.js' */                            }
/*Line 680 - 'FlashPlayer.js' */                        }
/*Line 681 - 'FlashPlayer.js' */                    }
/*Line 682 - 'FlashPlayer.js' */                    if (hasPlayerVersion(swfVersionStr)) { // create SWF
/*Line 683 - 'FlashPlayer.js' */                        var obj = createSWF(att, par, replaceElemIdStr);
/*Line 684 - 'FlashPlayer.js' */                        if (att.id == replaceElemIdStr) {
/*Line 685 - 'FlashPlayer.js' */                            setVisibility(replaceElemIdStr, true);
/*Line 686 - 'FlashPlayer.js' */                        }
/*Line 687 - 'FlashPlayer.js' */                        callbackObj.success = true;
/*Line 688 - 'FlashPlayer.js' */                        callbackObj.ref = obj;
/*Line 689 - 'FlashPlayer.js' */                    }
/*Line 690 - 'FlashPlayer.js' */                    else if (xiSwfUrlStr && canExpressInstall()) { // show Adobe Express Install
/*Line 691 - 'FlashPlayer.js' */                        att.data = xiSwfUrlStr;
/*Line 692 - 'FlashPlayer.js' */                        showExpressInstall(att, par, replaceElemIdStr, callbackFn);
/*Line 693 - 'FlashPlayer.js' */                        return;
/*Line 694 - 'FlashPlayer.js' */                    }
/*Line 695 - 'FlashPlayer.js' */                    else { // show alternative content
/*Line 696 - 'FlashPlayer.js' */                        setVisibility(replaceElemIdStr, true);
/*Line 697 - 'FlashPlayer.js' */                    }
/*Line 698 - 'FlashPlayer.js' */                    if (callbackFn) { callbackFn(callbackObj); }
/*Line 699 - 'FlashPlayer.js' */                });
/*Line 700 - 'FlashPlayer.js' */            }
/*Line 701 - 'FlashPlayer.js' */            else if (callbackFn) { callbackFn(callbackObj); }
/*Line 702 - 'FlashPlayer.js' */        },

/*Line 704 - 'FlashPlayer.js' */        switchOffAutoHideShow: function () {
/*Line 705 - 'FlashPlayer.js' */            autoHideShow = false;
/*Line 706 - 'FlashPlayer.js' */        },

/*Line 708 - 'FlashPlayer.js' */        ua: ua,

/*Line 710 - 'FlashPlayer.js' */        getFlashPlayerVersion: function () {
/*Line 711 - 'FlashPlayer.js' */            return { major: ua.pv[0], minor: ua.pv[1], release: ua.pv[2] };
/*Line 712 - 'FlashPlayer.js' */        },

/*Line 714 - 'FlashPlayer.js' */        hasFlashPlayerVersion: hasPlayerVersion,

/*Line 716 - 'FlashPlayer.js' */        createSWF: function (attObj, parObj, replaceElemIdStr) {
/*Line 717 - 'FlashPlayer.js' */            if (ua.w3) {
/*Line 718 - 'FlashPlayer.js' */                return createSWF(attObj, parObj, replaceElemIdStr);
/*Line 719 - 'FlashPlayer.js' */            }
/*Line 720 - 'FlashPlayer.js' */            else {
/*Line 721 - 'FlashPlayer.js' */                return undefined;
/*Line 722 - 'FlashPlayer.js' */            }
/*Line 723 - 'FlashPlayer.js' */        },

/*Line 725 - 'FlashPlayer.js' */        showExpressInstall: function (att, par, replaceElemIdStr, callbackFn) {
/*Line 726 - 'FlashPlayer.js' */            if (ua.w3 && canExpressInstall()) {
/*Line 727 - 'FlashPlayer.js' */                showExpressInstall(att, par, replaceElemIdStr, callbackFn);
/*Line 728 - 'FlashPlayer.js' */            }
/*Line 729 - 'FlashPlayer.js' */        },

/*Line 731 - 'FlashPlayer.js' */        removeSWF: function (objElemIdStr) {
/*Line 732 - 'FlashPlayer.js' */            if (ua.w3) {
/*Line 733 - 'FlashPlayer.js' */                removeSWF(objElemIdStr);
/*Line 734 - 'FlashPlayer.js' */            }
/*Line 735 - 'FlashPlayer.js' */        },

/*Line 737 - 'FlashPlayer.js' */        createCSS: function (selStr, declStr, mediaStr, newStyleBoolean) {
/*Line 738 - 'FlashPlayer.js' */            if (ua.w3) {
/*Line 739 - 'FlashPlayer.js' */                createCSS(selStr, declStr, mediaStr, newStyleBoolean);
/*Line 740 - 'FlashPlayer.js' */            }
/*Line 741 - 'FlashPlayer.js' */        },

/*Line 743 - 'FlashPlayer.js' */        addDomLoadEvent: addDomLoadEvent,

/*Line 745 - 'FlashPlayer.js' */        addLoadEvent: addLoadEvent,

/*Line 747 - 'FlashPlayer.js' */        getQueryParamValue: function (param) {
/*Line 748 - 'FlashPlayer.js' */            var q = doc.location.search || doc.location.hash;
/*Line 749 - 'FlashPlayer.js' */            if (q) {
/*Line 750 - 'FlashPlayer.js' */                if (/\?/.test(q)) { q = q.split("?")[1]; } // strip question mark
/*Line 751 - 'FlashPlayer.js' */                if (param == null) {
/*Line 752 - 'FlashPlayer.js' */                    return urlEncodeIfNecessary(q);
/*Line 753 - 'FlashPlayer.js' */                }
/*Line 754 - 'FlashPlayer.js' */                var pairs = q.split("&");
/*Line 755 - 'FlashPlayer.js' */                for (var i = 0; i < pairs.length; i++) {
/*Line 756 - 'FlashPlayer.js' */                    if (pairs[i].substring(0, pairs[i].indexOf("=")) == param) {
/*Line 757 - 'FlashPlayer.js' */                        return urlEncodeIfNecessary(pairs[i].substring((pairs[i].indexOf("=") + 1)));
/*Line 758 - 'FlashPlayer.js' */                    }
/*Line 759 - 'FlashPlayer.js' */                }
/*Line 760 - 'FlashPlayer.js' */            }
/*Line 761 - 'FlashPlayer.js' */            return "";
/*Line 762 - 'FlashPlayer.js' */        },

/*Line 764 - 'FlashPlayer.js' */        // For internal usage only
/*Line 765 - 'FlashPlayer.js' */        expressInstallCallback: function () {
/*Line 766 - 'FlashPlayer.js' */            if (isExpressInstallActive) {
/*Line 767 - 'FlashPlayer.js' */                var obj = getElementById(EXPRESS_INSTALL_ID);
/*Line 768 - 'FlashPlayer.js' */                if (obj && storedAltContent) {
/*Line 769 - 'FlashPlayer.js' */                    obj.parentNode.replaceChild(storedAltContent, obj);
/*Line 770 - 'FlashPlayer.js' */                    if (storedAltContentId) {
/*Line 771 - 'FlashPlayer.js' */                        setVisibility(storedAltContentId, true);
/*Line 772 - 'FlashPlayer.js' */                        if (ua.ie && ua.win) { storedAltContent.style.display = "block"; }
/*Line 773 - 'FlashPlayer.js' */                    }
/*Line 774 - 'FlashPlayer.js' */                    if (storedCallbackFn) { storedCallbackFn(storedCallbackObj); }
/*Line 775 - 'FlashPlayer.js' */                }
/*Line 776 - 'FlashPlayer.js' */                isExpressInstallActive = false;
/*Line 777 - 'FlashPlayer.js' */            }
/*Line 778 - 'FlashPlayer.js' */        }
/*Line 779 - 'FlashPlayer.js' */    };
/*Line 780 - 'FlashPlayer.js' */} ();


/*Line 783 - 'FlashPlayer.js' */function createFlashPlayer(controlID, divID, fpID,url,p,width,height) {
/*Line 784 - 'FlashPlayer.js' */    var swfVersionStr = "10.2.0";
/*Line 785 - 'FlashPlayer.js' */    // To use express install, set to playerProductInstall.swf, otherwise the empty string. 
/*Line 786 - 'FlashPlayer.js' */    var xiSwfUrlStr = "/resources/NeuroSpeech.WebAtoms/NeuroSpeech.WebAtoms.Content.Flash.playerProductInstall.swf/$$VERSION$$";
/*Line 787 - 'FlashPlayer.js' */    if (!p)
/*Line 788 - 'FlashPlayer.js' */        p = {};
/*Line 789 - 'FlashPlayer.js' */    if (!width)
/*Line 790 - 'FlashPlayer.js' */        width = "100%";
/*Line 791 - 'FlashPlayer.js' */    if (!height)
/*Line 792 - 'FlashPlayer.js' */        height = "100%";
/*Line 793 - 'FlashPlayer.js' */    var flashvars = p;
/*Line 794 - 'FlashPlayer.js' */    flashvars.controlID = controlID;
/*Line 795 - 'FlashPlayer.js' */    var params = {};
/*Line 796 - 'FlashPlayer.js' */    params.quality = "high";
/*Line 797 - 'FlashPlayer.js' */    params.bgcolor = "#ffffff";
/*Line 798 - 'FlashPlayer.js' */    params.allowscriptaccess = "always";
/*Line 799 - 'FlashPlayer.js' */    params.allowfullscreen = "true";
/*Line 800 - 'FlashPlayer.js' */    var attributes = {};
/*Line 801 - 'FlashPlayer.js' */    attributes.id = fpID;
/*Line 802 - 'FlashPlayer.js' */    attributes.name = fpID;
/*Line 803 - 'FlashPlayer.js' */    attributes.align = "middle";
/*Line 804 - 'FlashPlayer.js' */    swfobject.embedSWF(
/*Line 805 - 'FlashPlayer.js' */                url + "/$$VERSION$$", divID,
/*Line 806 - 'FlashPlayer.js' */                width, height,
/*Line 807 - 'FlashPlayer.js' */                swfVersionStr, xiSwfUrlStr,
/*Line 808 - 'FlashPlayer.js' */                flashvars, params, attributes);
/*Line 809 - 'FlashPlayer.js' */    // JavaScript enabled so display the flashContent div in case it is not replaced with a swf object.
/*Line 810 - 'FlashPlayer.js' */    //swfobject.createCSS("#" + divID, "display:block;text-align:left;");
/*Line 811 - 'FlashPlayer.js' */}


/*Line 814 - 'FlashPlayer.js' */function createFlashUploader(controlID, divID, fpID) {
/*Line 815 - 'FlashPlayer.js' */    var swfVersionStr = "10.2.0";
/*Line 816 - 'FlashPlayer.js' */    // To use express install, set to playerProductInstall.swf, otherwise the empty string. 
/*Line 817 - 'FlashPlayer.js' */    var xiSwfUrlStr = "/resources/NeuroSpeech.WebAtoms/NeuroSpeech.WebAtoms.Content.Flash.playerProductInstall.swf/$$VERSION$$";
/*Line 818 - 'FlashPlayer.js' */    var flashvars = {};
/*Line 819 - 'FlashPlayer.js' */    flashvars.controlID = controlID;
/*Line 820 - 'FlashPlayer.js' */    //    if (videoUrl != null && videoUrl != undefined) {
/*Line 821 - 'FlashPlayer.js' */    //        flashvars.videoUrl = videoUrl;
/*Line 822 - 'FlashPlayer.js' */    //    }
/*Line 823 - 'FlashPlayer.js' */    //    
/*Line 824 - 'FlashPlayer.js' */    flashvars.autoPlay = true;
/*Line 825 - 'FlashPlayer.js' */    var params = {};
/*Line 826 - 'FlashPlayer.js' */    params.quality = "high";
/*Line 827 - 'FlashPlayer.js' */    params.bgcolor = "#ffffff";
/*Line 828 - 'FlashPlayer.js' */    params.allowscriptaccess = "always";
/*Line 829 - 'FlashPlayer.js' */    params.allowfullscreen = "true";
/*Line 830 - 'FlashPlayer.js' */    var attributes = {};
/*Line 831 - 'FlashPlayer.js' */    attributes.id = fpID;
/*Line 832 - 'FlashPlayer.js' */    attributes.name = fpID;
/*Line 833 - 'FlashPlayer.js' */    attributes.align = "middle";
/*Line 834 - 'FlashPlayer.js' */    swfobject.embedSWF(
/*Line 835 - 'FlashPlayer.js' */                "/resources/NeuroSpeech.WebAtoms/NeuroSpeech.WebAtoms.Content.Flash.SingleFileUploader.swf/$$VERSION$$", divID,
/*Line 836 - 'FlashPlayer.js' */                "100%", "100%",
/*Line 837 - 'FlashPlayer.js' */                swfVersionStr, xiSwfUrlStr,
/*Line 838 - 'FlashPlayer.js' */                flashvars, params, attributes);
/*Line 839 - 'FlashPlayer.js' */    // JavaScript enabled so display the flashContent div in case it is not replaced with a swf object.
/*Line 840 - 'FlashPlayer.js' */    //swfobject.createCSS("#" + divID, "display:block;text-align:left;");
/*Line 841 - 'FlashPlayer.js' */}

/*Line 843 - 'FlashPlayer.js' */function createVideoPlayer(controlID,divID,fpID) {

/*Line 845 - 'FlashPlayer.js' */    var swfVersionStr = "10.2.0";
/*Line 846 - 'FlashPlayer.js' */    // To use express install, set to playerProductInstall.swf, otherwise the empty string. 
/*Line 847 - 'FlashPlayer.js' */    var xiSwfUrlStr = "/resources/NeuroSpeech.WebAtoms/NeuroSpeech.WebAtoms.Content.Flash.playerProductInstall.swf/$$VERSION$$";
/*Line 848 - 'FlashPlayer.js' */    var flashvars = {};
/*Line 849 - 'FlashPlayer.js' */    flashvars.controlID = controlID;
/*Line 850 - 'FlashPlayer.js' *///    if (videoUrl != null && videoUrl != undefined) {
/*Line 851 - 'FlashPlayer.js' *///        flashvars.videoUrl = videoUrl;
/*Line 852 - 'FlashPlayer.js' *///    }
/*Line 853 - 'FlashPlayer.js' */    //    
/*Line 854 - 'FlashPlayer.js' */    flashvars.autoPlay = true;
/*Line 855 - 'FlashPlayer.js' */    var params = {};
/*Line 856 - 'FlashPlayer.js' */    params.quality = "high";
/*Line 857 - 'FlashPlayer.js' */    params.bgcolor = "#ffffff";
/*Line 858 - 'FlashPlayer.js' */    params.allowscriptaccess = "always";
/*Line 859 - 'FlashPlayer.js' */    params.allowfullscreen = "true";
/*Line 860 - 'FlashPlayer.js' */    var attributes = {};
/*Line 861 - 'FlashPlayer.js' */    attributes.id = fpID;
/*Line 862 - 'FlashPlayer.js' */    attributes.name = fpID;
/*Line 863 - 'FlashPlayer.js' */    attributes.align = "middle";
/*Line 864 - 'FlashPlayer.js' */    swfobject.embedSWF(
/*Line 865 - 'FlashPlayer.js' */                "/resources/NeuroSpeech.WebAtoms/NeuroSpeech.WebAtoms.Content.Flash.VideoPlayer800.swf/$$VERSION$$", divID,
/*Line 866 - 'FlashPlayer.js' */                "100%", "100%",
/*Line 867 - 'FlashPlayer.js' */                swfVersionStr, xiSwfUrlStr,
/*Line 868 - 'FlashPlayer.js' */                flashvars, params, attributes);
/*Line 869 - 'FlashPlayer.js' */    // JavaScript enabled so display the flashContent div in case it is not replaced with a swf object.
/*Line 870 - 'FlashPlayer.js' */    //swfobject.createCSS("#" + divID, "display:block;text-align:left;");

/*Line 872 - 'FlashPlayer.js' */}
/*Line 0 - 'JSON.js' */var JSON;
/*Line 1 - 'JSON.js' */if (!JSON) {
/*Line 2 - 'JSON.js' */    JSON = {};
/*Line 3 - 'JSON.js' */}

/*Line 5 - 'JSON.js' */(function () {
/*Line 6 - 'JSON.js' */    'use strict';

/*Line 8 - 'JSON.js' */    function f(n) {
/*Line 9 - 'JSON.js' */        // Format integers to have at least two digits.
/*Line 10 - 'JSON.js' */        return n < 10 ? '0' + n : n;
/*Line 11 - 'JSON.js' */    }

/*Line 13 - 'JSON.js' */    if (typeof Date.prototype.toJSON !== 'function') {

/*Line 15 - 'JSON.js' */        Date.prototype.toJSON = function (key) {

/*Line 17 - 'JSON.js' */            return isFinite(this.valueOf()) ?
/*Line 18 - 'JSON.js' */                this.getUTCFullYear() + '-' +
/*Line 19 - 'JSON.js' */                f(this.getUTCMonth() + 1) + '-' +
/*Line 20 - 'JSON.js' */                f(this.getUTCDate()) + 'T' +
/*Line 21 - 'JSON.js' */                f(this.getUTCHours()) + ':' +
/*Line 22 - 'JSON.js' */                f(this.getUTCMinutes()) + ':' +
/*Line 23 - 'JSON.js' */                f(this.getUTCSeconds()) + 'Z' : null;
/*Line 24 - 'JSON.js' */        };

/*Line 26 - 'JSON.js' */        String.prototype.toJSON =
/*Line 27 - 'JSON.js' */            Number.prototype.toJSON =
/*Line 28 - 'JSON.js' */            Boolean.prototype.toJSON = function (key) {
/*Line 29 - 'JSON.js' */                return this.valueOf();
/*Line 30 - 'JSON.js' */            };
/*Line 31 - 'JSON.js' */    }

/*Line 33 - 'JSON.js' */    var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
/*Line 34 - 'JSON.js' */        escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
/*Line 35 - 'JSON.js' */        gap,
/*Line 36 - 'JSON.js' */        indent,
/*Line 37 - 'JSON.js' */        meta = { // table of character substitutions
/*Line 38 - 'JSON.js' */            '\b': '\\b',
/*Line 39 - 'JSON.js' */            '\t': '\\t',
/*Line 40 - 'JSON.js' */            '\n': '\\n',
/*Line 41 - 'JSON.js' */            '\f': '\\f',
/*Line 42 - 'JSON.js' */            '\r': '\\r',
/*Line 43 - 'JSON.js' */            '"': '\\"',
/*Line 44 - 'JSON.js' */            '\\': '\\\\'
/*Line 45 - 'JSON.js' */        },
/*Line 46 - 'JSON.js' */        rep;


/*Line 49 - 'JSON.js' */    function quote(string) {

/*Line 51 - 'JSON.js' */        // If the string contains no control characters, no quote characters, and no
/*Line 52 - 'JSON.js' */        // backslash characters, then we can safely slap some quotes around it.
/*Line 53 - 'JSON.js' */        // Otherwise we must also replace the offending characters with safe escape
/*Line 54 - 'JSON.js' */        // sequences.

/*Line 56 - 'JSON.js' */        escapable.lastIndex = 0;
/*Line 57 - 'JSON.js' */        return escapable.test(string) ? '"' + string.replace(escapable, function (a) {
/*Line 58 - 'JSON.js' */            var c = meta[a];
/*Line 59 - 'JSON.js' */            return typeof c === 'string' ? c :
/*Line 60 - 'JSON.js' */                '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
/*Line 61 - 'JSON.js' */        }) + '"' : '"' + string + '"';
/*Line 62 - 'JSON.js' */    }


/*Line 65 - 'JSON.js' */    function str(key, holder) {

/*Line 67 - 'JSON.js' */        // Produce a string from holder[key].

/*Line 69 - 'JSON.js' */        var i, // The loop counter.
/*Line 70 - 'JSON.js' */            k, // The member key.
/*Line 71 - 'JSON.js' */            v, // The member value.
/*Line 72 - 'JSON.js' */            length,
/*Line 73 - 'JSON.js' */            mind = gap,
/*Line 74 - 'JSON.js' */            partial,
/*Line 75 - 'JSON.js' */            value = holder[key];

/*Line 77 - 'JSON.js' */        // If the value has a toJSON method, call it to obtain a replacement value.

/*Line 79 - 'JSON.js' */        if (value && typeof value === 'object' &&
/*Line 80 - 'JSON.js' */                typeof value.toJSON === 'function') {
/*Line 81 - 'JSON.js' */            value = value.toJSON(key);
/*Line 82 - 'JSON.js' */        }

/*Line 84 - 'JSON.js' */        // If we were called with a replacer function, then call the replacer to
/*Line 85 - 'JSON.js' */        // obtain a replacement value.

/*Line 87 - 'JSON.js' */        if (typeof rep === 'function') {
/*Line 88 - 'JSON.js' */            value = rep.call(holder, key, value);
/*Line 89 - 'JSON.js' */        }

/*Line 91 - 'JSON.js' */        // What happens next depends on the value's type.

/*Line 93 - 'JSON.js' */        switch (typeof value) {
/*Line 94 - 'JSON.js' */            case 'string':
/*Line 95 - 'JSON.js' */                return quote(value);

/*Line 97 - 'JSON.js' */            case 'number':

/*Line 99 - 'JSON.js' */                // JSON numbers must be finite. Encode non-finite numbers as null.

/*Line 101 - 'JSON.js' */                return isFinite(value) ? String(value) : 'null';

/*Line 103 - 'JSON.js' */            case 'boolean':
/*Line 104 - 'JSON.js' */            case 'null':

/*Line 106 - 'JSON.js' */                // If the value is a boolean or null, convert it to a string. Note:
/*Line 107 - 'JSON.js' */                // typeof null does not produce 'null'. The case is included here in
/*Line 108 - 'JSON.js' */                // the remote chance that this gets fixed someday.

/*Line 110 - 'JSON.js' */                return String(value);

/*Line 112 - 'JSON.js' */                // If the type is 'object', we might be dealing with an object or an array or
/*Line 113 - 'JSON.js' */                // null.

/*Line 115 - 'JSON.js' */            case 'object':

/*Line 117 - 'JSON.js' */                // Due to a specification blunder in ECMAScript, typeof null is 'object',
/*Line 118 - 'JSON.js' */                // so watch out for that case.

/*Line 120 - 'JSON.js' */                if (!value) {
/*Line 121 - 'JSON.js' */                    return 'null';
/*Line 122 - 'JSON.js' */                }

/*Line 124 - 'JSON.js' */                // Make an array to hold the partial results of stringifying this object value.

/*Line 126 - 'JSON.js' */                gap += indent;
/*Line 127 - 'JSON.js' */                partial = [];

/*Line 129 - 'JSON.js' */                // Is the value an array?

/*Line 131 - 'JSON.js' */                if (Object.prototype.toString.apply(value) === '[object Array]') {

/*Line 133 - 'JSON.js' */                    // The value is an array. Stringify every element. Use null as a placeholder
/*Line 134 - 'JSON.js' */                    // for non-JSON values.

/*Line 136 - 'JSON.js' */                    length = value.length;
/*Line 137 - 'JSON.js' */                    for (i = 0; i < length; i += 1) {
/*Line 138 - 'JSON.js' */                        partial[i] = str(i, value) || 'null';
/*Line 139 - 'JSON.js' */                    }

/*Line 141 - 'JSON.js' */                    // Join all of the elements together, separated with commas, and wrap them in
/*Line 142 - 'JSON.js' */                    // brackets.

/*Line 144 - 'JSON.js' */                    v = partial.length === 0 ? '[]' : gap ?
/*Line 145 - 'JSON.js' */                    '[\n' + gap + partial.join(',\n' + gap) + '\n' + mind + ']' :
/*Line 146 - 'JSON.js' */                    '[' + partial.join(',') + ']';
/*Line 147 - 'JSON.js' */                    gap = mind;
/*Line 148 - 'JSON.js' */                    return v;
/*Line 149 - 'JSON.js' */                }

/*Line 151 - 'JSON.js' */                // If the replacer is an array, use it to select the members to be stringified.

/*Line 153 - 'JSON.js' */                if (rep && typeof rep === 'object') {
/*Line 154 - 'JSON.js' */                    length = rep.length;
/*Line 155 - 'JSON.js' */                    for (i = 0; i < length; i += 1) {
/*Line 156 - 'JSON.js' */                        k = rep[i];
/*Line 157 - 'JSON.js' */                        if (typeof k === 'string') {
/*Line 158 - 'JSON.js' */                            v = str(k, value);
/*Line 159 - 'JSON.js' */                            if (v) {
/*Line 160 - 'JSON.js' */                                partial.push(quote(k) + (gap ? ': ' : ':') + v);
/*Line 161 - 'JSON.js' */                            }
/*Line 162 - 'JSON.js' */                        }
/*Line 163 - 'JSON.js' */                    }
/*Line 164 - 'JSON.js' */                } else {

/*Line 166 - 'JSON.js' */                    // Otherwise, iterate through all of the keys in the object.

/*Line 168 - 'JSON.js' */                    for (k in value) {
/*Line 169 - 'JSON.js' */                        if (Object.prototype.hasOwnProperty.call(value, k)) {
/*Line 170 - 'JSON.js' */                            v = str(k, value);
/*Line 171 - 'JSON.js' */                            if (v) {
/*Line 172 - 'JSON.js' */                                partial.push(quote(k) + (gap ? ': ' : ':') + v);
/*Line 173 - 'JSON.js' */                            }
/*Line 174 - 'JSON.js' */                        }
/*Line 175 - 'JSON.js' */                    }
/*Line 176 - 'JSON.js' */                }

/*Line 178 - 'JSON.js' */                // Join all of the member texts together, separated with commas,
/*Line 179 - 'JSON.js' */                // and wrap them in braces.

/*Line 181 - 'JSON.js' */                v = partial.length === 0 ? '{}' : gap ?
/*Line 182 - 'JSON.js' */                '{\n' + gap + partial.join(',\n' + gap) + '\n' + mind + '}' :
/*Line 183 - 'JSON.js' */                '{' + partial.join(',') + '}';
/*Line 184 - 'JSON.js' */                gap = mind;
/*Line 185 - 'JSON.js' */                return v;
/*Line 186 - 'JSON.js' */        }
/*Line 187 - 'JSON.js' */    }

/*Line 189 - 'JSON.js' */    // If the JSON object does not yet have a stringify method, give it one.

/*Line 191 - 'JSON.js' */    if (typeof JSON.stringify !== 'function') {
/*Line 192 - 'JSON.js' */        JSON.stringify = function (value, replacer, space) {

/*Line 194 - 'JSON.js' */            // The stringify method takes a value and an optional replacer, and an optional
/*Line 195 - 'JSON.js' */            // space parameter, and returns a JSON text. The replacer can be a function
/*Line 196 - 'JSON.js' */            // that can replace values, or an array of strings that will select the keys.
/*Line 197 - 'JSON.js' */            // A default replacer method can be provided. Use of the space parameter can
/*Line 198 - 'JSON.js' */            // produce text that is more easily readable.

/*Line 200 - 'JSON.js' */            var i;
/*Line 201 - 'JSON.js' */            gap = '';
/*Line 202 - 'JSON.js' */            indent = '';

/*Line 204 - 'JSON.js' */            // If the space parameter is a number, make an indent string containing that
/*Line 205 - 'JSON.js' */            // many spaces.

/*Line 207 - 'JSON.js' */            if (typeof space === 'number') {
/*Line 208 - 'JSON.js' */                for (i = 0; i < space; i += 1) {
/*Line 209 - 'JSON.js' */                    indent += ' ';
/*Line 210 - 'JSON.js' */                }

/*Line 212 - 'JSON.js' */                // If the space parameter is a string, it will be used as the indent string.

/*Line 214 - 'JSON.js' */            } else if (typeof space === 'string') {
/*Line 215 - 'JSON.js' */                indent = space;
/*Line 216 - 'JSON.js' */            }

/*Line 218 - 'JSON.js' */            // If there is a replacer, it must be a function or an array.
/*Line 219 - 'JSON.js' */            // Otherwise, throw an error.

/*Line 221 - 'JSON.js' */            rep = replacer;
/*Line 222 - 'JSON.js' */            if (replacer && typeof replacer !== 'function' &&
/*Line 223 - 'JSON.js' */                    (typeof replacer !== 'object' ||
/*Line 224 - 'JSON.js' */                    typeof replacer.length !== 'number')) {
/*Line 225 - 'JSON.js' */                throw new Error('JSON.stringify');
/*Line 226 - 'JSON.js' */            }

/*Line 228 - 'JSON.js' */            // Make a fake root object containing our value under the key of ''.
/*Line 229 - 'JSON.js' */            // Return the result of stringifying the value.

/*Line 231 - 'JSON.js' */            return str('', { '': value });
/*Line 232 - 'JSON.js' */        };
/*Line 233 - 'JSON.js' */    }


/*Line 236 - 'JSON.js' */    // If the JSON object does not yet have a parse method, give it one.

/*Line 238 - 'JSON.js' */    if (typeof JSON.parse !== 'function') {
/*Line 239 - 'JSON.js' */        JSON.parse = function (text, reviver) {

/*Line 241 - 'JSON.js' */            // The parse method takes a text and an optional reviver function, and returns
/*Line 242 - 'JSON.js' */            // a JavaScript value if the text is a valid JSON text.

/*Line 244 - 'JSON.js' */            var j;

/*Line 246 - 'JSON.js' */            function walk(holder, key) {

/*Line 248 - 'JSON.js' */                // The walk method is used to recursively walk the resulting structure so
/*Line 249 - 'JSON.js' */                // that modifications can be made.

/*Line 251 - 'JSON.js' */                var k, v, value = holder[key];
/*Line 252 - 'JSON.js' */                if (value && typeof value === 'object') {
/*Line 253 - 'JSON.js' */                    for (k in value) {
/*Line 254 - 'JSON.js' */                        if (Object.prototype.hasOwnProperty.call(value, k)) {
/*Line 255 - 'JSON.js' */                            v = walk(value, k);
/*Line 256 - 'JSON.js' */                            if (v !== undefined) {
/*Line 257 - 'JSON.js' */                                value[k] = v;
/*Line 258 - 'JSON.js' */                            } else {
/*Line 259 - 'JSON.js' */                                delete value[k];
/*Line 260 - 'JSON.js' */                            }
/*Line 261 - 'JSON.js' */                        }
/*Line 262 - 'JSON.js' */                    }
/*Line 263 - 'JSON.js' */                }
/*Line 264 - 'JSON.js' */                return reviver.call(holder, key, value);
/*Line 265 - 'JSON.js' */            }


/*Line 268 - 'JSON.js' */            // Parsing happens in four stages. In the first stage, we replace certain
/*Line 269 - 'JSON.js' */            // Unicode characters with escape sequences. JavaScript handles many characters
/*Line 270 - 'JSON.js' */            // incorrectly, either silently deleting them, or treating them as line endings.

/*Line 272 - 'JSON.js' */            text = String(text);
/*Line 273 - 'JSON.js' */            cx.lastIndex = 0;
/*Line 274 - 'JSON.js' */            if (cx.test(text)) {
/*Line 275 - 'JSON.js' */                text = text.replace(cx, function (a) {
/*Line 276 - 'JSON.js' */                    return '\\u' +
/*Line 277 - 'JSON.js' */                        ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
/*Line 278 - 'JSON.js' */                });
/*Line 279 - 'JSON.js' */            }

/*Line 281 - 'JSON.js' */            // In the second stage, we run the text against regular expressions that look
/*Line 282 - 'JSON.js' */            // for non-JSON patterns. We are especially concerned with '()' and 'new'
/*Line 283 - 'JSON.js' */            // because they can cause invocation, and '=' because it can cause mutation.
/*Line 284 - 'JSON.js' */            // But just to be safe, we want to reject all unexpected forms.

/*Line 286 - 'JSON.js' */            // We split the second stage into 4 regexp operations in order to work around
/*Line 287 - 'JSON.js' */            // crippling inefficiencies in IE's and Safari's regexp engines. First we
/*Line 288 - 'JSON.js' */            // replace the JSON backslash pairs with '@' (a non-JSON character). Second, we
/*Line 289 - 'JSON.js' */            // replace all simple value tokens with ']' characters. Third, we delete all
/*Line 290 - 'JSON.js' */            // open brackets that follow a colon or comma or that begin the text. Finally,
/*Line 291 - 'JSON.js' */            // we look to see that the remaining characters are only whitespace or ']' or
/*Line 292 - 'JSON.js' */            // ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.

/*Line 294 - 'JSON.js' */            if (/^[\],:{}\s]*$/
/*Line 295 - 'JSON.js' */                    .test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@')
/*Line 296 - 'JSON.js' */                        .replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, ']')
/*Line 297 - 'JSON.js' */                        .replace(/(?:^|:|,)(?:\s*\[)+/g, ''))) {

/*Line 299 - 'JSON.js' */                // In the third stage we use the eval function to compile the text into a
/*Line 300 - 'JSON.js' */                // JavaScript structure. The '{' operator is subject to a syntactic ambiguity
/*Line 301 - 'JSON.js' */                // in JavaScript: it can begin a block or an object literal. We wrap the text
/*Line 302 - 'JSON.js' */                // in parens to eliminate the ambiguity.

/*Line 304 - 'JSON.js' */                j = eval('(' + text + ')');

/*Line 306 - 'JSON.js' */                // In the optional fourth stage, we recursively walk the new structure, passing
/*Line 307 - 'JSON.js' */                // each name/value pair to a reviver function for possible transformation.

/*Line 309 - 'JSON.js' */                return typeof reviver === 'function' ?
/*Line 310 - 'JSON.js' */                    walk({ '': j }, '') : j;
/*Line 311 - 'JSON.js' */            }

/*Line 313 - 'JSON.js' */            // If the text is not JSON parseable, then a SyntaxError is thrown.

/*Line 315 - 'JSON.js' */            throw new SyntaxError('JSON.parse');
/*Line 316 - 'JSON.js' */        };
/*Line 317 - 'JSON.js' */    }

/*Line 319 - 'JSON.js' */    // Augment the basic prototypes if they have not already been augmented.
/*Line 320 - 'JSON.js' */    // These forms are obsolete. It is recommended that JSON.stringify and
/*Line 321 - 'JSON.js' */    // JSON.parse be used instead.

/*Line 323 - 'JSON.js' *///    if (!Object.prototype.toJSONString) {
/*Line 324 - 'JSON.js' *///        Object.prototype.toJSONString = function (filter) {
/*Line 325 - 'JSON.js' *///            return JSON.stringify(this, filter);
/*Line 326 - 'JSON.js' *///        };
/*Line 327 - 'JSON.js' *///        Object.prototype.parseJSON = function (filter) {
/*Line 328 - 'JSON.js' *///            return JSON.parse(this, filter);
/*Line 329 - 'JSON.js' *///        };
/*Line 330 - 'JSON.js' *///    }
/*Line 331 - 'JSON.js' */} ());
/*Line 0 - 'MicrosoftAjax.debug.js' */// Name:        MicrosoftAjax.debug.js
/*Line 1 - 'MicrosoftAjax.debug.js' */// Assembly:    System.Web.Extensions
/*Line 2 - 'MicrosoftAjax.debug.js' */// Version:     4.0.0.0
/*Line 3 - 'MicrosoftAjax.debug.js' */// FileVersion: 4.0.20526.0
/*Line 4 - 'MicrosoftAjax.debug.js' *///-----------------------------------------------------------------------
/*Line 5 - 'MicrosoftAjax.debug.js' */// Copyright (C) Microsoft Corporation. All rights reserved.
/*Line 6 - 'MicrosoftAjax.debug.js' *///-----------------------------------------------------------------------
/*Line 7 - 'MicrosoftAjax.debug.js' */// MicrosoftAjax.js
/*Line 8 - 'MicrosoftAjax.debug.js' */// Microsoft AJAX Framework.
 
/*Line 10 - 'MicrosoftAjax.debug.js' */Function.__typeName = 'Function';
/*Line 11 - 'MicrosoftAjax.debug.js' */Function.__class = true;
/*Line 12 - 'MicrosoftAjax.debug.js' */Function.createCallback = function Function$createCallback(method, context) {
/*Line 13 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Function.createCallback" />
/*Line 14 - 'MicrosoftAjax.debug.js' */    /// <param name="method" type="Function"></param>
/*Line 15 - 'MicrosoftAjax.debug.js' */    /// <param name="context" mayBeNull="true"></param>
/*Line 16 - 'MicrosoftAjax.debug.js' */    /// <returns type="Function"></returns>
/*Line 17 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 18 - 'MicrosoftAjax.debug.js' */        {name: "method", type: Function},
/*Line 19 - 'MicrosoftAjax.debug.js' */        {name: "context", mayBeNull: true}
/*Line 20 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 21 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 22 - 'MicrosoftAjax.debug.js' */    return function() {
/*Line 23 - 'MicrosoftAjax.debug.js' */        var l = arguments.length;
/*Line 24 - 'MicrosoftAjax.debug.js' */        if (l > 0) {
/*Line 25 - 'MicrosoftAjax.debug.js' */            var args = [];
/*Line 26 - 'MicrosoftAjax.debug.js' */            for (var i = 0; i < l; i++) {
/*Line 27 - 'MicrosoftAjax.debug.js' */                args[i] = arguments[i];
/*Line 28 - 'MicrosoftAjax.debug.js' */            }
/*Line 29 - 'MicrosoftAjax.debug.js' */            args[l] = context;
/*Line 30 - 'MicrosoftAjax.debug.js' */            return method.apply(this, args);
/*Line 31 - 'MicrosoftAjax.debug.js' */        }
/*Line 32 - 'MicrosoftAjax.debug.js' */        return method.call(this, context);
/*Line 33 - 'MicrosoftAjax.debug.js' */    }
/*Line 34 - 'MicrosoftAjax.debug.js' */}
/*Line 35 - 'MicrosoftAjax.debug.js' */Function.createDelegate = function Function$createDelegate(instance, method) {
/*Line 36 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Function.createDelegate" />
/*Line 37 - 'MicrosoftAjax.debug.js' */    /// <param name="instance" mayBeNull="true"></param>
/*Line 38 - 'MicrosoftAjax.debug.js' */    /// <param name="method" type="Function"></param>
/*Line 39 - 'MicrosoftAjax.debug.js' */    /// <returns type="Function"></returns>
/*Line 40 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 41 - 'MicrosoftAjax.debug.js' */        {name: "instance", mayBeNull: true},
/*Line 42 - 'MicrosoftAjax.debug.js' */        {name: "method", type: Function}
/*Line 43 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 44 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 45 - 'MicrosoftAjax.debug.js' */    return function() {
/*Line 46 - 'MicrosoftAjax.debug.js' */        return method.apply(instance, arguments);
/*Line 47 - 'MicrosoftAjax.debug.js' */    }
/*Line 48 - 'MicrosoftAjax.debug.js' */}
/*Line 49 - 'MicrosoftAjax.debug.js' */Function.emptyFunction = Function.emptyMethod = function Function$emptyMethod() {
/*Line 50 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Function.emptyMethod" />
/*Line 51 - 'MicrosoftAjax.debug.js' */}
/*Line 52 - 'MicrosoftAjax.debug.js' */Function.validateParameters = function Function$validateParameters(parameters, expectedParameters, validateParameterCount) {
/*Line 53 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Function.validateParameters" />
/*Line 54 - 'MicrosoftAjax.debug.js' */    /// <param name="parameters"></param>
/*Line 55 - 'MicrosoftAjax.debug.js' */    /// <param name="expectedParameters"></param>
/*Line 56 - 'MicrosoftAjax.debug.js' */    /// <param name="validateParameterCount" type="Boolean" optional="true"></param>
/*Line 57 - 'MicrosoftAjax.debug.js' */    /// <returns type="Error" mayBeNull="true"></returns>
/*Line 58 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 59 - 'MicrosoftAjax.debug.js' */        {name: "parameters"},
/*Line 60 - 'MicrosoftAjax.debug.js' */        {name: "expectedParameters"},
/*Line 61 - 'MicrosoftAjax.debug.js' */        {name: "validateParameterCount", type: Boolean, optional: true}
/*Line 62 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 63 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 64 - 'MicrosoftAjax.debug.js' */    return Function._validateParams(parameters, expectedParameters, validateParameterCount);
/*Line 65 - 'MicrosoftAjax.debug.js' */}
/*Line 66 - 'MicrosoftAjax.debug.js' */Function._validateParams = function Function$_validateParams(params, expectedParams, validateParameterCount) {
/*Line 67 - 'MicrosoftAjax.debug.js' */    var e, expectedLength = expectedParams.length;
/*Line 68 - 'MicrosoftAjax.debug.js' */    validateParameterCount = validateParameterCount || (typeof(validateParameterCount) === "undefined");
/*Line 69 - 'MicrosoftAjax.debug.js' */    e = Function._validateParameterCount(params, expectedParams, validateParameterCount);
/*Line 70 - 'MicrosoftAjax.debug.js' */    if (e) {
/*Line 71 - 'MicrosoftAjax.debug.js' */        e.popStackFrame();
/*Line 72 - 'MicrosoftAjax.debug.js' */        return e;
/*Line 73 - 'MicrosoftAjax.debug.js' */    }
/*Line 74 - 'MicrosoftAjax.debug.js' */    for (var i = 0, l = params.length; i < l; i++) {
/*Line 75 - 'MicrosoftAjax.debug.js' */        var expectedParam = expectedParams[Math.min(i, expectedLength - 1)],
/*Line 76 - 'MicrosoftAjax.debug.js' */            paramName = expectedParam.name;
/*Line 77 - 'MicrosoftAjax.debug.js' */        if (expectedParam.parameterArray) {
/*Line 78 - 'MicrosoftAjax.debug.js' */            paramName += "[" + (i - expectedLength + 1) + "]";
/*Line 79 - 'MicrosoftAjax.debug.js' */        }
/*Line 80 - 'MicrosoftAjax.debug.js' */        else if (!validateParameterCount && (i >= expectedLength)) {
/*Line 81 - 'MicrosoftAjax.debug.js' */            break;
/*Line 82 - 'MicrosoftAjax.debug.js' */        }
/*Line 83 - 'MicrosoftAjax.debug.js' */        e = Function._validateParameter(params[i], expectedParam, paramName);
/*Line 84 - 'MicrosoftAjax.debug.js' */        if (e) {
/*Line 85 - 'MicrosoftAjax.debug.js' */            e.popStackFrame();
/*Line 86 - 'MicrosoftAjax.debug.js' */            return e;
/*Line 87 - 'MicrosoftAjax.debug.js' */        }
/*Line 88 - 'MicrosoftAjax.debug.js' */    }
/*Line 89 - 'MicrosoftAjax.debug.js' */    return null;
/*Line 90 - 'MicrosoftAjax.debug.js' */}
/*Line 91 - 'MicrosoftAjax.debug.js' */Function._validateParameterCount = function Function$_validateParameterCount(params, expectedParams, validateParameterCount) {
/*Line 92 - 'MicrosoftAjax.debug.js' */    var i, error,
/*Line 93 - 'MicrosoftAjax.debug.js' */        expectedLen = expectedParams.length,
/*Line 94 - 'MicrosoftAjax.debug.js' */        actualLen = params.length;
/*Line 95 - 'MicrosoftAjax.debug.js' */    if (actualLen < expectedLen) {
/*Line 96 - 'MicrosoftAjax.debug.js' */        var minParams = expectedLen;
/*Line 97 - 'MicrosoftAjax.debug.js' */        for (i = 0; i < expectedLen; i++) {
/*Line 98 - 'MicrosoftAjax.debug.js' */            var param = expectedParams[i];
/*Line 99 - 'MicrosoftAjax.debug.js' */            if (param.optional || param.parameterArray) {
/*Line 100 - 'MicrosoftAjax.debug.js' */                minParams--;
/*Line 101 - 'MicrosoftAjax.debug.js' */            }
/*Line 102 - 'MicrosoftAjax.debug.js' */        }        
/*Line 103 - 'MicrosoftAjax.debug.js' */        if (actualLen < minParams) {
/*Line 104 - 'MicrosoftAjax.debug.js' */            error = true;
/*Line 105 - 'MicrosoftAjax.debug.js' */        }
/*Line 106 - 'MicrosoftAjax.debug.js' */    }
/*Line 107 - 'MicrosoftAjax.debug.js' */    else if (validateParameterCount && (actualLen > expectedLen)) {
/*Line 108 - 'MicrosoftAjax.debug.js' */        error = true;      
/*Line 109 - 'MicrosoftAjax.debug.js' */        for (i = 0; i < expectedLen; i++) {
/*Line 110 - 'MicrosoftAjax.debug.js' */            if (expectedParams[i].parameterArray) {
/*Line 111 - 'MicrosoftAjax.debug.js' */                error = false; 
/*Line 112 - 'MicrosoftAjax.debug.js' */                break;
/*Line 113 - 'MicrosoftAjax.debug.js' */            }
/*Line 114 - 'MicrosoftAjax.debug.js' */        }  
/*Line 115 - 'MicrosoftAjax.debug.js' */    }
/*Line 116 - 'MicrosoftAjax.debug.js' */    if (error) {
/*Line 117 - 'MicrosoftAjax.debug.js' */        var e = Error.parameterCount();
/*Line 118 - 'MicrosoftAjax.debug.js' */        e.popStackFrame();
/*Line 119 - 'MicrosoftAjax.debug.js' */        return e;
/*Line 120 - 'MicrosoftAjax.debug.js' */    }
/*Line 121 - 'MicrosoftAjax.debug.js' */    return null;
/*Line 122 - 'MicrosoftAjax.debug.js' */}
/*Line 123 - 'MicrosoftAjax.debug.js' */Function._validateParameter = function Function$_validateParameter(param, expectedParam, paramName) {
/*Line 124 - 'MicrosoftAjax.debug.js' */    var e,
/*Line 125 - 'MicrosoftAjax.debug.js' */        expectedType = expectedParam.type,
/*Line 126 - 'MicrosoftAjax.debug.js' */        expectedInteger = !!expectedParam.integer,
/*Line 127 - 'MicrosoftAjax.debug.js' */        expectedDomElement = !!expectedParam.domElement,
/*Line 128 - 'MicrosoftAjax.debug.js' */        mayBeNull = !!expectedParam.mayBeNull;
/*Line 129 - 'MicrosoftAjax.debug.js' */    e = Function._validateParameterType(param, expectedType, expectedInteger, expectedDomElement, mayBeNull, paramName);
/*Line 130 - 'MicrosoftAjax.debug.js' */    if (e) {
/*Line 131 - 'MicrosoftAjax.debug.js' */        e.popStackFrame();
/*Line 132 - 'MicrosoftAjax.debug.js' */        return e;
/*Line 133 - 'MicrosoftAjax.debug.js' */    }
/*Line 134 - 'MicrosoftAjax.debug.js' */    var expectedElementType = expectedParam.elementType,
/*Line 135 - 'MicrosoftAjax.debug.js' */        elementMayBeNull = !!expectedParam.elementMayBeNull;
/*Line 136 - 'MicrosoftAjax.debug.js' */    if (expectedType === Array && typeof(param) !== "undefined" && param !== null &&
/*Line 137 - 'MicrosoftAjax.debug.js' */        (expectedElementType || !elementMayBeNull)) {
/*Line 138 - 'MicrosoftAjax.debug.js' */        var expectedElementInteger = !!expectedParam.elementInteger,
/*Line 139 - 'MicrosoftAjax.debug.js' */            expectedElementDomElement = !!expectedParam.elementDomElement;
/*Line 140 - 'MicrosoftAjax.debug.js' */        for (var i=0; i < param.length; i++) {
/*Line 141 - 'MicrosoftAjax.debug.js' */            var elem = param[i];
/*Line 142 - 'MicrosoftAjax.debug.js' */            e = Function._validateParameterType(elem, expectedElementType,
/*Line 143 - 'MicrosoftAjax.debug.js' */                expectedElementInteger, expectedElementDomElement, elementMayBeNull,
/*Line 144 - 'MicrosoftAjax.debug.js' */                paramName + "[" + i + "]");
/*Line 145 - 'MicrosoftAjax.debug.js' */            if (e) {
/*Line 146 - 'MicrosoftAjax.debug.js' */                e.popStackFrame();
/*Line 147 - 'MicrosoftAjax.debug.js' */                return e;
/*Line 148 - 'MicrosoftAjax.debug.js' */            }
/*Line 149 - 'MicrosoftAjax.debug.js' */        }
/*Line 150 - 'MicrosoftAjax.debug.js' */    }
/*Line 151 - 'MicrosoftAjax.debug.js' */    return null;
/*Line 152 - 'MicrosoftAjax.debug.js' */}
/*Line 153 - 'MicrosoftAjax.debug.js' */Function._validateParameterType = function Function$_validateParameterType(param, expectedType, expectedInteger, expectedDomElement, mayBeNull, paramName) {
/*Line 154 - 'MicrosoftAjax.debug.js' */    var e, i;
/*Line 155 - 'MicrosoftAjax.debug.js' */    if (typeof(param) === "undefined") {
/*Line 156 - 'MicrosoftAjax.debug.js' */        if (mayBeNull) {
/*Line 157 - 'MicrosoftAjax.debug.js' */            return null;
/*Line 158 - 'MicrosoftAjax.debug.js' */        }
/*Line 159 - 'MicrosoftAjax.debug.js' */        else {
/*Line 160 - 'MicrosoftAjax.debug.js' */            e = Error.argumentUndefined(paramName);
/*Line 161 - 'MicrosoftAjax.debug.js' */            e.popStackFrame();
/*Line 162 - 'MicrosoftAjax.debug.js' */            return e;
/*Line 163 - 'MicrosoftAjax.debug.js' */        }
/*Line 164 - 'MicrosoftAjax.debug.js' */    }
/*Line 165 - 'MicrosoftAjax.debug.js' */    if (param === null) {
/*Line 166 - 'MicrosoftAjax.debug.js' */        if (mayBeNull) {
/*Line 167 - 'MicrosoftAjax.debug.js' */            return null;
/*Line 168 - 'MicrosoftAjax.debug.js' */        }
/*Line 169 - 'MicrosoftAjax.debug.js' */        else {
/*Line 170 - 'MicrosoftAjax.debug.js' */            e = Error.argumentNull(paramName);
/*Line 171 - 'MicrosoftAjax.debug.js' */            e.popStackFrame();
/*Line 172 - 'MicrosoftAjax.debug.js' */            return e;
/*Line 173 - 'MicrosoftAjax.debug.js' */        }
/*Line 174 - 'MicrosoftAjax.debug.js' */    }
/*Line 175 - 'MicrosoftAjax.debug.js' */    if (expectedType && expectedType.__enum) {
/*Line 176 - 'MicrosoftAjax.debug.js' */        if (typeof(param) !== 'number') {
/*Line 177 - 'MicrosoftAjax.debug.js' */            e = Error.argumentType(paramName, Object.getType(param), expectedType);
/*Line 178 - 'MicrosoftAjax.debug.js' */            e.popStackFrame();
/*Line 179 - 'MicrosoftAjax.debug.js' */            return e;
/*Line 180 - 'MicrosoftAjax.debug.js' */        }
/*Line 181 - 'MicrosoftAjax.debug.js' */        if ((param % 1) === 0) {
/*Line 182 - 'MicrosoftAjax.debug.js' */            var values = expectedType.prototype;
/*Line 183 - 'MicrosoftAjax.debug.js' */            if (!expectedType.__flags || (param === 0)) {
/*Line 184 - 'MicrosoftAjax.debug.js' */                for (i in values) {
/*Line 185 - 'MicrosoftAjax.debug.js' */                    if (values[i] === param) return null;
/*Line 186 - 'MicrosoftAjax.debug.js' */                }
/*Line 187 - 'MicrosoftAjax.debug.js' */            }
/*Line 188 - 'MicrosoftAjax.debug.js' */            else {
/*Line 189 - 'MicrosoftAjax.debug.js' */                var v = param;
/*Line 190 - 'MicrosoftAjax.debug.js' */                for (i in values) {
/*Line 191 - 'MicrosoftAjax.debug.js' */                    var vali = values[i];
/*Line 192 - 'MicrosoftAjax.debug.js' */                    if (vali === 0) continue;
/*Line 193 - 'MicrosoftAjax.debug.js' */                    if ((vali & param) === vali) {
/*Line 194 - 'MicrosoftAjax.debug.js' */                        v -= vali;
/*Line 195 - 'MicrosoftAjax.debug.js' */                    }
/*Line 196 - 'MicrosoftAjax.debug.js' */                    if (v === 0) return null;
/*Line 197 - 'MicrosoftAjax.debug.js' */                }
/*Line 198 - 'MicrosoftAjax.debug.js' */            }
/*Line 199 - 'MicrosoftAjax.debug.js' */        }
/*Line 200 - 'MicrosoftAjax.debug.js' */        e = Error.argumentOutOfRange(paramName, param, String.format(Sys.Res.enumInvalidValue, param, expectedType.getName()));
/*Line 201 - 'MicrosoftAjax.debug.js' */        e.popStackFrame();
/*Line 202 - 'MicrosoftAjax.debug.js' */        return e;
/*Line 203 - 'MicrosoftAjax.debug.js' */    }
/*Line 204 - 'MicrosoftAjax.debug.js' */    if (expectedDomElement && (!Sys._isDomElement(param) || (param.nodeType === 3))) {
/*Line 205 - 'MicrosoftAjax.debug.js' */        e = Error.argument(paramName, Sys.Res.argumentDomElement);
/*Line 206 - 'MicrosoftAjax.debug.js' */        e.popStackFrame();
/*Line 207 - 'MicrosoftAjax.debug.js' */        return e;
/*Line 208 - 'MicrosoftAjax.debug.js' */    }
/*Line 209 - 'MicrosoftAjax.debug.js' */    if (expectedType && !Sys._isInstanceOfType(expectedType, param)) {
/*Line 210 - 'MicrosoftAjax.debug.js' */        e = Error.argumentType(paramName, Object.getType(param), expectedType);
/*Line 211 - 'MicrosoftAjax.debug.js' */        e.popStackFrame();
/*Line 212 - 'MicrosoftAjax.debug.js' */        return e;
/*Line 213 - 'MicrosoftAjax.debug.js' */    }
/*Line 214 - 'MicrosoftAjax.debug.js' */    if (expectedType === Number && expectedInteger) {
/*Line 215 - 'MicrosoftAjax.debug.js' */        if ((param % 1) !== 0) {
/*Line 216 - 'MicrosoftAjax.debug.js' */            e = Error.argumentOutOfRange(paramName, param, Sys.Res.argumentInteger);
/*Line 217 - 'MicrosoftAjax.debug.js' */            e.popStackFrame();
/*Line 218 - 'MicrosoftAjax.debug.js' */            return e;
/*Line 219 - 'MicrosoftAjax.debug.js' */        }
/*Line 220 - 'MicrosoftAjax.debug.js' */    }
/*Line 221 - 'MicrosoftAjax.debug.js' */    return null;
/*Line 222 - 'MicrosoftAjax.debug.js' */}
 
/*Line 224 - 'MicrosoftAjax.debug.js' */Error.__typeName = 'Error';
/*Line 225 - 'MicrosoftAjax.debug.js' */Error.__class = true;
/*Line 226 - 'MicrosoftAjax.debug.js' */Error.create = function Error$create(message, errorInfo) {
/*Line 227 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Error.create" />
/*Line 228 - 'MicrosoftAjax.debug.js' */    /// <param name="message" type="String" optional="true" mayBeNull="true"></param>
/*Line 229 - 'MicrosoftAjax.debug.js' */    /// <param name="errorInfo" optional="true" mayBeNull="true"></param>
/*Line 230 - 'MicrosoftAjax.debug.js' */    /// <returns type="Error"></returns>
/*Line 231 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 232 - 'MicrosoftAjax.debug.js' */        {name: "message", type: String, mayBeNull: true, optional: true},
/*Line 233 - 'MicrosoftAjax.debug.js' */        {name: "errorInfo", mayBeNull: true, optional: true}
/*Line 234 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 235 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 236 - 'MicrosoftAjax.debug.js' */    var err = new Error(message);
/*Line 237 - 'MicrosoftAjax.debug.js' */    err.message = message;
/*Line 238 - 'MicrosoftAjax.debug.js' */    if (errorInfo) {
/*Line 239 - 'MicrosoftAjax.debug.js' */        for (var v in errorInfo) {
/*Line 240 - 'MicrosoftAjax.debug.js' */            err[v] = errorInfo[v];
/*Line 241 - 'MicrosoftAjax.debug.js' */        }
/*Line 242 - 'MicrosoftAjax.debug.js' */    }
/*Line 243 - 'MicrosoftAjax.debug.js' */    err.popStackFrame();
/*Line 244 - 'MicrosoftAjax.debug.js' */    return err;
/*Line 245 - 'MicrosoftAjax.debug.js' */}
/*Line 246 - 'MicrosoftAjax.debug.js' */Error.argument = function Error$argument(paramName, message) {
/*Line 247 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Error.argument" />
/*Line 248 - 'MicrosoftAjax.debug.js' */    /// <param name="paramName" type="String" optional="true" mayBeNull="true"></param>
/*Line 249 - 'MicrosoftAjax.debug.js' */    /// <param name="message" type="String" optional="true" mayBeNull="true"></param>
/*Line 250 - 'MicrosoftAjax.debug.js' */    /// <returns></returns>
/*Line 251 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 252 - 'MicrosoftAjax.debug.js' */        {name: "paramName", type: String, mayBeNull: true, optional: true},
/*Line 253 - 'MicrosoftAjax.debug.js' */        {name: "message", type: String, mayBeNull: true, optional: true}
/*Line 254 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 255 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 256 - 'MicrosoftAjax.debug.js' */    var displayMessage = "Sys.ArgumentException: " + (message ? message : Sys.Res.argument);
/*Line 257 - 'MicrosoftAjax.debug.js' */    if (paramName) {
/*Line 258 - 'MicrosoftAjax.debug.js' */        displayMessage += "\n" + String.format(Sys.Res.paramName, paramName);
/*Line 259 - 'MicrosoftAjax.debug.js' */    }
/*Line 260 - 'MicrosoftAjax.debug.js' */    var err = Error.create(displayMessage, { name: "Sys.ArgumentException", paramName: paramName });
/*Line 261 - 'MicrosoftAjax.debug.js' */    err.popStackFrame();
/*Line 262 - 'MicrosoftAjax.debug.js' */    return err;
/*Line 263 - 'MicrosoftAjax.debug.js' */}
/*Line 264 - 'MicrosoftAjax.debug.js' */Error.argumentNull = function Error$argumentNull(paramName, message) {
/*Line 265 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Error.argumentNull" />
/*Line 266 - 'MicrosoftAjax.debug.js' */    /// <param name="paramName" type="String" optional="true" mayBeNull="true"></param>
/*Line 267 - 'MicrosoftAjax.debug.js' */    /// <param name="message" type="String" optional="true" mayBeNull="true"></param>
/*Line 268 - 'MicrosoftAjax.debug.js' */    /// <returns></returns>
/*Line 269 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 270 - 'MicrosoftAjax.debug.js' */        {name: "paramName", type: String, mayBeNull: true, optional: true},
/*Line 271 - 'MicrosoftAjax.debug.js' */        {name: "message", type: String, mayBeNull: true, optional: true}
/*Line 272 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 273 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 274 - 'MicrosoftAjax.debug.js' */    var displayMessage = "Sys.ArgumentNullException: " + (message ? message : Sys.Res.argumentNull);
/*Line 275 - 'MicrosoftAjax.debug.js' */    if (paramName) {
/*Line 276 - 'MicrosoftAjax.debug.js' */        displayMessage += "\n" + String.format(Sys.Res.paramName, paramName);
/*Line 277 - 'MicrosoftAjax.debug.js' */    }
/*Line 278 - 'MicrosoftAjax.debug.js' */    var err = Error.create(displayMessage, { name: "Sys.ArgumentNullException", paramName: paramName });
/*Line 279 - 'MicrosoftAjax.debug.js' */    err.popStackFrame();
/*Line 280 - 'MicrosoftAjax.debug.js' */    return err;
/*Line 281 - 'MicrosoftAjax.debug.js' */}
/*Line 282 - 'MicrosoftAjax.debug.js' */Error.argumentOutOfRange = function Error$argumentOutOfRange(paramName, actualValue, message) {
/*Line 283 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Error.argumentOutOfRange" />
/*Line 284 - 'MicrosoftAjax.debug.js' */    /// <param name="paramName" type="String" optional="true" mayBeNull="true"></param>
/*Line 285 - 'MicrosoftAjax.debug.js' */    /// <param name="actualValue" optional="true" mayBeNull="true"></param>
/*Line 286 - 'MicrosoftAjax.debug.js' */    /// <param name="message" type="String" optional="true" mayBeNull="true"></param>
/*Line 287 - 'MicrosoftAjax.debug.js' */    /// <returns></returns>
/*Line 288 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 289 - 'MicrosoftAjax.debug.js' */        {name: "paramName", type: String, mayBeNull: true, optional: true},
/*Line 290 - 'MicrosoftAjax.debug.js' */        {name: "actualValue", mayBeNull: true, optional: true},
/*Line 291 - 'MicrosoftAjax.debug.js' */        {name: "message", type: String, mayBeNull: true, optional: true}
/*Line 292 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 293 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 294 - 'MicrosoftAjax.debug.js' */    var displayMessage = "Sys.ArgumentOutOfRangeException: " + (message ? message : Sys.Res.argumentOutOfRange);
/*Line 295 - 'MicrosoftAjax.debug.js' */    if (paramName) {
/*Line 296 - 'MicrosoftAjax.debug.js' */        displayMessage += "\n" + String.format(Sys.Res.paramName, paramName);
/*Line 297 - 'MicrosoftAjax.debug.js' */    }
/*Line 298 - 'MicrosoftAjax.debug.js' */    if (typeof(actualValue) !== "undefined" && actualValue !== null) {
/*Line 299 - 'MicrosoftAjax.debug.js' */        displayMessage += "\n" + String.format(Sys.Res.actualValue, actualValue);
/*Line 300 - 'MicrosoftAjax.debug.js' */    }
/*Line 301 - 'MicrosoftAjax.debug.js' */    var err = Error.create(displayMessage, {
/*Line 302 - 'MicrosoftAjax.debug.js' */        name: "Sys.ArgumentOutOfRangeException",
/*Line 303 - 'MicrosoftAjax.debug.js' */        paramName: paramName,
/*Line 304 - 'MicrosoftAjax.debug.js' */        actualValue: actualValue
/*Line 305 - 'MicrosoftAjax.debug.js' */    });
/*Line 306 - 'MicrosoftAjax.debug.js' */    err.popStackFrame();
/*Line 307 - 'MicrosoftAjax.debug.js' */    return err;
/*Line 308 - 'MicrosoftAjax.debug.js' */}
/*Line 309 - 'MicrosoftAjax.debug.js' */Error.argumentType = function Error$argumentType(paramName, actualType, expectedType, message) {
/*Line 310 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Error.argumentType" />
/*Line 311 - 'MicrosoftAjax.debug.js' */    /// <param name="paramName" type="String" optional="true" mayBeNull="true"></param>
/*Line 312 - 'MicrosoftAjax.debug.js' */    /// <param name="actualType" type="Type" optional="true" mayBeNull="true"></param>
/*Line 313 - 'MicrosoftAjax.debug.js' */    /// <param name="expectedType" type="Type" optional="true" mayBeNull="true"></param>
/*Line 314 - 'MicrosoftAjax.debug.js' */    /// <param name="message" type="String" optional="true" mayBeNull="true"></param>
/*Line 315 - 'MicrosoftAjax.debug.js' */    /// <returns></returns>
/*Line 316 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 317 - 'MicrosoftAjax.debug.js' */        {name: "paramName", type: String, mayBeNull: true, optional: true},
/*Line 318 - 'MicrosoftAjax.debug.js' */        {name: "actualType", type: Type, mayBeNull: true, optional: true},
/*Line 319 - 'MicrosoftAjax.debug.js' */        {name: "expectedType", type: Type, mayBeNull: true, optional: true},
/*Line 320 - 'MicrosoftAjax.debug.js' */        {name: "message", type: String, mayBeNull: true, optional: true}
/*Line 321 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 322 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 323 - 'MicrosoftAjax.debug.js' */    var displayMessage = "Sys.ArgumentTypeException: ";
/*Line 324 - 'MicrosoftAjax.debug.js' */    if (message) {
/*Line 325 - 'MicrosoftAjax.debug.js' */        displayMessage += message;
/*Line 326 - 'MicrosoftAjax.debug.js' */    }
/*Line 327 - 'MicrosoftAjax.debug.js' */    else if (actualType && expectedType) {
/*Line 328 - 'MicrosoftAjax.debug.js' */        displayMessage +=
/*Line 329 - 'MicrosoftAjax.debug.js' */            String.format(Sys.Res.argumentTypeWithTypes, actualType.getName(), expectedType.getName());
/*Line 330 - 'MicrosoftAjax.debug.js' */    }
/*Line 331 - 'MicrosoftAjax.debug.js' */    else {
/*Line 332 - 'MicrosoftAjax.debug.js' */        displayMessage += Sys.Res.argumentType;
/*Line 333 - 'MicrosoftAjax.debug.js' */    }
/*Line 334 - 'MicrosoftAjax.debug.js' */    if (paramName) {
/*Line 335 - 'MicrosoftAjax.debug.js' */        displayMessage += "\n" + String.format(Sys.Res.paramName, paramName);
/*Line 336 - 'MicrosoftAjax.debug.js' */    }
/*Line 337 - 'MicrosoftAjax.debug.js' */    var err = Error.create(displayMessage, {
/*Line 338 - 'MicrosoftAjax.debug.js' */        name: "Sys.ArgumentTypeException",
/*Line 339 - 'MicrosoftAjax.debug.js' */        paramName: paramName,
/*Line 340 - 'MicrosoftAjax.debug.js' */        actualType: actualType,
/*Line 341 - 'MicrosoftAjax.debug.js' */        expectedType: expectedType
/*Line 342 - 'MicrosoftAjax.debug.js' */    });
/*Line 343 - 'MicrosoftAjax.debug.js' */    err.popStackFrame();
/*Line 344 - 'MicrosoftAjax.debug.js' */    return err;
/*Line 345 - 'MicrosoftAjax.debug.js' */}
/*Line 346 - 'MicrosoftAjax.debug.js' */Error.argumentUndefined = function Error$argumentUndefined(paramName, message) {
/*Line 347 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Error.argumentUndefined" />
/*Line 348 - 'MicrosoftAjax.debug.js' */    /// <param name="paramName" type="String" optional="true" mayBeNull="true"></param>
/*Line 349 - 'MicrosoftAjax.debug.js' */    /// <param name="message" type="String" optional="true" mayBeNull="true"></param>
/*Line 350 - 'MicrosoftAjax.debug.js' */    /// <returns></returns>
/*Line 351 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 352 - 'MicrosoftAjax.debug.js' */        {name: "paramName", type: String, mayBeNull: true, optional: true},
/*Line 353 - 'MicrosoftAjax.debug.js' */        {name: "message", type: String, mayBeNull: true, optional: true}
/*Line 354 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 355 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 356 - 'MicrosoftAjax.debug.js' */    var displayMessage = "Sys.ArgumentUndefinedException: " + (message ? message : Sys.Res.argumentUndefined);
/*Line 357 - 'MicrosoftAjax.debug.js' */    if (paramName) {
/*Line 358 - 'MicrosoftAjax.debug.js' */        displayMessage += "\n" + String.format(Sys.Res.paramName, paramName);
/*Line 359 - 'MicrosoftAjax.debug.js' */    }
/*Line 360 - 'MicrosoftAjax.debug.js' */    var err = Error.create(displayMessage, { name: "Sys.ArgumentUndefinedException", paramName: paramName });
/*Line 361 - 'MicrosoftAjax.debug.js' */    err.popStackFrame();
/*Line 362 - 'MicrosoftAjax.debug.js' */    return err;
/*Line 363 - 'MicrosoftAjax.debug.js' */}
/*Line 364 - 'MicrosoftAjax.debug.js' */Error.format = function Error$format(message) {
/*Line 365 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Error.format" />
/*Line 366 - 'MicrosoftAjax.debug.js' */    /// <param name="message" type="String" optional="true" mayBeNull="true"></param>
/*Line 367 - 'MicrosoftAjax.debug.js' */    /// <returns></returns>
/*Line 368 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 369 - 'MicrosoftAjax.debug.js' */        {name: "message", type: String, mayBeNull: true, optional: true}
/*Line 370 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 371 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 372 - 'MicrosoftAjax.debug.js' */    var displayMessage = "Sys.FormatException: " + (message ? message : Sys.Res.format);
/*Line 373 - 'MicrosoftAjax.debug.js' */    var err = Error.create(displayMessage, {name: 'Sys.FormatException'});
/*Line 374 - 'MicrosoftAjax.debug.js' */    err.popStackFrame();
/*Line 375 - 'MicrosoftAjax.debug.js' */    return err;
/*Line 376 - 'MicrosoftAjax.debug.js' */}
/*Line 377 - 'MicrosoftAjax.debug.js' */Error.invalidOperation = function Error$invalidOperation(message) {
/*Line 378 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Error.invalidOperation" />
/*Line 379 - 'MicrosoftAjax.debug.js' */    /// <param name="message" type="String" optional="true" mayBeNull="true"></param>
/*Line 380 - 'MicrosoftAjax.debug.js' */    /// <returns></returns>
/*Line 381 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 382 - 'MicrosoftAjax.debug.js' */        {name: "message", type: String, mayBeNull: true, optional: true}
/*Line 383 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 384 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 385 - 'MicrosoftAjax.debug.js' */    var displayMessage = "Sys.InvalidOperationException: " + (message ? message : Sys.Res.invalidOperation);
/*Line 386 - 'MicrosoftAjax.debug.js' */    var err = Error.create(displayMessage, {name: 'Sys.InvalidOperationException'});
/*Line 387 - 'MicrosoftAjax.debug.js' */    err.popStackFrame();
/*Line 388 - 'MicrosoftAjax.debug.js' */    return err;
/*Line 389 - 'MicrosoftAjax.debug.js' */}
/*Line 390 - 'MicrosoftAjax.debug.js' */Error.notImplemented = function Error$notImplemented(message) {
/*Line 391 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Error.notImplemented" />
/*Line 392 - 'MicrosoftAjax.debug.js' */    /// <param name="message" type="String" optional="true" mayBeNull="true"></param>
/*Line 393 - 'MicrosoftAjax.debug.js' */    /// <returns></returns>
/*Line 394 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 395 - 'MicrosoftAjax.debug.js' */        {name: "message", type: String, mayBeNull: true, optional: true}
/*Line 396 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 397 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 398 - 'MicrosoftAjax.debug.js' */    var displayMessage = "Sys.NotImplementedException: " + (message ? message : Sys.Res.notImplemented);
/*Line 399 - 'MicrosoftAjax.debug.js' */    var err = Error.create(displayMessage, {name: 'Sys.NotImplementedException'});
/*Line 400 - 'MicrosoftAjax.debug.js' */    err.popStackFrame();
/*Line 401 - 'MicrosoftAjax.debug.js' */    return err;
/*Line 402 - 'MicrosoftAjax.debug.js' */}
/*Line 403 - 'MicrosoftAjax.debug.js' */Error.parameterCount = function Error$parameterCount(message) {
/*Line 404 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Error.parameterCount" />
/*Line 405 - 'MicrosoftAjax.debug.js' */    /// <param name="message" type="String" optional="true" mayBeNull="true"></param>
/*Line 406 - 'MicrosoftAjax.debug.js' */    /// <returns></returns>
/*Line 407 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 408 - 'MicrosoftAjax.debug.js' */        {name: "message", type: String, mayBeNull: true, optional: true}
/*Line 409 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 410 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 411 - 'MicrosoftAjax.debug.js' */    var displayMessage = "Sys.ParameterCountException: " + (message ? message : Sys.Res.parameterCount);
/*Line 412 - 'MicrosoftAjax.debug.js' */    var err = Error.create(displayMessage, {name: 'Sys.ParameterCountException'});
/*Line 413 - 'MicrosoftAjax.debug.js' */    err.popStackFrame();
/*Line 414 - 'MicrosoftAjax.debug.js' */    return err;
/*Line 415 - 'MicrosoftAjax.debug.js' */}
/*Line 416 - 'MicrosoftAjax.debug.js' */Error.prototype.popStackFrame = function Error$popStackFrame() {
/*Line 417 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#checkParam" />
/*Line 418 - 'MicrosoftAjax.debug.js' */    if (arguments.length !== 0) throw Error.parameterCount();
/*Line 419 - 'MicrosoftAjax.debug.js' */    if (typeof(this.stack) === "undefined" || this.stack === null ||
/*Line 420 - 'MicrosoftAjax.debug.js' */        typeof(this.fileName) === "undefined" || this.fileName === null ||
/*Line 421 - 'MicrosoftAjax.debug.js' */        typeof(this.lineNumber) === "undefined" || this.lineNumber === null) {
/*Line 422 - 'MicrosoftAjax.debug.js' */        return;
/*Line 423 - 'MicrosoftAjax.debug.js' */    }
/*Line 424 - 'MicrosoftAjax.debug.js' */    var stackFrames = this.stack.split("\n");
/*Line 425 - 'MicrosoftAjax.debug.js' */    var currentFrame = stackFrames[0];
/*Line 426 - 'MicrosoftAjax.debug.js' */    var pattern = this.fileName + ":" + this.lineNumber;
/*Line 427 - 'MicrosoftAjax.debug.js' */    while(typeof(currentFrame) !== "undefined" &&
/*Line 428 - 'MicrosoftAjax.debug.js' */          currentFrame !== null &&
/*Line 429 - 'MicrosoftAjax.debug.js' */          currentFrame.indexOf(pattern) === -1) {
/*Line 430 - 'MicrosoftAjax.debug.js' */        stackFrames.shift();
/*Line 431 - 'MicrosoftAjax.debug.js' */        currentFrame = stackFrames[0];
/*Line 432 - 'MicrosoftAjax.debug.js' */    }
/*Line 433 - 'MicrosoftAjax.debug.js' */    var nextFrame = stackFrames[1];
/*Line 434 - 'MicrosoftAjax.debug.js' */    if (typeof(nextFrame) === "undefined" || nextFrame === null) {
/*Line 435 - 'MicrosoftAjax.debug.js' */        return;
/*Line 436 - 'MicrosoftAjax.debug.js' */    }
/*Line 437 - 'MicrosoftAjax.debug.js' */    var nextFrameParts = nextFrame.match(/@(.*):(\d+)$/);
/*Line 438 - 'MicrosoftAjax.debug.js' */    if (typeof(nextFrameParts) === "undefined" || nextFrameParts === null) {
/*Line 439 - 'MicrosoftAjax.debug.js' */        return;
/*Line 440 - 'MicrosoftAjax.debug.js' */    }
/*Line 441 - 'MicrosoftAjax.debug.js' */    this.fileName = nextFrameParts[1];
/*Line 442 - 'MicrosoftAjax.debug.js' */    this.lineNumber = parseInt(nextFrameParts[2]);
/*Line 443 - 'MicrosoftAjax.debug.js' */    stackFrames.shift();
/*Line 444 - 'MicrosoftAjax.debug.js' */    this.stack = stackFrames.join("\n");
/*Line 445 - 'MicrosoftAjax.debug.js' */}
 
/*Line 447 - 'MicrosoftAjax.debug.js' */Object.__typeName = 'Object';
/*Line 448 - 'MicrosoftAjax.debug.js' */Object.__class = true;
/*Line 449 - 'MicrosoftAjax.debug.js' */Object.getType = function Object$getType(instance) {
/*Line 450 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Object.getType" />
/*Line 451 - 'MicrosoftAjax.debug.js' */    /// <param name="instance"></param>
/*Line 452 - 'MicrosoftAjax.debug.js' */    /// <returns type="Type"></returns>
/*Line 453 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 454 - 'MicrosoftAjax.debug.js' */        {name: "instance"}
/*Line 455 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 456 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 457 - 'MicrosoftAjax.debug.js' */    var ctor = instance.constructor;
/*Line 458 - 'MicrosoftAjax.debug.js' */    if (!ctor || (typeof(ctor) !== "function") || !ctor.__typeName || (ctor.__typeName === 'Object')) {
/*Line 459 - 'MicrosoftAjax.debug.js' */        return Object;
/*Line 460 - 'MicrosoftAjax.debug.js' */    }
/*Line 461 - 'MicrosoftAjax.debug.js' */    return ctor;
/*Line 462 - 'MicrosoftAjax.debug.js' */}
/*Line 463 - 'MicrosoftAjax.debug.js' */Object.getTypeName = function Object$getTypeName(instance) {
/*Line 464 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Object.getTypeName" />
/*Line 465 - 'MicrosoftAjax.debug.js' */    /// <param name="instance"></param>
/*Line 466 - 'MicrosoftAjax.debug.js' */    /// <returns type="String"></returns>
/*Line 467 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 468 - 'MicrosoftAjax.debug.js' */        {name: "instance"}
/*Line 469 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 470 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 471 - 'MicrosoftAjax.debug.js' */    return Object.getType(instance).getName();
/*Line 472 - 'MicrosoftAjax.debug.js' */}
 
/*Line 474 - 'MicrosoftAjax.debug.js' */String.__typeName = 'String';
/*Line 475 - 'MicrosoftAjax.debug.js' */String.__class = true;
/*Line 476 - 'MicrosoftAjax.debug.js' */String.prototype.endsWith = function String$endsWith(suffix) {
/*Line 477 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#String.endsWith" />
/*Line 478 - 'MicrosoftAjax.debug.js' */    /// <param name="suffix" type="String"></param>
/*Line 479 - 'MicrosoftAjax.debug.js' */    /// <returns type="Boolean"></returns>
/*Line 480 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 481 - 'MicrosoftAjax.debug.js' */        {name: "suffix", type: String}
/*Line 482 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 483 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 484 - 'MicrosoftAjax.debug.js' */    return (this.substr(this.length - suffix.length) === suffix);
/*Line 485 - 'MicrosoftAjax.debug.js' */}
/*Line 486 - 'MicrosoftAjax.debug.js' */String.prototype.startsWith = function String$startsWith(prefix) {
/*Line 487 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#String.startsWith" />
/*Line 488 - 'MicrosoftAjax.debug.js' */    /// <param name="prefix" type="String"></param>
/*Line 489 - 'MicrosoftAjax.debug.js' */    /// <returns type="Boolean"></returns>
/*Line 490 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 491 - 'MicrosoftAjax.debug.js' */        {name: "prefix", type: String}
/*Line 492 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 493 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 494 - 'MicrosoftAjax.debug.js' */    return (this.substr(0, prefix.length) === prefix);
/*Line 495 - 'MicrosoftAjax.debug.js' */}
/*Line 496 - 'MicrosoftAjax.debug.js' */String.prototype.trim = function String$trim() {
/*Line 497 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#String.trim" />
/*Line 498 - 'MicrosoftAjax.debug.js' */    /// <returns type="String"></returns>
/*Line 499 - 'MicrosoftAjax.debug.js' */    if (arguments.length !== 0) throw Error.parameterCount();
/*Line 500 - 'MicrosoftAjax.debug.js' */    return this.replace(/^\s+|\s+$/g, '');
/*Line 501 - 'MicrosoftAjax.debug.js' */}
/*Line 502 - 'MicrosoftAjax.debug.js' */String.prototype.trimEnd = function String$trimEnd() {
/*Line 503 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#String.trimEnd" />
/*Line 504 - 'MicrosoftAjax.debug.js' */    /// <returns type="String"></returns>
/*Line 505 - 'MicrosoftAjax.debug.js' */    if (arguments.length !== 0) throw Error.parameterCount();
/*Line 506 - 'MicrosoftAjax.debug.js' */    return this.replace(/\s+$/, '');
/*Line 507 - 'MicrosoftAjax.debug.js' */}
/*Line 508 - 'MicrosoftAjax.debug.js' */String.prototype.trimStart = function String$trimStart() {
/*Line 509 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#String.trimStart" />
/*Line 510 - 'MicrosoftAjax.debug.js' */    /// <returns type="String"></returns>
/*Line 511 - 'MicrosoftAjax.debug.js' */    if (arguments.length !== 0) throw Error.parameterCount();
/*Line 512 - 'MicrosoftAjax.debug.js' */    return this.replace(/^\s+/, '');
/*Line 513 - 'MicrosoftAjax.debug.js' */}
/*Line 514 - 'MicrosoftAjax.debug.js' */String.format = function String$format(format, args) {
/*Line 515 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#String.format" />
/*Line 516 - 'MicrosoftAjax.debug.js' */    /// <param name="format" type="String"></param>
/*Line 517 - 'MicrosoftAjax.debug.js' */    /// <param name="args" parameterArray="true" mayBeNull="true"></param>
/*Line 518 - 'MicrosoftAjax.debug.js' */    /// <returns type="String"></returns>
/*Line 519 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 520 - 'MicrosoftAjax.debug.js' */        {name: "format", type: String},
/*Line 521 - 'MicrosoftAjax.debug.js' */        {name: "args", mayBeNull: true, parameterArray: true}
/*Line 522 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 523 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 524 - 'MicrosoftAjax.debug.js' */    return String._toFormattedString(false, arguments);
/*Line 525 - 'MicrosoftAjax.debug.js' */}
/*Line 526 - 'MicrosoftAjax.debug.js' */String._toFormattedString = function String$_toFormattedString(useLocale, args) {
/*Line 527 - 'MicrosoftAjax.debug.js' */    var result = '';
/*Line 528 - 'MicrosoftAjax.debug.js' */    var format = args[0];
/*Line 529 - 'MicrosoftAjax.debug.js' */    for (var i=0;;) {
/*Line 530 - 'MicrosoftAjax.debug.js' */        var open = format.indexOf('{', i);
/*Line 531 - 'MicrosoftAjax.debug.js' */        var close = format.indexOf('}', i);
/*Line 532 - 'MicrosoftAjax.debug.js' */        if ((open < 0) && (close < 0)) {
/*Line 533 - 'MicrosoftAjax.debug.js' */            result += format.slice(i);
/*Line 534 - 'MicrosoftAjax.debug.js' */            break;
/*Line 535 - 'MicrosoftAjax.debug.js' */        }
/*Line 536 - 'MicrosoftAjax.debug.js' */        if ((close > 0) && ((close < open) || (open < 0))) {
/*Line 537 - 'MicrosoftAjax.debug.js' */            if (format.charAt(close + 1) !== '}') {
/*Line 538 - 'MicrosoftAjax.debug.js' */                throw Error.argument('format', Sys.Res.stringFormatBraceMismatch);
/*Line 539 - 'MicrosoftAjax.debug.js' */            }
/*Line 540 - 'MicrosoftAjax.debug.js' */            result += format.slice(i, close + 1);
/*Line 541 - 'MicrosoftAjax.debug.js' */            i = close + 2;
/*Line 542 - 'MicrosoftAjax.debug.js' */            continue;
/*Line 543 - 'MicrosoftAjax.debug.js' */        }
/*Line 544 - 'MicrosoftAjax.debug.js' */        result += format.slice(i, open);
/*Line 545 - 'MicrosoftAjax.debug.js' */        i = open + 1;
/*Line 546 - 'MicrosoftAjax.debug.js' */        if (format.charAt(i) === '{') {
/*Line 547 - 'MicrosoftAjax.debug.js' */            result += '{';
/*Line 548 - 'MicrosoftAjax.debug.js' */            i++;
/*Line 549 - 'MicrosoftAjax.debug.js' */            continue;
/*Line 550 - 'MicrosoftAjax.debug.js' */        }
/*Line 551 - 'MicrosoftAjax.debug.js' */        if (close < 0) throw Error.argument('format', Sys.Res.stringFormatBraceMismatch);
/*Line 552 - 'MicrosoftAjax.debug.js' */        var brace = format.substring(i, close);
/*Line 553 - 'MicrosoftAjax.debug.js' */        var colonIndex = brace.indexOf(':');
/*Line 554 - 'MicrosoftAjax.debug.js' */        var argNumber = parseInt((colonIndex < 0)? brace : brace.substring(0, colonIndex), 10) + 1;
/*Line 555 - 'MicrosoftAjax.debug.js' */        if (isNaN(argNumber)) throw Error.argument('format', Sys.Res.stringFormatInvalid);
/*Line 556 - 'MicrosoftAjax.debug.js' */        var argFormat = (colonIndex < 0)? '' : brace.substring(colonIndex + 1);
/*Line 557 - 'MicrosoftAjax.debug.js' */        var arg = args[argNumber];
/*Line 558 - 'MicrosoftAjax.debug.js' */        if (typeof(arg) === "undefined" || arg === null) {
/*Line 559 - 'MicrosoftAjax.debug.js' */            arg = '';
/*Line 560 - 'MicrosoftAjax.debug.js' */        }
/*Line 561 - 'MicrosoftAjax.debug.js' */        if (arg.toFormattedString) {
/*Line 562 - 'MicrosoftAjax.debug.js' */            result += arg.toFormattedString(argFormat);
/*Line 563 - 'MicrosoftAjax.debug.js' */        }
/*Line 564 - 'MicrosoftAjax.debug.js' */        else if (useLocale && arg.localeFormat) {
/*Line 565 - 'MicrosoftAjax.debug.js' */            result += arg.localeFormat(argFormat);
/*Line 566 - 'MicrosoftAjax.debug.js' */        }
/*Line 567 - 'MicrosoftAjax.debug.js' */        else if (arg.format) {
/*Line 568 - 'MicrosoftAjax.debug.js' */            result += arg.format(argFormat);
/*Line 569 - 'MicrosoftAjax.debug.js' */        }
/*Line 570 - 'MicrosoftAjax.debug.js' */        else
/*Line 571 - 'MicrosoftAjax.debug.js' */            result += arg.toString();
/*Line 572 - 'MicrosoftAjax.debug.js' */        i = close + 1;
/*Line 573 - 'MicrosoftAjax.debug.js' */    }
/*Line 574 - 'MicrosoftAjax.debug.js' */    return result;
/*Line 575 - 'MicrosoftAjax.debug.js' */}
 
/*Line 577 - 'MicrosoftAjax.debug.js' */Boolean.__typeName = 'Boolean';
/*Line 578 - 'MicrosoftAjax.debug.js' */Boolean.__class = true;
/*Line 579 - 'MicrosoftAjax.debug.js' */Boolean.parse = function Boolean$parse(value) {
/*Line 580 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Boolean.parse" />
/*Line 581 - 'MicrosoftAjax.debug.js' */    /// <param name="value" type="String"></param>
/*Line 582 - 'MicrosoftAjax.debug.js' */    /// <returns type="Boolean"></returns>
/*Line 583 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 584 - 'MicrosoftAjax.debug.js' */        {name: "value", type: String}
/*Line 585 - 'MicrosoftAjax.debug.js' */    ], false);
/*Line 586 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 587 - 'MicrosoftAjax.debug.js' */    var v = value.trim().toLowerCase();
/*Line 588 - 'MicrosoftAjax.debug.js' */    if (v === 'false') return false;
/*Line 589 - 'MicrosoftAjax.debug.js' */    if (v === 'true') return true;
/*Line 590 - 'MicrosoftAjax.debug.js' */    throw Error.argumentOutOfRange('value', value, Sys.Res.boolTrueOrFalse);
/*Line 591 - 'MicrosoftAjax.debug.js' */}
 
/*Line 593 - 'MicrosoftAjax.debug.js' */Date.__typeName = 'Date';
/*Line 594 - 'MicrosoftAjax.debug.js' */Date.__class = true;
 
/*Line 596 - 'MicrosoftAjax.debug.js' */Number.__typeName = 'Number';
/*Line 597 - 'MicrosoftAjax.debug.js' */Number.__class = true;
 
/*Line 599 - 'MicrosoftAjax.debug.js' */RegExp.__typeName = 'RegExp';
/*Line 600 - 'MicrosoftAjax.debug.js' */RegExp.__class = true;
 
/*Line 602 - 'MicrosoftAjax.debug.js' */if (!window) this.window = this;
/*Line 603 - 'MicrosoftAjax.debug.js' */window.Type = Function;
/*Line 604 - 'MicrosoftAjax.debug.js' */Type.__fullyQualifiedIdentifierRegExp = new RegExp("^[^.0-9 \\s|,;:&*=+\\-()\\[\\]{}^%#@!~\\n\\r\\t\\f\\\\]([^ \\s|,;:&*=+\\-()\\[\\]{}^%#@!~\\n\\r\\t\\f\\\\]*[^. \\s|,;:&*=+\\-()\\[\\]{}^%#@!~\\n\\r\\t\\f\\\\])?$", "i");
/*Line 605 - 'MicrosoftAjax.debug.js' */Type.__identifierRegExp = new RegExp("^[^.0-9 \\s|,;:&*=+\\-()\\[\\]{}^%#@!~\\n\\r\\t\\f\\\\][^. \\s|,;:&*=+\\-()\\[\\]{}^%#@!~\\n\\r\\t\\f\\\\]*$", "i");
/*Line 606 - 'MicrosoftAjax.debug.js' */Type.prototype.callBaseMethod = function Type$callBaseMethod(instance, name, baseArguments) {
/*Line 607 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Type.callBaseMethod" />
/*Line 608 - 'MicrosoftAjax.debug.js' */    /// <param name="instance"></param>
/*Line 609 - 'MicrosoftAjax.debug.js' */    /// <param name="name" type="String"></param>
/*Line 610 - 'MicrosoftAjax.debug.js' */    /// <param name="baseArguments" type="Array" optional="true" mayBeNull="true" elementMayBeNull="true"></param>
/*Line 611 - 'MicrosoftAjax.debug.js' */    /// <returns></returns>
/*Line 612 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 613 - 'MicrosoftAjax.debug.js' */        {name: "instance"},
/*Line 614 - 'MicrosoftAjax.debug.js' */        {name: "name", type: String},
/*Line 615 - 'MicrosoftAjax.debug.js' */        {name: "baseArguments", type: Array, mayBeNull: true, optional: true, elementMayBeNull: true}
/*Line 616 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 617 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 618 - 'MicrosoftAjax.debug.js' */    var baseMethod = Sys._getBaseMethod(this, instance, name);
/*Line 619 - 'MicrosoftAjax.debug.js' */    if (!baseMethod) throw Error.invalidOperation(String.format(Sys.Res.methodNotFound, name));
/*Line 620 - 'MicrosoftAjax.debug.js' */    if (!baseArguments) {
/*Line 621 - 'MicrosoftAjax.debug.js' */        return baseMethod.apply(instance);
/*Line 622 - 'MicrosoftAjax.debug.js' */    }
/*Line 623 - 'MicrosoftAjax.debug.js' */    else {
/*Line 624 - 'MicrosoftAjax.debug.js' */        return baseMethod.apply(instance, baseArguments);
/*Line 625 - 'MicrosoftAjax.debug.js' */    }
/*Line 626 - 'MicrosoftAjax.debug.js' */}
/*Line 627 - 'MicrosoftAjax.debug.js' */Type.prototype.getBaseMethod = function Type$getBaseMethod(instance, name) {
/*Line 628 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Type.getBaseMethod" />
/*Line 629 - 'MicrosoftAjax.debug.js' */    /// <param name="instance"></param>
/*Line 630 - 'MicrosoftAjax.debug.js' */    /// <param name="name" type="String"></param>
/*Line 631 - 'MicrosoftAjax.debug.js' */    /// <returns type="Function" mayBeNull="true"></returns>
/*Line 632 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 633 - 'MicrosoftAjax.debug.js' */        {name: "instance"},
/*Line 634 - 'MicrosoftAjax.debug.js' */        {name: "name", type: String}
/*Line 635 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 636 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 637 - 'MicrosoftAjax.debug.js' */    return Sys._getBaseMethod(this, instance, name);
/*Line 638 - 'MicrosoftAjax.debug.js' */}
/*Line 639 - 'MicrosoftAjax.debug.js' */Type.prototype.getBaseType = function Type$getBaseType() {
/*Line 640 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Type.getBaseType" />
/*Line 641 - 'MicrosoftAjax.debug.js' */    /// <returns type="Type" mayBeNull="true"></returns>
/*Line 642 - 'MicrosoftAjax.debug.js' */    if (arguments.length !== 0) throw Error.parameterCount();
/*Line 643 - 'MicrosoftAjax.debug.js' */    return (typeof(this.__baseType) === "undefined") ? null : this.__baseType;
/*Line 644 - 'MicrosoftAjax.debug.js' */}
/*Line 645 - 'MicrosoftAjax.debug.js' */Type.prototype.getInterfaces = function Type$getInterfaces() {
/*Line 646 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Type.getInterfaces" />
/*Line 647 - 'MicrosoftAjax.debug.js' */    /// <returns type="Array" elementType="Type" mayBeNull="false" elementMayBeNull="false"></returns>
/*Line 648 - 'MicrosoftAjax.debug.js' */    if (arguments.length !== 0) throw Error.parameterCount();
/*Line 649 - 'MicrosoftAjax.debug.js' */    var result = [];
/*Line 650 - 'MicrosoftAjax.debug.js' */    var type = this;
/*Line 651 - 'MicrosoftAjax.debug.js' */    while(type) {
/*Line 652 - 'MicrosoftAjax.debug.js' */        var interfaces = type.__interfaces;
/*Line 653 - 'MicrosoftAjax.debug.js' */        if (interfaces) {
/*Line 654 - 'MicrosoftAjax.debug.js' */            for (var i = 0, l = interfaces.length; i < l; i++) {
/*Line 655 - 'MicrosoftAjax.debug.js' */                var interfaceType = interfaces[i];
/*Line 656 - 'MicrosoftAjax.debug.js' */                if (!Array.contains(result, interfaceType)) {
/*Line 657 - 'MicrosoftAjax.debug.js' */                    result[result.length] = interfaceType;
/*Line 658 - 'MicrosoftAjax.debug.js' */                }
/*Line 659 - 'MicrosoftAjax.debug.js' */            }
/*Line 660 - 'MicrosoftAjax.debug.js' */        }
/*Line 661 - 'MicrosoftAjax.debug.js' */        type = type.__baseType;
/*Line 662 - 'MicrosoftAjax.debug.js' */    }
/*Line 663 - 'MicrosoftAjax.debug.js' */    return result;
/*Line 664 - 'MicrosoftAjax.debug.js' */}
/*Line 665 - 'MicrosoftAjax.debug.js' */Type.prototype.getName = function Type$getName() {
/*Line 666 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Type.getName" />
/*Line 667 - 'MicrosoftAjax.debug.js' */    /// <returns type="String"></returns>
/*Line 668 - 'MicrosoftAjax.debug.js' */    if (arguments.length !== 0) throw Error.parameterCount();
/*Line 669 - 'MicrosoftAjax.debug.js' */    return (typeof(this.__typeName) === "undefined") ? "" : this.__typeName;
/*Line 670 - 'MicrosoftAjax.debug.js' */}
/*Line 671 - 'MicrosoftAjax.debug.js' */Type.prototype.implementsInterface = function Type$implementsInterface(interfaceType) {
/*Line 672 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Type.implementsInterface" />
/*Line 673 - 'MicrosoftAjax.debug.js' */    /// <param name="interfaceType" type="Type"></param>
/*Line 674 - 'MicrosoftAjax.debug.js' */    /// <returns type="Boolean"></returns>
/*Line 675 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 676 - 'MicrosoftAjax.debug.js' */        {name: "interfaceType", type: Type}
/*Line 677 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 678 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 679 - 'MicrosoftAjax.debug.js' */    this.resolveInheritance();
/*Line 680 - 'MicrosoftAjax.debug.js' */    var interfaceName = interfaceType.getName();
/*Line 681 - 'MicrosoftAjax.debug.js' */    var cache = this.__interfaceCache;
/*Line 682 - 'MicrosoftAjax.debug.js' */    if (cache) {
/*Line 683 - 'MicrosoftAjax.debug.js' */        var cacheEntry = cache[interfaceName];
/*Line 684 - 'MicrosoftAjax.debug.js' */        if (typeof(cacheEntry) !== 'undefined') return cacheEntry;
/*Line 685 - 'MicrosoftAjax.debug.js' */    }
/*Line 686 - 'MicrosoftAjax.debug.js' */    else {
/*Line 687 - 'MicrosoftAjax.debug.js' */        cache = this.__interfaceCache = {};
/*Line 688 - 'MicrosoftAjax.debug.js' */    }
/*Line 689 - 'MicrosoftAjax.debug.js' */    var baseType = this;
/*Line 690 - 'MicrosoftAjax.debug.js' */    while (baseType) {
/*Line 691 - 'MicrosoftAjax.debug.js' */        var interfaces = baseType.__interfaces;
/*Line 692 - 'MicrosoftAjax.debug.js' */        if (interfaces) {
/*Line 693 - 'MicrosoftAjax.debug.js' */            if (Array.indexOf(interfaces, interfaceType) !== -1) {
/*Line 694 - 'MicrosoftAjax.debug.js' */                return cache[interfaceName] = true;
/*Line 695 - 'MicrosoftAjax.debug.js' */            }
/*Line 696 - 'MicrosoftAjax.debug.js' */        }
/*Line 697 - 'MicrosoftAjax.debug.js' */        baseType = baseType.__baseType;
/*Line 698 - 'MicrosoftAjax.debug.js' */    }
/*Line 699 - 'MicrosoftAjax.debug.js' */    return cache[interfaceName] = false;
/*Line 700 - 'MicrosoftAjax.debug.js' */}
/*Line 701 - 'MicrosoftAjax.debug.js' */Type.prototype.inheritsFrom = function Type$inheritsFrom(parentType) {
/*Line 702 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Type.inheritsFrom" />
/*Line 703 - 'MicrosoftAjax.debug.js' */    /// <param name="parentType" type="Type"></param>
/*Line 704 - 'MicrosoftAjax.debug.js' */    /// <returns type="Boolean"></returns>
/*Line 705 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 706 - 'MicrosoftAjax.debug.js' */        {name: "parentType", type: Type}
/*Line 707 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 708 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 709 - 'MicrosoftAjax.debug.js' */    this.resolveInheritance();
/*Line 710 - 'MicrosoftAjax.debug.js' */    var baseType = this.__baseType;
/*Line 711 - 'MicrosoftAjax.debug.js' */    while (baseType) {
/*Line 712 - 'MicrosoftAjax.debug.js' */        if (baseType === parentType) {
/*Line 713 - 'MicrosoftAjax.debug.js' */            return true;
/*Line 714 - 'MicrosoftAjax.debug.js' */        }
/*Line 715 - 'MicrosoftAjax.debug.js' */        baseType = baseType.__baseType;
/*Line 716 - 'MicrosoftAjax.debug.js' */    }
/*Line 717 - 'MicrosoftAjax.debug.js' */    return false;
/*Line 718 - 'MicrosoftAjax.debug.js' */}
/*Line 719 - 'MicrosoftAjax.debug.js' */Type.prototype.initializeBase = function Type$initializeBase(instance, baseArguments) {
/*Line 720 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Type.initializeBase" />
/*Line 721 - 'MicrosoftAjax.debug.js' */    /// <param name="instance"></param>
/*Line 722 - 'MicrosoftAjax.debug.js' */    /// <param name="baseArguments" type="Array" optional="true" mayBeNull="true" elementMayBeNull="true"></param>
/*Line 723 - 'MicrosoftAjax.debug.js' */    /// <returns></returns>
/*Line 724 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 725 - 'MicrosoftAjax.debug.js' */        {name: "instance"},
/*Line 726 - 'MicrosoftAjax.debug.js' */        {name: "baseArguments", type: Array, mayBeNull: true, optional: true, elementMayBeNull: true}
/*Line 727 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 728 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 729 - 'MicrosoftAjax.debug.js' */    if (!Sys._isInstanceOfType(this, instance)) throw Error.argumentType('instance', Object.getType(instance), this);
/*Line 730 - 'MicrosoftAjax.debug.js' */    this.resolveInheritance();
/*Line 731 - 'MicrosoftAjax.debug.js' */    if (this.__baseType) {
/*Line 732 - 'MicrosoftAjax.debug.js' */        if (!baseArguments) {
/*Line 733 - 'MicrosoftAjax.debug.js' */            this.__baseType.apply(instance);
/*Line 734 - 'MicrosoftAjax.debug.js' */        }
/*Line 735 - 'MicrosoftAjax.debug.js' */        else {
/*Line 736 - 'MicrosoftAjax.debug.js' */            this.__baseType.apply(instance, baseArguments);
/*Line 737 - 'MicrosoftAjax.debug.js' */        }
/*Line 738 - 'MicrosoftAjax.debug.js' */    }
/*Line 739 - 'MicrosoftAjax.debug.js' */    return instance;
/*Line 740 - 'MicrosoftAjax.debug.js' */}
/*Line 741 - 'MicrosoftAjax.debug.js' */Type.prototype.isImplementedBy = function Type$isImplementedBy(instance) {
/*Line 742 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Type.isImplementedBy" />
/*Line 743 - 'MicrosoftAjax.debug.js' */    /// <param name="instance" mayBeNull="true"></param>
/*Line 744 - 'MicrosoftAjax.debug.js' */    /// <returns type="Boolean"></returns>
/*Line 745 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 746 - 'MicrosoftAjax.debug.js' */        {name: "instance", mayBeNull: true}
/*Line 747 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 748 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 749 - 'MicrosoftAjax.debug.js' */    if (typeof(instance) === "undefined" || instance === null) return false;
/*Line 750 - 'MicrosoftAjax.debug.js' */    var instanceType = Object.getType(instance);
/*Line 751 - 'MicrosoftAjax.debug.js' */    return !!(instanceType.implementsInterface && instanceType.implementsInterface(this));
/*Line 752 - 'MicrosoftAjax.debug.js' */}
/*Line 753 - 'MicrosoftAjax.debug.js' */Type.prototype.isInstanceOfType = function Type$isInstanceOfType(instance) {
/*Line 754 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Type.isInstanceOfType" />
/*Line 755 - 'MicrosoftAjax.debug.js' */    /// <param name="instance" mayBeNull="true"></param>
/*Line 756 - 'MicrosoftAjax.debug.js' */    /// <returns type="Boolean"></returns>
/*Line 757 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 758 - 'MicrosoftAjax.debug.js' */        {name: "instance", mayBeNull: true}
/*Line 759 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 760 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 761 - 'MicrosoftAjax.debug.js' */    return Sys._isInstanceOfType(this, instance);
/*Line 762 - 'MicrosoftAjax.debug.js' */}
/*Line 763 - 'MicrosoftAjax.debug.js' */Type.prototype.registerClass = function Type$registerClass(typeName, baseType, interfaceTypes) {
/*Line 764 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Type.registerClass" />
/*Line 765 - 'MicrosoftAjax.debug.js' */    /// <param name="typeName" type="String"></param>
/*Line 766 - 'MicrosoftAjax.debug.js' */    /// <param name="baseType" type="Type" optional="true" mayBeNull="true"></param>
/*Line 767 - 'MicrosoftAjax.debug.js' */    /// <param name="interfaceTypes" parameterArray="true" type="Type"></param>
/*Line 768 - 'MicrosoftAjax.debug.js' */    /// <returns type="Type"></returns>
/*Line 769 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 770 - 'MicrosoftAjax.debug.js' */        {name: "typeName", type: String},
/*Line 771 - 'MicrosoftAjax.debug.js' */        {name: "baseType", type: Type, mayBeNull: true, optional: true},
/*Line 772 - 'MicrosoftAjax.debug.js' */        {name: "interfaceTypes", type: Type, parameterArray: true}
/*Line 773 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 774 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 775 - 'MicrosoftAjax.debug.js' */    if (!Type.__fullyQualifiedIdentifierRegExp.test(typeName)) throw Error.argument('typeName', Sys.Res.notATypeName);
/*Line 776 - 'MicrosoftAjax.debug.js' */    var parsedName;
/*Line 777 - 'MicrosoftAjax.debug.js' */    try {
/*Line 778 - 'MicrosoftAjax.debug.js' */        parsedName = eval(typeName);
/*Line 779 - 'MicrosoftAjax.debug.js' */    }
/*Line 780 - 'MicrosoftAjax.debug.js' */    catch(e) {
/*Line 781 - 'MicrosoftAjax.debug.js' */        throw Error.argument('typeName', Sys.Res.argumentTypeName);
/*Line 782 - 'MicrosoftAjax.debug.js' */    }
/*Line 783 - 'MicrosoftAjax.debug.js' */    if (parsedName !== this) throw Error.argument('typeName', Sys.Res.badTypeName);
/*Line 784 - 'MicrosoftAjax.debug.js' */    if (Sys.__registeredTypes[typeName]) throw Error.invalidOperation(String.format(Sys.Res.typeRegisteredTwice, typeName));
/*Line 785 - 'MicrosoftAjax.debug.js' */    if ((arguments.length > 1) && (typeof(baseType) === 'undefined')) throw Error.argumentUndefined('baseType');
/*Line 786 - 'MicrosoftAjax.debug.js' */    if (baseType && !baseType.__class) throw Error.argument('baseType', Sys.Res.baseNotAClass);
/*Line 787 - 'MicrosoftAjax.debug.js' */    this.prototype.constructor = this;
/*Line 788 - 'MicrosoftAjax.debug.js' */    this.__typeName = typeName;
/*Line 789 - 'MicrosoftAjax.debug.js' */    this.__class = true;
/*Line 790 - 'MicrosoftAjax.debug.js' */    if (baseType) {
/*Line 791 - 'MicrosoftAjax.debug.js' */        this.__baseType = baseType;
/*Line 792 - 'MicrosoftAjax.debug.js' */        this.__basePrototypePending = true;
/*Line 793 - 'MicrosoftAjax.debug.js' */    }
/*Line 794 - 'MicrosoftAjax.debug.js' */    Sys.__upperCaseTypes[typeName.toUpperCase()] = this;
/*Line 795 - 'MicrosoftAjax.debug.js' */    if (interfaceTypes) {
/*Line 796 - 'MicrosoftAjax.debug.js' */        this.__interfaces = [];
/*Line 797 - 'MicrosoftAjax.debug.js' */        this.resolveInheritance();
/*Line 798 - 'MicrosoftAjax.debug.js' */        for (var i = 2, l = arguments.length; i < l; i++) {
/*Line 799 - 'MicrosoftAjax.debug.js' */            var interfaceType = arguments[i];
/*Line 800 - 'MicrosoftAjax.debug.js' */            if (!interfaceType.__interface) throw Error.argument('interfaceTypes[' + (i - 2) + ']', Sys.Res.notAnInterface);
/*Line 801 - 'MicrosoftAjax.debug.js' */            for (var methodName in interfaceType.prototype) {
/*Line 802 - 'MicrosoftAjax.debug.js' */                var method = interfaceType.prototype[methodName];
/*Line 803 - 'MicrosoftAjax.debug.js' */                if (!this.prototype[methodName]) {
/*Line 804 - 'MicrosoftAjax.debug.js' */                    this.prototype[methodName] = method;
/*Line 805 - 'MicrosoftAjax.debug.js' */                }
/*Line 806 - 'MicrosoftAjax.debug.js' */            }
/*Line 807 - 'MicrosoftAjax.debug.js' */            this.__interfaces.push(interfaceType);
/*Line 808 - 'MicrosoftAjax.debug.js' */        }
/*Line 809 - 'MicrosoftAjax.debug.js' */    }
/*Line 810 - 'MicrosoftAjax.debug.js' */    Sys.__registeredTypes[typeName] = true;
/*Line 811 - 'MicrosoftAjax.debug.js' */    return this;
/*Line 812 - 'MicrosoftAjax.debug.js' */}
/*Line 813 - 'MicrosoftAjax.debug.js' */Type.prototype.registerInterface = function Type$registerInterface(typeName) {
/*Line 814 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Type.registerInterface" />
/*Line 815 - 'MicrosoftAjax.debug.js' */    /// <param name="typeName" type="String"></param>
/*Line 816 - 'MicrosoftAjax.debug.js' */    /// <returns type="Type"></returns>
/*Line 817 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 818 - 'MicrosoftAjax.debug.js' */        {name: "typeName", type: String}
/*Line 819 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 820 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 821 - 'MicrosoftAjax.debug.js' */    if (!Type.__fullyQualifiedIdentifierRegExp.test(typeName)) throw Error.argument('typeName', Sys.Res.notATypeName);
/*Line 822 - 'MicrosoftAjax.debug.js' */    var parsedName;
/*Line 823 - 'MicrosoftAjax.debug.js' */    try {
/*Line 824 - 'MicrosoftAjax.debug.js' */        parsedName = eval(typeName);
/*Line 825 - 'MicrosoftAjax.debug.js' */    }
/*Line 826 - 'MicrosoftAjax.debug.js' */    catch(e) {
/*Line 827 - 'MicrosoftAjax.debug.js' */        throw Error.argument('typeName', Sys.Res.argumentTypeName);
/*Line 828 - 'MicrosoftAjax.debug.js' */    }
/*Line 829 - 'MicrosoftAjax.debug.js' */    if (parsedName !== this) throw Error.argument('typeName', Sys.Res.badTypeName);
/*Line 830 - 'MicrosoftAjax.debug.js' */    if (Sys.__registeredTypes[typeName]) throw Error.invalidOperation(String.format(Sys.Res.typeRegisteredTwice, typeName));
/*Line 831 - 'MicrosoftAjax.debug.js' */    Sys.__upperCaseTypes[typeName.toUpperCase()] = this;
/*Line 832 - 'MicrosoftAjax.debug.js' */    this.prototype.constructor = this;
/*Line 833 - 'MicrosoftAjax.debug.js' */    this.__typeName = typeName;
/*Line 834 - 'MicrosoftAjax.debug.js' */    this.__interface = true;
/*Line 835 - 'MicrosoftAjax.debug.js' */    Sys.__registeredTypes[typeName] = true;
/*Line 836 - 'MicrosoftAjax.debug.js' */    return this;
/*Line 837 - 'MicrosoftAjax.debug.js' */}
/*Line 838 - 'MicrosoftAjax.debug.js' */Type.prototype.resolveInheritance = function Type$resolveInheritance() {
/*Line 839 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Type.resolveInheritance" />
/*Line 840 - 'MicrosoftAjax.debug.js' */    if (arguments.length !== 0) throw Error.parameterCount();
/*Line 841 - 'MicrosoftAjax.debug.js' */    if (this.__basePrototypePending) {
/*Line 842 - 'MicrosoftAjax.debug.js' */        var baseType = this.__baseType;
/*Line 843 - 'MicrosoftAjax.debug.js' */        baseType.resolveInheritance();
/*Line 844 - 'MicrosoftAjax.debug.js' */        for (var memberName in baseType.prototype) {
/*Line 845 - 'MicrosoftAjax.debug.js' */            var memberValue = baseType.prototype[memberName];
/*Line 846 - 'MicrosoftAjax.debug.js' */            if (!this.prototype[memberName]) {
/*Line 847 - 'MicrosoftAjax.debug.js' */                this.prototype[memberName] = memberValue;
/*Line 848 - 'MicrosoftAjax.debug.js' */            }
/*Line 849 - 'MicrosoftAjax.debug.js' */        }
/*Line 850 - 'MicrosoftAjax.debug.js' */        delete this.__basePrototypePending;
/*Line 851 - 'MicrosoftAjax.debug.js' */    }
/*Line 852 - 'MicrosoftAjax.debug.js' */}
/*Line 853 - 'MicrosoftAjax.debug.js' */Type.getRootNamespaces = function Type$getRootNamespaces() {
/*Line 854 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Type.getRootNamespaces" />
/*Line 855 - 'MicrosoftAjax.debug.js' */    /// <returns type="Array"></returns>
/*Line 856 - 'MicrosoftAjax.debug.js' */    if (arguments.length !== 0) throw Error.parameterCount();
/*Line 857 - 'MicrosoftAjax.debug.js' */    return Array.clone(Sys.__rootNamespaces);
/*Line 858 - 'MicrosoftAjax.debug.js' */}
/*Line 859 - 'MicrosoftAjax.debug.js' */Type.isClass = function Type$isClass(type) {
/*Line 860 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Type.isClass" />
/*Line 861 - 'MicrosoftAjax.debug.js' */    /// <param name="type" mayBeNull="true"></param>
/*Line 862 - 'MicrosoftAjax.debug.js' */    /// <returns type="Boolean"></returns>
/*Line 863 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 864 - 'MicrosoftAjax.debug.js' */        {name: "type", mayBeNull: true}
/*Line 865 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 866 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 867 - 'MicrosoftAjax.debug.js' */    if ((typeof(type) === 'undefined') || (type === null)) return false;
/*Line 868 - 'MicrosoftAjax.debug.js' */    return !!type.__class;
/*Line 869 - 'MicrosoftAjax.debug.js' */}
/*Line 870 - 'MicrosoftAjax.debug.js' */Type.isInterface = function Type$isInterface(type) {
/*Line 871 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Type.isInterface" />
/*Line 872 - 'MicrosoftAjax.debug.js' */    /// <param name="type" mayBeNull="true"></param>
/*Line 873 - 'MicrosoftAjax.debug.js' */    /// <returns type="Boolean"></returns>
/*Line 874 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 875 - 'MicrosoftAjax.debug.js' */        {name: "type", mayBeNull: true}
/*Line 876 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 877 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 878 - 'MicrosoftAjax.debug.js' */    if ((typeof(type) === 'undefined') || (type === null)) return false;
/*Line 879 - 'MicrosoftAjax.debug.js' */    return !!type.__interface;
/*Line 880 - 'MicrosoftAjax.debug.js' */}
/*Line 881 - 'MicrosoftAjax.debug.js' */Type.isNamespace = function Type$isNamespace(object) {
/*Line 882 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Type.isNamespace" />
/*Line 883 - 'MicrosoftAjax.debug.js' */    /// <param name="object" mayBeNull="true"></param>
/*Line 884 - 'MicrosoftAjax.debug.js' */    /// <returns type="Boolean"></returns>
/*Line 885 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 886 - 'MicrosoftAjax.debug.js' */        {name: "object", mayBeNull: true}
/*Line 887 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 888 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 889 - 'MicrosoftAjax.debug.js' */    if ((typeof(object) === 'undefined') || (object === null)) return false;
/*Line 890 - 'MicrosoftAjax.debug.js' */    return !!object.__namespace;
/*Line 891 - 'MicrosoftAjax.debug.js' */}
/*Line 892 - 'MicrosoftAjax.debug.js' */Type.parse = function Type$parse(typeName, ns) {
/*Line 893 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Type.parse" />
/*Line 894 - 'MicrosoftAjax.debug.js' */    /// <param name="typeName" type="String" mayBeNull="true"></param>
/*Line 895 - 'MicrosoftAjax.debug.js' */    /// <param name="ns" optional="true" mayBeNull="true"></param>
/*Line 896 - 'MicrosoftAjax.debug.js' */    /// <returns type="Type" mayBeNull="true"></returns>
/*Line 897 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 898 - 'MicrosoftAjax.debug.js' */        {name: "typeName", type: String, mayBeNull: true},
/*Line 899 - 'MicrosoftAjax.debug.js' */        {name: "ns", mayBeNull: true, optional: true}
/*Line 900 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 901 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 902 - 'MicrosoftAjax.debug.js' */    var fn;
/*Line 903 - 'MicrosoftAjax.debug.js' */    if (ns) {
/*Line 904 - 'MicrosoftAjax.debug.js' */        fn = Sys.__upperCaseTypes[ns.getName().toUpperCase() + '.' + typeName.toUpperCase()];
/*Line 905 - 'MicrosoftAjax.debug.js' */        return fn || null;
/*Line 906 - 'MicrosoftAjax.debug.js' */    }
/*Line 907 - 'MicrosoftAjax.debug.js' */    if (!typeName) return null;
/*Line 908 - 'MicrosoftAjax.debug.js' */    if (!Type.__htClasses) {
/*Line 909 - 'MicrosoftAjax.debug.js' */        Type.__htClasses = {};
/*Line 910 - 'MicrosoftAjax.debug.js' */    }
/*Line 911 - 'MicrosoftAjax.debug.js' */    fn = Type.__htClasses[typeName];
/*Line 912 - 'MicrosoftAjax.debug.js' */    if (!fn) {
/*Line 913 - 'MicrosoftAjax.debug.js' */        fn = eval(typeName);
/*Line 914 - 'MicrosoftAjax.debug.js' */        if (typeof(fn) !== 'function') throw Error.argument('typeName', Sys.Res.notATypeName);
/*Line 915 - 'MicrosoftAjax.debug.js' */        Type.__htClasses[typeName] = fn;
/*Line 916 - 'MicrosoftAjax.debug.js' */    }
/*Line 917 - 'MicrosoftAjax.debug.js' */    return fn;
/*Line 918 - 'MicrosoftAjax.debug.js' */}
/*Line 919 - 'MicrosoftAjax.debug.js' */Type.registerNamespace = function Type$registerNamespace(namespacePath) {
/*Line 920 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Type.registerNamespace" />
/*Line 921 - 'MicrosoftAjax.debug.js' */    /// <param name="namespacePath" type="String"></param>
/*Line 922 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 923 - 'MicrosoftAjax.debug.js' */        {name: "namespacePath", type: String}
/*Line 924 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 925 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 926 - 'MicrosoftAjax.debug.js' */    Type._registerNamespace(namespacePath);
/*Line 927 - 'MicrosoftAjax.debug.js' */}
/*Line 928 - 'MicrosoftAjax.debug.js' */Type._registerNamespace = function Type$_registerNamespace(namespacePath) {
/*Line 929 - 'MicrosoftAjax.debug.js' */    if (!Type.__fullyQualifiedIdentifierRegExp.test(namespacePath)) throw Error.argument('namespacePath', Sys.Res.invalidNameSpace);
/*Line 930 - 'MicrosoftAjax.debug.js' */    var rootObject = window;
/*Line 931 - 'MicrosoftAjax.debug.js' */    var namespaceParts = namespacePath.split('.');
/*Line 932 - 'MicrosoftAjax.debug.js' */    for (var i = 0; i < namespaceParts.length; i++) {
/*Line 933 - 'MicrosoftAjax.debug.js' */        var currentPart = namespaceParts[i];
/*Line 934 - 'MicrosoftAjax.debug.js' */        var ns = rootObject[currentPart];
/*Line 935 - 'MicrosoftAjax.debug.js' */        var nsType = typeof(ns);
/*Line 936 - 'MicrosoftAjax.debug.js' */        if ((nsType !== "undefined") && (ns !== null)) {
/*Line 937 - 'MicrosoftAjax.debug.js' */            if (nsType === "function") {
/*Line 938 - 'MicrosoftAjax.debug.js' */                throw Error.invalidOperation(String.format(Sys.Res.namespaceContainsClass, namespaceParts.splice(0, i + 1).join('.')));
/*Line 939 - 'MicrosoftAjax.debug.js' */            }
/*Line 940 - 'MicrosoftAjax.debug.js' */            if ((typeof(ns) !== "object") || (ns instanceof Array)) {
/*Line 941 - 'MicrosoftAjax.debug.js' */                throw Error.invalidOperation(String.format(Sys.Res.namespaceContainsNonObject, namespaceParts.splice(0, i + 1).join('.')));
/*Line 942 - 'MicrosoftAjax.debug.js' */            }
/*Line 943 - 'MicrosoftAjax.debug.js' */        }
/*Line 944 - 'MicrosoftAjax.debug.js' */        if (!ns) {
/*Line 945 - 'MicrosoftAjax.debug.js' */            ns = rootObject[currentPart] = {};
/*Line 946 - 'MicrosoftAjax.debug.js' */        }
/*Line 947 - 'MicrosoftAjax.debug.js' */        if (!ns.__namespace) {
/*Line 948 - 'MicrosoftAjax.debug.js' */            if ((i === 0) && (namespacePath !== "Sys")) {
/*Line 949 - 'MicrosoftAjax.debug.js' */                Sys.__rootNamespaces[Sys.__rootNamespaces.length] = ns;
/*Line 950 - 'MicrosoftAjax.debug.js' */            }
/*Line 951 - 'MicrosoftAjax.debug.js' */            ns.__namespace = true;
/*Line 952 - 'MicrosoftAjax.debug.js' */            ns.__typeName = namespaceParts.slice(0, i + 1).join('.');
/*Line 953 - 'MicrosoftAjax.debug.js' */            var parsedName;
/*Line 954 - 'MicrosoftAjax.debug.js' */            try {
/*Line 955 - 'MicrosoftAjax.debug.js' */                parsedName = eval(ns.__typeName);
/*Line 956 - 'MicrosoftAjax.debug.js' */            }
/*Line 957 - 'MicrosoftAjax.debug.js' */            catch(e) {
/*Line 958 - 'MicrosoftAjax.debug.js' */                parsedName = null;
/*Line 959 - 'MicrosoftAjax.debug.js' */            }
/*Line 960 - 'MicrosoftAjax.debug.js' */            if (parsedName !== ns) {
/*Line 961 - 'MicrosoftAjax.debug.js' */                delete rootObject[currentPart];
/*Line 962 - 'MicrosoftAjax.debug.js' */                throw Error.argument('namespacePath', Sys.Res.invalidNameSpace);
/*Line 963 - 'MicrosoftAjax.debug.js' */            }
/*Line 964 - 'MicrosoftAjax.debug.js' */            ns.getName = function ns$getName() {return this.__typeName;}
/*Line 965 - 'MicrosoftAjax.debug.js' */        }
/*Line 966 - 'MicrosoftAjax.debug.js' */        rootObject = ns;
/*Line 967 - 'MicrosoftAjax.debug.js' */    }
/*Line 968 - 'MicrosoftAjax.debug.js' */}
/*Line 969 - 'MicrosoftAjax.debug.js' */Type._checkDependency = function Type$_checkDependency(dependency, featureName) {
/*Line 970 - 'MicrosoftAjax.debug.js' */    var scripts = Type._registerScript._scripts, isDependent = (scripts ? (!!scripts[dependency]) : false);
/*Line 971 - 'MicrosoftAjax.debug.js' */    if ((typeof(featureName) !== 'undefined') && !isDependent) {
/*Line 972 - 'MicrosoftAjax.debug.js' */        throw Error.invalidOperation(String.format(Sys.Res.requiredScriptReferenceNotIncluded, 
/*Line 973 - 'MicrosoftAjax.debug.js' */        featureName, dependency));
/*Line 974 - 'MicrosoftAjax.debug.js' */    }
/*Line 975 - 'MicrosoftAjax.debug.js' */    return isDependent;
/*Line 976 - 'MicrosoftAjax.debug.js' */}
/*Line 977 - 'MicrosoftAjax.debug.js' */Type._registerScript = function Type$_registerScript(scriptName, dependencies) {
/*Line 978 - 'MicrosoftAjax.debug.js' */    var scripts = Type._registerScript._scripts;
/*Line 979 - 'MicrosoftAjax.debug.js' */    if (!scripts) {
/*Line 980 - 'MicrosoftAjax.debug.js' */        Type._registerScript._scripts = scripts = {};
/*Line 981 - 'MicrosoftAjax.debug.js' */    }
/*Line 982 - 'MicrosoftAjax.debug.js' */    if (scripts[scriptName]) {
/*Line 983 - 'MicrosoftAjax.debug.js' */        throw Error.invalidOperation(String.format(Sys.Res.scriptAlreadyLoaded, scriptName));
/*Line 984 - 'MicrosoftAjax.debug.js' */    }
/*Line 985 - 'MicrosoftAjax.debug.js' */    scripts[scriptName] = true;
/*Line 986 - 'MicrosoftAjax.debug.js' */    if (dependencies) {
/*Line 987 - 'MicrosoftAjax.debug.js' */        for (var i = 0, l = dependencies.length; i < l; i++) {
/*Line 988 - 'MicrosoftAjax.debug.js' */            var dependency = dependencies[i];
/*Line 989 - 'MicrosoftAjax.debug.js' */            if (!Type._checkDependency(dependency)) {
/*Line 990 - 'MicrosoftAjax.debug.js' */                throw Error.invalidOperation(String.format(Sys.Res.scriptDependencyNotFound, scriptName, dependency));
/*Line 991 - 'MicrosoftAjax.debug.js' */            }
/*Line 992 - 'MicrosoftAjax.debug.js' */        }
/*Line 993 - 'MicrosoftAjax.debug.js' */    }
/*Line 994 - 'MicrosoftAjax.debug.js' */}
/*Line 995 - 'MicrosoftAjax.debug.js' */Type._registerNamespace("Sys");
/*Line 996 - 'MicrosoftAjax.debug.js' */Sys.__upperCaseTypes = {};
/*Line 997 - 'MicrosoftAjax.debug.js' */Sys.__rootNamespaces = [Sys];
/*Line 998 - 'MicrosoftAjax.debug.js' */Sys.__registeredTypes = {};
/*Line 999 - 'MicrosoftAjax.debug.js' */Sys._isInstanceOfType = function Sys$_isInstanceOfType(type, instance) {
/*Line 1000 - 'MicrosoftAjax.debug.js' */    if (typeof(instance) === "undefined" || instance === null) return false;
/*Line 1001 - 'MicrosoftAjax.debug.js' */    if (instance instanceof type) return true;
/*Line 1002 - 'MicrosoftAjax.debug.js' */    var instanceType = Object.getType(instance);
/*Line 1003 - 'MicrosoftAjax.debug.js' */    return !!(instanceType === type) ||
/*Line 1004 - 'MicrosoftAjax.debug.js' */           (instanceType.inheritsFrom && instanceType.inheritsFrom(type)) ||
/*Line 1005 - 'MicrosoftAjax.debug.js' */           (instanceType.implementsInterface && instanceType.implementsInterface(type));
/*Line 1006 - 'MicrosoftAjax.debug.js' */}
/*Line 1007 - 'MicrosoftAjax.debug.js' */Sys._getBaseMethod = function Sys$_getBaseMethod(type, instance, name) {
/*Line 1008 - 'MicrosoftAjax.debug.js' */    if (!Sys._isInstanceOfType(type, instance)) throw Error.argumentType('instance', Object.getType(instance), type);
/*Line 1009 - 'MicrosoftAjax.debug.js' */    var baseType = type.getBaseType();
/*Line 1010 - 'MicrosoftAjax.debug.js' */    if (baseType) {
/*Line 1011 - 'MicrosoftAjax.debug.js' */        var baseMethod = baseType.prototype[name];
/*Line 1012 - 'MicrosoftAjax.debug.js' */        return (baseMethod instanceof Function) ? baseMethod : null;
/*Line 1013 - 'MicrosoftAjax.debug.js' */    }
/*Line 1014 - 'MicrosoftAjax.debug.js' */    return null;
/*Line 1015 - 'MicrosoftAjax.debug.js' */}
/*Line 1016 - 'MicrosoftAjax.debug.js' */Sys._isDomElement = function Sys$_isDomElement(obj) {
/*Line 1017 - 'MicrosoftAjax.debug.js' */    var val = false;
/*Line 1018 - 'MicrosoftAjax.debug.js' */    if (typeof (obj.nodeType) !== 'number') {
/*Line 1019 - 'MicrosoftAjax.debug.js' */        var doc = obj.ownerDocument || obj.document || obj;
/*Line 1020 - 'MicrosoftAjax.debug.js' */        if (doc != obj) {
/*Line 1021 - 'MicrosoftAjax.debug.js' */            var w = doc.defaultView || doc.parentWindow;
/*Line 1022 - 'MicrosoftAjax.debug.js' */            val = (w != obj);
/*Line 1023 - 'MicrosoftAjax.debug.js' */        }
/*Line 1024 - 'MicrosoftAjax.debug.js' */        else {
/*Line 1025 - 'MicrosoftAjax.debug.js' */            val = (typeof (doc.body) === 'undefined');
/*Line 1026 - 'MicrosoftAjax.debug.js' */        }
/*Line 1027 - 'MicrosoftAjax.debug.js' */    }
/*Line 1028 - 'MicrosoftAjax.debug.js' */    return !val;
/*Line 1029 - 'MicrosoftAjax.debug.js' */}
 
/*Line 1031 - 'MicrosoftAjax.debug.js' */Array.__typeName = 'Array';
/*Line 1032 - 'MicrosoftAjax.debug.js' */Array.__class = true;
/*Line 1033 - 'MicrosoftAjax.debug.js' */Array.add = Array.enqueue = function Array$enqueue(array, item) {
/*Line 1034 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Array.enqueue" />
/*Line 1035 - 'MicrosoftAjax.debug.js' */    /// <param name="array" type="Array" elementMayBeNull="true"></param>
/*Line 1036 - 'MicrosoftAjax.debug.js' */    /// <param name="item" mayBeNull="true"></param>
/*Line 1037 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1038 - 'MicrosoftAjax.debug.js' */        {name: "array", type: Array, elementMayBeNull: true},
/*Line 1039 - 'MicrosoftAjax.debug.js' */        {name: "item", mayBeNull: true}
/*Line 1040 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1041 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1042 - 'MicrosoftAjax.debug.js' */    array[array.length] = item;
/*Line 1043 - 'MicrosoftAjax.debug.js' */}
/*Line 1044 - 'MicrosoftAjax.debug.js' */Array.addRange = function Array$addRange(array, items) {
/*Line 1045 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Array.addRange" />
/*Line 1046 - 'MicrosoftAjax.debug.js' */    /// <param name="array" type="Array" elementMayBeNull="true"></param>
/*Line 1047 - 'MicrosoftAjax.debug.js' */    /// <param name="items" type="Array" elementMayBeNull="true"></param>
/*Line 1048 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1049 - 'MicrosoftAjax.debug.js' */        {name: "array", type: Array, elementMayBeNull: true},
/*Line 1050 - 'MicrosoftAjax.debug.js' */        {name: "items", type: Array, elementMayBeNull: true}
/*Line 1051 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1052 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1053 - 'MicrosoftAjax.debug.js' */    array.push.apply(array, items);
/*Line 1054 - 'MicrosoftAjax.debug.js' */}
/*Line 1055 - 'MicrosoftAjax.debug.js' */Array.clear = function Array$clear(array) {
/*Line 1056 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Array.clear" />
/*Line 1057 - 'MicrosoftAjax.debug.js' */    /// <param name="array" type="Array" elementMayBeNull="true"></param>
/*Line 1058 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1059 - 'MicrosoftAjax.debug.js' */        {name: "array", type: Array, elementMayBeNull: true}
/*Line 1060 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1061 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1062 - 'MicrosoftAjax.debug.js' */    array.length = 0;
/*Line 1063 - 'MicrosoftAjax.debug.js' */}
/*Line 1064 - 'MicrosoftAjax.debug.js' */Array.clone = function Array$clone(array) {
/*Line 1065 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Array.clone" />
/*Line 1066 - 'MicrosoftAjax.debug.js' */    /// <param name="array" type="Array" elementMayBeNull="true"></param>
/*Line 1067 - 'MicrosoftAjax.debug.js' */    /// <returns type="Array" elementMayBeNull="true"></returns>
/*Line 1068 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1069 - 'MicrosoftAjax.debug.js' */        {name: "array", type: Array, elementMayBeNull: true}
/*Line 1070 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1071 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1072 - 'MicrosoftAjax.debug.js' */    if (array.length === 1) {
/*Line 1073 - 'MicrosoftAjax.debug.js' */        return [array[0]];
/*Line 1074 - 'MicrosoftAjax.debug.js' */    }
/*Line 1075 - 'MicrosoftAjax.debug.js' */    else {
/*Line 1076 - 'MicrosoftAjax.debug.js' */        return Array.apply(null, array);
/*Line 1077 - 'MicrosoftAjax.debug.js' */    }
/*Line 1078 - 'MicrosoftAjax.debug.js' */}
/*Line 1079 - 'MicrosoftAjax.debug.js' */Array.contains = function Array$contains(array, item) {
/*Line 1080 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Array.contains" />
/*Line 1081 - 'MicrosoftAjax.debug.js' */    /// <param name="array" type="Array" elementMayBeNull="true"></param>
/*Line 1082 - 'MicrosoftAjax.debug.js' */    /// <param name="item" mayBeNull="true"></param>
/*Line 1083 - 'MicrosoftAjax.debug.js' */    /// <returns type="Boolean"></returns>
/*Line 1084 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1085 - 'MicrosoftAjax.debug.js' */        {name: "array", type: Array, elementMayBeNull: true},
/*Line 1086 - 'MicrosoftAjax.debug.js' */        {name: "item", mayBeNull: true}
/*Line 1087 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1088 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1089 - 'MicrosoftAjax.debug.js' */    return (Sys._indexOf(array, item) >= 0);
/*Line 1090 - 'MicrosoftAjax.debug.js' */}
/*Line 1091 - 'MicrosoftAjax.debug.js' */Array.dequeue = function Array$dequeue(array) {
/*Line 1092 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Array.dequeue" />
/*Line 1093 - 'MicrosoftAjax.debug.js' */    /// <param name="array" type="Array" elementMayBeNull="true"></param>
/*Line 1094 - 'MicrosoftAjax.debug.js' */    /// <returns mayBeNull="true"></returns>
/*Line 1095 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1096 - 'MicrosoftAjax.debug.js' */        {name: "array", type: Array, elementMayBeNull: true}
/*Line 1097 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1098 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1099 - 'MicrosoftAjax.debug.js' */    return array.shift();
/*Line 1100 - 'MicrosoftAjax.debug.js' */}
/*Line 1101 - 'MicrosoftAjax.debug.js' */Array.forEach = function Array$forEach(array, method, instance) {
/*Line 1102 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Array.forEach" />
/*Line 1103 - 'MicrosoftAjax.debug.js' */    /// <param name="array" type="Array" elementMayBeNull="true"></param>
/*Line 1104 - 'MicrosoftAjax.debug.js' */    /// <param name="method" type="Function"></param>
/*Line 1105 - 'MicrosoftAjax.debug.js' */    /// <param name="instance" optional="true" mayBeNull="true"></param>
/*Line 1106 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1107 - 'MicrosoftAjax.debug.js' */        {name: "array", type: Array, elementMayBeNull: true},
/*Line 1108 - 'MicrosoftAjax.debug.js' */        {name: "method", type: Function},
/*Line 1109 - 'MicrosoftAjax.debug.js' */        {name: "instance", mayBeNull: true, optional: true}
/*Line 1110 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1111 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1112 - 'MicrosoftAjax.debug.js' */    for (var i = 0, l = array.length; i < l; i++) {
/*Line 1113 - 'MicrosoftAjax.debug.js' */        var elt = array[i];
/*Line 1114 - 'MicrosoftAjax.debug.js' */        if (typeof(elt) !== 'undefined') method.call(instance, elt, i, array);
/*Line 1115 - 'MicrosoftAjax.debug.js' */    }
/*Line 1116 - 'MicrosoftAjax.debug.js' */}
/*Line 1117 - 'MicrosoftAjax.debug.js' */Array.indexOf = function Array$indexOf(array, item, start) {
/*Line 1118 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Array.indexOf" />
/*Line 1119 - 'MicrosoftAjax.debug.js' */    /// <param name="array" type="Array" elementMayBeNull="true"></param>
/*Line 1120 - 'MicrosoftAjax.debug.js' */    /// <param name="item" optional="true" mayBeNull="true"></param>
/*Line 1121 - 'MicrosoftAjax.debug.js' */    /// <param name="start" optional="true" mayBeNull="true"></param>
/*Line 1122 - 'MicrosoftAjax.debug.js' */    /// <returns type="Number"></returns>
/*Line 1123 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1124 - 'MicrosoftAjax.debug.js' */        {name: "array", type: Array, elementMayBeNull: true},
/*Line 1125 - 'MicrosoftAjax.debug.js' */        {name: "item", mayBeNull: true, optional: true},
/*Line 1126 - 'MicrosoftAjax.debug.js' */        {name: "start", mayBeNull: true, optional: true}
/*Line 1127 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1128 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1129 - 'MicrosoftAjax.debug.js' */    return Sys._indexOf(array, item, start);
/*Line 1130 - 'MicrosoftAjax.debug.js' */}
/*Line 1131 - 'MicrosoftAjax.debug.js' */Array.insert = function Array$insert(array, index, item) {
/*Line 1132 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Array.insert" />
/*Line 1133 - 'MicrosoftAjax.debug.js' */    /// <param name="array" type="Array" elementMayBeNull="true"></param>
/*Line 1134 - 'MicrosoftAjax.debug.js' */    /// <param name="index" mayBeNull="true"></param>
/*Line 1135 - 'MicrosoftAjax.debug.js' */    /// <param name="item" mayBeNull="true"></param>
/*Line 1136 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1137 - 'MicrosoftAjax.debug.js' */        {name: "array", type: Array, elementMayBeNull: true},
/*Line 1138 - 'MicrosoftAjax.debug.js' */        {name: "index", mayBeNull: true},
/*Line 1139 - 'MicrosoftAjax.debug.js' */        {name: "item", mayBeNull: true}
/*Line 1140 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1141 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1142 - 'MicrosoftAjax.debug.js' */    array.splice(index, 0, item);
/*Line 1143 - 'MicrosoftAjax.debug.js' */}
/*Line 1144 - 'MicrosoftAjax.debug.js' */Array.parse = function Array$parse(value) {
/*Line 1145 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Array.parse" />
/*Line 1146 - 'MicrosoftAjax.debug.js' */    /// <param name="value" type="String" mayBeNull="true"></param>
/*Line 1147 - 'MicrosoftAjax.debug.js' */    /// <returns type="Array" elementMayBeNull="true"></returns>
/*Line 1148 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1149 - 'MicrosoftAjax.debug.js' */        {name: "value", type: String, mayBeNull: true}
/*Line 1150 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1151 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1152 - 'MicrosoftAjax.debug.js' */    if (!value) return [];
/*Line 1153 - 'MicrosoftAjax.debug.js' */    var v = eval(value);
/*Line 1154 - 'MicrosoftAjax.debug.js' */    if (!Array.isInstanceOfType(v)) throw Error.argument('value', Sys.Res.arrayParseBadFormat);
/*Line 1155 - 'MicrosoftAjax.debug.js' */    return v;
/*Line 1156 - 'MicrosoftAjax.debug.js' */}
/*Line 1157 - 'MicrosoftAjax.debug.js' */Array.remove = function Array$remove(array, item) {
/*Line 1158 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Array.remove" />
/*Line 1159 - 'MicrosoftAjax.debug.js' */    /// <param name="array" type="Array" elementMayBeNull="true"></param>
/*Line 1160 - 'MicrosoftAjax.debug.js' */    /// <param name="item" mayBeNull="true"></param>
/*Line 1161 - 'MicrosoftAjax.debug.js' */    /// <returns type="Boolean"></returns>
/*Line 1162 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1163 - 'MicrosoftAjax.debug.js' */        {name: "array", type: Array, elementMayBeNull: true},
/*Line 1164 - 'MicrosoftAjax.debug.js' */        {name: "item", mayBeNull: true}
/*Line 1165 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1166 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1167 - 'MicrosoftAjax.debug.js' */    var index = Sys._indexOf(array, item);
/*Line 1168 - 'MicrosoftAjax.debug.js' */    if (index >= 0) {
/*Line 1169 - 'MicrosoftAjax.debug.js' */        array.splice(index, 1);
/*Line 1170 - 'MicrosoftAjax.debug.js' */    }
/*Line 1171 - 'MicrosoftAjax.debug.js' */    return (index >= 0);
/*Line 1172 - 'MicrosoftAjax.debug.js' */}
/*Line 1173 - 'MicrosoftAjax.debug.js' */Array.removeAt = function Array$removeAt(array, index) {
/*Line 1174 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Array.removeAt" />
/*Line 1175 - 'MicrosoftAjax.debug.js' */    /// <param name="array" type="Array" elementMayBeNull="true"></param>
/*Line 1176 - 'MicrosoftAjax.debug.js' */    /// <param name="index" mayBeNull="true"></param>
/*Line 1177 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1178 - 'MicrosoftAjax.debug.js' */        {name: "array", type: Array, elementMayBeNull: true},
/*Line 1179 - 'MicrosoftAjax.debug.js' */        {name: "index", mayBeNull: true}
/*Line 1180 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1181 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1182 - 'MicrosoftAjax.debug.js' */    array.splice(index, 1);
/*Line 1183 - 'MicrosoftAjax.debug.js' */}
/*Line 1184 - 'MicrosoftAjax.debug.js' */Sys._indexOf = function Sys$_indexOf(array, item, start) {
/*Line 1185 - 'MicrosoftAjax.debug.js' */    if (typeof(item) === "undefined") return -1;
/*Line 1186 - 'MicrosoftAjax.debug.js' */    var length = array.length;
/*Line 1187 - 'MicrosoftAjax.debug.js' */    if (length !== 0) {
/*Line 1188 - 'MicrosoftAjax.debug.js' */        start = start - 0;
/*Line 1189 - 'MicrosoftAjax.debug.js' */        if (isNaN(start)) {
/*Line 1190 - 'MicrosoftAjax.debug.js' */            start = 0;
/*Line 1191 - 'MicrosoftAjax.debug.js' */        }
/*Line 1192 - 'MicrosoftAjax.debug.js' */        else {
/*Line 1193 - 'MicrosoftAjax.debug.js' */            if (isFinite(start)) {
/*Line 1194 - 'MicrosoftAjax.debug.js' */                start = start - (start % 1);
/*Line 1195 - 'MicrosoftAjax.debug.js' */            }
/*Line 1196 - 'MicrosoftAjax.debug.js' */            if (start < 0) {
/*Line 1197 - 'MicrosoftAjax.debug.js' */                start = Math.max(0, length + start);
/*Line 1198 - 'MicrosoftAjax.debug.js' */            }
/*Line 1199 - 'MicrosoftAjax.debug.js' */        }
/*Line 1200 - 'MicrosoftAjax.debug.js' */        for (var i = start; i < length; i++) {
/*Line 1201 - 'MicrosoftAjax.debug.js' */            if ((typeof(array[i]) !== "undefined") && (array[i] === item)) {
/*Line 1202 - 'MicrosoftAjax.debug.js' */                return i;
/*Line 1203 - 'MicrosoftAjax.debug.js' */            }
/*Line 1204 - 'MicrosoftAjax.debug.js' */        }
/*Line 1205 - 'MicrosoftAjax.debug.js' */    }
/*Line 1206 - 'MicrosoftAjax.debug.js' */    return -1;
/*Line 1207 - 'MicrosoftAjax.debug.js' */}
/*Line 1208 - 'MicrosoftAjax.debug.js' */Type._registerScript._scripts = {
/*Line 1209 - 'MicrosoftAjax.debug.js' */	"MicrosoftAjaxCore.js": true,
/*Line 1210 - 'MicrosoftAjax.debug.js' */	"MicrosoftAjaxGlobalization.js": true,
/*Line 1211 - 'MicrosoftAjax.debug.js' */	"MicrosoftAjaxSerialization.js": true,
/*Line 1212 - 'MicrosoftAjax.debug.js' */	"MicrosoftAjaxComponentModel.js": true,
/*Line 1213 - 'MicrosoftAjax.debug.js' */	"MicrosoftAjaxHistory.js": true,
/*Line 1214 - 'MicrosoftAjax.debug.js' */	"MicrosoftAjaxNetwork.js" : true,
/*Line 1215 - 'MicrosoftAjax.debug.js' */	"MicrosoftAjaxWebServices.js": true };
 
/*Line 1217 - 'MicrosoftAjax.debug.js' */Sys.IDisposable = function Sys$IDisposable() {
/*Line 1218 - 'MicrosoftAjax.debug.js' */    throw Error.notImplemented();
/*Line 1219 - 'MicrosoftAjax.debug.js' */}
/*Line 1220 - 'MicrosoftAjax.debug.js' */    function Sys$IDisposable$dispose() {
/*Line 1221 - 'MicrosoftAjax.debug.js' */        throw Error.notImplemented();
/*Line 1222 - 'MicrosoftAjax.debug.js' */    }
/*Line 1223 - 'MicrosoftAjax.debug.js' */Sys.IDisposable.prototype = {
/*Line 1224 - 'MicrosoftAjax.debug.js' */    dispose: Sys$IDisposable$dispose
/*Line 1225 - 'MicrosoftAjax.debug.js' */}
/*Line 1226 - 'MicrosoftAjax.debug.js' */Sys.IDisposable.registerInterface('Sys.IDisposable');
 
/*Line 1228 - 'MicrosoftAjax.debug.js' */Sys.StringBuilder = function Sys$StringBuilder(initialText) {
/*Line 1229 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.StringBuilder.#ctor" />
/*Line 1230 - 'MicrosoftAjax.debug.js' */    /// <param name="initialText" optional="true" mayBeNull="true"></param>
/*Line 1231 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1232 - 'MicrosoftAjax.debug.js' */        {name: "initialText", mayBeNull: true, optional: true}
/*Line 1233 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1234 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1235 - 'MicrosoftAjax.debug.js' */    this._parts = (typeof(initialText) !== 'undefined' && initialText !== null && initialText !== '') ?
/*Line 1236 - 'MicrosoftAjax.debug.js' */        [initialText.toString()] : [];
/*Line 1237 - 'MicrosoftAjax.debug.js' */    this._value = {};
/*Line 1238 - 'MicrosoftAjax.debug.js' */    this._len = 0;
/*Line 1239 - 'MicrosoftAjax.debug.js' */}
/*Line 1240 - 'MicrosoftAjax.debug.js' */    function Sys$StringBuilder$append(text) {
/*Line 1241 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.StringBuilder.append" />
/*Line 1242 - 'MicrosoftAjax.debug.js' */        /// <param name="text" mayBeNull="true"></param>
/*Line 1243 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 1244 - 'MicrosoftAjax.debug.js' */            {name: "text", mayBeNull: true}
/*Line 1245 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 1246 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 1247 - 'MicrosoftAjax.debug.js' */        this._parts[this._parts.length] = text;
/*Line 1248 - 'MicrosoftAjax.debug.js' */    }
/*Line 1249 - 'MicrosoftAjax.debug.js' */    function Sys$StringBuilder$appendLine(text) {
/*Line 1250 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.StringBuilder.appendLine" />
/*Line 1251 - 'MicrosoftAjax.debug.js' */        /// <param name="text" optional="true" mayBeNull="true"></param>
/*Line 1252 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 1253 - 'MicrosoftAjax.debug.js' */            {name: "text", mayBeNull: true, optional: true}
/*Line 1254 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 1255 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 1256 - 'MicrosoftAjax.debug.js' */        this._parts[this._parts.length] =
/*Line 1257 - 'MicrosoftAjax.debug.js' */            ((typeof(text) === 'undefined') || (text === null) || (text === '')) ?
/*Line 1258 - 'MicrosoftAjax.debug.js' */            '\r\n' : text + '\r\n';
/*Line 1259 - 'MicrosoftAjax.debug.js' */    }
/*Line 1260 - 'MicrosoftAjax.debug.js' */    function Sys$StringBuilder$clear() {
/*Line 1261 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.StringBuilder.clear" />
/*Line 1262 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 1263 - 'MicrosoftAjax.debug.js' */        this._parts = [];
/*Line 1264 - 'MicrosoftAjax.debug.js' */        this._value = {};
/*Line 1265 - 'MicrosoftAjax.debug.js' */        this._len = 0;
/*Line 1266 - 'MicrosoftAjax.debug.js' */    }
/*Line 1267 - 'MicrosoftAjax.debug.js' */    function Sys$StringBuilder$isEmpty() {
/*Line 1268 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.StringBuilder.isEmpty" />
/*Line 1269 - 'MicrosoftAjax.debug.js' */        /// <returns type="Boolean"></returns>
/*Line 1270 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 1271 - 'MicrosoftAjax.debug.js' */        if (this._parts.length === 0) return true;
/*Line 1272 - 'MicrosoftAjax.debug.js' */        return this.toString() === '';
/*Line 1273 - 'MicrosoftAjax.debug.js' */    }
/*Line 1274 - 'MicrosoftAjax.debug.js' */    function Sys$StringBuilder$toString(separator) {
/*Line 1275 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.StringBuilder.toString" />
/*Line 1276 - 'MicrosoftAjax.debug.js' */        /// <param name="separator" type="String" optional="true" mayBeNull="true"></param>
/*Line 1277 - 'MicrosoftAjax.debug.js' */        /// <returns type="String"></returns>
/*Line 1278 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 1279 - 'MicrosoftAjax.debug.js' */            {name: "separator", type: String, mayBeNull: true, optional: true}
/*Line 1280 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 1281 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 1282 - 'MicrosoftAjax.debug.js' */        separator = separator || '';
/*Line 1283 - 'MicrosoftAjax.debug.js' */        var parts = this._parts;
/*Line 1284 - 'MicrosoftAjax.debug.js' */        if (this._len !== parts.length) {
/*Line 1285 - 'MicrosoftAjax.debug.js' */            this._value = {};
/*Line 1286 - 'MicrosoftAjax.debug.js' */            this._len = parts.length;
/*Line 1287 - 'MicrosoftAjax.debug.js' */        }
/*Line 1288 - 'MicrosoftAjax.debug.js' */        var val = this._value;
/*Line 1289 - 'MicrosoftAjax.debug.js' */        if (typeof(val[separator]) === 'undefined') {
/*Line 1290 - 'MicrosoftAjax.debug.js' */            if (separator !== '') {
/*Line 1291 - 'MicrosoftAjax.debug.js' */                for (var i = 0; i < parts.length;) {
/*Line 1292 - 'MicrosoftAjax.debug.js' */                    if ((typeof(parts[i]) === 'undefined') || (parts[i] === '') || (parts[i] === null)) {
/*Line 1293 - 'MicrosoftAjax.debug.js' */                        parts.splice(i, 1);
/*Line 1294 - 'MicrosoftAjax.debug.js' */                    }
/*Line 1295 - 'MicrosoftAjax.debug.js' */                    else {
/*Line 1296 - 'MicrosoftAjax.debug.js' */                        i++;
/*Line 1297 - 'MicrosoftAjax.debug.js' */                    }
/*Line 1298 - 'MicrosoftAjax.debug.js' */                }
/*Line 1299 - 'MicrosoftAjax.debug.js' */            }
/*Line 1300 - 'MicrosoftAjax.debug.js' */            val[separator] = this._parts.join(separator);
/*Line 1301 - 'MicrosoftAjax.debug.js' */        }
/*Line 1302 - 'MicrosoftAjax.debug.js' */        return val[separator];
/*Line 1303 - 'MicrosoftAjax.debug.js' */    }
/*Line 1304 - 'MicrosoftAjax.debug.js' */Sys.StringBuilder.prototype = {
/*Line 1305 - 'MicrosoftAjax.debug.js' */    append: Sys$StringBuilder$append,
/*Line 1306 - 'MicrosoftAjax.debug.js' */    appendLine: Sys$StringBuilder$appendLine,
/*Line 1307 - 'MicrosoftAjax.debug.js' */    clear: Sys$StringBuilder$clear,
/*Line 1308 - 'MicrosoftAjax.debug.js' */    isEmpty: Sys$StringBuilder$isEmpty,
/*Line 1309 - 'MicrosoftAjax.debug.js' */    toString: Sys$StringBuilder$toString
/*Line 1310 - 'MicrosoftAjax.debug.js' */}
/*Line 1311 - 'MicrosoftAjax.debug.js' */Sys.StringBuilder.registerClass('Sys.StringBuilder');
 
/*Line 1313 - 'MicrosoftAjax.debug.js' */Sys.Browser = {};
/*Line 1314 - 'MicrosoftAjax.debug.js' */Sys.Browser.InternetExplorer = {};
/*Line 1315 - 'MicrosoftAjax.debug.js' */Sys.Browser.Firefox = {};
/*Line 1316 - 'MicrosoftAjax.debug.js' */Sys.Browser.Safari = {};
/*Line 1317 - 'MicrosoftAjax.debug.js' */Sys.Browser.Opera = {};
/*Line 1318 - 'MicrosoftAjax.debug.js' */Sys.Browser.agent = null;
/*Line 1319 - 'MicrosoftAjax.debug.js' */Sys.Browser.hasDebuggerStatement = false;
/*Line 1320 - 'MicrosoftAjax.debug.js' */Sys.Browser.name = navigator.appName;
/*Line 1321 - 'MicrosoftAjax.debug.js' */Sys.Browser.version = parseFloat(navigator.appVersion);
/*Line 1322 - 'MicrosoftAjax.debug.js' */Sys.Browser.documentMode = 0;
/*Line 1323 - 'MicrosoftAjax.debug.js' */if (navigator.userAgent.indexOf(' MSIE ') > -1) {
/*Line 1324 - 'MicrosoftAjax.debug.js' */    Sys.Browser.agent = Sys.Browser.InternetExplorer;
/*Line 1325 - 'MicrosoftAjax.debug.js' */    Sys.Browser.version = parseFloat(navigator.userAgent.match(/MSIE (\d+\.\d+)/)[1]);
/*Line 1326 - 'MicrosoftAjax.debug.js' */    if (Sys.Browser.version >= 8) {
/*Line 1327 - 'MicrosoftAjax.debug.js' */        if (document.documentMode >= 7) {
/*Line 1328 - 'MicrosoftAjax.debug.js' */            Sys.Browser.documentMode = document.documentMode;    
/*Line 1329 - 'MicrosoftAjax.debug.js' */        }
/*Line 1330 - 'MicrosoftAjax.debug.js' */    }
/*Line 1331 - 'MicrosoftAjax.debug.js' */    Sys.Browser.hasDebuggerStatement = true;
/*Line 1332 - 'MicrosoftAjax.debug.js' */}
/*Line 1333 - 'MicrosoftAjax.debug.js' */else if (navigator.userAgent.indexOf(' Firefox/') > -1) {
/*Line 1334 - 'MicrosoftAjax.debug.js' */    Sys.Browser.agent = Sys.Browser.Firefox;
/*Line 1335 - 'MicrosoftAjax.debug.js' */    Sys.Browser.version = parseFloat(navigator.userAgent.match(/ Firefox\/(\d+\.\d+)/)[1]);
/*Line 1336 - 'MicrosoftAjax.debug.js' */    Sys.Browser.name = 'Firefox';
/*Line 1337 - 'MicrosoftAjax.debug.js' */    Sys.Browser.hasDebuggerStatement = true;
/*Line 1338 - 'MicrosoftAjax.debug.js' */}
/*Line 1339 - 'MicrosoftAjax.debug.js' */else if (navigator.userAgent.indexOf(' AppleWebKit/') > -1) {
/*Line 1340 - 'MicrosoftAjax.debug.js' */    Sys.Browser.agent = Sys.Browser.Safari;
/*Line 1341 - 'MicrosoftAjax.debug.js' */    Sys.Browser.version = parseFloat(navigator.userAgent.match(/ AppleWebKit\/(\d+(\.\d+)?)/)[1]);
/*Line 1342 - 'MicrosoftAjax.debug.js' */    Sys.Browser.name = 'Safari';
/*Line 1343 - 'MicrosoftAjax.debug.js' */}
/*Line 1344 - 'MicrosoftAjax.debug.js' */else if (navigator.userAgent.indexOf('Opera/') > -1) {
/*Line 1345 - 'MicrosoftAjax.debug.js' */    Sys.Browser.agent = Sys.Browser.Opera;
/*Line 1346 - 'MicrosoftAjax.debug.js' */}
 
/*Line 1348 - 'MicrosoftAjax.debug.js' */Sys.EventArgs = function Sys$EventArgs() {
/*Line 1349 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.EventArgs.#ctor" />
/*Line 1350 - 'MicrosoftAjax.debug.js' */    if (arguments.length !== 0) throw Error.parameterCount();
/*Line 1351 - 'MicrosoftAjax.debug.js' */}
/*Line 1352 - 'MicrosoftAjax.debug.js' */Sys.EventArgs.registerClass('Sys.EventArgs');
/*Line 1353 - 'MicrosoftAjax.debug.js' */Sys.EventArgs.Empty = new Sys.EventArgs();
 
/*Line 1355 - 'MicrosoftAjax.debug.js' */Sys.CancelEventArgs = function Sys$CancelEventArgs() {
/*Line 1356 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.CancelEventArgs.#ctor" />
/*Line 1357 - 'MicrosoftAjax.debug.js' */    if (arguments.length !== 0) throw Error.parameterCount();
/*Line 1358 - 'MicrosoftAjax.debug.js' */    Sys.CancelEventArgs.initializeBase(this);
/*Line 1359 - 'MicrosoftAjax.debug.js' */    this._cancel = false;
/*Line 1360 - 'MicrosoftAjax.debug.js' */}
/*Line 1361 - 'MicrosoftAjax.debug.js' */    function Sys$CancelEventArgs$get_cancel() {
/*Line 1362 - 'MicrosoftAjax.debug.js' */        /// <value type="Boolean" locid="P:J#Sys.CancelEventArgs.cancel"></value>
/*Line 1363 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 1364 - 'MicrosoftAjax.debug.js' */        return this._cancel;
/*Line 1365 - 'MicrosoftAjax.debug.js' */    }
/*Line 1366 - 'MicrosoftAjax.debug.js' */    function Sys$CancelEventArgs$set_cancel(value) {
/*Line 1367 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "value", type: Boolean}]);
/*Line 1368 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 1369 - 'MicrosoftAjax.debug.js' */        this._cancel = value;
/*Line 1370 - 'MicrosoftAjax.debug.js' */    }
/*Line 1371 - 'MicrosoftAjax.debug.js' */Sys.CancelEventArgs.prototype = {
/*Line 1372 - 'MicrosoftAjax.debug.js' */    get_cancel: Sys$CancelEventArgs$get_cancel,
/*Line 1373 - 'MicrosoftAjax.debug.js' */    set_cancel: Sys$CancelEventArgs$set_cancel
/*Line 1374 - 'MicrosoftAjax.debug.js' */}
/*Line 1375 - 'MicrosoftAjax.debug.js' */Sys.CancelEventArgs.registerClass('Sys.CancelEventArgs', Sys.EventArgs);
/*Line 1376 - 'MicrosoftAjax.debug.js' */Type.registerNamespace('Sys.UI');
 
/*Line 1378 - 'MicrosoftAjax.debug.js' */Sys._Debug = function Sys$_Debug() {
/*Line 1379 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Debug.#ctor" />
/*Line 1380 - 'MicrosoftAjax.debug.js' */    /// <field name="isDebug" type="Boolean" locid="F:J#Sys.Debug.isDebug"></field>
/*Line 1381 - 'MicrosoftAjax.debug.js' */    if (arguments.length !== 0) throw Error.parameterCount();
/*Line 1382 - 'MicrosoftAjax.debug.js' */}
/*Line 1383 - 'MicrosoftAjax.debug.js' */    function Sys$_Debug$_appendConsole(text) {
/*Line 1384 - 'MicrosoftAjax.debug.js' */        if ((typeof(Debug) !== 'undefined') && Debug.writeln) {
/*Line 1385 - 'MicrosoftAjax.debug.js' */            Debug.writeln(text);
/*Line 1386 - 'MicrosoftAjax.debug.js' */        }
/*Line 1387 - 'MicrosoftAjax.debug.js' */        if (window.console && window.console.log) {
/*Line 1388 - 'MicrosoftAjax.debug.js' */            window.console.log(text);
/*Line 1389 - 'MicrosoftAjax.debug.js' */        }
/*Line 1390 - 'MicrosoftAjax.debug.js' */        if (window.opera) {
/*Line 1391 - 'MicrosoftAjax.debug.js' */            window.opera.postError(text);
/*Line 1392 - 'MicrosoftAjax.debug.js' */        }
/*Line 1393 - 'MicrosoftAjax.debug.js' */        if (window.debugService) {
/*Line 1394 - 'MicrosoftAjax.debug.js' */            window.debugService.trace(text);
/*Line 1395 - 'MicrosoftAjax.debug.js' */        }
/*Line 1396 - 'MicrosoftAjax.debug.js' */    }
/*Line 1397 - 'MicrosoftAjax.debug.js' */    function Sys$_Debug$_appendTrace(text) {
/*Line 1398 - 'MicrosoftAjax.debug.js' */        var traceElement = document.getElementById('TraceConsole');
/*Line 1399 - 'MicrosoftAjax.debug.js' */        if (traceElement && (traceElement.tagName.toUpperCase() === 'TEXTAREA')) {
/*Line 1400 - 'MicrosoftAjax.debug.js' */            traceElement.value += text + '\n';
/*Line 1401 - 'MicrosoftAjax.debug.js' */        }
/*Line 1402 - 'MicrosoftAjax.debug.js' */    }
/*Line 1403 - 'MicrosoftAjax.debug.js' */    function Sys$_Debug$assert(condition, message, displayCaller) {
/*Line 1404 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Debug.assert" />
/*Line 1405 - 'MicrosoftAjax.debug.js' */        /// <param name="condition" type="Boolean"></param>
/*Line 1406 - 'MicrosoftAjax.debug.js' */        /// <param name="message" type="String" optional="true" mayBeNull="true"></param>
/*Line 1407 - 'MicrosoftAjax.debug.js' */        /// <param name="displayCaller" type="Boolean" optional="true"></param>
/*Line 1408 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 1409 - 'MicrosoftAjax.debug.js' */            {name: "condition", type: Boolean},
/*Line 1410 - 'MicrosoftAjax.debug.js' */            {name: "message", type: String, mayBeNull: true, optional: true},
/*Line 1411 - 'MicrosoftAjax.debug.js' */            {name: "displayCaller", type: Boolean, optional: true}
/*Line 1412 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 1413 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 1414 - 'MicrosoftAjax.debug.js' */        if (!condition) {
/*Line 1415 - 'MicrosoftAjax.debug.js' */            message = (displayCaller && this.assert.caller) ?
/*Line 1416 - 'MicrosoftAjax.debug.js' */                String.format(Sys.Res.assertFailedCaller, message, this.assert.caller) :
/*Line 1417 - 'MicrosoftAjax.debug.js' */                String.format(Sys.Res.assertFailed, message);
/*Line 1418 - 'MicrosoftAjax.debug.js' */            if (confirm(String.format(Sys.Res.breakIntoDebugger, message))) {
/*Line 1419 - 'MicrosoftAjax.debug.js' */                this.fail(message);
/*Line 1420 - 'MicrosoftAjax.debug.js' */            }
/*Line 1421 - 'MicrosoftAjax.debug.js' */        }
/*Line 1422 - 'MicrosoftAjax.debug.js' */    }
/*Line 1423 - 'MicrosoftAjax.debug.js' */    function Sys$_Debug$clearTrace() {
/*Line 1424 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Debug.clearTrace" />
/*Line 1425 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 1426 - 'MicrosoftAjax.debug.js' */        var traceElement = document.getElementById('TraceConsole');
/*Line 1427 - 'MicrosoftAjax.debug.js' */        if (traceElement && (traceElement.tagName.toUpperCase() === 'TEXTAREA')) {
/*Line 1428 - 'MicrosoftAjax.debug.js' */            traceElement.value = '';
/*Line 1429 - 'MicrosoftAjax.debug.js' */        }
/*Line 1430 - 'MicrosoftAjax.debug.js' */    }
/*Line 1431 - 'MicrosoftAjax.debug.js' */    function Sys$_Debug$fail(message) {
/*Line 1432 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Debug.fail" />
/*Line 1433 - 'MicrosoftAjax.debug.js' */        /// <param name="message" type="String" mayBeNull="true"></param>
/*Line 1434 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 1435 - 'MicrosoftAjax.debug.js' */            {name: "message", type: String, mayBeNull: true}
/*Line 1436 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 1437 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 1438 - 'MicrosoftAjax.debug.js' */        this._appendConsole(message);
/*Line 1439 - 'MicrosoftAjax.debug.js' */        if (Sys.Browser.hasDebuggerStatement) {
/*Line 1440 - 'MicrosoftAjax.debug.js' */            eval('debugger');
/*Line 1441 - 'MicrosoftAjax.debug.js' */        }
/*Line 1442 - 'MicrosoftAjax.debug.js' */    }
/*Line 1443 - 'MicrosoftAjax.debug.js' */    function Sys$_Debug$trace(text) {
/*Line 1444 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Debug.trace" />
/*Line 1445 - 'MicrosoftAjax.debug.js' */        /// <param name="text"></param>
/*Line 1446 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 1447 - 'MicrosoftAjax.debug.js' */            {name: "text"}
/*Line 1448 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 1449 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 1450 - 'MicrosoftAjax.debug.js' */        this._appendConsole(text);
/*Line 1451 - 'MicrosoftAjax.debug.js' */        this._appendTrace(text);
/*Line 1452 - 'MicrosoftAjax.debug.js' */    }
/*Line 1453 - 'MicrosoftAjax.debug.js' */    function Sys$_Debug$traceDump(object, name) {
/*Line 1454 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Debug.traceDump" />
/*Line 1455 - 'MicrosoftAjax.debug.js' */        /// <param name="object" mayBeNull="true"></param>
/*Line 1456 - 'MicrosoftAjax.debug.js' */        /// <param name="name" type="String" mayBeNull="true" optional="true"></param>
/*Line 1457 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 1458 - 'MicrosoftAjax.debug.js' */            {name: "object", mayBeNull: true},
/*Line 1459 - 'MicrosoftAjax.debug.js' */            {name: "name", type: String, mayBeNull: true, optional: true}
/*Line 1460 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 1461 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 1462 - 'MicrosoftAjax.debug.js' */        var text = this._traceDump(object, name, true);
/*Line 1463 - 'MicrosoftAjax.debug.js' */    }
/*Line 1464 - 'MicrosoftAjax.debug.js' */    function Sys$_Debug$_traceDump(object, name, recursive, indentationPadding, loopArray) {
/*Line 1465 - 'MicrosoftAjax.debug.js' */        name = name? name : 'traceDump';
/*Line 1466 - 'MicrosoftAjax.debug.js' */        indentationPadding = indentationPadding? indentationPadding : '';
/*Line 1467 - 'MicrosoftAjax.debug.js' */        if (object === null) {
/*Line 1468 - 'MicrosoftAjax.debug.js' */            this.trace(indentationPadding + name + ': null');
/*Line 1469 - 'MicrosoftAjax.debug.js' */            return;
/*Line 1470 - 'MicrosoftAjax.debug.js' */        }
/*Line 1471 - 'MicrosoftAjax.debug.js' */        switch(typeof(object)) {
/*Line 1472 - 'MicrosoftAjax.debug.js' */            case 'undefined':
/*Line 1473 - 'MicrosoftAjax.debug.js' */                this.trace(indentationPadding + name + ': Undefined');
/*Line 1474 - 'MicrosoftAjax.debug.js' */                break;
/*Line 1475 - 'MicrosoftAjax.debug.js' */            case 'number': case 'string': case 'boolean':
/*Line 1476 - 'MicrosoftAjax.debug.js' */                this.trace(indentationPadding + name + ': ' + object);
/*Line 1477 - 'MicrosoftAjax.debug.js' */                break;
/*Line 1478 - 'MicrosoftAjax.debug.js' */            default:
/*Line 1479 - 'MicrosoftAjax.debug.js' */                if (Date.isInstanceOfType(object) || RegExp.isInstanceOfType(object)) {
/*Line 1480 - 'MicrosoftAjax.debug.js' */                    this.trace(indentationPadding + name + ': ' + object.toString());
/*Line 1481 - 'MicrosoftAjax.debug.js' */                    break;
/*Line 1482 - 'MicrosoftAjax.debug.js' */                }
/*Line 1483 - 'MicrosoftAjax.debug.js' */                if (!loopArray) {
/*Line 1484 - 'MicrosoftAjax.debug.js' */                    loopArray = [];
/*Line 1485 - 'MicrosoftAjax.debug.js' */                }
/*Line 1486 - 'MicrosoftAjax.debug.js' */                else if (Array.contains(loopArray, object)) {
/*Line 1487 - 'MicrosoftAjax.debug.js' */                    this.trace(indentationPadding + name + ': ...');
/*Line 1488 - 'MicrosoftAjax.debug.js' */                    return;
/*Line 1489 - 'MicrosoftAjax.debug.js' */                }
/*Line 1490 - 'MicrosoftAjax.debug.js' */                Array.add(loopArray, object);
/*Line 1491 - 'MicrosoftAjax.debug.js' */                if ((object == window) || (object === document) ||
/*Line 1492 - 'MicrosoftAjax.debug.js' */                    (window.HTMLElement && (object instanceof HTMLElement)) ||
/*Line 1493 - 'MicrosoftAjax.debug.js' */                    (typeof(object.nodeName) === 'string')) {
/*Line 1494 - 'MicrosoftAjax.debug.js' */                    var tag = object.tagName? object.tagName : 'DomElement';
/*Line 1495 - 'MicrosoftAjax.debug.js' */                    if (object.id) {
/*Line 1496 - 'MicrosoftAjax.debug.js' */                        tag += ' - ' + object.id;
/*Line 1497 - 'MicrosoftAjax.debug.js' */                    }
/*Line 1498 - 'MicrosoftAjax.debug.js' */                    this.trace(indentationPadding + name + ' {' +  tag + '}');
/*Line 1499 - 'MicrosoftAjax.debug.js' */                }
/*Line 1500 - 'MicrosoftAjax.debug.js' */                else {
/*Line 1501 - 'MicrosoftAjax.debug.js' */                    var typeName = Object.getTypeName(object);
/*Line 1502 - 'MicrosoftAjax.debug.js' */                    this.trace(indentationPadding + name + (typeof(typeName) === 'string' ? ' {' + typeName + '}' : ''));
/*Line 1503 - 'MicrosoftAjax.debug.js' */                    if ((indentationPadding === '') || recursive) {
/*Line 1504 - 'MicrosoftAjax.debug.js' */                        indentationPadding += "    ";
/*Line 1505 - 'MicrosoftAjax.debug.js' */                        var i, length, properties, p, v;
/*Line 1506 - 'MicrosoftAjax.debug.js' */                        if (Array.isInstanceOfType(object)) {
/*Line 1507 - 'MicrosoftAjax.debug.js' */                            length = object.length;
/*Line 1508 - 'MicrosoftAjax.debug.js' */                            for (i = 0; i < length; i++) {
/*Line 1509 - 'MicrosoftAjax.debug.js' */                                this._traceDump(object[i], '[' + i + ']', recursive, indentationPadding, loopArray);
/*Line 1510 - 'MicrosoftAjax.debug.js' */                            }
/*Line 1511 - 'MicrosoftAjax.debug.js' */                        }
/*Line 1512 - 'MicrosoftAjax.debug.js' */                        else {
/*Line 1513 - 'MicrosoftAjax.debug.js' */                            for (p in object) {
/*Line 1514 - 'MicrosoftAjax.debug.js' */                                v = object[p];
/*Line 1515 - 'MicrosoftAjax.debug.js' */                                if (!Function.isInstanceOfType(v)) {
/*Line 1516 - 'MicrosoftAjax.debug.js' */                                    this._traceDump(v, p, recursive, indentationPadding, loopArray);
/*Line 1517 - 'MicrosoftAjax.debug.js' */                                }
/*Line 1518 - 'MicrosoftAjax.debug.js' */                            }
/*Line 1519 - 'MicrosoftAjax.debug.js' */                        }
/*Line 1520 - 'MicrosoftAjax.debug.js' */                    }
/*Line 1521 - 'MicrosoftAjax.debug.js' */                }
/*Line 1522 - 'MicrosoftAjax.debug.js' */                Array.remove(loopArray, object);
/*Line 1523 - 'MicrosoftAjax.debug.js' */        }
/*Line 1524 - 'MicrosoftAjax.debug.js' */    }
/*Line 1525 - 'MicrosoftAjax.debug.js' */Sys._Debug.prototype = {
/*Line 1526 - 'MicrosoftAjax.debug.js' */    _appendConsole: Sys$_Debug$_appendConsole,
/*Line 1527 - 'MicrosoftAjax.debug.js' */    _appendTrace: Sys$_Debug$_appendTrace,
/*Line 1528 - 'MicrosoftAjax.debug.js' */    assert: Sys$_Debug$assert,
/*Line 1529 - 'MicrosoftAjax.debug.js' */    clearTrace: Sys$_Debug$clearTrace,
/*Line 1530 - 'MicrosoftAjax.debug.js' */    fail: Sys$_Debug$fail,
/*Line 1531 - 'MicrosoftAjax.debug.js' */    trace: Sys$_Debug$trace,
/*Line 1532 - 'MicrosoftAjax.debug.js' */    traceDump: Sys$_Debug$traceDump,
/*Line 1533 - 'MicrosoftAjax.debug.js' */    _traceDump: Sys$_Debug$_traceDump
/*Line 1534 - 'MicrosoftAjax.debug.js' */}
/*Line 1535 - 'MicrosoftAjax.debug.js' */Sys._Debug.registerClass('Sys._Debug');
/*Line 1536 - 'MicrosoftAjax.debug.js' */Sys.Debug = new Sys._Debug();
/*Line 1537 - 'MicrosoftAjax.debug.js' */    Sys.Debug.isDebug = true;
 
/*Line 1539 - 'MicrosoftAjax.debug.js' */function Sys$Enum$parse(value, ignoreCase) {
/*Line 1540 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Enum.parse" />
/*Line 1541 - 'MicrosoftAjax.debug.js' */    /// <param name="value" type="String"></param>
/*Line 1542 - 'MicrosoftAjax.debug.js' */    /// <param name="ignoreCase" type="Boolean" optional="true"></param>
/*Line 1543 - 'MicrosoftAjax.debug.js' */    /// <returns></returns>
/*Line 1544 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1545 - 'MicrosoftAjax.debug.js' */        {name: "value", type: String},
/*Line 1546 - 'MicrosoftAjax.debug.js' */        {name: "ignoreCase", type: Boolean, optional: true}
/*Line 1547 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1548 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1549 - 'MicrosoftAjax.debug.js' */    var values, parsed, val;
/*Line 1550 - 'MicrosoftAjax.debug.js' */    if (ignoreCase) {
/*Line 1551 - 'MicrosoftAjax.debug.js' */        values = this.__lowerCaseValues;
/*Line 1552 - 'MicrosoftAjax.debug.js' */        if (!values) {
/*Line 1553 - 'MicrosoftAjax.debug.js' */            this.__lowerCaseValues = values = {};
/*Line 1554 - 'MicrosoftAjax.debug.js' */            var prototype = this.prototype;
/*Line 1555 - 'MicrosoftAjax.debug.js' */            for (var name in prototype) {
/*Line 1556 - 'MicrosoftAjax.debug.js' */                values[name.toLowerCase()] = prototype[name];
/*Line 1557 - 'MicrosoftAjax.debug.js' */            }
/*Line 1558 - 'MicrosoftAjax.debug.js' */        }
/*Line 1559 - 'MicrosoftAjax.debug.js' */    }
/*Line 1560 - 'MicrosoftAjax.debug.js' */    else {
/*Line 1561 - 'MicrosoftAjax.debug.js' */        values = this.prototype;
/*Line 1562 - 'MicrosoftAjax.debug.js' */    }
/*Line 1563 - 'MicrosoftAjax.debug.js' */    if (!this.__flags) {
/*Line 1564 - 'MicrosoftAjax.debug.js' */        val = (ignoreCase ? value.toLowerCase() : value);
/*Line 1565 - 'MicrosoftAjax.debug.js' */        parsed = values[val.trim()];
/*Line 1566 - 'MicrosoftAjax.debug.js' */        if (typeof(parsed) !== 'number') throw Error.argument('value', String.format(Sys.Res.enumInvalidValue, value, this.__typeName));
/*Line 1567 - 'MicrosoftAjax.debug.js' */        return parsed;
/*Line 1568 - 'MicrosoftAjax.debug.js' */    }
/*Line 1569 - 'MicrosoftAjax.debug.js' */    else {
/*Line 1570 - 'MicrosoftAjax.debug.js' */        var parts = (ignoreCase ? value.toLowerCase() : value).split(',');
/*Line 1571 - 'MicrosoftAjax.debug.js' */        var v = 0;
/*Line 1572 - 'MicrosoftAjax.debug.js' */        for (var i = parts.length - 1; i >= 0; i--) {
/*Line 1573 - 'MicrosoftAjax.debug.js' */            var part = parts[i].trim();
/*Line 1574 - 'MicrosoftAjax.debug.js' */            parsed = values[part];
/*Line 1575 - 'MicrosoftAjax.debug.js' */            if (typeof(parsed) !== 'number') throw Error.argument('value', String.format(Sys.Res.enumInvalidValue, value.split(',')[i].trim(), this.__typeName));
/*Line 1576 - 'MicrosoftAjax.debug.js' */            v |= parsed;
/*Line 1577 - 'MicrosoftAjax.debug.js' */        }
/*Line 1578 - 'MicrosoftAjax.debug.js' */        return v;
/*Line 1579 - 'MicrosoftAjax.debug.js' */    }
/*Line 1580 - 'MicrosoftAjax.debug.js' */}
/*Line 1581 - 'MicrosoftAjax.debug.js' */function Sys$Enum$toString(value) {
/*Line 1582 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Enum.toString" />
/*Line 1583 - 'MicrosoftAjax.debug.js' */    /// <param name="value" optional="true" mayBeNull="true"></param>
/*Line 1584 - 'MicrosoftAjax.debug.js' */    /// <returns type="String"></returns>
/*Line 1585 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1586 - 'MicrosoftAjax.debug.js' */        {name: "value", mayBeNull: true, optional: true}
/*Line 1587 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1588 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1589 - 'MicrosoftAjax.debug.js' */    if ((typeof(value) === 'undefined') || (value === null)) return this.__string;
/*Line 1590 - 'MicrosoftAjax.debug.js' */    if ((typeof(value) != 'number') || ((value % 1) !== 0)) throw Error.argumentType('value', Object.getType(value), this);
/*Line 1591 - 'MicrosoftAjax.debug.js' */    var values = this.prototype;
/*Line 1592 - 'MicrosoftAjax.debug.js' */    var i;
/*Line 1593 - 'MicrosoftAjax.debug.js' */    if (!this.__flags || (value === 0)) {
/*Line 1594 - 'MicrosoftAjax.debug.js' */        for (i in values) {
/*Line 1595 - 'MicrosoftAjax.debug.js' */            if (values[i] === value) {
/*Line 1596 - 'MicrosoftAjax.debug.js' */                return i;
/*Line 1597 - 'MicrosoftAjax.debug.js' */            }
/*Line 1598 - 'MicrosoftAjax.debug.js' */        }
/*Line 1599 - 'MicrosoftAjax.debug.js' */    }
/*Line 1600 - 'MicrosoftAjax.debug.js' */    else {
/*Line 1601 - 'MicrosoftAjax.debug.js' */        var sorted = this.__sortedValues;
/*Line 1602 - 'MicrosoftAjax.debug.js' */        if (!sorted) {
/*Line 1603 - 'MicrosoftAjax.debug.js' */            sorted = [];
/*Line 1604 - 'MicrosoftAjax.debug.js' */            for (i in values) {
/*Line 1605 - 'MicrosoftAjax.debug.js' */                sorted[sorted.length] = {key: i, value: values[i]};
/*Line 1606 - 'MicrosoftAjax.debug.js' */            }
/*Line 1607 - 'MicrosoftAjax.debug.js' */            sorted.sort(function(a, b) {
/*Line 1608 - 'MicrosoftAjax.debug.js' */                return a.value - b.value;
/*Line 1609 - 'MicrosoftAjax.debug.js' */            });
/*Line 1610 - 'MicrosoftAjax.debug.js' */            this.__sortedValues = sorted;
/*Line 1611 - 'MicrosoftAjax.debug.js' */        }
/*Line 1612 - 'MicrosoftAjax.debug.js' */        var parts = [];
/*Line 1613 - 'MicrosoftAjax.debug.js' */        var v = value;
/*Line 1614 - 'MicrosoftAjax.debug.js' */        for (i = sorted.length - 1; i >= 0; i--) {
/*Line 1615 - 'MicrosoftAjax.debug.js' */            var kvp = sorted[i];
/*Line 1616 - 'MicrosoftAjax.debug.js' */            var vali = kvp.value;
/*Line 1617 - 'MicrosoftAjax.debug.js' */            if (vali === 0) continue;
/*Line 1618 - 'MicrosoftAjax.debug.js' */            if ((vali & value) === vali) {
/*Line 1619 - 'MicrosoftAjax.debug.js' */                parts[parts.length] = kvp.key;
/*Line 1620 - 'MicrosoftAjax.debug.js' */                v -= vali;
/*Line 1621 - 'MicrosoftAjax.debug.js' */                if (v === 0) break;
/*Line 1622 - 'MicrosoftAjax.debug.js' */            }
/*Line 1623 - 'MicrosoftAjax.debug.js' */        }
/*Line 1624 - 'MicrosoftAjax.debug.js' */        if (parts.length && v === 0) return parts.reverse().join(', ');
/*Line 1625 - 'MicrosoftAjax.debug.js' */    }
/*Line 1626 - 'MicrosoftAjax.debug.js' */    throw Error.argumentOutOfRange('value', value, String.format(Sys.Res.enumInvalidValue, value, this.__typeName));
/*Line 1627 - 'MicrosoftAjax.debug.js' */}
/*Line 1628 - 'MicrosoftAjax.debug.js' */Type.prototype.registerEnum = function Type$registerEnum(name, flags) {
/*Line 1629 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.LineType.#ctor" />
/*Line 1630 - 'MicrosoftAjax.debug.js' */    /// <param name="name" type="String"></param>
/*Line 1631 - 'MicrosoftAjax.debug.js' */    /// <param name="flags" type="Boolean" optional="true"></param>
/*Line 1632 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1633 - 'MicrosoftAjax.debug.js' */        {name: "name", type: String},
/*Line 1634 - 'MicrosoftAjax.debug.js' */        {name: "flags", type: Boolean, optional: true}
/*Line 1635 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1636 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1637 - 'MicrosoftAjax.debug.js' */    if (!Type.__fullyQualifiedIdentifierRegExp.test(name)) throw Error.argument('name', Sys.Res.notATypeName);
/*Line 1638 - 'MicrosoftAjax.debug.js' */    var parsedName;
/*Line 1639 - 'MicrosoftAjax.debug.js' */    try {
/*Line 1640 - 'MicrosoftAjax.debug.js' */        parsedName = eval(name);
/*Line 1641 - 'MicrosoftAjax.debug.js' */    }
/*Line 1642 - 'MicrosoftAjax.debug.js' */    catch(e) {
/*Line 1643 - 'MicrosoftAjax.debug.js' */        throw Error.argument('name', Sys.Res.argumentTypeName);
/*Line 1644 - 'MicrosoftAjax.debug.js' */    }
/*Line 1645 - 'MicrosoftAjax.debug.js' */    if (parsedName !== this) throw Error.argument('name', Sys.Res.badTypeName);
/*Line 1646 - 'MicrosoftAjax.debug.js' */    if (Sys.__registeredTypes[name]) throw Error.invalidOperation(String.format(Sys.Res.typeRegisteredTwice, name));
/*Line 1647 - 'MicrosoftAjax.debug.js' */    for (var j in this.prototype) {
/*Line 1648 - 'MicrosoftAjax.debug.js' */        var val = this.prototype[j];
/*Line 1649 - 'MicrosoftAjax.debug.js' */        if (!Type.__identifierRegExp.test(j)) throw Error.invalidOperation(String.format(Sys.Res.enumInvalidValueName, j));
/*Line 1650 - 'MicrosoftAjax.debug.js' */        if (typeof(val) !== 'number' || (val % 1) !== 0) throw Error.invalidOperation(Sys.Res.enumValueNotInteger);
/*Line 1651 - 'MicrosoftAjax.debug.js' */        if (typeof(this[j]) !== 'undefined') throw Error.invalidOperation(String.format(Sys.Res.enumReservedName, j));
/*Line 1652 - 'MicrosoftAjax.debug.js' */    }
/*Line 1653 - 'MicrosoftAjax.debug.js' */    Sys.__upperCaseTypes[name.toUpperCase()] = this;
/*Line 1654 - 'MicrosoftAjax.debug.js' */    for (var i in this.prototype) {
/*Line 1655 - 'MicrosoftAjax.debug.js' */        this[i] = this.prototype[i];
/*Line 1656 - 'MicrosoftAjax.debug.js' */    }
/*Line 1657 - 'MicrosoftAjax.debug.js' */    this.__typeName = name;
/*Line 1658 - 'MicrosoftAjax.debug.js' */    this.parse = Sys$Enum$parse;
/*Line 1659 - 'MicrosoftAjax.debug.js' */    this.__string = this.toString();
/*Line 1660 - 'MicrosoftAjax.debug.js' */    this.toString = Sys$Enum$toString;
/*Line 1661 - 'MicrosoftAjax.debug.js' */    this.__flags = flags;
/*Line 1662 - 'MicrosoftAjax.debug.js' */    this.__enum = true;
/*Line 1663 - 'MicrosoftAjax.debug.js' */    Sys.__registeredTypes[name] = true;
/*Line 1664 - 'MicrosoftAjax.debug.js' */}
/*Line 1665 - 'MicrosoftAjax.debug.js' */Type.isEnum = function Type$isEnum(type) {
/*Line 1666 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Type.isEnum" />
/*Line 1667 - 'MicrosoftAjax.debug.js' */    /// <param name="type" mayBeNull="true"></param>
/*Line 1668 - 'MicrosoftAjax.debug.js' */    /// <returns type="Boolean"></returns>
/*Line 1669 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1670 - 'MicrosoftAjax.debug.js' */        {name: "type", mayBeNull: true}
/*Line 1671 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1672 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1673 - 'MicrosoftAjax.debug.js' */    if ((typeof(type) === 'undefined') || (type === null)) return false;
/*Line 1674 - 'MicrosoftAjax.debug.js' */    return !!type.__enum;
/*Line 1675 - 'MicrosoftAjax.debug.js' */}
/*Line 1676 - 'MicrosoftAjax.debug.js' */Type.isFlags = function Type$isFlags(type) {
/*Line 1677 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Type.isFlags" />
/*Line 1678 - 'MicrosoftAjax.debug.js' */    /// <param name="type" mayBeNull="true"></param>
/*Line 1679 - 'MicrosoftAjax.debug.js' */    /// <returns type="Boolean"></returns>
/*Line 1680 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1681 - 'MicrosoftAjax.debug.js' */        {name: "type", mayBeNull: true}
/*Line 1682 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1683 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1684 - 'MicrosoftAjax.debug.js' */    if ((typeof(type) === 'undefined') || (type === null)) return false;
/*Line 1685 - 'MicrosoftAjax.debug.js' */    return !!type.__flags;
/*Line 1686 - 'MicrosoftAjax.debug.js' */}
/*Line 1687 - 'MicrosoftAjax.debug.js' */Sys.CollectionChange = function Sys$CollectionChange(action, newItems, newStartingIndex, oldItems, oldStartingIndex) {
/*Line 1688 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.CollectionChange.#ctor" />
/*Line 1689 - 'MicrosoftAjax.debug.js' */    /// <param name="action" type="Sys.NotifyCollectionChangedAction"></param>
/*Line 1690 - 'MicrosoftAjax.debug.js' */    /// <param name="newItems" optional="true" mayBeNull="true"></param>
/*Line 1691 - 'MicrosoftAjax.debug.js' */    /// <param name="newStartingIndex" type="Number" integer="true" optional="true" mayBeNull="true"></param>
/*Line 1692 - 'MicrosoftAjax.debug.js' */    /// <param name="oldItems" optional="true" mayBeNull="true"></param>
/*Line 1693 - 'MicrosoftAjax.debug.js' */    /// <param name="oldStartingIndex" type="Number" integer="true" optional="true" mayBeNull="true"></param>
/*Line 1694 - 'MicrosoftAjax.debug.js' */    /// <field name="action" type="Sys.NotifyCollectionChangedAction" locid="F:J#Sys.CollectionChange.action"></field>
/*Line 1695 - 'MicrosoftAjax.debug.js' */    /// <field name="newItems" type="Array" mayBeNull="true" elementMayBeNull="true" locid="F:J#Sys.CollectionChange.newItems"></field>
/*Line 1696 - 'MicrosoftAjax.debug.js' */    /// <field name="newStartingIndex" type="Number" integer="true" locid="F:J#Sys.CollectionChange.newStartingIndex"></field>
/*Line 1697 - 'MicrosoftAjax.debug.js' */    /// <field name="oldItems" type="Array" mayBeNull="true" elementMayBeNull="true" locid="F:J#Sys.CollectionChange.oldItems"></field>
/*Line 1698 - 'MicrosoftAjax.debug.js' */    /// <field name="oldStartingIndex" type="Number" integer="true" locid="F:J#Sys.CollectionChange.oldStartingIndex"></field>
/*Line 1699 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1700 - 'MicrosoftAjax.debug.js' */        {name: "action", type: Sys.NotifyCollectionChangedAction},
/*Line 1701 - 'MicrosoftAjax.debug.js' */        {name: "newItems", mayBeNull: true, optional: true},
/*Line 1702 - 'MicrosoftAjax.debug.js' */        {name: "newStartingIndex", type: Number, mayBeNull: true, integer: true, optional: true},
/*Line 1703 - 'MicrosoftAjax.debug.js' */        {name: "oldItems", mayBeNull: true, optional: true},
/*Line 1704 - 'MicrosoftAjax.debug.js' */        {name: "oldStartingIndex", type: Number, mayBeNull: true, integer: true, optional: true}
/*Line 1705 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1706 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1707 - 'MicrosoftAjax.debug.js' */    this.action = action;
/*Line 1708 - 'MicrosoftAjax.debug.js' */    if (newItems) {
/*Line 1709 - 'MicrosoftAjax.debug.js' */        if (!(newItems instanceof Array)) {
/*Line 1710 - 'MicrosoftAjax.debug.js' */            newItems = [newItems];
/*Line 1711 - 'MicrosoftAjax.debug.js' */        }
/*Line 1712 - 'MicrosoftAjax.debug.js' */    }
/*Line 1713 - 'MicrosoftAjax.debug.js' */    this.newItems = newItems || null;
/*Line 1714 - 'MicrosoftAjax.debug.js' */    if (typeof newStartingIndex !== "number") {
/*Line 1715 - 'MicrosoftAjax.debug.js' */        newStartingIndex = -1;
/*Line 1716 - 'MicrosoftAjax.debug.js' */    }
/*Line 1717 - 'MicrosoftAjax.debug.js' */    this.newStartingIndex = newStartingIndex;
/*Line 1718 - 'MicrosoftAjax.debug.js' */    if (oldItems) {
/*Line 1719 - 'MicrosoftAjax.debug.js' */        if (!(oldItems instanceof Array)) {
/*Line 1720 - 'MicrosoftAjax.debug.js' */            oldItems = [oldItems];
/*Line 1721 - 'MicrosoftAjax.debug.js' */        }
/*Line 1722 - 'MicrosoftAjax.debug.js' */    }
/*Line 1723 - 'MicrosoftAjax.debug.js' */    this.oldItems = oldItems || null;
/*Line 1724 - 'MicrosoftAjax.debug.js' */    if (typeof oldStartingIndex !== "number") {
/*Line 1725 - 'MicrosoftAjax.debug.js' */        oldStartingIndex = -1;
/*Line 1726 - 'MicrosoftAjax.debug.js' */    }
/*Line 1727 - 'MicrosoftAjax.debug.js' */    this.oldStartingIndex = oldStartingIndex;
/*Line 1728 - 'MicrosoftAjax.debug.js' */}
/*Line 1729 - 'MicrosoftAjax.debug.js' */Sys.CollectionChange.registerClass("Sys.CollectionChange");
/*Line 1730 - 'MicrosoftAjax.debug.js' */Sys.NotifyCollectionChangedAction = function Sys$NotifyCollectionChangedAction() {
/*Line 1731 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.NotifyCollectionChangedAction.#ctor" />
/*Line 1732 - 'MicrosoftAjax.debug.js' */    /// <field name="add" type="Number" integer="true" static="true" locid="F:J#Sys.NotifyCollectionChangedAction.add"></field>
/*Line 1733 - 'MicrosoftAjax.debug.js' */    /// <field name="remove" type="Number" integer="true" static="true" locid="F:J#Sys.NotifyCollectionChangedAction.remove"></field>
/*Line 1734 - 'MicrosoftAjax.debug.js' */    /// <field name="reset" type="Number" integer="true" static="true" locid="F:J#Sys.NotifyCollectionChangedAction.reset"></field>
/*Line 1735 - 'MicrosoftAjax.debug.js' */    if (arguments.length !== 0) throw Error.parameterCount();
/*Line 1736 - 'MicrosoftAjax.debug.js' */    throw Error.notImplemented();
/*Line 1737 - 'MicrosoftAjax.debug.js' */}
/*Line 1738 - 'MicrosoftAjax.debug.js' */Sys.NotifyCollectionChangedAction.prototype = {
/*Line 1739 - 'MicrosoftAjax.debug.js' */    add: 0,
/*Line 1740 - 'MicrosoftAjax.debug.js' */    remove: 1,
/*Line 1741 - 'MicrosoftAjax.debug.js' */    reset: 2
/*Line 1742 - 'MicrosoftAjax.debug.js' */}
/*Line 1743 - 'MicrosoftAjax.debug.js' */Sys.NotifyCollectionChangedAction.registerEnum('Sys.NotifyCollectionChangedAction');
/*Line 1744 - 'MicrosoftAjax.debug.js' */Sys.NotifyCollectionChangedEventArgs = function Sys$NotifyCollectionChangedEventArgs(changes) {
/*Line 1745 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.NotifyCollectionChangedEventArgs.#ctor" />
/*Line 1746 - 'MicrosoftAjax.debug.js' */    /// <param name="changes" type="Array" elementType="Sys.CollectionChange"></param>
/*Line 1747 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1748 - 'MicrosoftAjax.debug.js' */        {name: "changes", type: Array, elementType: Sys.CollectionChange}
/*Line 1749 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1750 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1751 - 'MicrosoftAjax.debug.js' */    this._changes = changes;
/*Line 1752 - 'MicrosoftAjax.debug.js' */    Sys.NotifyCollectionChangedEventArgs.initializeBase(this);
/*Line 1753 - 'MicrosoftAjax.debug.js' */}
/*Line 1754 - 'MicrosoftAjax.debug.js' */    function Sys$NotifyCollectionChangedEventArgs$get_changes() {
/*Line 1755 - 'MicrosoftAjax.debug.js' */        /// <value type="Array" elementType="Sys.CollectionChange" locid="P:J#Sys.NotifyCollectionChangedEventArgs.changes"></value>
/*Line 1756 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 1757 - 'MicrosoftAjax.debug.js' */        return this._changes || [];
/*Line 1758 - 'MicrosoftAjax.debug.js' */    }
/*Line 1759 - 'MicrosoftAjax.debug.js' */Sys.NotifyCollectionChangedEventArgs.prototype = {
/*Line 1760 - 'MicrosoftAjax.debug.js' */    get_changes: Sys$NotifyCollectionChangedEventArgs$get_changes
/*Line 1761 - 'MicrosoftAjax.debug.js' */}
/*Line 1762 - 'MicrosoftAjax.debug.js' */Sys.NotifyCollectionChangedEventArgs.registerClass("Sys.NotifyCollectionChangedEventArgs", Sys.EventArgs);
/*Line 1763 - 'MicrosoftAjax.debug.js' */Sys.Observer = function Sys$Observer() {
/*Line 1764 - 'MicrosoftAjax.debug.js' */    throw Error.invalidOperation();
/*Line 1765 - 'MicrosoftAjax.debug.js' */}
/*Line 1766 - 'MicrosoftAjax.debug.js' */Sys.Observer.registerClass("Sys.Observer");
/*Line 1767 - 'MicrosoftAjax.debug.js' */Sys.Observer.makeObservable = function Sys$Observer$makeObservable(target) {
/*Line 1768 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Observer.makeObservable" />
/*Line 1769 - 'MicrosoftAjax.debug.js' */    /// <param name="target" mayBeNull="false"></param>
/*Line 1770 - 'MicrosoftAjax.debug.js' */    /// <returns></returns>
/*Line 1771 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1772 - 'MicrosoftAjax.debug.js' */        {name: "target"}
/*Line 1773 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1774 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1775 - 'MicrosoftAjax.debug.js' */    var isArray = target instanceof Array,
/*Line 1776 - 'MicrosoftAjax.debug.js' */        o = Sys.Observer;
/*Line 1777 - 'MicrosoftAjax.debug.js' */    Sys.Observer._ensureObservable(target);
/*Line 1778 - 'MicrosoftAjax.debug.js' */    if (target.setValue === o._observeMethods.setValue) return target;
/*Line 1779 - 'MicrosoftAjax.debug.js' */    o._addMethods(target, o._observeMethods);
/*Line 1780 - 'MicrosoftAjax.debug.js' */    if (isArray) {
/*Line 1781 - 'MicrosoftAjax.debug.js' */        o._addMethods(target, o._arrayMethods);
/*Line 1782 - 'MicrosoftAjax.debug.js' */    }
/*Line 1783 - 'MicrosoftAjax.debug.js' */    return target;
/*Line 1784 - 'MicrosoftAjax.debug.js' */}
/*Line 1785 - 'MicrosoftAjax.debug.js' */Sys.Observer._ensureObservable = function Sys$Observer$_ensureObservable(target) {
/*Line 1786 - 'MicrosoftAjax.debug.js' */    var type = typeof target;
/*Line 1787 - 'MicrosoftAjax.debug.js' */    if ((type === "string") || (type === "number") || (type === "boolean") || (type === "date")) {
/*Line 1788 - 'MicrosoftAjax.debug.js' */        throw Error.invalidOperation(String.format(Sys.Res.notObservable, type));
/*Line 1789 - 'MicrosoftAjax.debug.js' */    }
/*Line 1790 - 'MicrosoftAjax.debug.js' */}
/*Line 1791 - 'MicrosoftAjax.debug.js' */Sys.Observer._addMethods = function Sys$Observer$_addMethods(target, methods) {
/*Line 1792 - 'MicrosoftAjax.debug.js' */    for (var m in methods) {
/*Line 1793 - 'MicrosoftAjax.debug.js' */        if (target[m] && (target[m] !== methods[m])) {
/*Line 1794 - 'MicrosoftAjax.debug.js' */            throw Error.invalidOperation(String.format(Sys.Res.observableConflict, m));
/*Line 1795 - 'MicrosoftAjax.debug.js' */        }
/*Line 1796 - 'MicrosoftAjax.debug.js' */        target[m] = methods[m];
/*Line 1797 - 'MicrosoftAjax.debug.js' */    }
/*Line 1798 - 'MicrosoftAjax.debug.js' */}
/*Line 1799 - 'MicrosoftAjax.debug.js' */Sys.Observer._addEventHandler = function Sys$Observer$_addEventHandler(target, eventName, handler) {
/*Line 1800 - 'MicrosoftAjax.debug.js' */    Sys.Observer._getContext(target, true).events._addHandler(eventName, handler);
/*Line 1801 - 'MicrosoftAjax.debug.js' */}
/*Line 1802 - 'MicrosoftAjax.debug.js' */Sys.Observer.addEventHandler = function Sys$Observer$addEventHandler(target, eventName, handler) {
/*Line 1803 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Observer.addEventHandler" />
/*Line 1804 - 'MicrosoftAjax.debug.js' */    /// <param name="target"></param>
/*Line 1805 - 'MicrosoftAjax.debug.js' */    /// <param name="eventName" type="String"></param>
/*Line 1806 - 'MicrosoftAjax.debug.js' */    /// <param name="handler" type="Function"></param>
/*Line 1807 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1808 - 'MicrosoftAjax.debug.js' */        {name: "target"},
/*Line 1809 - 'MicrosoftAjax.debug.js' */        {name: "eventName", type: String},
/*Line 1810 - 'MicrosoftAjax.debug.js' */        {name: "handler", type: Function}
/*Line 1811 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1812 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1813 - 'MicrosoftAjax.debug.js' */    Sys.Observer._ensureObservable(target);
/*Line 1814 - 'MicrosoftAjax.debug.js' */    Sys.Observer._addEventHandler(target, eventName, handler);
/*Line 1815 - 'MicrosoftAjax.debug.js' */}
/*Line 1816 - 'MicrosoftAjax.debug.js' */Sys.Observer._removeEventHandler = function Sys$Observer$_removeEventHandler(target, eventName, handler) {
/*Line 1817 - 'MicrosoftAjax.debug.js' */    Sys.Observer._getContext(target, true).events._removeHandler(eventName, handler);
/*Line 1818 - 'MicrosoftAjax.debug.js' */}
/*Line 1819 - 'MicrosoftAjax.debug.js' */Sys.Observer.removeEventHandler = function Sys$Observer$removeEventHandler(target, eventName, handler) {
/*Line 1820 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Observer.removeEventHandler" />
/*Line 1821 - 'MicrosoftAjax.debug.js' */    /// <param name="target"></param>
/*Line 1822 - 'MicrosoftAjax.debug.js' */    /// <param name="eventName" type="String"></param>
/*Line 1823 - 'MicrosoftAjax.debug.js' */    /// <param name="handler" type="Function"></param>
/*Line 1824 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1825 - 'MicrosoftAjax.debug.js' */        {name: "target"},
/*Line 1826 - 'MicrosoftAjax.debug.js' */        {name: "eventName", type: String},
/*Line 1827 - 'MicrosoftAjax.debug.js' */        {name: "handler", type: Function}
/*Line 1828 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1829 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1830 - 'MicrosoftAjax.debug.js' */    Sys.Observer._ensureObservable(target);
/*Line 1831 - 'MicrosoftAjax.debug.js' */    Sys.Observer._removeEventHandler(target, eventName, handler);
/*Line 1832 - 'MicrosoftAjax.debug.js' */}
/*Line 1833 - 'MicrosoftAjax.debug.js' */Sys.Observer.raiseEvent = function Sys$Observer$raiseEvent(target, eventName, eventArgs) {
/*Line 1834 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Observer.raiseEvent" />
/*Line 1835 - 'MicrosoftAjax.debug.js' */    /// <param name="target"></param>
/*Line 1836 - 'MicrosoftAjax.debug.js' */    /// <param name="eventName" type="String"></param>
/*Line 1837 - 'MicrosoftAjax.debug.js' */    /// <param name="eventArgs" type="Sys.EventArgs"></param>
/*Line 1838 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1839 - 'MicrosoftAjax.debug.js' */        {name: "target"},
/*Line 1840 - 'MicrosoftAjax.debug.js' */        {name: "eventName", type: String},
/*Line 1841 - 'MicrosoftAjax.debug.js' */        {name: "eventArgs", type: Sys.EventArgs}
/*Line 1842 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1843 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1844 - 'MicrosoftAjax.debug.js' */    Sys.Observer._ensureObservable(target);
/*Line 1845 - 'MicrosoftAjax.debug.js' */    var ctx = Sys.Observer._getContext(target);
/*Line 1846 - 'MicrosoftAjax.debug.js' */    if (!ctx) return;
/*Line 1847 - 'MicrosoftAjax.debug.js' */    var handler = ctx.events.getHandler(eventName);
/*Line 1848 - 'MicrosoftAjax.debug.js' */    if (handler) {
/*Line 1849 - 'MicrosoftAjax.debug.js' */        handler(target, eventArgs);
/*Line 1850 - 'MicrosoftAjax.debug.js' */    }
/*Line 1851 - 'MicrosoftAjax.debug.js' */}
/*Line 1852 - 'MicrosoftAjax.debug.js' */Sys.Observer.addPropertyChanged = function Sys$Observer$addPropertyChanged(target, handler) {
/*Line 1853 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Observer.addPropertyChanged" />
/*Line 1854 - 'MicrosoftAjax.debug.js' */    /// <param name="target" mayBeNull="false"></param>
/*Line 1855 - 'MicrosoftAjax.debug.js' */    /// <param name="handler" type="Function"></param>
/*Line 1856 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1857 - 'MicrosoftAjax.debug.js' */        {name: "target"},
/*Line 1858 - 'MicrosoftAjax.debug.js' */        {name: "handler", type: Function}
/*Line 1859 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1860 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1861 - 'MicrosoftAjax.debug.js' */    Sys.Observer._ensureObservable(target);
/*Line 1862 - 'MicrosoftAjax.debug.js' */    Sys.Observer._addEventHandler(target, "propertyChanged", handler);
/*Line 1863 - 'MicrosoftAjax.debug.js' */}
/*Line 1864 - 'MicrosoftAjax.debug.js' */Sys.Observer.removePropertyChanged = function Sys$Observer$removePropertyChanged(target, handler) {
/*Line 1865 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Observer.removePropertyChanged" />
/*Line 1866 - 'MicrosoftAjax.debug.js' */    /// <param name="target" mayBeNull="false"></param>
/*Line 1867 - 'MicrosoftAjax.debug.js' */    /// <param name="handler" type="Function"></param>
/*Line 1868 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1869 - 'MicrosoftAjax.debug.js' */        {name: "target"},
/*Line 1870 - 'MicrosoftAjax.debug.js' */        {name: "handler", type: Function}
/*Line 1871 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1872 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1873 - 'MicrosoftAjax.debug.js' */    Sys.Observer._ensureObservable(target);
/*Line 1874 - 'MicrosoftAjax.debug.js' */    Sys.Observer._removeEventHandler(target, "propertyChanged", handler);
/*Line 1875 - 'MicrosoftAjax.debug.js' */}
/*Line 1876 - 'MicrosoftAjax.debug.js' */Sys.Observer.beginUpdate = function Sys$Observer$beginUpdate(target) {
/*Line 1877 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Observer.beginUpdate" />
/*Line 1878 - 'MicrosoftAjax.debug.js' */    /// <param name="target" mayBeNull="false"></param>
/*Line 1879 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1880 - 'MicrosoftAjax.debug.js' */        {name: "target"}
/*Line 1881 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1882 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1883 - 'MicrosoftAjax.debug.js' */    Sys.Observer._ensureObservable(target);
/*Line 1884 - 'MicrosoftAjax.debug.js' */    Sys.Observer._getContext(target, true).updating = true;
/*Line 1885 - 'MicrosoftAjax.debug.js' */}
/*Line 1886 - 'MicrosoftAjax.debug.js' */Sys.Observer.endUpdate = function Sys$Observer$endUpdate(target) {
/*Line 1887 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Observer.endUpdate" />
/*Line 1888 - 'MicrosoftAjax.debug.js' */    /// <param name="target" mayBeNull="false"></param>
/*Line 1889 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1890 - 'MicrosoftAjax.debug.js' */        {name: "target"}
/*Line 1891 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1892 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1893 - 'MicrosoftAjax.debug.js' */    Sys.Observer._ensureObservable(target);
/*Line 1894 - 'MicrosoftAjax.debug.js' */    var ctx = Sys.Observer._getContext(target);
/*Line 1895 - 'MicrosoftAjax.debug.js' */    if (!ctx || !ctx.updating) return;
/*Line 1896 - 'MicrosoftAjax.debug.js' */    ctx.updating = false;
/*Line 1897 - 'MicrosoftAjax.debug.js' */    var dirty = ctx.dirty;
/*Line 1898 - 'MicrosoftAjax.debug.js' */    ctx.dirty = false;
/*Line 1899 - 'MicrosoftAjax.debug.js' */    if (dirty) {
/*Line 1900 - 'MicrosoftAjax.debug.js' */        if (target instanceof Array) {
/*Line 1901 - 'MicrosoftAjax.debug.js' */            var changes = ctx.changes;
/*Line 1902 - 'MicrosoftAjax.debug.js' */            ctx.changes = null;
/*Line 1903 - 'MicrosoftAjax.debug.js' */            Sys.Observer.raiseCollectionChanged(target, changes);
/*Line 1904 - 'MicrosoftAjax.debug.js' */        }
/*Line 1905 - 'MicrosoftAjax.debug.js' */        Sys.Observer.raisePropertyChanged(target, "");
/*Line 1906 - 'MicrosoftAjax.debug.js' */    }
/*Line 1907 - 'MicrosoftAjax.debug.js' */}
/*Line 1908 - 'MicrosoftAjax.debug.js' */Sys.Observer.isUpdating = function Sys$Observer$isUpdating(target) {
/*Line 1909 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Observer.isUpdating" />
/*Line 1910 - 'MicrosoftAjax.debug.js' */    /// <param name="target" mayBeNull="false"></param>
/*Line 1911 - 'MicrosoftAjax.debug.js' */    /// <returns type="Boolean"></returns>
/*Line 1912 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1913 - 'MicrosoftAjax.debug.js' */        {name: "target"}
/*Line 1914 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1915 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1916 - 'MicrosoftAjax.debug.js' */    Sys.Observer._ensureObservable(target);
/*Line 1917 - 'MicrosoftAjax.debug.js' */    var ctx = Sys.Observer._getContext(target);
/*Line 1918 - 'MicrosoftAjax.debug.js' */    return ctx ? ctx.updating : false;
/*Line 1919 - 'MicrosoftAjax.debug.js' */}
/*Line 1920 - 'MicrosoftAjax.debug.js' */Sys.Observer._setValue = function Sys$Observer$_setValue(target, propertyName, value) {
/*Line 1921 - 'MicrosoftAjax.debug.js' */    var getter, setter, mainTarget = target, path = propertyName.split('.');
/*Line 1922 - 'MicrosoftAjax.debug.js' */    for (var i = 0, l = (path.length - 1); i < l ; i++) {
/*Line 1923 - 'MicrosoftAjax.debug.js' */        var name = path[i];
/*Line 1924 - 'MicrosoftAjax.debug.js' */        getter = target["get_" + name]; 
/*Line 1925 - 'MicrosoftAjax.debug.js' */        if (typeof (getter) === "function") {
/*Line 1926 - 'MicrosoftAjax.debug.js' */            target = getter.call(target);
/*Line 1927 - 'MicrosoftAjax.debug.js' */        }
/*Line 1928 - 'MicrosoftAjax.debug.js' */        else {
/*Line 1929 - 'MicrosoftAjax.debug.js' */            target = target[name];
/*Line 1930 - 'MicrosoftAjax.debug.js' */        }
/*Line 1931 - 'MicrosoftAjax.debug.js' */        var type = typeof (target);
/*Line 1932 - 'MicrosoftAjax.debug.js' */        if ((target === null) || (type === "undefined")) {
/*Line 1933 - 'MicrosoftAjax.debug.js' */            throw Error.invalidOperation(String.format(Sys.Res.nullReferenceInPath, propertyName));
/*Line 1934 - 'MicrosoftAjax.debug.js' */        }
/*Line 1935 - 'MicrosoftAjax.debug.js' */    }    
/*Line 1936 - 'MicrosoftAjax.debug.js' */    var currentValue, lastPath = path[l];
/*Line 1937 - 'MicrosoftAjax.debug.js' */    getter = target["get_" + lastPath];
/*Line 1938 - 'MicrosoftAjax.debug.js' */    setter = target["set_" + lastPath];
/*Line 1939 - 'MicrosoftAjax.debug.js' */    if (typeof(getter) === 'function') {
/*Line 1940 - 'MicrosoftAjax.debug.js' */        currentValue = getter.call(target);
/*Line 1941 - 'MicrosoftAjax.debug.js' */    }
/*Line 1942 - 'MicrosoftAjax.debug.js' */    else {
/*Line 1943 - 'MicrosoftAjax.debug.js' */        currentValue = target[lastPath];
/*Line 1944 - 'MicrosoftAjax.debug.js' */    }
/*Line 1945 - 'MicrosoftAjax.debug.js' */    if (typeof(setter) === 'function') {
/*Line 1946 - 'MicrosoftAjax.debug.js' */        setter.call(target, value);
/*Line 1947 - 'MicrosoftAjax.debug.js' */    }
/*Line 1948 - 'MicrosoftAjax.debug.js' */    else {
/*Line 1949 - 'MicrosoftAjax.debug.js' */        target[lastPath] = value;
/*Line 1950 - 'MicrosoftAjax.debug.js' */    }
/*Line 1951 - 'MicrosoftAjax.debug.js' */    if (currentValue !== value) {
/*Line 1952 - 'MicrosoftAjax.debug.js' */        var ctx = Sys.Observer._getContext(mainTarget);
/*Line 1953 - 'MicrosoftAjax.debug.js' */        if (ctx && ctx.updating) {
/*Line 1954 - 'MicrosoftAjax.debug.js' */            ctx.dirty = true;
/*Line 1955 - 'MicrosoftAjax.debug.js' */            return;
/*Line 1956 - 'MicrosoftAjax.debug.js' */        };
/*Line 1957 - 'MicrosoftAjax.debug.js' */        Sys.Observer.raisePropertyChanged(mainTarget, path[0]);
/*Line 1958 - 'MicrosoftAjax.debug.js' */    }
/*Line 1959 - 'MicrosoftAjax.debug.js' */}
/*Line 1960 - 'MicrosoftAjax.debug.js' */Sys.Observer.setValue = function Sys$Observer$setValue(target, propertyName, value) {
/*Line 1961 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Observer.setValue" />
/*Line 1962 - 'MicrosoftAjax.debug.js' */    /// <param name="target" mayBeNull="false"></param>
/*Line 1963 - 'MicrosoftAjax.debug.js' */    /// <param name="propertyName" type="String"></param>
/*Line 1964 - 'MicrosoftAjax.debug.js' */    /// <param name="value" mayBeNull="true"></param>
/*Line 1965 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1966 - 'MicrosoftAjax.debug.js' */        {name: "target"},
/*Line 1967 - 'MicrosoftAjax.debug.js' */        {name: "propertyName", type: String},
/*Line 1968 - 'MicrosoftAjax.debug.js' */        {name: "value", mayBeNull: true}
/*Line 1969 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1970 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1971 - 'MicrosoftAjax.debug.js' */    Sys.Observer._ensureObservable(target);
/*Line 1972 - 'MicrosoftAjax.debug.js' */    Sys.Observer._setValue(target, propertyName, value);
/*Line 1973 - 'MicrosoftAjax.debug.js' */}
/*Line 1974 - 'MicrosoftAjax.debug.js' */Sys.Observer.raisePropertyChanged = function Sys$Observer$raisePropertyChanged(target, propertyName) {
/*Line 1975 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Observer.raisePropertyChanged" />
/*Line 1976 - 'MicrosoftAjax.debug.js' */    /// <param name="target" mayBeNull="false"></param>
/*Line 1977 - 'MicrosoftAjax.debug.js' */    /// <param name="propertyName" type="String"></param>
/*Line 1978 - 'MicrosoftAjax.debug.js' */    Sys.Observer.raiseEvent(target, "propertyChanged", new Sys.PropertyChangedEventArgs(propertyName));
/*Line 1979 - 'MicrosoftAjax.debug.js' */}
/*Line 1980 - 'MicrosoftAjax.debug.js' */Sys.Observer.addCollectionChanged = function Sys$Observer$addCollectionChanged(target, handler) {
/*Line 1981 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Observer.addCollectionChanged" />
/*Line 1982 - 'MicrosoftAjax.debug.js' */    /// <param name="target" type="Array" elementMayBeNull="true"></param>
/*Line 1983 - 'MicrosoftAjax.debug.js' */    /// <param name="handler" type="Function"></param>
/*Line 1984 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1985 - 'MicrosoftAjax.debug.js' */        {name: "target", type: Array, elementMayBeNull: true},
/*Line 1986 - 'MicrosoftAjax.debug.js' */        {name: "handler", type: Function}
/*Line 1987 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1988 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 1989 - 'MicrosoftAjax.debug.js' */    Sys.Observer._addEventHandler(target, "collectionChanged", handler);
/*Line 1990 - 'MicrosoftAjax.debug.js' */}
/*Line 1991 - 'MicrosoftAjax.debug.js' */Sys.Observer.removeCollectionChanged = function Sys$Observer$removeCollectionChanged(target, handler) {
/*Line 1992 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Observer.removeCollectionChanged" />
/*Line 1993 - 'MicrosoftAjax.debug.js' */    /// <param name="target" type="Array" elementMayBeNull="true"></param>
/*Line 1994 - 'MicrosoftAjax.debug.js' */    /// <param name="handler" type="Function"></param>
/*Line 1995 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 1996 - 'MicrosoftAjax.debug.js' */        {name: "target", type: Array, elementMayBeNull: true},
/*Line 1997 - 'MicrosoftAjax.debug.js' */        {name: "handler", type: Function}
/*Line 1998 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 1999 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 2000 - 'MicrosoftAjax.debug.js' */    Sys.Observer._removeEventHandler(target, "collectionChanged", handler);
/*Line 2001 - 'MicrosoftAjax.debug.js' */}
/*Line 2002 - 'MicrosoftAjax.debug.js' */Sys.Observer._collectionChange = function Sys$Observer$_collectionChange(target, change) {
/*Line 2003 - 'MicrosoftAjax.debug.js' */    var ctx = Sys.Observer._getContext(target);
/*Line 2004 - 'MicrosoftAjax.debug.js' */    if (ctx && ctx.updating) {
/*Line 2005 - 'MicrosoftAjax.debug.js' */        ctx.dirty = true;
/*Line 2006 - 'MicrosoftAjax.debug.js' */        var changes = ctx.changes;
/*Line 2007 - 'MicrosoftAjax.debug.js' */        if (!changes) {
/*Line 2008 - 'MicrosoftAjax.debug.js' */            ctx.changes = changes = [change];
/*Line 2009 - 'MicrosoftAjax.debug.js' */        }
/*Line 2010 - 'MicrosoftAjax.debug.js' */        else {
/*Line 2011 - 'MicrosoftAjax.debug.js' */            changes.push(change);
/*Line 2012 - 'MicrosoftAjax.debug.js' */        }
/*Line 2013 - 'MicrosoftAjax.debug.js' */    }
/*Line 2014 - 'MicrosoftAjax.debug.js' */    else {
/*Line 2015 - 'MicrosoftAjax.debug.js' */        Sys.Observer.raiseCollectionChanged(target, [change]);
/*Line 2016 - 'MicrosoftAjax.debug.js' */        Sys.Observer.raisePropertyChanged(target, 'length');
/*Line 2017 - 'MicrosoftAjax.debug.js' */    }
/*Line 2018 - 'MicrosoftAjax.debug.js' */}
/*Line 2019 - 'MicrosoftAjax.debug.js' */Sys.Observer.add = function Sys$Observer$add(target, item) {
/*Line 2020 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Observer.add" />
/*Line 2021 - 'MicrosoftAjax.debug.js' */    /// <param name="target" type="Array" elementMayBeNull="true"></param>
/*Line 2022 - 'MicrosoftAjax.debug.js' */    /// <param name="item" mayBeNull="true"></param>
/*Line 2023 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 2024 - 'MicrosoftAjax.debug.js' */        {name: "target", type: Array, elementMayBeNull: true},
/*Line 2025 - 'MicrosoftAjax.debug.js' */        {name: "item", mayBeNull: true}
/*Line 2026 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 2027 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 2028 - 'MicrosoftAjax.debug.js' */    var change = new Sys.CollectionChange(Sys.NotifyCollectionChangedAction.add, [item], target.length);
/*Line 2029 - 'MicrosoftAjax.debug.js' */    Array.add(target, item);
/*Line 2030 - 'MicrosoftAjax.debug.js' */    Sys.Observer._collectionChange(target, change);
/*Line 2031 - 'MicrosoftAjax.debug.js' */}
/*Line 2032 - 'MicrosoftAjax.debug.js' */Sys.Observer.addRange = function Sys$Observer$addRange(target, items) {
/*Line 2033 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Observer.addRange" />
/*Line 2034 - 'MicrosoftAjax.debug.js' */    /// <param name="target" type="Array" elementMayBeNull="true"></param>
/*Line 2035 - 'MicrosoftAjax.debug.js' */    /// <param name="items" type="Array" elementMayBeNull="true"></param>
/*Line 2036 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 2037 - 'MicrosoftAjax.debug.js' */        {name: "target", type: Array, elementMayBeNull: true},
/*Line 2038 - 'MicrosoftAjax.debug.js' */        {name: "items", type: Array, elementMayBeNull: true}
/*Line 2039 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 2040 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 2041 - 'MicrosoftAjax.debug.js' */    var change = new Sys.CollectionChange(Sys.NotifyCollectionChangedAction.add, items, target.length);
/*Line 2042 - 'MicrosoftAjax.debug.js' */    Array.addRange(target, items);
/*Line 2043 - 'MicrosoftAjax.debug.js' */    Sys.Observer._collectionChange(target, change);
/*Line 2044 - 'MicrosoftAjax.debug.js' */}
/*Line 2045 - 'MicrosoftAjax.debug.js' */Sys.Observer.clear = function Sys$Observer$clear(target) {
/*Line 2046 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Observer.clear" />
/*Line 2047 - 'MicrosoftAjax.debug.js' */    /// <param name="target" type="Array" elementMayBeNull="true"></param>
/*Line 2048 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 2049 - 'MicrosoftAjax.debug.js' */        {name: "target", type: Array, elementMayBeNull: true}
/*Line 2050 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 2051 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 2052 - 'MicrosoftAjax.debug.js' */    var oldItems = Array.clone(target);
/*Line 2053 - 'MicrosoftAjax.debug.js' */    Array.clear(target);
/*Line 2054 - 'MicrosoftAjax.debug.js' */    Sys.Observer._collectionChange(target, new Sys.CollectionChange(Sys.NotifyCollectionChangedAction.reset, null, -1, oldItems, 0));
/*Line 2055 - 'MicrosoftAjax.debug.js' */}
/*Line 2056 - 'MicrosoftAjax.debug.js' */Sys.Observer.insert = function Sys$Observer$insert(target, index, item) {
/*Line 2057 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Observer.insert" />
/*Line 2058 - 'MicrosoftAjax.debug.js' */    /// <param name="target" type="Array" elementMayBeNull="true"></param>
/*Line 2059 - 'MicrosoftAjax.debug.js' */    /// <param name="index" type="Number" integer="true"></param>
/*Line 2060 - 'MicrosoftAjax.debug.js' */    /// <param name="item" mayBeNull="true"></param>
/*Line 2061 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 2062 - 'MicrosoftAjax.debug.js' */        {name: "target", type: Array, elementMayBeNull: true},
/*Line 2063 - 'MicrosoftAjax.debug.js' */        {name: "index", type: Number, integer: true},
/*Line 2064 - 'MicrosoftAjax.debug.js' */        {name: "item", mayBeNull: true}
/*Line 2065 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 2066 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 2067 - 'MicrosoftAjax.debug.js' */    Array.insert(target, index, item);
/*Line 2068 - 'MicrosoftAjax.debug.js' */    Sys.Observer._collectionChange(target, new Sys.CollectionChange(Sys.NotifyCollectionChangedAction.add, [item], index));
/*Line 2069 - 'MicrosoftAjax.debug.js' */}
/*Line 2070 - 'MicrosoftAjax.debug.js' */Sys.Observer.remove = function Sys$Observer$remove(target, item) {
/*Line 2071 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Observer.remove" />
/*Line 2072 - 'MicrosoftAjax.debug.js' */    /// <param name="target" type="Array" elementMayBeNull="true"></param>
/*Line 2073 - 'MicrosoftAjax.debug.js' */    /// <param name="item" mayBeNull="true"></param>
/*Line 2074 - 'MicrosoftAjax.debug.js' */    /// <returns type="Boolean"></returns>
/*Line 2075 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 2076 - 'MicrosoftAjax.debug.js' */        {name: "target", type: Array, elementMayBeNull: true},
/*Line 2077 - 'MicrosoftAjax.debug.js' */        {name: "item", mayBeNull: true}
/*Line 2078 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 2079 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 2080 - 'MicrosoftAjax.debug.js' */    var index = Array.indexOf(target, item);
/*Line 2081 - 'MicrosoftAjax.debug.js' */    if (index !== -1) {
/*Line 2082 - 'MicrosoftAjax.debug.js' */        Array.remove(target, item);
/*Line 2083 - 'MicrosoftAjax.debug.js' */        Sys.Observer._collectionChange(target, new Sys.CollectionChange(Sys.NotifyCollectionChangedAction.remove, null, -1, [item], index));
/*Line 2084 - 'MicrosoftAjax.debug.js' */        return true;
/*Line 2085 - 'MicrosoftAjax.debug.js' */    }
/*Line 2086 - 'MicrosoftAjax.debug.js' */    return false;
/*Line 2087 - 'MicrosoftAjax.debug.js' */}
/*Line 2088 - 'MicrosoftAjax.debug.js' */Sys.Observer.removeAt = function Sys$Observer$removeAt(target, index) {
/*Line 2089 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Observer.removeAt" />
/*Line 2090 - 'MicrosoftAjax.debug.js' */    /// <param name="target" type="Array" elementMayBeNull="true"></param>
/*Line 2091 - 'MicrosoftAjax.debug.js' */    /// <param name="index" type="Number" integer="true"></param>
/*Line 2092 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 2093 - 'MicrosoftAjax.debug.js' */        {name: "target", type: Array, elementMayBeNull: true},
/*Line 2094 - 'MicrosoftAjax.debug.js' */        {name: "index", type: Number, integer: true}
/*Line 2095 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 2096 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 2097 - 'MicrosoftAjax.debug.js' */    if ((index > -1) && (index < target.length)) {
/*Line 2098 - 'MicrosoftAjax.debug.js' */        var item = target[index];
/*Line 2099 - 'MicrosoftAjax.debug.js' */        Array.removeAt(target, index);
/*Line 2100 - 'MicrosoftAjax.debug.js' */        Sys.Observer._collectionChange(target, new Sys.CollectionChange(Sys.NotifyCollectionChangedAction.remove, null, -1, [item], index));
/*Line 2101 - 'MicrosoftAjax.debug.js' */    }
/*Line 2102 - 'MicrosoftAjax.debug.js' */}
/*Line 2103 - 'MicrosoftAjax.debug.js' */Sys.Observer.raiseCollectionChanged = function Sys$Observer$raiseCollectionChanged(target, changes) {
/*Line 2104 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
/*Line 2105 - 'MicrosoftAjax.debug.js' */    /// <param name="target"></param>
/*Line 2106 - 'MicrosoftAjax.debug.js' */    /// <param name="changes" type="Array" elementType="Sys.CollectionChange"></param>
/*Line 2107 - 'MicrosoftAjax.debug.js' */    Sys.Observer.raiseEvent(target, "collectionChanged", new Sys.NotifyCollectionChangedEventArgs(changes));
/*Line 2108 - 'MicrosoftAjax.debug.js' */}
/*Line 2109 - 'MicrosoftAjax.debug.js' */Sys.Observer._observeMethods = {
/*Line 2110 - 'MicrosoftAjax.debug.js' */    add_propertyChanged: function(handler) {
/*Line 2111 - 'MicrosoftAjax.debug.js' */        Sys.Observer._addEventHandler(this, "propertyChanged", handler);
/*Line 2112 - 'MicrosoftAjax.debug.js' */    },
/*Line 2113 - 'MicrosoftAjax.debug.js' */    remove_propertyChanged: function(handler) {
/*Line 2114 - 'MicrosoftAjax.debug.js' */        Sys.Observer._removeEventHandler(this, "propertyChanged", handler);
/*Line 2115 - 'MicrosoftAjax.debug.js' */    },
/*Line 2116 - 'MicrosoftAjax.debug.js' */    addEventHandler: function(eventName, handler) {
/*Line 2117 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
/*Line 2118 - 'MicrosoftAjax.debug.js' */        /// <param name="eventName" type="String"></param>
/*Line 2119 - 'MicrosoftAjax.debug.js' */        /// <param name="handler" type="Function"></param>
/*Line 2120 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 2121 - 'MicrosoftAjax.debug.js' */            {name: "eventName", type: String},
/*Line 2122 - 'MicrosoftAjax.debug.js' */            {name: "handler", type: Function}
/*Line 2123 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 2124 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 2125 - 'MicrosoftAjax.debug.js' */        Sys.Observer._addEventHandler(this, eventName, handler);
/*Line 2126 - 'MicrosoftAjax.debug.js' */    },
/*Line 2127 - 'MicrosoftAjax.debug.js' */    removeEventHandler: function(eventName, handler) {
/*Line 2128 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
/*Line 2129 - 'MicrosoftAjax.debug.js' */        /// <param name="eventName" type="String"></param>
/*Line 2130 - 'MicrosoftAjax.debug.js' */        /// <param name="handler" type="Function"></param>
/*Line 2131 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 2132 - 'MicrosoftAjax.debug.js' */            {name: "eventName", type: String},
/*Line 2133 - 'MicrosoftAjax.debug.js' */            {name: "handler", type: Function}
/*Line 2134 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 2135 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 2136 - 'MicrosoftAjax.debug.js' */        Sys.Observer._removeEventHandler(this, eventName, handler);
/*Line 2137 - 'MicrosoftAjax.debug.js' */    },
/*Line 2138 - 'MicrosoftAjax.debug.js' */    get_isUpdating: function() {
/*Line 2139 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
/*Line 2140 - 'MicrosoftAjax.debug.js' */        /// <returns type="Boolean"></returns>
/*Line 2141 - 'MicrosoftAjax.debug.js' */        return Sys.Observer.isUpdating(this);
/*Line 2142 - 'MicrosoftAjax.debug.js' */    },
/*Line 2143 - 'MicrosoftAjax.debug.js' */    beginUpdate: function() {
/*Line 2144 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
/*Line 2145 - 'MicrosoftAjax.debug.js' */        Sys.Observer.beginUpdate(this);
/*Line 2146 - 'MicrosoftAjax.debug.js' */    },
/*Line 2147 - 'MicrosoftAjax.debug.js' */    endUpdate: function() {
/*Line 2148 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
/*Line 2149 - 'MicrosoftAjax.debug.js' */        Sys.Observer.endUpdate(this);
/*Line 2150 - 'MicrosoftAjax.debug.js' */    },
/*Line 2151 - 'MicrosoftAjax.debug.js' */    setValue: function(name, value) {
/*Line 2152 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
/*Line 2153 - 'MicrosoftAjax.debug.js' */        /// <param name="name" type="String"></param>
/*Line 2154 - 'MicrosoftAjax.debug.js' */        /// <param name="value" mayBeNull="true"></param>
/*Line 2155 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 2156 - 'MicrosoftAjax.debug.js' */            {name: "name", type: String},
/*Line 2157 - 'MicrosoftAjax.debug.js' */            {name: "value", mayBeNull: true}
/*Line 2158 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 2159 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 2160 - 'MicrosoftAjax.debug.js' */        Sys.Observer._setValue(this, name, value);
/*Line 2161 - 'MicrosoftAjax.debug.js' */    },
/*Line 2162 - 'MicrosoftAjax.debug.js' */    raiseEvent: function(eventName, eventArgs) {
/*Line 2163 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
/*Line 2164 - 'MicrosoftAjax.debug.js' */        /// <param name="eventName" type="String"></param>
/*Line 2165 - 'MicrosoftAjax.debug.js' */        /// <param name="eventArgs" type="Sys.EventArgs"></param>
/*Line 2166 - 'MicrosoftAjax.debug.js' */        Sys.Observer.raiseEvent(this, eventName, eventArgs);
/*Line 2167 - 'MicrosoftAjax.debug.js' */    },
/*Line 2168 - 'MicrosoftAjax.debug.js' */    raisePropertyChanged: function(name) {
/*Line 2169 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
/*Line 2170 - 'MicrosoftAjax.debug.js' */        /// <param name="name" type="String"></param>
/*Line 2171 - 'MicrosoftAjax.debug.js' */        Sys.Observer.raiseEvent(this, "propertyChanged", new Sys.PropertyChangedEventArgs(name));
/*Line 2172 - 'MicrosoftAjax.debug.js' */    }
/*Line 2173 - 'MicrosoftAjax.debug.js' */}
/*Line 2174 - 'MicrosoftAjax.debug.js' */Sys.Observer._arrayMethods = {
/*Line 2175 - 'MicrosoftAjax.debug.js' */    add_collectionChanged: function(handler) {
/*Line 2176 - 'MicrosoftAjax.debug.js' */        Sys.Observer._addEventHandler(this, "collectionChanged", handler);
/*Line 2177 - 'MicrosoftAjax.debug.js' */    },
/*Line 2178 - 'MicrosoftAjax.debug.js' */    remove_collectionChanged: function(handler) {
/*Line 2179 - 'MicrosoftAjax.debug.js' */        Sys.Observer._removeEventHandler(this, "collectionChanged", handler);
/*Line 2180 - 'MicrosoftAjax.debug.js' */    },
/*Line 2181 - 'MicrosoftAjax.debug.js' */    add: function(item) {
/*Line 2182 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
/*Line 2183 - 'MicrosoftAjax.debug.js' */        /// <param name="item" mayBeNull="true"></param>
/*Line 2184 - 'MicrosoftAjax.debug.js' */        Sys.Observer.add(this, item);
/*Line 2185 - 'MicrosoftAjax.debug.js' */    },
/*Line 2186 - 'MicrosoftAjax.debug.js' */    addRange: function(items) {
/*Line 2187 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
/*Line 2188 - 'MicrosoftAjax.debug.js' */        /// <param name="items" type="Array" elementMayBeNull="true"></param>
/*Line 2189 - 'MicrosoftAjax.debug.js' */        Sys.Observer.addRange(this, items);
/*Line 2190 - 'MicrosoftAjax.debug.js' */    },
/*Line 2191 - 'MicrosoftAjax.debug.js' */    clear: function() {
/*Line 2192 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
/*Line 2193 - 'MicrosoftAjax.debug.js' */        Sys.Observer.clear(this);
/*Line 2194 - 'MicrosoftAjax.debug.js' */    },
/*Line 2195 - 'MicrosoftAjax.debug.js' */    insert: function(index, item) { 
/*Line 2196 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
/*Line 2197 - 'MicrosoftAjax.debug.js' */        /// <param name="index" type="Number" integer="true"></param>
/*Line 2198 - 'MicrosoftAjax.debug.js' */        /// <param name="item" mayBeNull="true"></param>
/*Line 2199 - 'MicrosoftAjax.debug.js' */        Sys.Observer.insert(this, index, item);
/*Line 2200 - 'MicrosoftAjax.debug.js' */    },
/*Line 2201 - 'MicrosoftAjax.debug.js' */    remove: function(item) {
/*Line 2202 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
/*Line 2203 - 'MicrosoftAjax.debug.js' */        /// <param name="item" mayBeNull="true"></param>
/*Line 2204 - 'MicrosoftAjax.debug.js' */        /// <returns type="Boolean"></returns>
/*Line 2205 - 'MicrosoftAjax.debug.js' */        return Sys.Observer.remove(this, item);
/*Line 2206 - 'MicrosoftAjax.debug.js' */    },
/*Line 2207 - 'MicrosoftAjax.debug.js' */    removeAt: function(index) {
/*Line 2208 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
/*Line 2209 - 'MicrosoftAjax.debug.js' */        /// <param name="index" type="Number" integer="true"></param>
/*Line 2210 - 'MicrosoftAjax.debug.js' */        Sys.Observer.removeAt(this, index);
/*Line 2211 - 'MicrosoftAjax.debug.js' */    },
/*Line 2212 - 'MicrosoftAjax.debug.js' */    raiseCollectionChanged: function(changes) {
/*Line 2213 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Observer.raiseCollectionChanged" />
/*Line 2214 - 'MicrosoftAjax.debug.js' */        /// <param name="changes" type="Array" elementType="Sys.CollectionChange"></param>
/*Line 2215 - 'MicrosoftAjax.debug.js' */        Sys.Observer.raiseEvent(this, "collectionChanged", new Sys.NotifyCollectionChangedEventArgs(changes));
/*Line 2216 - 'MicrosoftAjax.debug.js' */    }
/*Line 2217 - 'MicrosoftAjax.debug.js' */}
/*Line 2218 - 'MicrosoftAjax.debug.js' */Sys.Observer._getContext = function Sys$Observer$_getContext(obj, create) {
/*Line 2219 - 'MicrosoftAjax.debug.js' */    var ctx = obj._observerContext;
/*Line 2220 - 'MicrosoftAjax.debug.js' */    if (ctx) return ctx();
/*Line 2221 - 'MicrosoftAjax.debug.js' */    if (create) {
/*Line 2222 - 'MicrosoftAjax.debug.js' */        return (obj._observerContext = Sys.Observer._createContext())();
/*Line 2223 - 'MicrosoftAjax.debug.js' */    }
/*Line 2224 - 'MicrosoftAjax.debug.js' */    return null;
/*Line 2225 - 'MicrosoftAjax.debug.js' */}
/*Line 2226 - 'MicrosoftAjax.debug.js' */Sys.Observer._createContext = function Sys$Observer$_createContext() {
/*Line 2227 - 'MicrosoftAjax.debug.js' */    var ctx = {
/*Line 2228 - 'MicrosoftAjax.debug.js' */        events: new Sys.EventHandlerList()
/*Line 2229 - 'MicrosoftAjax.debug.js' */    };
/*Line 2230 - 'MicrosoftAjax.debug.js' */    return function() {
/*Line 2231 - 'MicrosoftAjax.debug.js' */        return ctx;
/*Line 2232 - 'MicrosoftAjax.debug.js' */    }
/*Line 2233 - 'MicrosoftAjax.debug.js' */}
/*Line 2234 - 'MicrosoftAjax.debug.js' */Date._appendPreOrPostMatch = function Date$_appendPreOrPostMatch(preMatch, strBuilder) {
/*Line 2235 - 'MicrosoftAjax.debug.js' */    var quoteCount = 0;
/*Line 2236 - 'MicrosoftAjax.debug.js' */    var escaped = false;
/*Line 2237 - 'MicrosoftAjax.debug.js' */    for (var i = 0, il = preMatch.length; i < il; i++) {
/*Line 2238 - 'MicrosoftAjax.debug.js' */        var c = preMatch.charAt(i);
/*Line 2239 - 'MicrosoftAjax.debug.js' */        switch (c) {
/*Line 2240 - 'MicrosoftAjax.debug.js' */        case '\'':
/*Line 2241 - 'MicrosoftAjax.debug.js' */            if (escaped) strBuilder.append("'");
/*Line 2242 - 'MicrosoftAjax.debug.js' */            else quoteCount++;
/*Line 2243 - 'MicrosoftAjax.debug.js' */            escaped = false;
/*Line 2244 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2245 - 'MicrosoftAjax.debug.js' */        case '\\':
/*Line 2246 - 'MicrosoftAjax.debug.js' */            if (escaped) strBuilder.append("\\");
/*Line 2247 - 'MicrosoftAjax.debug.js' */            escaped = !escaped;
/*Line 2248 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2249 - 'MicrosoftAjax.debug.js' */        default:
/*Line 2250 - 'MicrosoftAjax.debug.js' */            strBuilder.append(c);
/*Line 2251 - 'MicrosoftAjax.debug.js' */            escaped = false;
/*Line 2252 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2253 - 'MicrosoftAjax.debug.js' */        }
/*Line 2254 - 'MicrosoftAjax.debug.js' */    }
/*Line 2255 - 'MicrosoftAjax.debug.js' */    return quoteCount;
/*Line 2256 - 'MicrosoftAjax.debug.js' */}
/*Line 2257 - 'MicrosoftAjax.debug.js' */Date._expandFormat = function Date$_expandFormat(dtf, format) {
/*Line 2258 - 'MicrosoftAjax.debug.js' */    if (!format) {
/*Line 2259 - 'MicrosoftAjax.debug.js' */        format = "F";
/*Line 2260 - 'MicrosoftAjax.debug.js' */    }
/*Line 2261 - 'MicrosoftAjax.debug.js' */    var len = format.length;
/*Line 2262 - 'MicrosoftAjax.debug.js' */    if (len === 1) {
/*Line 2263 - 'MicrosoftAjax.debug.js' */        switch (format) {
/*Line 2264 - 'MicrosoftAjax.debug.js' */        case "d":
/*Line 2265 - 'MicrosoftAjax.debug.js' */            return dtf.ShortDatePattern;
/*Line 2266 - 'MicrosoftAjax.debug.js' */        case "D":
/*Line 2267 - 'MicrosoftAjax.debug.js' */            return dtf.LongDatePattern;
/*Line 2268 - 'MicrosoftAjax.debug.js' */        case "t":
/*Line 2269 - 'MicrosoftAjax.debug.js' */            return dtf.ShortTimePattern;
/*Line 2270 - 'MicrosoftAjax.debug.js' */        case "T":
/*Line 2271 - 'MicrosoftAjax.debug.js' */            return dtf.LongTimePattern;
/*Line 2272 - 'MicrosoftAjax.debug.js' */        case "f":
/*Line 2273 - 'MicrosoftAjax.debug.js' */            return dtf.LongDatePattern + " " + dtf.ShortTimePattern;
/*Line 2274 - 'MicrosoftAjax.debug.js' */        case "F":
/*Line 2275 - 'MicrosoftAjax.debug.js' */            return dtf.FullDateTimePattern;
/*Line 2276 - 'MicrosoftAjax.debug.js' */        case "M": case "m":
/*Line 2277 - 'MicrosoftAjax.debug.js' */            return dtf.MonthDayPattern;
/*Line 2278 - 'MicrosoftAjax.debug.js' */        case "s":
/*Line 2279 - 'MicrosoftAjax.debug.js' */            return dtf.SortableDateTimePattern;
/*Line 2280 - 'MicrosoftAjax.debug.js' */        case "Y": case "y":
/*Line 2281 - 'MicrosoftAjax.debug.js' */            return dtf.YearMonthPattern;
/*Line 2282 - 'MicrosoftAjax.debug.js' */        default:
/*Line 2283 - 'MicrosoftAjax.debug.js' */            throw Error.format(Sys.Res.formatInvalidString);
/*Line 2284 - 'MicrosoftAjax.debug.js' */        }
/*Line 2285 - 'MicrosoftAjax.debug.js' */    }
/*Line 2286 - 'MicrosoftAjax.debug.js' */    else if ((len === 2) && (format.charAt(0) === "%")) {
/*Line 2287 - 'MicrosoftAjax.debug.js' */        format = format.charAt(1);
/*Line 2288 - 'MicrosoftAjax.debug.js' */    }
/*Line 2289 - 'MicrosoftAjax.debug.js' */    return format;
/*Line 2290 - 'MicrosoftAjax.debug.js' */}
/*Line 2291 - 'MicrosoftAjax.debug.js' */Date._expandYear = function Date$_expandYear(dtf, year) {
/*Line 2292 - 'MicrosoftAjax.debug.js' */    var now = new Date(),
/*Line 2293 - 'MicrosoftAjax.debug.js' */        era = Date._getEra(now);
/*Line 2294 - 'MicrosoftAjax.debug.js' */    if (year < 100) {
/*Line 2295 - 'MicrosoftAjax.debug.js' */        var curr = Date._getEraYear(now, dtf, era);
/*Line 2296 - 'MicrosoftAjax.debug.js' */        year += curr - (curr % 100);
/*Line 2297 - 'MicrosoftAjax.debug.js' */        if (year > dtf.Calendar.TwoDigitYearMax) {
/*Line 2298 - 'MicrosoftAjax.debug.js' */            year -= 100;
/*Line 2299 - 'MicrosoftAjax.debug.js' */        }
/*Line 2300 - 'MicrosoftAjax.debug.js' */    }
/*Line 2301 - 'MicrosoftAjax.debug.js' */    return year;
/*Line 2302 - 'MicrosoftAjax.debug.js' */}
/*Line 2303 - 'MicrosoftAjax.debug.js' */Date._getEra = function Date$_getEra(date, eras) {
/*Line 2304 - 'MicrosoftAjax.debug.js' */    if (!eras) return 0;
/*Line 2305 - 'MicrosoftAjax.debug.js' */    var start, ticks = date.getTime();
/*Line 2306 - 'MicrosoftAjax.debug.js' */    for (var i = 0, l = eras.length; i < l; i += 4) {
/*Line 2307 - 'MicrosoftAjax.debug.js' */        start = eras[i+2];
/*Line 2308 - 'MicrosoftAjax.debug.js' */        if ((start === null) || (ticks >= start)) {
/*Line 2309 - 'MicrosoftAjax.debug.js' */            return i;
/*Line 2310 - 'MicrosoftAjax.debug.js' */        }
/*Line 2311 - 'MicrosoftAjax.debug.js' */    }
/*Line 2312 - 'MicrosoftAjax.debug.js' */    return 0;
/*Line 2313 - 'MicrosoftAjax.debug.js' */}
/*Line 2314 - 'MicrosoftAjax.debug.js' */Date._getEraYear = function Date$_getEraYear(date, dtf, era, sortable) {
/*Line 2315 - 'MicrosoftAjax.debug.js' */    var year = date.getFullYear();
/*Line 2316 - 'MicrosoftAjax.debug.js' */    if (!sortable && dtf.eras) {
/*Line 2317 - 'MicrosoftAjax.debug.js' */        year -= dtf.eras[era + 3];
/*Line 2318 - 'MicrosoftAjax.debug.js' */    }    
/*Line 2319 - 'MicrosoftAjax.debug.js' */    return year;
/*Line 2320 - 'MicrosoftAjax.debug.js' */}
/*Line 2321 - 'MicrosoftAjax.debug.js' */Date._getParseRegExp = function Date$_getParseRegExp(dtf, format) {
/*Line 2322 - 'MicrosoftAjax.debug.js' */    if (!dtf._parseRegExp) {
/*Line 2323 - 'MicrosoftAjax.debug.js' */        dtf._parseRegExp = {};
/*Line 2324 - 'MicrosoftAjax.debug.js' */    }
/*Line 2325 - 'MicrosoftAjax.debug.js' */    else if (dtf._parseRegExp[format]) {
/*Line 2326 - 'MicrosoftAjax.debug.js' */        return dtf._parseRegExp[format];
/*Line 2327 - 'MicrosoftAjax.debug.js' */    }
/*Line 2328 - 'MicrosoftAjax.debug.js' */    var expFormat = Date._expandFormat(dtf, format);
/*Line 2329 - 'MicrosoftAjax.debug.js' */    expFormat = expFormat.replace(/([\^\$\.\*\+\?\|\[\]\(\)\{\}])/g, "\\\\$1");
/*Line 2330 - 'MicrosoftAjax.debug.js' */    var regexp = new Sys.StringBuilder("^");
/*Line 2331 - 'MicrosoftAjax.debug.js' */    var groups = [];
/*Line 2332 - 'MicrosoftAjax.debug.js' */    var index = 0;
/*Line 2333 - 'MicrosoftAjax.debug.js' */    var quoteCount = 0;
/*Line 2334 - 'MicrosoftAjax.debug.js' */    var tokenRegExp = Date._getTokenRegExp();
/*Line 2335 - 'MicrosoftAjax.debug.js' */    var match;
/*Line 2336 - 'MicrosoftAjax.debug.js' */    while ((match = tokenRegExp.exec(expFormat)) !== null) {
/*Line 2337 - 'MicrosoftAjax.debug.js' */        var preMatch = expFormat.slice(index, match.index);
/*Line 2338 - 'MicrosoftAjax.debug.js' */        index = tokenRegExp.lastIndex;
/*Line 2339 - 'MicrosoftAjax.debug.js' */        quoteCount += Date._appendPreOrPostMatch(preMatch, regexp);
/*Line 2340 - 'MicrosoftAjax.debug.js' */        if ((quoteCount%2) === 1) {
/*Line 2341 - 'MicrosoftAjax.debug.js' */            regexp.append(match[0]);
/*Line 2342 - 'MicrosoftAjax.debug.js' */            continue;
/*Line 2343 - 'MicrosoftAjax.debug.js' */        }
/*Line 2344 - 'MicrosoftAjax.debug.js' */        switch (match[0]) {
/*Line 2345 - 'MicrosoftAjax.debug.js' */            case 'dddd': case 'ddd':
/*Line 2346 - 'MicrosoftAjax.debug.js' */            case 'MMMM': case 'MMM':
/*Line 2347 - 'MicrosoftAjax.debug.js' */            case 'gg': case 'g':
/*Line 2348 - 'MicrosoftAjax.debug.js' */                regexp.append("(\\D+)");
/*Line 2349 - 'MicrosoftAjax.debug.js' */                break;
/*Line 2350 - 'MicrosoftAjax.debug.js' */            case 'tt': case 't':
/*Line 2351 - 'MicrosoftAjax.debug.js' */                regexp.append("(\\D*)");
/*Line 2352 - 'MicrosoftAjax.debug.js' */                break;
/*Line 2353 - 'MicrosoftAjax.debug.js' */            case 'yyyy':
/*Line 2354 - 'MicrosoftAjax.debug.js' */                regexp.append("(\\d{4})");
/*Line 2355 - 'MicrosoftAjax.debug.js' */                break;
/*Line 2356 - 'MicrosoftAjax.debug.js' */            case 'fff':
/*Line 2357 - 'MicrosoftAjax.debug.js' */                regexp.append("(\\d{3})");
/*Line 2358 - 'MicrosoftAjax.debug.js' */                break;
/*Line 2359 - 'MicrosoftAjax.debug.js' */            case 'ff':
/*Line 2360 - 'MicrosoftAjax.debug.js' */                regexp.append("(\\d{2})");
/*Line 2361 - 'MicrosoftAjax.debug.js' */                break;
/*Line 2362 - 'MicrosoftAjax.debug.js' */            case 'f':
/*Line 2363 - 'MicrosoftAjax.debug.js' */                regexp.append("(\\d)");
/*Line 2364 - 'MicrosoftAjax.debug.js' */                break;
/*Line 2365 - 'MicrosoftAjax.debug.js' */            case 'dd': case 'd':
/*Line 2366 - 'MicrosoftAjax.debug.js' */            case 'MM': case 'M':
/*Line 2367 - 'MicrosoftAjax.debug.js' */            case 'yy': case 'y':
/*Line 2368 - 'MicrosoftAjax.debug.js' */            case 'HH': case 'H':
/*Line 2369 - 'MicrosoftAjax.debug.js' */            case 'hh': case 'h':
/*Line 2370 - 'MicrosoftAjax.debug.js' */            case 'mm': case 'm':
/*Line 2371 - 'MicrosoftAjax.debug.js' */            case 'ss': case 's':
/*Line 2372 - 'MicrosoftAjax.debug.js' */                regexp.append("(\\d\\d?)");
/*Line 2373 - 'MicrosoftAjax.debug.js' */                break;
/*Line 2374 - 'MicrosoftAjax.debug.js' */            case 'zzz':
/*Line 2375 - 'MicrosoftAjax.debug.js' */                regexp.append("([+-]?\\d\\d?:\\d{2})");
/*Line 2376 - 'MicrosoftAjax.debug.js' */                break;
/*Line 2377 - 'MicrosoftAjax.debug.js' */            case 'zz': case 'z':
/*Line 2378 - 'MicrosoftAjax.debug.js' */                regexp.append("([+-]?\\d\\d?)");
/*Line 2379 - 'MicrosoftAjax.debug.js' */                break;
/*Line 2380 - 'MicrosoftAjax.debug.js' */            case '/':
/*Line 2381 - 'MicrosoftAjax.debug.js' */                regexp.append("(\\" + dtf.DateSeparator + ")");
/*Line 2382 - 'MicrosoftAjax.debug.js' */                break;
/*Line 2383 - 'MicrosoftAjax.debug.js' */            default:
/*Line 2384 - 'MicrosoftAjax.debug.js' */                Sys.Debug.fail("Invalid date format pattern");
/*Line 2385 - 'MicrosoftAjax.debug.js' */        }
/*Line 2386 - 'MicrosoftAjax.debug.js' */        Array.add(groups, match[0]);
/*Line 2387 - 'MicrosoftAjax.debug.js' */    }
/*Line 2388 - 'MicrosoftAjax.debug.js' */    Date._appendPreOrPostMatch(expFormat.slice(index), regexp);
/*Line 2389 - 'MicrosoftAjax.debug.js' */    regexp.append("$");
/*Line 2390 - 'MicrosoftAjax.debug.js' */    var regexpStr = regexp.toString().replace(/\s+/g, "\\s+");
/*Line 2391 - 'MicrosoftAjax.debug.js' */    var parseRegExp = {'regExp': regexpStr, 'groups': groups};
/*Line 2392 - 'MicrosoftAjax.debug.js' */    dtf._parseRegExp[format] = parseRegExp;
/*Line 2393 - 'MicrosoftAjax.debug.js' */    return parseRegExp;
/*Line 2394 - 'MicrosoftAjax.debug.js' */}
/*Line 2395 - 'MicrosoftAjax.debug.js' */Date._getTokenRegExp = function Date$_getTokenRegExp() {
/*Line 2396 - 'MicrosoftAjax.debug.js' */    return /\/|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|zzz|zz|z|gg|g/g;
/*Line 2397 - 'MicrosoftAjax.debug.js' */}
/*Line 2398 - 'MicrosoftAjax.debug.js' */Date.parseLocale = function Date$parseLocale(value, formats) {
/*Line 2399 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Date.parseLocale" />
/*Line 2400 - 'MicrosoftAjax.debug.js' */    /// <param name="value" type="String"></param>
/*Line 2401 - 'MicrosoftAjax.debug.js' */    /// <param name="formats" parameterArray="true" optional="true" mayBeNull="true"></param>
/*Line 2402 - 'MicrosoftAjax.debug.js' */    /// <returns type="Date"></returns>
/*Line 2403 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 2404 - 'MicrosoftAjax.debug.js' */        {name: "value", type: String},
/*Line 2405 - 'MicrosoftAjax.debug.js' */        {name: "formats", mayBeNull: true, optional: true, parameterArray: true}
/*Line 2406 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 2407 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 2408 - 'MicrosoftAjax.debug.js' */    return Date._parse(value, Sys.CultureInfo.CurrentCulture, arguments);
/*Line 2409 - 'MicrosoftAjax.debug.js' */}
/*Line 2410 - 'MicrosoftAjax.debug.js' */Date.parseInvariant = function Date$parseInvariant(value, formats) {
/*Line 2411 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Date.parseInvariant" />
/*Line 2412 - 'MicrosoftAjax.debug.js' */    /// <param name="value" type="String"></param>
/*Line 2413 - 'MicrosoftAjax.debug.js' */    /// <param name="formats" parameterArray="true" optional="true" mayBeNull="true"></param>
/*Line 2414 - 'MicrosoftAjax.debug.js' */    /// <returns type="Date"></returns>
/*Line 2415 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 2416 - 'MicrosoftAjax.debug.js' */        {name: "value", type: String},
/*Line 2417 - 'MicrosoftAjax.debug.js' */        {name: "formats", mayBeNull: true, optional: true, parameterArray: true}
/*Line 2418 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 2419 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 2420 - 'MicrosoftAjax.debug.js' */    return Date._parse(value, Sys.CultureInfo.InvariantCulture, arguments);
/*Line 2421 - 'MicrosoftAjax.debug.js' */}
/*Line 2422 - 'MicrosoftAjax.debug.js' */Date._parse = function Date$_parse(value, cultureInfo, args) {
/*Line 2423 - 'MicrosoftAjax.debug.js' */    var i, l, date, format, formats, custom = false;
/*Line 2424 - 'MicrosoftAjax.debug.js' */    for (i = 1, l = args.length; i < l; i++) {
/*Line 2425 - 'MicrosoftAjax.debug.js' */        format = args[i];
/*Line 2426 - 'MicrosoftAjax.debug.js' */        if (format) {
/*Line 2427 - 'MicrosoftAjax.debug.js' */            custom = true;
/*Line 2428 - 'MicrosoftAjax.debug.js' */            date = Date._parseExact(value, format, cultureInfo);
/*Line 2429 - 'MicrosoftAjax.debug.js' */            if (date) return date;
/*Line 2430 - 'MicrosoftAjax.debug.js' */        }
/*Line 2431 - 'MicrosoftAjax.debug.js' */    }
/*Line 2432 - 'MicrosoftAjax.debug.js' */    if (! custom) {
/*Line 2433 - 'MicrosoftAjax.debug.js' */        formats = cultureInfo._getDateTimeFormats();
/*Line 2434 - 'MicrosoftAjax.debug.js' */        for (i = 0, l = formats.length; i < l; i++) {
/*Line 2435 - 'MicrosoftAjax.debug.js' */            date = Date._parseExact(value, formats[i], cultureInfo);
/*Line 2436 - 'MicrosoftAjax.debug.js' */            if (date) return date;
/*Line 2437 - 'MicrosoftAjax.debug.js' */        }
/*Line 2438 - 'MicrosoftAjax.debug.js' */    }
/*Line 2439 - 'MicrosoftAjax.debug.js' */    return null;
/*Line 2440 - 'MicrosoftAjax.debug.js' */}
/*Line 2441 - 'MicrosoftAjax.debug.js' */Date._parseExact = function Date$_parseExact(value, format, cultureInfo) {
/*Line 2442 - 'MicrosoftAjax.debug.js' */    value = value.trim();
/*Line 2443 - 'MicrosoftAjax.debug.js' */    var dtf = cultureInfo.dateTimeFormat,
/*Line 2444 - 'MicrosoftAjax.debug.js' */        parseInfo = Date._getParseRegExp(dtf, format),
/*Line 2445 - 'MicrosoftAjax.debug.js' */        match = new RegExp(parseInfo.regExp).exec(value);
/*Line 2446 - 'MicrosoftAjax.debug.js' */    if (match === null) return null;
    
/*Line 2448 - 'MicrosoftAjax.debug.js' */    var groups = parseInfo.groups,
/*Line 2449 - 'MicrosoftAjax.debug.js' */        era = null, year = null, month = null, date = null, weekDay = null,
/*Line 2450 - 'MicrosoftAjax.debug.js' */        hour = 0, hourOffset, min = 0, sec = 0, msec = 0, tzMinOffset = null,
/*Line 2451 - 'MicrosoftAjax.debug.js' */        pmHour = false;
/*Line 2452 - 'MicrosoftAjax.debug.js' */    for (var j = 0, jl = groups.length; j < jl; j++) {
/*Line 2453 - 'MicrosoftAjax.debug.js' */        var matchGroup = match[j+1];
/*Line 2454 - 'MicrosoftAjax.debug.js' */        if (matchGroup) {
/*Line 2455 - 'MicrosoftAjax.debug.js' */            switch (groups[j]) {
/*Line 2456 - 'MicrosoftAjax.debug.js' */                case 'dd': case 'd':
/*Line 2457 - 'MicrosoftAjax.debug.js' */                    date = parseInt(matchGroup, 10);
/*Line 2458 - 'MicrosoftAjax.debug.js' */                    if ((date < 1) || (date > 31)) return null;
/*Line 2459 - 'MicrosoftAjax.debug.js' */                    break;
/*Line 2460 - 'MicrosoftAjax.debug.js' */                case 'MMMM':
/*Line 2461 - 'MicrosoftAjax.debug.js' */                    month = cultureInfo._getMonthIndex(matchGroup);
/*Line 2462 - 'MicrosoftAjax.debug.js' */                    if ((month < 0) || (month > 11)) return null;
/*Line 2463 - 'MicrosoftAjax.debug.js' */                    break;
/*Line 2464 - 'MicrosoftAjax.debug.js' */                case 'MMM':
/*Line 2465 - 'MicrosoftAjax.debug.js' */                    month = cultureInfo._getAbbrMonthIndex(matchGroup);
/*Line 2466 - 'MicrosoftAjax.debug.js' */                    if ((month < 0) || (month > 11)) return null;
/*Line 2467 - 'MicrosoftAjax.debug.js' */                    break;
/*Line 2468 - 'MicrosoftAjax.debug.js' */                case 'M': case 'MM':
/*Line 2469 - 'MicrosoftAjax.debug.js' */                    month = parseInt(matchGroup, 10) - 1;
/*Line 2470 - 'MicrosoftAjax.debug.js' */                    if ((month < 0) || (month > 11)) return null;
/*Line 2471 - 'MicrosoftAjax.debug.js' */                    break;
/*Line 2472 - 'MicrosoftAjax.debug.js' */                case 'y': case 'yy':
/*Line 2473 - 'MicrosoftAjax.debug.js' */                    year = Date._expandYear(dtf,parseInt(matchGroup, 10));
/*Line 2474 - 'MicrosoftAjax.debug.js' */                    if ((year < 0) || (year > 9999)) return null;
/*Line 2475 - 'MicrosoftAjax.debug.js' */                    break;
/*Line 2476 - 'MicrosoftAjax.debug.js' */                case 'yyyy':
/*Line 2477 - 'MicrosoftAjax.debug.js' */                    year = parseInt(matchGroup, 10);
/*Line 2478 - 'MicrosoftAjax.debug.js' */                    if ((year < 0) || (year > 9999)) return null;
/*Line 2479 - 'MicrosoftAjax.debug.js' */                    break;
/*Line 2480 - 'MicrosoftAjax.debug.js' */                case 'h': case 'hh':
/*Line 2481 - 'MicrosoftAjax.debug.js' */                    hour = parseInt(matchGroup, 10);
/*Line 2482 - 'MicrosoftAjax.debug.js' */                    if (hour === 12) hour = 0;
/*Line 2483 - 'MicrosoftAjax.debug.js' */                    if ((hour < 0) || (hour > 11)) return null;
/*Line 2484 - 'MicrosoftAjax.debug.js' */                    break;
/*Line 2485 - 'MicrosoftAjax.debug.js' */                case 'H': case 'HH':
/*Line 2486 - 'MicrosoftAjax.debug.js' */                    hour = parseInt(matchGroup, 10);
/*Line 2487 - 'MicrosoftAjax.debug.js' */                    if ((hour < 0) || (hour > 23)) return null;
/*Line 2488 - 'MicrosoftAjax.debug.js' */                    break;
/*Line 2489 - 'MicrosoftAjax.debug.js' */                case 'm': case 'mm':
/*Line 2490 - 'MicrosoftAjax.debug.js' */                    min = parseInt(matchGroup, 10);
/*Line 2491 - 'MicrosoftAjax.debug.js' */                    if ((min < 0) || (min > 59)) return null;
/*Line 2492 - 'MicrosoftAjax.debug.js' */                    break;
/*Line 2493 - 'MicrosoftAjax.debug.js' */                case 's': case 'ss':
/*Line 2494 - 'MicrosoftAjax.debug.js' */                    sec = parseInt(matchGroup, 10);
/*Line 2495 - 'MicrosoftAjax.debug.js' */                    if ((sec < 0) || (sec > 59)) return null;
/*Line 2496 - 'MicrosoftAjax.debug.js' */                    break;
/*Line 2497 - 'MicrosoftAjax.debug.js' */                case 'tt': case 't':
/*Line 2498 - 'MicrosoftAjax.debug.js' */                    var upperToken = matchGroup.toUpperCase();
/*Line 2499 - 'MicrosoftAjax.debug.js' */                    pmHour = (upperToken === dtf.PMDesignator.toUpperCase());
/*Line 2500 - 'MicrosoftAjax.debug.js' */                    if (!pmHour && (upperToken !== dtf.AMDesignator.toUpperCase())) return null;
/*Line 2501 - 'MicrosoftAjax.debug.js' */                    break;
/*Line 2502 - 'MicrosoftAjax.debug.js' */                case 'f':
/*Line 2503 - 'MicrosoftAjax.debug.js' */                    msec = parseInt(matchGroup, 10) * 100;
/*Line 2504 - 'MicrosoftAjax.debug.js' */                    if ((msec < 0) || (msec > 999)) return null;
/*Line 2505 - 'MicrosoftAjax.debug.js' */                    break;
/*Line 2506 - 'MicrosoftAjax.debug.js' */                case 'ff':
/*Line 2507 - 'MicrosoftAjax.debug.js' */                    msec = parseInt(matchGroup, 10) * 10;
/*Line 2508 - 'MicrosoftAjax.debug.js' */                    if ((msec < 0) || (msec > 999)) return null;
/*Line 2509 - 'MicrosoftAjax.debug.js' */                    break;
/*Line 2510 - 'MicrosoftAjax.debug.js' */                case 'fff':
/*Line 2511 - 'MicrosoftAjax.debug.js' */                    msec = parseInt(matchGroup, 10);
/*Line 2512 - 'MicrosoftAjax.debug.js' */                    if ((msec < 0) || (msec > 999)) return null;
/*Line 2513 - 'MicrosoftAjax.debug.js' */                    break;
/*Line 2514 - 'MicrosoftAjax.debug.js' */                case 'dddd':
/*Line 2515 - 'MicrosoftAjax.debug.js' */                    weekDay = cultureInfo._getDayIndex(matchGroup);
/*Line 2516 - 'MicrosoftAjax.debug.js' */                    if ((weekDay < 0) || (weekDay > 6)) return null;
/*Line 2517 - 'MicrosoftAjax.debug.js' */                    break;
/*Line 2518 - 'MicrosoftAjax.debug.js' */                case 'ddd':
/*Line 2519 - 'MicrosoftAjax.debug.js' */                    weekDay = cultureInfo._getAbbrDayIndex(matchGroup);
/*Line 2520 - 'MicrosoftAjax.debug.js' */                    if ((weekDay < 0) || (weekDay > 6)) return null;
/*Line 2521 - 'MicrosoftAjax.debug.js' */                    break;
/*Line 2522 - 'MicrosoftAjax.debug.js' */                case 'zzz':
/*Line 2523 - 'MicrosoftAjax.debug.js' */                    var offsets = matchGroup.split(/:/);
/*Line 2524 - 'MicrosoftAjax.debug.js' */                    if (offsets.length !== 2) return null;
/*Line 2525 - 'MicrosoftAjax.debug.js' */                    hourOffset = parseInt(offsets[0], 10);
/*Line 2526 - 'MicrosoftAjax.debug.js' */                    if ((hourOffset < -12) || (hourOffset > 13)) return null;
/*Line 2527 - 'MicrosoftAjax.debug.js' */                    var minOffset = parseInt(offsets[1], 10);
/*Line 2528 - 'MicrosoftAjax.debug.js' */                    if ((minOffset < 0) || (minOffset > 59)) return null;
/*Line 2529 - 'MicrosoftAjax.debug.js' */                    tzMinOffset = (hourOffset * 60) + (matchGroup.startsWith('-')? -minOffset : minOffset);
/*Line 2530 - 'MicrosoftAjax.debug.js' */                    break;
/*Line 2531 - 'MicrosoftAjax.debug.js' */                case 'z': case 'zz':
/*Line 2532 - 'MicrosoftAjax.debug.js' */                    hourOffset = parseInt(matchGroup, 10);
/*Line 2533 - 'MicrosoftAjax.debug.js' */                    if ((hourOffset < -12) || (hourOffset > 13)) return null;
/*Line 2534 - 'MicrosoftAjax.debug.js' */                    tzMinOffset = hourOffset * 60;
/*Line 2535 - 'MicrosoftAjax.debug.js' */                    break;
/*Line 2536 - 'MicrosoftAjax.debug.js' */                case 'g': case 'gg':
/*Line 2537 - 'MicrosoftAjax.debug.js' */                    var eraName = matchGroup;
/*Line 2538 - 'MicrosoftAjax.debug.js' */                    if (!eraName || !dtf.eras) return null;
/*Line 2539 - 'MicrosoftAjax.debug.js' */                    eraName = eraName.toLowerCase().trim();
/*Line 2540 - 'MicrosoftAjax.debug.js' */                    for (var i = 0, l = dtf.eras.length; i < l; i += 4) {
/*Line 2541 - 'MicrosoftAjax.debug.js' */                        if (eraName === dtf.eras[i + 1].toLowerCase()) {
/*Line 2542 - 'MicrosoftAjax.debug.js' */                            era = i;
/*Line 2543 - 'MicrosoftAjax.debug.js' */                            break;
/*Line 2544 - 'MicrosoftAjax.debug.js' */                        }
/*Line 2545 - 'MicrosoftAjax.debug.js' */                    }
/*Line 2546 - 'MicrosoftAjax.debug.js' */                    if (era === null) return null;
/*Line 2547 - 'MicrosoftAjax.debug.js' */                    break;
/*Line 2548 - 'MicrosoftAjax.debug.js' */            }
/*Line 2549 - 'MicrosoftAjax.debug.js' */        }
/*Line 2550 - 'MicrosoftAjax.debug.js' */    }
/*Line 2551 - 'MicrosoftAjax.debug.js' */    var result = new Date(), defaults, convert = dtf.Calendar.convert;
/*Line 2552 - 'MicrosoftAjax.debug.js' */    if (convert) {
/*Line 2553 - 'MicrosoftAjax.debug.js' */        defaults = convert.fromGregorian(result);
/*Line 2554 - 'MicrosoftAjax.debug.js' */    }
/*Line 2555 - 'MicrosoftAjax.debug.js' */    if (!convert) {
/*Line 2556 - 'MicrosoftAjax.debug.js' */        defaults = [result.getFullYear(), result.getMonth(), result.getDate()];
/*Line 2557 - 'MicrosoftAjax.debug.js' */    }
/*Line 2558 - 'MicrosoftAjax.debug.js' */    if (year === null) {
/*Line 2559 - 'MicrosoftAjax.debug.js' */        year = defaults[0];
/*Line 2560 - 'MicrosoftAjax.debug.js' */    }
/*Line 2561 - 'MicrosoftAjax.debug.js' */    else if (dtf.eras) {
/*Line 2562 - 'MicrosoftAjax.debug.js' */        year += dtf.eras[(era || 0) + 3];
/*Line 2563 - 'MicrosoftAjax.debug.js' */    }
/*Line 2564 - 'MicrosoftAjax.debug.js' */    if (month === null) {
/*Line 2565 - 'MicrosoftAjax.debug.js' */        month = defaults[1];
/*Line 2566 - 'MicrosoftAjax.debug.js' */    }
/*Line 2567 - 'MicrosoftAjax.debug.js' */    if (date === null) {
/*Line 2568 - 'MicrosoftAjax.debug.js' */        date = defaults[2];
/*Line 2569 - 'MicrosoftAjax.debug.js' */    }
/*Line 2570 - 'MicrosoftAjax.debug.js' */    if (convert) {
/*Line 2571 - 'MicrosoftAjax.debug.js' */        result = convert.toGregorian(year, month, date);
/*Line 2572 - 'MicrosoftAjax.debug.js' */        if (result === null) return null;
/*Line 2573 - 'MicrosoftAjax.debug.js' */    }
/*Line 2574 - 'MicrosoftAjax.debug.js' */    else {
/*Line 2575 - 'MicrosoftAjax.debug.js' */        result.setFullYear(year, month, date);
/*Line 2576 - 'MicrosoftAjax.debug.js' */        if (result.getDate() !== date) return null;
/*Line 2577 - 'MicrosoftAjax.debug.js' */        if ((weekDay !== null) && (result.getDay() !== weekDay)) {
/*Line 2578 - 'MicrosoftAjax.debug.js' */            return null;
/*Line 2579 - 'MicrosoftAjax.debug.js' */        }
/*Line 2580 - 'MicrosoftAjax.debug.js' */    }
/*Line 2581 - 'MicrosoftAjax.debug.js' */    if (pmHour && (hour < 12)) {
/*Line 2582 - 'MicrosoftAjax.debug.js' */        hour += 12;
/*Line 2583 - 'MicrosoftAjax.debug.js' */    }
/*Line 2584 - 'MicrosoftAjax.debug.js' */    result.setHours(hour, min, sec, msec);
/*Line 2585 - 'MicrosoftAjax.debug.js' */    if (tzMinOffset !== null) {
/*Line 2586 - 'MicrosoftAjax.debug.js' */        var adjustedMin = result.getMinutes() - (tzMinOffset + result.getTimezoneOffset());
/*Line 2587 - 'MicrosoftAjax.debug.js' */        result.setHours(result.getHours() + parseInt(adjustedMin/60, 10), adjustedMin%60);
/*Line 2588 - 'MicrosoftAjax.debug.js' */    }
/*Line 2589 - 'MicrosoftAjax.debug.js' */    return result;
/*Line 2590 - 'MicrosoftAjax.debug.js' */}
/*Line 2591 - 'MicrosoftAjax.debug.js' */Date.prototype.format = function Date$format(format) {
/*Line 2592 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Date.format" />
/*Line 2593 - 'MicrosoftAjax.debug.js' */    /// <param name="format" type="String"></param>
/*Line 2594 - 'MicrosoftAjax.debug.js' */    /// <returns type="String"></returns>
/*Line 2595 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 2596 - 'MicrosoftAjax.debug.js' */        {name: "format", type: String}
/*Line 2597 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 2598 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 2599 - 'MicrosoftAjax.debug.js' */    return this._toFormattedString(format, Sys.CultureInfo.InvariantCulture);
/*Line 2600 - 'MicrosoftAjax.debug.js' */}
/*Line 2601 - 'MicrosoftAjax.debug.js' */Date.prototype.localeFormat = function Date$localeFormat(format) {
/*Line 2602 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Date.localeFormat" />
/*Line 2603 - 'MicrosoftAjax.debug.js' */    /// <param name="format" type="String"></param>
/*Line 2604 - 'MicrosoftAjax.debug.js' */    /// <returns type="String"></returns>
/*Line 2605 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 2606 - 'MicrosoftAjax.debug.js' */        {name: "format", type: String}
/*Line 2607 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 2608 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 2609 - 'MicrosoftAjax.debug.js' */    return this._toFormattedString(format, Sys.CultureInfo.CurrentCulture);
/*Line 2610 - 'MicrosoftAjax.debug.js' */}
/*Line 2611 - 'MicrosoftAjax.debug.js' */Date.prototype._toFormattedString = function Date$_toFormattedString(format, cultureInfo) {
/*Line 2612 - 'MicrosoftAjax.debug.js' */    var dtf = cultureInfo.dateTimeFormat,
/*Line 2613 - 'MicrosoftAjax.debug.js' */        convert = dtf.Calendar.convert;
/*Line 2614 - 'MicrosoftAjax.debug.js' */    if (!format || !format.length || (format === 'i')) {
/*Line 2615 - 'MicrosoftAjax.debug.js' */        if (cultureInfo && cultureInfo.name.length) {
/*Line 2616 - 'MicrosoftAjax.debug.js' */            if (convert) {
/*Line 2617 - 'MicrosoftAjax.debug.js' */                return this._toFormattedString(dtf.FullDateTimePattern, cultureInfo);
/*Line 2618 - 'MicrosoftAjax.debug.js' */            }
/*Line 2619 - 'MicrosoftAjax.debug.js' */            else {
/*Line 2620 - 'MicrosoftAjax.debug.js' */                var eraDate = new Date(this.getTime());
/*Line 2621 - 'MicrosoftAjax.debug.js' */                var era = Date._getEra(this, dtf.eras);
/*Line 2622 - 'MicrosoftAjax.debug.js' */                eraDate.setFullYear(Date._getEraYear(this, dtf, era));
/*Line 2623 - 'MicrosoftAjax.debug.js' */                return eraDate.toLocaleString();
/*Line 2624 - 'MicrosoftAjax.debug.js' */            }
/*Line 2625 - 'MicrosoftAjax.debug.js' */        }
/*Line 2626 - 'MicrosoftAjax.debug.js' */        else {
/*Line 2627 - 'MicrosoftAjax.debug.js' */            return this.toString();
/*Line 2628 - 'MicrosoftAjax.debug.js' */        }
/*Line 2629 - 'MicrosoftAjax.debug.js' */    }
/*Line 2630 - 'MicrosoftAjax.debug.js' */    var eras = dtf.eras,
/*Line 2631 - 'MicrosoftAjax.debug.js' */        sortable = (format === "s");
/*Line 2632 - 'MicrosoftAjax.debug.js' */    format = Date._expandFormat(dtf, format);
/*Line 2633 - 'MicrosoftAjax.debug.js' */    var ret = new Sys.StringBuilder();
/*Line 2634 - 'MicrosoftAjax.debug.js' */    var hour;
/*Line 2635 - 'MicrosoftAjax.debug.js' */    function addLeadingZero(num) {
/*Line 2636 - 'MicrosoftAjax.debug.js' */        if (num < 10) {
/*Line 2637 - 'MicrosoftAjax.debug.js' */            return '0' + num;
/*Line 2638 - 'MicrosoftAjax.debug.js' */        }
/*Line 2639 - 'MicrosoftAjax.debug.js' */        return num.toString();
/*Line 2640 - 'MicrosoftAjax.debug.js' */    }
/*Line 2641 - 'MicrosoftAjax.debug.js' */    function addLeadingZeros(num) {
/*Line 2642 - 'MicrosoftAjax.debug.js' */        if (num < 10) {
/*Line 2643 - 'MicrosoftAjax.debug.js' */            return '00' + num;
/*Line 2644 - 'MicrosoftAjax.debug.js' */        }
/*Line 2645 - 'MicrosoftAjax.debug.js' */        if (num < 100) {
/*Line 2646 - 'MicrosoftAjax.debug.js' */            return '0' + num;
/*Line 2647 - 'MicrosoftAjax.debug.js' */        }
/*Line 2648 - 'MicrosoftAjax.debug.js' */        return num.toString();
/*Line 2649 - 'MicrosoftAjax.debug.js' */    }
/*Line 2650 - 'MicrosoftAjax.debug.js' */    function padYear(year) {
/*Line 2651 - 'MicrosoftAjax.debug.js' */        if (year < 10) {
/*Line 2652 - 'MicrosoftAjax.debug.js' */            return '000' + year;
/*Line 2653 - 'MicrosoftAjax.debug.js' */        }
/*Line 2654 - 'MicrosoftAjax.debug.js' */        else if (year < 100) {
/*Line 2655 - 'MicrosoftAjax.debug.js' */            return '00' + year;
/*Line 2656 - 'MicrosoftAjax.debug.js' */        }
/*Line 2657 - 'MicrosoftAjax.debug.js' */        else if (year < 1000) {
/*Line 2658 - 'MicrosoftAjax.debug.js' */            return '0' + year;
/*Line 2659 - 'MicrosoftAjax.debug.js' */        }
/*Line 2660 - 'MicrosoftAjax.debug.js' */        return year.toString();
/*Line 2661 - 'MicrosoftAjax.debug.js' */    }
    
/*Line 2663 - 'MicrosoftAjax.debug.js' */    var foundDay, checkedDay, dayPartRegExp = /([^d]|^)(d|dd)([^d]|$)/g;
/*Line 2664 - 'MicrosoftAjax.debug.js' */    function hasDay() {
/*Line 2665 - 'MicrosoftAjax.debug.js' */        if (foundDay || checkedDay) {
/*Line 2666 - 'MicrosoftAjax.debug.js' */            return foundDay;
/*Line 2667 - 'MicrosoftAjax.debug.js' */        }
/*Line 2668 - 'MicrosoftAjax.debug.js' */        foundDay = dayPartRegExp.test(format);
/*Line 2669 - 'MicrosoftAjax.debug.js' */        checkedDay = true;
/*Line 2670 - 'MicrosoftAjax.debug.js' */        return foundDay;
/*Line 2671 - 'MicrosoftAjax.debug.js' */    }
    
/*Line 2673 - 'MicrosoftAjax.debug.js' */    var quoteCount = 0,
/*Line 2674 - 'MicrosoftAjax.debug.js' */        tokenRegExp = Date._getTokenRegExp(),
/*Line 2675 - 'MicrosoftAjax.debug.js' */        converted;
/*Line 2676 - 'MicrosoftAjax.debug.js' */    if (!sortable && convert) {
/*Line 2677 - 'MicrosoftAjax.debug.js' */        converted = convert.fromGregorian(this);
/*Line 2678 - 'MicrosoftAjax.debug.js' */    }
/*Line 2679 - 'MicrosoftAjax.debug.js' */    for (;;) {
/*Line 2680 - 'MicrosoftAjax.debug.js' */        var index = tokenRegExp.lastIndex;
/*Line 2681 - 'MicrosoftAjax.debug.js' */        var ar = tokenRegExp.exec(format);
/*Line 2682 - 'MicrosoftAjax.debug.js' */        var preMatch = format.slice(index, ar ? ar.index : format.length);
/*Line 2683 - 'MicrosoftAjax.debug.js' */        quoteCount += Date._appendPreOrPostMatch(preMatch, ret);
/*Line 2684 - 'MicrosoftAjax.debug.js' */        if (!ar) break;
/*Line 2685 - 'MicrosoftAjax.debug.js' */        if ((quoteCount%2) === 1) {
/*Line 2686 - 'MicrosoftAjax.debug.js' */            ret.append(ar[0]);
/*Line 2687 - 'MicrosoftAjax.debug.js' */            continue;
/*Line 2688 - 'MicrosoftAjax.debug.js' */        }
        
/*Line 2690 - 'MicrosoftAjax.debug.js' */        function getPart(date, part) {
/*Line 2691 - 'MicrosoftAjax.debug.js' */            if (converted) {
/*Line 2692 - 'MicrosoftAjax.debug.js' */                return converted[part];
/*Line 2693 - 'MicrosoftAjax.debug.js' */            }
/*Line 2694 - 'MicrosoftAjax.debug.js' */            switch (part) {
/*Line 2695 - 'MicrosoftAjax.debug.js' */                case 0: return date.getFullYear();
/*Line 2696 - 'MicrosoftAjax.debug.js' */                case 1: return date.getMonth();
/*Line 2697 - 'MicrosoftAjax.debug.js' */                case 2: return date.getDate();
/*Line 2698 - 'MicrosoftAjax.debug.js' */            }
/*Line 2699 - 'MicrosoftAjax.debug.js' */        }
/*Line 2700 - 'MicrosoftAjax.debug.js' */        switch (ar[0]) {
/*Line 2701 - 'MicrosoftAjax.debug.js' */        case "dddd":
/*Line 2702 - 'MicrosoftAjax.debug.js' */            ret.append(dtf.DayNames[this.getDay()]);
/*Line 2703 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2704 - 'MicrosoftAjax.debug.js' */        case "ddd":
/*Line 2705 - 'MicrosoftAjax.debug.js' */            ret.append(dtf.AbbreviatedDayNames[this.getDay()]);
/*Line 2706 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2707 - 'MicrosoftAjax.debug.js' */        case "dd":
/*Line 2708 - 'MicrosoftAjax.debug.js' */            foundDay = true;
/*Line 2709 - 'MicrosoftAjax.debug.js' */            ret.append(addLeadingZero(getPart(this, 2)));
/*Line 2710 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2711 - 'MicrosoftAjax.debug.js' */        case "d":
/*Line 2712 - 'MicrosoftAjax.debug.js' */            foundDay = true;
/*Line 2713 - 'MicrosoftAjax.debug.js' */            ret.append(getPart(this, 2));
/*Line 2714 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2715 - 'MicrosoftAjax.debug.js' */        case "MMMM":
/*Line 2716 - 'MicrosoftAjax.debug.js' */            ret.append((dtf.MonthGenitiveNames && hasDay())
/*Line 2717 - 'MicrosoftAjax.debug.js' */                ? dtf.MonthGenitiveNames[getPart(this, 1)]
/*Line 2718 - 'MicrosoftAjax.debug.js' */                : dtf.MonthNames[getPart(this, 1)]);
/*Line 2719 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2720 - 'MicrosoftAjax.debug.js' */        case "MMM":
/*Line 2721 - 'MicrosoftAjax.debug.js' */            ret.append((dtf.AbbreviatedMonthGenitiveNames && hasDay())
/*Line 2722 - 'MicrosoftAjax.debug.js' */                ? dtf.AbbreviatedMonthGenitiveNames[getPart(this, 1)]
/*Line 2723 - 'MicrosoftAjax.debug.js' */                : dtf.AbbreviatedMonthNames[getPart(this, 1)]);
/*Line 2724 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2725 - 'MicrosoftAjax.debug.js' */        case "MM":
/*Line 2726 - 'MicrosoftAjax.debug.js' */            ret.append(addLeadingZero(getPart(this, 1) + 1));
/*Line 2727 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2728 - 'MicrosoftAjax.debug.js' */        case "M":
/*Line 2729 - 'MicrosoftAjax.debug.js' */            ret.append(getPart(this, 1) + 1);
/*Line 2730 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2731 - 'MicrosoftAjax.debug.js' */        case "yyyy":
/*Line 2732 - 'MicrosoftAjax.debug.js' */            ret.append(padYear(converted ? converted[0] : Date._getEraYear(this, dtf, Date._getEra(this, eras), sortable)));
/*Line 2733 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2734 - 'MicrosoftAjax.debug.js' */        case "yy":
/*Line 2735 - 'MicrosoftAjax.debug.js' */            ret.append(addLeadingZero((converted ? converted[0] : Date._getEraYear(this, dtf, Date._getEra(this, eras), sortable)) % 100));
/*Line 2736 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2737 - 'MicrosoftAjax.debug.js' */        case "y":
/*Line 2738 - 'MicrosoftAjax.debug.js' */            ret.append((converted ? converted[0] : Date._getEraYear(this, dtf, Date._getEra(this, eras), sortable)) % 100);
/*Line 2739 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2740 - 'MicrosoftAjax.debug.js' */        case "hh":
/*Line 2741 - 'MicrosoftAjax.debug.js' */            hour = this.getHours() % 12;
/*Line 2742 - 'MicrosoftAjax.debug.js' */            if (hour === 0) hour = 12;
/*Line 2743 - 'MicrosoftAjax.debug.js' */            ret.append(addLeadingZero(hour));
/*Line 2744 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2745 - 'MicrosoftAjax.debug.js' */        case "h":
/*Line 2746 - 'MicrosoftAjax.debug.js' */            hour = this.getHours() % 12;
/*Line 2747 - 'MicrosoftAjax.debug.js' */            if (hour === 0) hour = 12;
/*Line 2748 - 'MicrosoftAjax.debug.js' */            ret.append(hour);
/*Line 2749 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2750 - 'MicrosoftAjax.debug.js' */        case "HH":
/*Line 2751 - 'MicrosoftAjax.debug.js' */            ret.append(addLeadingZero(this.getHours()));
/*Line 2752 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2753 - 'MicrosoftAjax.debug.js' */        case "H":
/*Line 2754 - 'MicrosoftAjax.debug.js' */            ret.append(this.getHours());
/*Line 2755 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2756 - 'MicrosoftAjax.debug.js' */        case "mm":
/*Line 2757 - 'MicrosoftAjax.debug.js' */            ret.append(addLeadingZero(this.getMinutes()));
/*Line 2758 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2759 - 'MicrosoftAjax.debug.js' */        case "m":
/*Line 2760 - 'MicrosoftAjax.debug.js' */            ret.append(this.getMinutes());
/*Line 2761 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2762 - 'MicrosoftAjax.debug.js' */        case "ss":
/*Line 2763 - 'MicrosoftAjax.debug.js' */            ret.append(addLeadingZero(this.getSeconds()));
/*Line 2764 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2765 - 'MicrosoftAjax.debug.js' */        case "s":
/*Line 2766 - 'MicrosoftAjax.debug.js' */            ret.append(this.getSeconds());
/*Line 2767 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2768 - 'MicrosoftAjax.debug.js' */        case "tt":
/*Line 2769 - 'MicrosoftAjax.debug.js' */            ret.append((this.getHours() < 12) ? dtf.AMDesignator : dtf.PMDesignator);
/*Line 2770 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2771 - 'MicrosoftAjax.debug.js' */        case "t":
/*Line 2772 - 'MicrosoftAjax.debug.js' */            ret.append(((this.getHours() < 12) ? dtf.AMDesignator : dtf.PMDesignator).charAt(0));
/*Line 2773 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2774 - 'MicrosoftAjax.debug.js' */        case "f":
/*Line 2775 - 'MicrosoftAjax.debug.js' */            ret.append(addLeadingZeros(this.getMilliseconds()).charAt(0));
/*Line 2776 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2777 - 'MicrosoftAjax.debug.js' */        case "ff":
/*Line 2778 - 'MicrosoftAjax.debug.js' */            ret.append(addLeadingZeros(this.getMilliseconds()).substr(0, 2));
/*Line 2779 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2780 - 'MicrosoftAjax.debug.js' */        case "fff":
/*Line 2781 - 'MicrosoftAjax.debug.js' */            ret.append(addLeadingZeros(this.getMilliseconds()));
/*Line 2782 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2783 - 'MicrosoftAjax.debug.js' */        case "z":
/*Line 2784 - 'MicrosoftAjax.debug.js' */            hour = this.getTimezoneOffset() / 60;
/*Line 2785 - 'MicrosoftAjax.debug.js' */            ret.append(((hour <= 0) ? '+' : '-') + Math.floor(Math.abs(hour)));
/*Line 2786 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2787 - 'MicrosoftAjax.debug.js' */        case "zz":
/*Line 2788 - 'MicrosoftAjax.debug.js' */            hour = this.getTimezoneOffset() / 60;
/*Line 2789 - 'MicrosoftAjax.debug.js' */            ret.append(((hour <= 0) ? '+' : '-') + addLeadingZero(Math.floor(Math.abs(hour))));
/*Line 2790 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2791 - 'MicrosoftAjax.debug.js' */        case "zzz":
/*Line 2792 - 'MicrosoftAjax.debug.js' */            hour = this.getTimezoneOffset() / 60;
/*Line 2793 - 'MicrosoftAjax.debug.js' */            ret.append(((hour <= 0) ? '+' : '-') + addLeadingZero(Math.floor(Math.abs(hour))) +
/*Line 2794 - 'MicrosoftAjax.debug.js' */                ":" + addLeadingZero(Math.abs(this.getTimezoneOffset() % 60)));
/*Line 2795 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2796 - 'MicrosoftAjax.debug.js' */        case "g":
/*Line 2797 - 'MicrosoftAjax.debug.js' */        case "gg":
/*Line 2798 - 'MicrosoftAjax.debug.js' */            if (dtf.eras) {
/*Line 2799 - 'MicrosoftAjax.debug.js' */                ret.append(dtf.eras[Date._getEra(this, eras) + 1]);
/*Line 2800 - 'MicrosoftAjax.debug.js' */            }
/*Line 2801 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2802 - 'MicrosoftAjax.debug.js' */        case "/":
/*Line 2803 - 'MicrosoftAjax.debug.js' */            ret.append(dtf.DateSeparator);
/*Line 2804 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2805 - 'MicrosoftAjax.debug.js' */        default:
/*Line 2806 - 'MicrosoftAjax.debug.js' */            Sys.Debug.fail("Invalid date format pattern");
/*Line 2807 - 'MicrosoftAjax.debug.js' */        }
/*Line 2808 - 'MicrosoftAjax.debug.js' */    }
/*Line 2809 - 'MicrosoftAjax.debug.js' */    return ret.toString();
/*Line 2810 - 'MicrosoftAjax.debug.js' */}
/*Line 2811 - 'MicrosoftAjax.debug.js' */String.localeFormat = function String$localeFormat(format, args) {
/*Line 2812 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#String.localeFormat" />
/*Line 2813 - 'MicrosoftAjax.debug.js' */    /// <param name="format" type="String"></param>
/*Line 2814 - 'MicrosoftAjax.debug.js' */    /// <param name="args" parameterArray="true" mayBeNull="true"></param>
/*Line 2815 - 'MicrosoftAjax.debug.js' */    /// <returns type="String"></returns>
/*Line 2816 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 2817 - 'MicrosoftAjax.debug.js' */        {name: "format", type: String},
/*Line 2818 - 'MicrosoftAjax.debug.js' */        {name: "args", mayBeNull: true, parameterArray: true}
/*Line 2819 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 2820 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 2821 - 'MicrosoftAjax.debug.js' */    return String._toFormattedString(true, arguments);
/*Line 2822 - 'MicrosoftAjax.debug.js' */}
/*Line 2823 - 'MicrosoftAjax.debug.js' */Number.parseLocale = function Number$parseLocale(value) {
/*Line 2824 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Number.parseLocale" />
/*Line 2825 - 'MicrosoftAjax.debug.js' */    /// <param name="value" type="String"></param>
/*Line 2826 - 'MicrosoftAjax.debug.js' */    /// <returns type="Number"></returns>
/*Line 2827 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 2828 - 'MicrosoftAjax.debug.js' */        {name: "value", type: String}
/*Line 2829 - 'MicrosoftAjax.debug.js' */    ], false);
/*Line 2830 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 2831 - 'MicrosoftAjax.debug.js' */    return Number._parse(value, Sys.CultureInfo.CurrentCulture);
/*Line 2832 - 'MicrosoftAjax.debug.js' */}
/*Line 2833 - 'MicrosoftAjax.debug.js' */Number.parseInvariant = function Number$parseInvariant(value) {
/*Line 2834 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Number.parseInvariant" />
/*Line 2835 - 'MicrosoftAjax.debug.js' */    /// <param name="value" type="String"></param>
/*Line 2836 - 'MicrosoftAjax.debug.js' */    /// <returns type="Number"></returns>
/*Line 2837 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 2838 - 'MicrosoftAjax.debug.js' */        {name: "value", type: String}
/*Line 2839 - 'MicrosoftAjax.debug.js' */    ], false);
/*Line 2840 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 2841 - 'MicrosoftAjax.debug.js' */    return Number._parse(value, Sys.CultureInfo.InvariantCulture);
/*Line 2842 - 'MicrosoftAjax.debug.js' */}
/*Line 2843 - 'MicrosoftAjax.debug.js' */Number._parse = function Number$_parse(value, cultureInfo) {
/*Line 2844 - 'MicrosoftAjax.debug.js' */    value = value.trim();
    
/*Line 2846 - 'MicrosoftAjax.debug.js' */    if (value.match(/^[+-]?infinity$/i)) {
/*Line 2847 - 'MicrosoftAjax.debug.js' */        return parseFloat(value);
/*Line 2848 - 'MicrosoftAjax.debug.js' */    }
/*Line 2849 - 'MicrosoftAjax.debug.js' */    if (value.match(/^0x[a-f0-9]+$/i)) {
/*Line 2850 - 'MicrosoftAjax.debug.js' */        return parseInt(value);
/*Line 2851 - 'MicrosoftAjax.debug.js' */    }
/*Line 2852 - 'MicrosoftAjax.debug.js' */    var numFormat = cultureInfo.numberFormat;
/*Line 2853 - 'MicrosoftAjax.debug.js' */    var signInfo = Number._parseNumberNegativePattern(value, numFormat, numFormat.NumberNegativePattern);
/*Line 2854 - 'MicrosoftAjax.debug.js' */    var sign = signInfo[0];
/*Line 2855 - 'MicrosoftAjax.debug.js' */    var num = signInfo[1];
    
/*Line 2857 - 'MicrosoftAjax.debug.js' */    if ((sign === '') && (numFormat.NumberNegativePattern !== 1)) {
/*Line 2858 - 'MicrosoftAjax.debug.js' */        signInfo = Number._parseNumberNegativePattern(value, numFormat, 1);
/*Line 2859 - 'MicrosoftAjax.debug.js' */        sign = signInfo[0];
/*Line 2860 - 'MicrosoftAjax.debug.js' */        num = signInfo[1];
/*Line 2861 - 'MicrosoftAjax.debug.js' */    }
/*Line 2862 - 'MicrosoftAjax.debug.js' */    if (sign === '') sign = '+';
    
/*Line 2864 - 'MicrosoftAjax.debug.js' */    var exponent;
/*Line 2865 - 'MicrosoftAjax.debug.js' */    var intAndFraction;
/*Line 2866 - 'MicrosoftAjax.debug.js' */    var exponentPos = num.indexOf('e');
/*Line 2867 - 'MicrosoftAjax.debug.js' */    if (exponentPos < 0) exponentPos = num.indexOf('E');
/*Line 2868 - 'MicrosoftAjax.debug.js' */    if (exponentPos < 0) {
/*Line 2869 - 'MicrosoftAjax.debug.js' */        intAndFraction = num;
/*Line 2870 - 'MicrosoftAjax.debug.js' */        exponent = null;
/*Line 2871 - 'MicrosoftAjax.debug.js' */    }
/*Line 2872 - 'MicrosoftAjax.debug.js' */    else {
/*Line 2873 - 'MicrosoftAjax.debug.js' */        intAndFraction = num.substr(0, exponentPos);
/*Line 2874 - 'MicrosoftAjax.debug.js' */        exponent = num.substr(exponentPos + 1);
/*Line 2875 - 'MicrosoftAjax.debug.js' */    }
    
/*Line 2877 - 'MicrosoftAjax.debug.js' */    var integer;
/*Line 2878 - 'MicrosoftAjax.debug.js' */    var fraction;
/*Line 2879 - 'MicrosoftAjax.debug.js' */    var decimalPos = intAndFraction.indexOf(numFormat.NumberDecimalSeparator);
/*Line 2880 - 'MicrosoftAjax.debug.js' */    if (decimalPos < 0) {
/*Line 2881 - 'MicrosoftAjax.debug.js' */        integer = intAndFraction;
/*Line 2882 - 'MicrosoftAjax.debug.js' */        fraction = null;
/*Line 2883 - 'MicrosoftAjax.debug.js' */    }
/*Line 2884 - 'MicrosoftAjax.debug.js' */    else {
/*Line 2885 - 'MicrosoftAjax.debug.js' */        integer = intAndFraction.substr(0, decimalPos);
/*Line 2886 - 'MicrosoftAjax.debug.js' */        fraction = intAndFraction.substr(decimalPos + numFormat.NumberDecimalSeparator.length);
/*Line 2887 - 'MicrosoftAjax.debug.js' */    }
    
/*Line 2889 - 'MicrosoftAjax.debug.js' */    integer = integer.split(numFormat.NumberGroupSeparator).join('');
/*Line 2890 - 'MicrosoftAjax.debug.js' */    var altNumGroupSeparator = numFormat.NumberGroupSeparator.replace(/\u00A0/g, " ");
/*Line 2891 - 'MicrosoftAjax.debug.js' */    if (numFormat.NumberGroupSeparator !== altNumGroupSeparator) {
/*Line 2892 - 'MicrosoftAjax.debug.js' */        integer = integer.split(altNumGroupSeparator).join('');
/*Line 2893 - 'MicrosoftAjax.debug.js' */    }
    
/*Line 2895 - 'MicrosoftAjax.debug.js' */    var p = sign + integer;
/*Line 2896 - 'MicrosoftAjax.debug.js' */    if (fraction !== null) {
/*Line 2897 - 'MicrosoftAjax.debug.js' */        p += '.' + fraction;
/*Line 2898 - 'MicrosoftAjax.debug.js' */    }
/*Line 2899 - 'MicrosoftAjax.debug.js' */    if (exponent !== null) {
/*Line 2900 - 'MicrosoftAjax.debug.js' */        var expSignInfo = Number._parseNumberNegativePattern(exponent, numFormat, 1);
/*Line 2901 - 'MicrosoftAjax.debug.js' */        if (expSignInfo[0] === '') {
/*Line 2902 - 'MicrosoftAjax.debug.js' */            expSignInfo[0] = '+';
/*Line 2903 - 'MicrosoftAjax.debug.js' */        }
/*Line 2904 - 'MicrosoftAjax.debug.js' */        p += 'e' + expSignInfo[0] + expSignInfo[1];
/*Line 2905 - 'MicrosoftAjax.debug.js' */    }
/*Line 2906 - 'MicrosoftAjax.debug.js' */    if (p.match(/^[+-]?\d*\.?\d*(e[+-]?\d+)?$/)) {
/*Line 2907 - 'MicrosoftAjax.debug.js' */        return parseFloat(p);
/*Line 2908 - 'MicrosoftAjax.debug.js' */    }
/*Line 2909 - 'MicrosoftAjax.debug.js' */    return Number.NaN;
/*Line 2910 - 'MicrosoftAjax.debug.js' */}
/*Line 2911 - 'MicrosoftAjax.debug.js' */Number._parseNumberNegativePattern = function Number$_parseNumberNegativePattern(value, numFormat, numberNegativePattern) {
/*Line 2912 - 'MicrosoftAjax.debug.js' */    var neg = numFormat.NegativeSign;
/*Line 2913 - 'MicrosoftAjax.debug.js' */    var pos = numFormat.PositiveSign;    
/*Line 2914 - 'MicrosoftAjax.debug.js' */    switch (numberNegativePattern) {
/*Line 2915 - 'MicrosoftAjax.debug.js' */        case 4: 
/*Line 2916 - 'MicrosoftAjax.debug.js' */            neg = ' ' + neg;
/*Line 2917 - 'MicrosoftAjax.debug.js' */            pos = ' ' + pos;
/*Line 2918 - 'MicrosoftAjax.debug.js' */        case 3: 
/*Line 2919 - 'MicrosoftAjax.debug.js' */            if (value.endsWith(neg)) {
/*Line 2920 - 'MicrosoftAjax.debug.js' */                return ['-', value.substr(0, value.length - neg.length)];
/*Line 2921 - 'MicrosoftAjax.debug.js' */            }
/*Line 2922 - 'MicrosoftAjax.debug.js' */            else if (value.endsWith(pos)) {
/*Line 2923 - 'MicrosoftAjax.debug.js' */                return ['+', value.substr(0, value.length - pos.length)];
/*Line 2924 - 'MicrosoftAjax.debug.js' */            }
/*Line 2925 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2926 - 'MicrosoftAjax.debug.js' */        case 2: 
/*Line 2927 - 'MicrosoftAjax.debug.js' */            neg += ' ';
/*Line 2928 - 'MicrosoftAjax.debug.js' */            pos += ' ';
/*Line 2929 - 'MicrosoftAjax.debug.js' */        case 1: 
/*Line 2930 - 'MicrosoftAjax.debug.js' */            if (value.startsWith(neg)) {
/*Line 2931 - 'MicrosoftAjax.debug.js' */                return ['-', value.substr(neg.length)];
/*Line 2932 - 'MicrosoftAjax.debug.js' */            }
/*Line 2933 - 'MicrosoftAjax.debug.js' */            else if (value.startsWith(pos)) {
/*Line 2934 - 'MicrosoftAjax.debug.js' */                return ['+', value.substr(pos.length)];
/*Line 2935 - 'MicrosoftAjax.debug.js' */            }
/*Line 2936 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2937 - 'MicrosoftAjax.debug.js' */        case 0: 
/*Line 2938 - 'MicrosoftAjax.debug.js' */            if (value.startsWith('(') && value.endsWith(')')) {
/*Line 2939 - 'MicrosoftAjax.debug.js' */                return ['-', value.substr(1, value.length - 2)];
/*Line 2940 - 'MicrosoftAjax.debug.js' */            }
/*Line 2941 - 'MicrosoftAjax.debug.js' */            break;
/*Line 2942 - 'MicrosoftAjax.debug.js' */        default:
/*Line 2943 - 'MicrosoftAjax.debug.js' */            Sys.Debug.fail("");
/*Line 2944 - 'MicrosoftAjax.debug.js' */    }
/*Line 2945 - 'MicrosoftAjax.debug.js' */    return ['', value];
/*Line 2946 - 'MicrosoftAjax.debug.js' */}
/*Line 2947 - 'MicrosoftAjax.debug.js' */Number.prototype.format = function Number$format(format) {
/*Line 2948 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Number.format" />
/*Line 2949 - 'MicrosoftAjax.debug.js' */    /// <param name="format" type="String"></param>
/*Line 2950 - 'MicrosoftAjax.debug.js' */    /// <returns type="String"></returns>
/*Line 2951 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 2952 - 'MicrosoftAjax.debug.js' */        {name: "format", type: String}
/*Line 2953 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 2954 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 2955 - 'MicrosoftAjax.debug.js' */    return this._toFormattedString(format, Sys.CultureInfo.InvariantCulture);
/*Line 2956 - 'MicrosoftAjax.debug.js' */}
/*Line 2957 - 'MicrosoftAjax.debug.js' */Number.prototype.localeFormat = function Number$localeFormat(format) {
/*Line 2958 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Number.localeFormat" />
/*Line 2959 - 'MicrosoftAjax.debug.js' */    /// <param name="format" type="String"></param>
/*Line 2960 - 'MicrosoftAjax.debug.js' */    /// <returns type="String"></returns>
/*Line 2961 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 2962 - 'MicrosoftAjax.debug.js' */        {name: "format", type: String}
/*Line 2963 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 2964 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 2965 - 'MicrosoftAjax.debug.js' */    return this._toFormattedString(format, Sys.CultureInfo.CurrentCulture);
/*Line 2966 - 'MicrosoftAjax.debug.js' */}
/*Line 2967 - 'MicrosoftAjax.debug.js' */Number.prototype._toFormattedString = function Number$_toFormattedString(format, cultureInfo) {
/*Line 2968 - 'MicrosoftAjax.debug.js' */    if (!format || (format.length === 0) || (format === 'i')) {
/*Line 2969 - 'MicrosoftAjax.debug.js' */        if (cultureInfo && (cultureInfo.name.length > 0)) {
/*Line 2970 - 'MicrosoftAjax.debug.js' */            return this.toLocaleString();
/*Line 2971 - 'MicrosoftAjax.debug.js' */        }
/*Line 2972 - 'MicrosoftAjax.debug.js' */        else {
/*Line 2973 - 'MicrosoftAjax.debug.js' */            return this.toString();
/*Line 2974 - 'MicrosoftAjax.debug.js' */        }
/*Line 2975 - 'MicrosoftAjax.debug.js' */    }
    
/*Line 2977 - 'MicrosoftAjax.debug.js' */    var _percentPositivePattern = ["n %", "n%", "%n" ];
/*Line 2978 - 'MicrosoftAjax.debug.js' */    var _percentNegativePattern = ["-n %", "-n%", "-%n"];
/*Line 2979 - 'MicrosoftAjax.debug.js' */    var _numberNegativePattern = ["(n)","-n","- n","n-","n -"];
/*Line 2980 - 'MicrosoftAjax.debug.js' */    var _currencyPositivePattern = ["$n","n$","$ n","n $"];
/*Line 2981 - 'MicrosoftAjax.debug.js' */    var _currencyNegativePattern = ["($n)","-$n","$-n","$n-","(n$)","-n$","n-$","n$-","-n $","-$ n","n $-","$ n-","$ -n","n- $","($ n)","(n $)"];
/*Line 2982 - 'MicrosoftAjax.debug.js' */    function zeroPad(str, count, left) {
/*Line 2983 - 'MicrosoftAjax.debug.js' */        for (var l=str.length; l < count; l++) {
/*Line 2984 - 'MicrosoftAjax.debug.js' */            str = (left ? ('0' + str) : (str + '0'));
/*Line 2985 - 'MicrosoftAjax.debug.js' */        }
/*Line 2986 - 'MicrosoftAjax.debug.js' */        return str;
/*Line 2987 - 'MicrosoftAjax.debug.js' */    }
    
/*Line 2989 - 'MicrosoftAjax.debug.js' */    function expandNumber(number, precision, groupSizes, sep, decimalChar) {
/*Line 2990 - 'MicrosoftAjax.debug.js' */        Sys.Debug.assert(groupSizes.length > 0, "groupSizes must be an array of at least 1");
/*Line 2991 - 'MicrosoftAjax.debug.js' */        var curSize = groupSizes[0];
/*Line 2992 - 'MicrosoftAjax.debug.js' */        var curGroupIndex = 1;
/*Line 2993 - 'MicrosoftAjax.debug.js' */        var factor = Math.pow(10, precision);
/*Line 2994 - 'MicrosoftAjax.debug.js' */        var rounded = (Math.round(number * factor) / factor);
/*Line 2995 - 'MicrosoftAjax.debug.js' */        if (!isFinite(rounded)) {
/*Line 2996 - 'MicrosoftAjax.debug.js' */            rounded = number;
/*Line 2997 - 'MicrosoftAjax.debug.js' */        }
/*Line 2998 - 'MicrosoftAjax.debug.js' */        number = rounded;
        
/*Line 3000 - 'MicrosoftAjax.debug.js' */        var numberString = number.toString();
/*Line 3001 - 'MicrosoftAjax.debug.js' */        var right = "";
/*Line 3002 - 'MicrosoftAjax.debug.js' */        var exponent;
        
        
/*Line 3005 - 'MicrosoftAjax.debug.js' */        var split = numberString.split(/e/i);
/*Line 3006 - 'MicrosoftAjax.debug.js' */        numberString = split[0];
/*Line 3007 - 'MicrosoftAjax.debug.js' */        exponent = (split.length > 1 ? parseInt(split[1]) : 0);
/*Line 3008 - 'MicrosoftAjax.debug.js' */        split = numberString.split('.');
/*Line 3009 - 'MicrosoftAjax.debug.js' */        numberString = split[0];
/*Line 3010 - 'MicrosoftAjax.debug.js' */        right = split.length > 1 ? split[1] : "";
        
/*Line 3012 - 'MicrosoftAjax.debug.js' */        var l;
/*Line 3013 - 'MicrosoftAjax.debug.js' */        if (exponent > 0) {
/*Line 3014 - 'MicrosoftAjax.debug.js' */            right = zeroPad(right, exponent, false);
/*Line 3015 - 'MicrosoftAjax.debug.js' */            numberString += right.slice(0, exponent);
/*Line 3016 - 'MicrosoftAjax.debug.js' */            right = right.substr(exponent);
/*Line 3017 - 'MicrosoftAjax.debug.js' */        }
/*Line 3018 - 'MicrosoftAjax.debug.js' */        else if (exponent < 0) {
/*Line 3019 - 'MicrosoftAjax.debug.js' */            exponent = -exponent;
/*Line 3020 - 'MicrosoftAjax.debug.js' */            numberString = zeroPad(numberString, exponent+1, true);
/*Line 3021 - 'MicrosoftAjax.debug.js' */            right = numberString.slice(-exponent, numberString.length) + right;
/*Line 3022 - 'MicrosoftAjax.debug.js' */            numberString = numberString.slice(0, -exponent);
/*Line 3023 - 'MicrosoftAjax.debug.js' */        }
/*Line 3024 - 'MicrosoftAjax.debug.js' */        if (precision > 0) {
/*Line 3025 - 'MicrosoftAjax.debug.js' */            if (right.length > precision) {
/*Line 3026 - 'MicrosoftAjax.debug.js' */                right = right.slice(0, precision);
/*Line 3027 - 'MicrosoftAjax.debug.js' */            }
/*Line 3028 - 'MicrosoftAjax.debug.js' */            else {
/*Line 3029 - 'MicrosoftAjax.debug.js' */                right = zeroPad(right, precision, false);
/*Line 3030 - 'MicrosoftAjax.debug.js' */            }
/*Line 3031 - 'MicrosoftAjax.debug.js' */            right = decimalChar + right;
/*Line 3032 - 'MicrosoftAjax.debug.js' */        }
/*Line 3033 - 'MicrosoftAjax.debug.js' */        else { 
/*Line 3034 - 'MicrosoftAjax.debug.js' */            right = "";
/*Line 3035 - 'MicrosoftAjax.debug.js' */        }
/*Line 3036 - 'MicrosoftAjax.debug.js' */        var stringIndex = numberString.length-1;
/*Line 3037 - 'MicrosoftAjax.debug.js' */        var ret = "";
/*Line 3038 - 'MicrosoftAjax.debug.js' */        while (stringIndex >= 0) {
/*Line 3039 - 'MicrosoftAjax.debug.js' */            if (curSize === 0 || curSize > stringIndex) {
/*Line 3040 - 'MicrosoftAjax.debug.js' */                if (ret.length > 0)
/*Line 3041 - 'MicrosoftAjax.debug.js' */                    return numberString.slice(0, stringIndex + 1) + sep + ret + right;
/*Line 3042 - 'MicrosoftAjax.debug.js' */                else
/*Line 3043 - 'MicrosoftAjax.debug.js' */                    return numberString.slice(0, stringIndex + 1) + right;
/*Line 3044 - 'MicrosoftAjax.debug.js' */            }
/*Line 3045 - 'MicrosoftAjax.debug.js' */            if (ret.length > 0)
/*Line 3046 - 'MicrosoftAjax.debug.js' */                ret = numberString.slice(stringIndex - curSize + 1, stringIndex+1) + sep + ret;
/*Line 3047 - 'MicrosoftAjax.debug.js' */            else
/*Line 3048 - 'MicrosoftAjax.debug.js' */                ret = numberString.slice(stringIndex - curSize + 1, stringIndex+1);
/*Line 3049 - 'MicrosoftAjax.debug.js' */            stringIndex -= curSize;
/*Line 3050 - 'MicrosoftAjax.debug.js' */            if (curGroupIndex < groupSizes.length) {
/*Line 3051 - 'MicrosoftAjax.debug.js' */                curSize = groupSizes[curGroupIndex];
/*Line 3052 - 'MicrosoftAjax.debug.js' */                curGroupIndex++;
/*Line 3053 - 'MicrosoftAjax.debug.js' */            }
/*Line 3054 - 'MicrosoftAjax.debug.js' */        }
/*Line 3055 - 'MicrosoftAjax.debug.js' */        return numberString.slice(0, stringIndex + 1) + sep + ret + right;
/*Line 3056 - 'MicrosoftAjax.debug.js' */    }
/*Line 3057 - 'MicrosoftAjax.debug.js' */    var nf = cultureInfo.numberFormat;
/*Line 3058 - 'MicrosoftAjax.debug.js' */    var number = Math.abs(this);
/*Line 3059 - 'MicrosoftAjax.debug.js' */    if (!format)
/*Line 3060 - 'MicrosoftAjax.debug.js' */        format = "D";
/*Line 3061 - 'MicrosoftAjax.debug.js' */    var precision = -1;
/*Line 3062 - 'MicrosoftAjax.debug.js' */    if (format.length > 1) precision = parseInt(format.slice(1), 10);
/*Line 3063 - 'MicrosoftAjax.debug.js' */    var pattern;
/*Line 3064 - 'MicrosoftAjax.debug.js' */    switch (format.charAt(0)) {
/*Line 3065 - 'MicrosoftAjax.debug.js' */    case "d":
/*Line 3066 - 'MicrosoftAjax.debug.js' */    case "D":
/*Line 3067 - 'MicrosoftAjax.debug.js' */        pattern = 'n';
/*Line 3068 - 'MicrosoftAjax.debug.js' */        if (precision !== -1) {
/*Line 3069 - 'MicrosoftAjax.debug.js' */            number = zeroPad(""+number, precision, true);
/*Line 3070 - 'MicrosoftAjax.debug.js' */        }
/*Line 3071 - 'MicrosoftAjax.debug.js' */        if (this < 0) number = -number;
/*Line 3072 - 'MicrosoftAjax.debug.js' */        break;
/*Line 3073 - 'MicrosoftAjax.debug.js' */    case "c":
/*Line 3074 - 'MicrosoftAjax.debug.js' */    case "C":
/*Line 3075 - 'MicrosoftAjax.debug.js' */        if (this < 0) pattern = _currencyNegativePattern[nf.CurrencyNegativePattern];
/*Line 3076 - 'MicrosoftAjax.debug.js' */        else pattern = _currencyPositivePattern[nf.CurrencyPositivePattern];
/*Line 3077 - 'MicrosoftAjax.debug.js' */        if (precision === -1) precision = nf.CurrencyDecimalDigits;
/*Line 3078 - 'MicrosoftAjax.debug.js' */        number = expandNumber(Math.abs(this), precision, nf.CurrencyGroupSizes, nf.CurrencyGroupSeparator, nf.CurrencyDecimalSeparator);
/*Line 3079 - 'MicrosoftAjax.debug.js' */        break;
/*Line 3080 - 'MicrosoftAjax.debug.js' */    case "n":
/*Line 3081 - 'MicrosoftAjax.debug.js' */    case "N":
/*Line 3082 - 'MicrosoftAjax.debug.js' */        if (this < 0) pattern = _numberNegativePattern[nf.NumberNegativePattern];
/*Line 3083 - 'MicrosoftAjax.debug.js' */        else pattern = 'n';
/*Line 3084 - 'MicrosoftAjax.debug.js' */        if (precision === -1) precision = nf.NumberDecimalDigits;
/*Line 3085 - 'MicrosoftAjax.debug.js' */        number = expandNumber(Math.abs(this), precision, nf.NumberGroupSizes, nf.NumberGroupSeparator, nf.NumberDecimalSeparator);
/*Line 3086 - 'MicrosoftAjax.debug.js' */        break;
/*Line 3087 - 'MicrosoftAjax.debug.js' */    case "p":
/*Line 3088 - 'MicrosoftAjax.debug.js' */    case "P":
/*Line 3089 - 'MicrosoftAjax.debug.js' */        if (this < 0) pattern = _percentNegativePattern[nf.PercentNegativePattern];
/*Line 3090 - 'MicrosoftAjax.debug.js' */        else pattern = _percentPositivePattern[nf.PercentPositivePattern];
/*Line 3091 - 'MicrosoftAjax.debug.js' */        if (precision === -1) precision = nf.PercentDecimalDigits;
/*Line 3092 - 'MicrosoftAjax.debug.js' */        number = expandNumber(Math.abs(this) * 100, precision, nf.PercentGroupSizes, nf.PercentGroupSeparator, nf.PercentDecimalSeparator);
/*Line 3093 - 'MicrosoftAjax.debug.js' */        break;
/*Line 3094 - 'MicrosoftAjax.debug.js' */    default:
/*Line 3095 - 'MicrosoftAjax.debug.js' */        throw Error.format(Sys.Res.formatBadFormatSpecifier);
/*Line 3096 - 'MicrosoftAjax.debug.js' */    }
/*Line 3097 - 'MicrosoftAjax.debug.js' */    var regex = /n|\$|-|%/g;
/*Line 3098 - 'MicrosoftAjax.debug.js' */    var ret = "";
/*Line 3099 - 'MicrosoftAjax.debug.js' */    for (;;) {
/*Line 3100 - 'MicrosoftAjax.debug.js' */        var index = regex.lastIndex;
/*Line 3101 - 'MicrosoftAjax.debug.js' */        var ar = regex.exec(pattern);
/*Line 3102 - 'MicrosoftAjax.debug.js' */        ret += pattern.slice(index, ar ? ar.index : pattern.length);
/*Line 3103 - 'MicrosoftAjax.debug.js' */        if (!ar)
/*Line 3104 - 'MicrosoftAjax.debug.js' */            break;
/*Line 3105 - 'MicrosoftAjax.debug.js' */        switch (ar[0]) {
/*Line 3106 - 'MicrosoftAjax.debug.js' */        case "n":
/*Line 3107 - 'MicrosoftAjax.debug.js' */            ret += number;
/*Line 3108 - 'MicrosoftAjax.debug.js' */            break;
/*Line 3109 - 'MicrosoftAjax.debug.js' */        case "$":
/*Line 3110 - 'MicrosoftAjax.debug.js' */            ret += nf.CurrencySymbol;
/*Line 3111 - 'MicrosoftAjax.debug.js' */            break;
/*Line 3112 - 'MicrosoftAjax.debug.js' */        case "-":
/*Line 3113 - 'MicrosoftAjax.debug.js' */            if (/[1-9]/.test(number)) {
/*Line 3114 - 'MicrosoftAjax.debug.js' */                ret += nf.NegativeSign;
/*Line 3115 - 'MicrosoftAjax.debug.js' */            }
/*Line 3116 - 'MicrosoftAjax.debug.js' */            break;
/*Line 3117 - 'MicrosoftAjax.debug.js' */        case "%":
/*Line 3118 - 'MicrosoftAjax.debug.js' */            ret += nf.PercentSymbol;
/*Line 3119 - 'MicrosoftAjax.debug.js' */            break;
/*Line 3120 - 'MicrosoftAjax.debug.js' */        default:
/*Line 3121 - 'MicrosoftAjax.debug.js' */            Sys.Debug.fail("Invalid number format pattern");
/*Line 3122 - 'MicrosoftAjax.debug.js' */        }
/*Line 3123 - 'MicrosoftAjax.debug.js' */    }
/*Line 3124 - 'MicrosoftAjax.debug.js' */    return ret;
/*Line 3125 - 'MicrosoftAjax.debug.js' */}
 
/*Line 3127 - 'MicrosoftAjax.debug.js' */Sys.CultureInfo = function Sys$CultureInfo(name, numberFormat, dateTimeFormat) {
/*Line 3128 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.CultureInfo.#ctor" />
/*Line 3129 - 'MicrosoftAjax.debug.js' */    /// <param name="name" type="String"></param>
/*Line 3130 - 'MicrosoftAjax.debug.js' */    /// <param name="numberFormat" type="Object"></param>
/*Line 3131 - 'MicrosoftAjax.debug.js' */    /// <param name="dateTimeFormat" type="Object"></param>
/*Line 3132 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 3133 - 'MicrosoftAjax.debug.js' */        {name: "name", type: String},
/*Line 3134 - 'MicrosoftAjax.debug.js' */        {name: "numberFormat", type: Object},
/*Line 3135 - 'MicrosoftAjax.debug.js' */        {name: "dateTimeFormat", type: Object}
/*Line 3136 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 3137 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 3138 - 'MicrosoftAjax.debug.js' */    this.name = name;
/*Line 3139 - 'MicrosoftAjax.debug.js' */    this.numberFormat = numberFormat;
/*Line 3140 - 'MicrosoftAjax.debug.js' */    this.dateTimeFormat = dateTimeFormat;
/*Line 3141 - 'MicrosoftAjax.debug.js' */}
/*Line 3142 - 'MicrosoftAjax.debug.js' */    function Sys$CultureInfo$_getDateTimeFormats() {
/*Line 3143 - 'MicrosoftAjax.debug.js' */        if (! this._dateTimeFormats) {
/*Line 3144 - 'MicrosoftAjax.debug.js' */            var dtf = this.dateTimeFormat;
/*Line 3145 - 'MicrosoftAjax.debug.js' */            this._dateTimeFormats =
/*Line 3146 - 'MicrosoftAjax.debug.js' */              [ dtf.MonthDayPattern,
/*Line 3147 - 'MicrosoftAjax.debug.js' */                dtf.YearMonthPattern,
/*Line 3148 - 'MicrosoftAjax.debug.js' */                dtf.ShortDatePattern,
/*Line 3149 - 'MicrosoftAjax.debug.js' */                dtf.ShortTimePattern,
/*Line 3150 - 'MicrosoftAjax.debug.js' */                dtf.LongDatePattern,
/*Line 3151 - 'MicrosoftAjax.debug.js' */                dtf.LongTimePattern,
/*Line 3152 - 'MicrosoftAjax.debug.js' */                dtf.FullDateTimePattern,
/*Line 3153 - 'MicrosoftAjax.debug.js' */                dtf.RFC1123Pattern,
/*Line 3154 - 'MicrosoftAjax.debug.js' */                dtf.SortableDateTimePattern,
/*Line 3155 - 'MicrosoftAjax.debug.js' */                dtf.UniversalSortableDateTimePattern ];
/*Line 3156 - 'MicrosoftAjax.debug.js' */        }
/*Line 3157 - 'MicrosoftAjax.debug.js' */        return this._dateTimeFormats;
/*Line 3158 - 'MicrosoftAjax.debug.js' */    }
/*Line 3159 - 'MicrosoftAjax.debug.js' */    function Sys$CultureInfo$_getIndex(value, a1, a2) {
/*Line 3160 - 'MicrosoftAjax.debug.js' */        var upper = this._toUpper(value),
/*Line 3161 - 'MicrosoftAjax.debug.js' */            i = Array.indexOf(a1, upper);
/*Line 3162 - 'MicrosoftAjax.debug.js' */        if (i === -1) {
/*Line 3163 - 'MicrosoftAjax.debug.js' */            i = Array.indexOf(a2, upper);
/*Line 3164 - 'MicrosoftAjax.debug.js' */        }
/*Line 3165 - 'MicrosoftAjax.debug.js' */        return i;
/*Line 3166 - 'MicrosoftAjax.debug.js' */    }
/*Line 3167 - 'MicrosoftAjax.debug.js' */    function Sys$CultureInfo$_getMonthIndex(value) {
/*Line 3168 - 'MicrosoftAjax.debug.js' */        if (!this._upperMonths) {
/*Line 3169 - 'MicrosoftAjax.debug.js' */            this._upperMonths = this._toUpperArray(this.dateTimeFormat.MonthNames);
/*Line 3170 - 'MicrosoftAjax.debug.js' */            this._upperMonthsGenitive = this._toUpperArray(this.dateTimeFormat.MonthGenitiveNames);
/*Line 3171 - 'MicrosoftAjax.debug.js' */        }
/*Line 3172 - 'MicrosoftAjax.debug.js' */        return this._getIndex(value, this._upperMonths, this._upperMonthsGenitive);
/*Line 3173 - 'MicrosoftAjax.debug.js' */    }
/*Line 3174 - 'MicrosoftAjax.debug.js' */    function Sys$CultureInfo$_getAbbrMonthIndex(value) {
/*Line 3175 - 'MicrosoftAjax.debug.js' */        if (!this._upperAbbrMonths) {
/*Line 3176 - 'MicrosoftAjax.debug.js' */            this._upperAbbrMonths = this._toUpperArray(this.dateTimeFormat.AbbreviatedMonthNames);
/*Line 3177 - 'MicrosoftAjax.debug.js' */            this._upperAbbrMonthsGenitive = this._toUpperArray(this.dateTimeFormat.AbbreviatedMonthGenitiveNames);
/*Line 3178 - 'MicrosoftAjax.debug.js' */        }
/*Line 3179 - 'MicrosoftAjax.debug.js' */        return this._getIndex(value, this._upperAbbrMonths, this._upperAbbrMonthsGenitive);
/*Line 3180 - 'MicrosoftAjax.debug.js' */    }
/*Line 3181 - 'MicrosoftAjax.debug.js' */    function Sys$CultureInfo$_getDayIndex(value) {
/*Line 3182 - 'MicrosoftAjax.debug.js' */        if (!this._upperDays) {
/*Line 3183 - 'MicrosoftAjax.debug.js' */            this._upperDays = this._toUpperArray(this.dateTimeFormat.DayNames);
/*Line 3184 - 'MicrosoftAjax.debug.js' */        }
/*Line 3185 - 'MicrosoftAjax.debug.js' */        return Array.indexOf(this._upperDays, this._toUpper(value));
/*Line 3186 - 'MicrosoftAjax.debug.js' */    }
/*Line 3187 - 'MicrosoftAjax.debug.js' */    function Sys$CultureInfo$_getAbbrDayIndex(value) {
/*Line 3188 - 'MicrosoftAjax.debug.js' */        if (!this._upperAbbrDays) {
/*Line 3189 - 'MicrosoftAjax.debug.js' */            this._upperAbbrDays = this._toUpperArray(this.dateTimeFormat.AbbreviatedDayNames);
/*Line 3190 - 'MicrosoftAjax.debug.js' */        }
/*Line 3191 - 'MicrosoftAjax.debug.js' */        return Array.indexOf(this._upperAbbrDays, this._toUpper(value));
/*Line 3192 - 'MicrosoftAjax.debug.js' */    }
/*Line 3193 - 'MicrosoftAjax.debug.js' */    function Sys$CultureInfo$_toUpperArray(arr) {
/*Line 3194 - 'MicrosoftAjax.debug.js' */        var result = [];
/*Line 3195 - 'MicrosoftAjax.debug.js' */        for (var i = 0, il = arr.length; i < il; i++) {
/*Line 3196 - 'MicrosoftAjax.debug.js' */            result[i] = this._toUpper(arr[i]);
/*Line 3197 - 'MicrosoftAjax.debug.js' */        }
/*Line 3198 - 'MicrosoftAjax.debug.js' */        return result;
/*Line 3199 - 'MicrosoftAjax.debug.js' */    }
/*Line 3200 - 'MicrosoftAjax.debug.js' */    function Sys$CultureInfo$_toUpper(value) {
/*Line 3201 - 'MicrosoftAjax.debug.js' */        return value.split("\u00A0").join(' ').toUpperCase();
/*Line 3202 - 'MicrosoftAjax.debug.js' */    }
/*Line 3203 - 'MicrosoftAjax.debug.js' */Sys.CultureInfo.prototype = {
/*Line 3204 - 'MicrosoftAjax.debug.js' */    _getDateTimeFormats: Sys$CultureInfo$_getDateTimeFormats,
/*Line 3205 - 'MicrosoftAjax.debug.js' */    _getIndex: Sys$CultureInfo$_getIndex,
/*Line 3206 - 'MicrosoftAjax.debug.js' */    _getMonthIndex: Sys$CultureInfo$_getMonthIndex,
/*Line 3207 - 'MicrosoftAjax.debug.js' */    _getAbbrMonthIndex: Sys$CultureInfo$_getAbbrMonthIndex,
/*Line 3208 - 'MicrosoftAjax.debug.js' */    _getDayIndex: Sys$CultureInfo$_getDayIndex,
/*Line 3209 - 'MicrosoftAjax.debug.js' */    _getAbbrDayIndex: Sys$CultureInfo$_getAbbrDayIndex,
/*Line 3210 - 'MicrosoftAjax.debug.js' */    _toUpperArray: Sys$CultureInfo$_toUpperArray,
/*Line 3211 - 'MicrosoftAjax.debug.js' */    _toUpper: Sys$CultureInfo$_toUpper
/*Line 3212 - 'MicrosoftAjax.debug.js' */}
/*Line 3213 - 'MicrosoftAjax.debug.js' */Sys.CultureInfo.registerClass('Sys.CultureInfo');
/*Line 3214 - 'MicrosoftAjax.debug.js' */Sys.CultureInfo._parse = function Sys$CultureInfo$_parse(value) {
/*Line 3215 - 'MicrosoftAjax.debug.js' */    var dtf = value.dateTimeFormat;
/*Line 3216 - 'MicrosoftAjax.debug.js' */    if (dtf && !dtf.eras) {
/*Line 3217 - 'MicrosoftAjax.debug.js' */        dtf.eras = value.eras;
/*Line 3218 - 'MicrosoftAjax.debug.js' */    }
/*Line 3219 - 'MicrosoftAjax.debug.js' */    return new Sys.CultureInfo(value.name, value.numberFormat, dtf);
/*Line 3220 - 'MicrosoftAjax.debug.js' */}
/*Line 3221 - 'MicrosoftAjax.debug.js' */Sys.CultureInfo.InvariantCulture = Sys.CultureInfo._parse({"name":"","numberFormat":{"CurrencyDecimalDigits":2,"CurrencyDecimalSeparator":".","IsReadOnly":true,"CurrencyGroupSizes":[3],"NumberGroupSizes":[3],"PercentGroupSizes":[3],"CurrencyGroupSeparator":",","CurrencySymbol":"\u00A4","NaNSymbol":"NaN","CurrencyNegativePattern":0,"NumberNegativePattern":1,"PercentPositivePattern":0,"PercentNegativePattern":0,"NegativeInfinitySymbol":"-Infinity","NegativeSign":"-","NumberDecimalDigits":2,"NumberDecimalSeparator":".","NumberGroupSeparator":",","CurrencyPositivePattern":0,"PositiveInfinitySymbol":"Infinity","PositiveSign":"+","PercentDecimalDigits":2,"PercentDecimalSeparator":".","PercentGroupSeparator":",","PercentSymbol":"%","PerMilleSymbol":"\u2030","NativeDigits":["0","1","2","3","4","5","6","7","8","9"],"DigitSubstitution":1},"dateTimeFormat":{"AMDesignator":"AM","Calendar":{"MinSupportedDateTime":"@-62135568000000@","MaxSupportedDateTime":"@253402300799999@","AlgorithmType":1,"CalendarType":1,"Eras":[1],"TwoDigitYearMax":2029,"IsReadOnly":true},"DateSeparator":"/","FirstDayOfWeek":0,"CalendarWeekRule":0,"FullDateTimePattern":"dddd, dd MMMM yyyy HH:mm:ss","LongDatePattern":"dddd, dd MMMM yyyy","LongTimePattern":"HH:mm:ss","MonthDayPattern":"MMMM dd","PMDesignator":"PM","RFC1123Pattern":"ddd, dd MMM yyyy HH\':\'mm\':\'ss \'GMT\'","ShortDatePattern":"MM/dd/yyyy","ShortTimePattern":"HH:mm","SortableDateTimePattern":"yyyy\'-\'MM\'-\'dd\'T\'HH\':\'mm\':\'ss","TimeSeparator":":","UniversalSortableDateTimePattern":"yyyy\'-\'MM\'-\'dd HH\':\'mm\':\'ss\'Z\'","YearMonthPattern":"yyyy MMMM","AbbreviatedDayNames":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"ShortestDayNames":["Su","Mo","Tu","We","Th","Fr","Sa"],"DayNames":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"AbbreviatedMonthNames":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",""],"MonthNames":["January","February","March","April","May","June","July","August","September","October","November","December",""],"IsReadOnly":true,"NativeCalendarName":"Gregorian Calendar","AbbreviatedMonthGenitiveNames":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",""],"MonthGenitiveNames":["January","February","March","April","May","June","July","August","September","October","November","December",""]},"eras":[1,"A.D.",null,0]});
/*Line 3222 - 'MicrosoftAjax.debug.js' */if (typeof(__cultureInfo) === "object") {
/*Line 3223 - 'MicrosoftAjax.debug.js' */    Sys.CultureInfo.CurrentCulture = Sys.CultureInfo._parse(__cultureInfo);
/*Line 3224 - 'MicrosoftAjax.debug.js' */    delete __cultureInfo;    
/*Line 3225 - 'MicrosoftAjax.debug.js' */}
/*Line 3226 - 'MicrosoftAjax.debug.js' */else {
/*Line 3227 - 'MicrosoftAjax.debug.js' */    Sys.CultureInfo.CurrentCulture = Sys.CultureInfo._parse({"name":"en-US","numberFormat":{"CurrencyDecimalDigits":2,"CurrencyDecimalSeparator":".","IsReadOnly":false,"CurrencyGroupSizes":[3],"NumberGroupSizes":[3],"PercentGroupSizes":[3],"CurrencyGroupSeparator":",","CurrencySymbol":"$","NaNSymbol":"NaN","CurrencyNegativePattern":0,"NumberNegativePattern":1,"PercentPositivePattern":0,"PercentNegativePattern":0,"NegativeInfinitySymbol":"-Infinity","NegativeSign":"-","NumberDecimalDigits":2,"NumberDecimalSeparator":".","NumberGroupSeparator":",","CurrencyPositivePattern":0,"PositiveInfinitySymbol":"Infinity","PositiveSign":"+","PercentDecimalDigits":2,"PercentDecimalSeparator":".","PercentGroupSeparator":",","PercentSymbol":"%","PerMilleSymbol":"\u2030","NativeDigits":["0","1","2","3","4","5","6","7","8","9"],"DigitSubstitution":1},"dateTimeFormat":{"AMDesignator":"AM","Calendar":{"MinSupportedDateTime":"@-62135568000000@","MaxSupportedDateTime":"@253402300799999@","AlgorithmType":1,"CalendarType":1,"Eras":[1],"TwoDigitYearMax":2029,"IsReadOnly":false},"DateSeparator":"/","FirstDayOfWeek":0,"CalendarWeekRule":0,"FullDateTimePattern":"dddd, MMMM dd, yyyy h:mm:ss tt","LongDatePattern":"dddd, MMMM dd, yyyy","LongTimePattern":"h:mm:ss tt","MonthDayPattern":"MMMM dd","PMDesignator":"PM","RFC1123Pattern":"ddd, dd MMM yyyy HH\':\'mm\':\'ss \'GMT\'","ShortDatePattern":"M/d/yyyy","ShortTimePattern":"h:mm tt","SortableDateTimePattern":"yyyy\'-\'MM\'-\'dd\'T\'HH\':\'mm\':\'ss","TimeSeparator":":","UniversalSortableDateTimePattern":"yyyy\'-\'MM\'-\'dd HH\':\'mm\':\'ss\'Z\'","YearMonthPattern":"MMMM, yyyy","AbbreviatedDayNames":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"ShortestDayNames":["Su","Mo","Tu","We","Th","Fr","Sa"],"DayNames":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"AbbreviatedMonthNames":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",""],"MonthNames":["January","February","March","April","May","June","July","August","September","October","November","December",""],"IsReadOnly":false,"NativeCalendarName":"Gregorian Calendar","AbbreviatedMonthGenitiveNames":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",""],"MonthGenitiveNames":["January","February","March","April","May","June","July","August","September","October","November","December",""]},"eras":[1,"A.D.",null,0]});
/*Line 3228 - 'MicrosoftAjax.debug.js' */}
/*Line 3229 - 'MicrosoftAjax.debug.js' */Type.registerNamespace('Sys.Serialization');
/*Line 3230 - 'MicrosoftAjax.debug.js' */Sys.Serialization.JavaScriptSerializer = function Sys$Serialization$JavaScriptSerializer() {
/*Line 3231 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Serialization.JavaScriptSerializer.#ctor" />
/*Line 3232 - 'MicrosoftAjax.debug.js' */    if (arguments.length !== 0) throw Error.parameterCount();
/*Line 3233 - 'MicrosoftAjax.debug.js' */}
/*Line 3234 - 'MicrosoftAjax.debug.js' */Sys.Serialization.JavaScriptSerializer.registerClass('Sys.Serialization.JavaScriptSerializer');
/*Line 3235 - 'MicrosoftAjax.debug.js' */Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs = [];
/*Line 3236 - 'MicrosoftAjax.debug.js' */Sys.Serialization.JavaScriptSerializer._charsToEscape = [];
/*Line 3237 - 'MicrosoftAjax.debug.js' */Sys.Serialization.JavaScriptSerializer._dateRegEx = new RegExp('(^|[^\\\\])\\"\\\\/Date\\((-?[0-9]+)(?:[a-zA-Z]|(?:\\+|-)[0-9]{4})?\\)\\\\/\\"', 'g');
/*Line 3238 - 'MicrosoftAjax.debug.js' */Sys.Serialization.JavaScriptSerializer._escapeChars = {};
/*Line 3239 - 'MicrosoftAjax.debug.js' */Sys.Serialization.JavaScriptSerializer._escapeRegEx = new RegExp('["\\\\\\x00-\\x1F]', 'i');
/*Line 3240 - 'MicrosoftAjax.debug.js' */Sys.Serialization.JavaScriptSerializer._escapeRegExGlobal = new RegExp('["\\\\\\x00-\\x1F]', 'g');
/*Line 3241 - 'MicrosoftAjax.debug.js' */Sys.Serialization.JavaScriptSerializer._jsonRegEx = new RegExp('[^,:{}\\[\\]0-9.\\-+Eaeflnr-u \\n\\r\\t]', 'g');
/*Line 3242 - 'MicrosoftAjax.debug.js' */Sys.Serialization.JavaScriptSerializer._jsonStringRegEx = new RegExp('"(\\\\.|[^"\\\\])*"', 'g');
/*Line 3243 - 'MicrosoftAjax.debug.js' */Sys.Serialization.JavaScriptSerializer._serverTypeFieldName = '__type';
/*Line 3244 - 'MicrosoftAjax.debug.js' */Sys.Serialization.JavaScriptSerializer._init = function Sys$Serialization$JavaScriptSerializer$_init() {
/*Line 3245 - 'MicrosoftAjax.debug.js' */    var replaceChars = ['\\u0000','\\u0001','\\u0002','\\u0003','\\u0004','\\u0005','\\u0006','\\u0007',
/*Line 3246 - 'MicrosoftAjax.debug.js' */                        '\\b','\\t','\\n','\\u000b','\\f','\\r','\\u000e','\\u000f','\\u0010','\\u0011',
/*Line 3247 - 'MicrosoftAjax.debug.js' */                        '\\u0012','\\u0013','\\u0014','\\u0015','\\u0016','\\u0017','\\u0018','\\u0019',
/*Line 3248 - 'MicrosoftAjax.debug.js' */                        '\\u001a','\\u001b','\\u001c','\\u001d','\\u001e','\\u001f'];
/*Line 3249 - 'MicrosoftAjax.debug.js' */    Sys.Serialization.JavaScriptSerializer._charsToEscape[0] = '\\';
/*Line 3250 - 'MicrosoftAjax.debug.js' */    Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs['\\'] = new RegExp('\\\\', 'g');
/*Line 3251 - 'MicrosoftAjax.debug.js' */    Sys.Serialization.JavaScriptSerializer._escapeChars['\\'] = '\\\\';
/*Line 3252 - 'MicrosoftAjax.debug.js' */    Sys.Serialization.JavaScriptSerializer._charsToEscape[1] = '"';
/*Line 3253 - 'MicrosoftAjax.debug.js' */    Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs['"'] = new RegExp('"', 'g');
/*Line 3254 - 'MicrosoftAjax.debug.js' */    Sys.Serialization.JavaScriptSerializer._escapeChars['"'] = '\\"';
/*Line 3255 - 'MicrosoftAjax.debug.js' */    for (var i = 0; i < 32; i++) {
/*Line 3256 - 'MicrosoftAjax.debug.js' */        var c = String.fromCharCode(i);
/*Line 3257 - 'MicrosoftAjax.debug.js' */        Sys.Serialization.JavaScriptSerializer._charsToEscape[i+2] = c;
/*Line 3258 - 'MicrosoftAjax.debug.js' */        Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs[c] = new RegExp(c, 'g');
/*Line 3259 - 'MicrosoftAjax.debug.js' */        Sys.Serialization.JavaScriptSerializer._escapeChars[c] = replaceChars[i];
/*Line 3260 - 'MicrosoftAjax.debug.js' */    }
/*Line 3261 - 'MicrosoftAjax.debug.js' */}
/*Line 3262 - 'MicrosoftAjax.debug.js' */Sys.Serialization.JavaScriptSerializer._serializeBooleanWithBuilder = function Sys$Serialization$JavaScriptSerializer$_serializeBooleanWithBuilder(object, stringBuilder) {
/*Line 3263 - 'MicrosoftAjax.debug.js' */    stringBuilder.append(object.toString());
/*Line 3264 - 'MicrosoftAjax.debug.js' */}
/*Line 3265 - 'MicrosoftAjax.debug.js' */Sys.Serialization.JavaScriptSerializer._serializeNumberWithBuilder = function Sys$Serialization$JavaScriptSerializer$_serializeNumberWithBuilder(object, stringBuilder) {
/*Line 3266 - 'MicrosoftAjax.debug.js' */    if (isFinite(object)) {
/*Line 3267 - 'MicrosoftAjax.debug.js' */        stringBuilder.append(String(object));
/*Line 3268 - 'MicrosoftAjax.debug.js' */    }
/*Line 3269 - 'MicrosoftAjax.debug.js' */    else {
/*Line 3270 - 'MicrosoftAjax.debug.js' */        throw Error.invalidOperation(Sys.Res.cannotSerializeNonFiniteNumbers);
/*Line 3271 - 'MicrosoftAjax.debug.js' */    }
/*Line 3272 - 'MicrosoftAjax.debug.js' */}
/*Line 3273 - 'MicrosoftAjax.debug.js' */Sys.Serialization.JavaScriptSerializer._serializeStringWithBuilder = function Sys$Serialization$JavaScriptSerializer$_serializeStringWithBuilder(string, stringBuilder) {
/*Line 3274 - 'MicrosoftAjax.debug.js' */    stringBuilder.append('"');
/*Line 3275 - 'MicrosoftAjax.debug.js' */    if (Sys.Serialization.JavaScriptSerializer._escapeRegEx.test(string)) {
/*Line 3276 - 'MicrosoftAjax.debug.js' */        if (Sys.Serialization.JavaScriptSerializer._charsToEscape.length === 0) {
/*Line 3277 - 'MicrosoftAjax.debug.js' */            Sys.Serialization.JavaScriptSerializer._init();
/*Line 3278 - 'MicrosoftAjax.debug.js' */        }
/*Line 3279 - 'MicrosoftAjax.debug.js' */        if (string.length < 128) {
/*Line 3280 - 'MicrosoftAjax.debug.js' */            string = string.replace(Sys.Serialization.JavaScriptSerializer._escapeRegExGlobal,
/*Line 3281 - 'MicrosoftAjax.debug.js' */                function(x) { return Sys.Serialization.JavaScriptSerializer._escapeChars[x]; });
/*Line 3282 - 'MicrosoftAjax.debug.js' */        }
/*Line 3283 - 'MicrosoftAjax.debug.js' */        else {
/*Line 3284 - 'MicrosoftAjax.debug.js' */            for (var i = 0; i < 34; i++) {
/*Line 3285 - 'MicrosoftAjax.debug.js' */                var c = Sys.Serialization.JavaScriptSerializer._charsToEscape[i];
/*Line 3286 - 'MicrosoftAjax.debug.js' */                if (string.indexOf(c) !== -1) {
/*Line 3287 - 'MicrosoftAjax.debug.js' */                    if (Sys.Browser.agent === Sys.Browser.Opera || Sys.Browser.agent === Sys.Browser.FireFox) {
/*Line 3288 - 'MicrosoftAjax.debug.js' */                        string = string.split(c).join(Sys.Serialization.JavaScriptSerializer._escapeChars[c]);
/*Line 3289 - 'MicrosoftAjax.debug.js' */                    }
/*Line 3290 - 'MicrosoftAjax.debug.js' */                    else {
/*Line 3291 - 'MicrosoftAjax.debug.js' */                        string = string.replace(Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs[c],
/*Line 3292 - 'MicrosoftAjax.debug.js' */                            Sys.Serialization.JavaScriptSerializer._escapeChars[c]);
/*Line 3293 - 'MicrosoftAjax.debug.js' */                    }
/*Line 3294 - 'MicrosoftAjax.debug.js' */                }
/*Line 3295 - 'MicrosoftAjax.debug.js' */            }
/*Line 3296 - 'MicrosoftAjax.debug.js' */       }
/*Line 3297 - 'MicrosoftAjax.debug.js' */    }
/*Line 3298 - 'MicrosoftAjax.debug.js' */    stringBuilder.append(string);
/*Line 3299 - 'MicrosoftAjax.debug.js' */    stringBuilder.append('"');
/*Line 3300 - 'MicrosoftAjax.debug.js' */}
/*Line 3301 - 'MicrosoftAjax.debug.js' */Sys.Serialization.JavaScriptSerializer._serializeWithBuilder = function Sys$Serialization$JavaScriptSerializer$_serializeWithBuilder(object, stringBuilder, sort, prevObjects) {
/*Line 3302 - 'MicrosoftAjax.debug.js' */    var i;
/*Line 3303 - 'MicrosoftAjax.debug.js' */    switch (typeof object) {
/*Line 3304 - 'MicrosoftAjax.debug.js' */    case 'object':
/*Line 3305 - 'MicrosoftAjax.debug.js' */        if (object) {
/*Line 3306 - 'MicrosoftAjax.debug.js' */            if (prevObjects){
/*Line 3307 - 'MicrosoftAjax.debug.js' */                for( var j = 0; j < prevObjects.length; j++) {
/*Line 3308 - 'MicrosoftAjax.debug.js' */                    if (prevObjects[j] === object) {
/*Line 3309 - 'MicrosoftAjax.debug.js' */                        throw Error.invalidOperation(Sys.Res.cannotSerializeObjectWithCycle);
/*Line 3310 - 'MicrosoftAjax.debug.js' */                    }
/*Line 3311 - 'MicrosoftAjax.debug.js' */                }
/*Line 3312 - 'MicrosoftAjax.debug.js' */            }
/*Line 3313 - 'MicrosoftAjax.debug.js' */            else {
/*Line 3314 - 'MicrosoftAjax.debug.js' */                prevObjects = new Array();
/*Line 3315 - 'MicrosoftAjax.debug.js' */            }
/*Line 3316 - 'MicrosoftAjax.debug.js' */            try {
/*Line 3317 - 'MicrosoftAjax.debug.js' */                Array.add(prevObjects, object);
                
/*Line 3319 - 'MicrosoftAjax.debug.js' */                if (Number.isInstanceOfType(object)){
/*Line 3320 - 'MicrosoftAjax.debug.js' */                    Sys.Serialization.JavaScriptSerializer._serializeNumberWithBuilder(object, stringBuilder);
/*Line 3321 - 'MicrosoftAjax.debug.js' */                }
/*Line 3322 - 'MicrosoftAjax.debug.js' */                else if (Boolean.isInstanceOfType(object)){
/*Line 3323 - 'MicrosoftAjax.debug.js' */                    Sys.Serialization.JavaScriptSerializer._serializeBooleanWithBuilder(object, stringBuilder);
/*Line 3324 - 'MicrosoftAjax.debug.js' */                }
/*Line 3325 - 'MicrosoftAjax.debug.js' */                else if (String.isInstanceOfType(object)){
/*Line 3326 - 'MicrosoftAjax.debug.js' */                    Sys.Serialization.JavaScriptSerializer._serializeStringWithBuilder(object, stringBuilder);
/*Line 3327 - 'MicrosoftAjax.debug.js' */                }
            
/*Line 3329 - 'MicrosoftAjax.debug.js' */                else if (Array.isInstanceOfType(object)) {
/*Line 3330 - 'MicrosoftAjax.debug.js' */                    stringBuilder.append('[');
                   
/*Line 3332 - 'MicrosoftAjax.debug.js' */                    for (i = 0; i < object.length; ++i) {
/*Line 3333 - 'MicrosoftAjax.debug.js' */                        if (i > 0) {
/*Line 3334 - 'MicrosoftAjax.debug.js' */                            stringBuilder.append(',');
/*Line 3335 - 'MicrosoftAjax.debug.js' */                        }
/*Line 3336 - 'MicrosoftAjax.debug.js' */                        Sys.Serialization.JavaScriptSerializer._serializeWithBuilder(object[i], stringBuilder,false,prevObjects);
/*Line 3337 - 'MicrosoftAjax.debug.js' */                    }
/*Line 3338 - 'MicrosoftAjax.debug.js' */                    stringBuilder.append(']');
/*Line 3339 - 'MicrosoftAjax.debug.js' */                }
/*Line 3340 - 'MicrosoftAjax.debug.js' */                else {
/*Line 3341 - 'MicrosoftAjax.debug.js' */                    if (Date.isInstanceOfType(object)) {
/*Line 3342 - 'MicrosoftAjax.debug.js' */                        stringBuilder.append('"\\/Date(');
/*Line 3343 - 'MicrosoftAjax.debug.js' */                        stringBuilder.append(object.getTime());
/*Line 3344 - 'MicrosoftAjax.debug.js' */                        stringBuilder.append(')\\/"');
/*Line 3345 - 'MicrosoftAjax.debug.js' */                        break;
/*Line 3346 - 'MicrosoftAjax.debug.js' */                    }
/*Line 3347 - 'MicrosoftAjax.debug.js' */                    var properties = [];
/*Line 3348 - 'MicrosoftAjax.debug.js' */                    var propertyCount = 0;
/*Line 3349 - 'MicrosoftAjax.debug.js' */                    for (var name in object) {
/*Line 3350 - 'MicrosoftAjax.debug.js' */                        if (name.startsWith('$')) {
/*Line 3351 - 'MicrosoftAjax.debug.js' */                            continue;
/*Line 3352 - 'MicrosoftAjax.debug.js' */                        }
/*Line 3353 - 'MicrosoftAjax.debug.js' */                        if (name === Sys.Serialization.JavaScriptSerializer._serverTypeFieldName && propertyCount !== 0){
/*Line 3354 - 'MicrosoftAjax.debug.js' */                            properties[propertyCount++] = properties[0];
/*Line 3355 - 'MicrosoftAjax.debug.js' */                            properties[0] = name;
/*Line 3356 - 'MicrosoftAjax.debug.js' */                        }
/*Line 3357 - 'MicrosoftAjax.debug.js' */                        else{
/*Line 3358 - 'MicrosoftAjax.debug.js' */                            properties[propertyCount++] = name;
/*Line 3359 - 'MicrosoftAjax.debug.js' */                        }
/*Line 3360 - 'MicrosoftAjax.debug.js' */                    }
/*Line 3361 - 'MicrosoftAjax.debug.js' */                    if (sort) properties.sort();
/*Line 3362 - 'MicrosoftAjax.debug.js' */                    stringBuilder.append('{');
/*Line 3363 - 'MicrosoftAjax.debug.js' */                    var needComma = false;
                     
/*Line 3365 - 'MicrosoftAjax.debug.js' */                    for (i=0; i<propertyCount; i++) {
/*Line 3366 - 'MicrosoftAjax.debug.js' */                        var value = object[properties[i]];
/*Line 3367 - 'MicrosoftAjax.debug.js' */                        if (typeof value !== 'undefined' && typeof value !== 'function') {
/*Line 3368 - 'MicrosoftAjax.debug.js' */                            if (needComma) {
/*Line 3369 - 'MicrosoftAjax.debug.js' */                                stringBuilder.append(',');
/*Line 3370 - 'MicrosoftAjax.debug.js' */                            }
/*Line 3371 - 'MicrosoftAjax.debug.js' */                            else {
/*Line 3372 - 'MicrosoftAjax.debug.js' */                                needComma = true;
/*Line 3373 - 'MicrosoftAjax.debug.js' */                            }
                           
/*Line 3375 - 'MicrosoftAjax.debug.js' */                            Sys.Serialization.JavaScriptSerializer._serializeWithBuilder(properties[i], stringBuilder, sort, prevObjects);
/*Line 3376 - 'MicrosoftAjax.debug.js' */                            stringBuilder.append(':');
/*Line 3377 - 'MicrosoftAjax.debug.js' */                            Sys.Serialization.JavaScriptSerializer._serializeWithBuilder(value, stringBuilder, sort, prevObjects);
                          
/*Line 3379 - 'MicrosoftAjax.debug.js' */                        }
/*Line 3380 - 'MicrosoftAjax.debug.js' */                    }
/*Line 3381 - 'MicrosoftAjax.debug.js' */                stringBuilder.append('}');
/*Line 3382 - 'MicrosoftAjax.debug.js' */                }
/*Line 3383 - 'MicrosoftAjax.debug.js' */            }
/*Line 3384 - 'MicrosoftAjax.debug.js' */            finally {
/*Line 3385 - 'MicrosoftAjax.debug.js' */                Array.removeAt(prevObjects, prevObjects.length - 1);
/*Line 3386 - 'MicrosoftAjax.debug.js' */            }
/*Line 3387 - 'MicrosoftAjax.debug.js' */        }
/*Line 3388 - 'MicrosoftAjax.debug.js' */        else {
/*Line 3389 - 'MicrosoftAjax.debug.js' */            stringBuilder.append('null');
/*Line 3390 - 'MicrosoftAjax.debug.js' */        }
/*Line 3391 - 'MicrosoftAjax.debug.js' */        break;
/*Line 3392 - 'MicrosoftAjax.debug.js' */    case 'number':
/*Line 3393 - 'MicrosoftAjax.debug.js' */        Sys.Serialization.JavaScriptSerializer._serializeNumberWithBuilder(object, stringBuilder);
/*Line 3394 - 'MicrosoftAjax.debug.js' */        break;
/*Line 3395 - 'MicrosoftAjax.debug.js' */    case 'string':
/*Line 3396 - 'MicrosoftAjax.debug.js' */        Sys.Serialization.JavaScriptSerializer._serializeStringWithBuilder(object, stringBuilder);
/*Line 3397 - 'MicrosoftAjax.debug.js' */        break;
/*Line 3398 - 'MicrosoftAjax.debug.js' */    case 'boolean':
/*Line 3399 - 'MicrosoftAjax.debug.js' */        Sys.Serialization.JavaScriptSerializer._serializeBooleanWithBuilder(object, stringBuilder);
/*Line 3400 - 'MicrosoftAjax.debug.js' */        break;
/*Line 3401 - 'MicrosoftAjax.debug.js' */    default:
/*Line 3402 - 'MicrosoftAjax.debug.js' */        stringBuilder.append('null');
/*Line 3403 - 'MicrosoftAjax.debug.js' */        break;
/*Line 3404 - 'MicrosoftAjax.debug.js' */    }
/*Line 3405 - 'MicrosoftAjax.debug.js' */}
/*Line 3406 - 'MicrosoftAjax.debug.js' */Sys.Serialization.JavaScriptSerializer.serialize = function Sys$Serialization$JavaScriptSerializer$serialize(object) {
/*Line 3407 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Serialization.JavaScriptSerializer.serialize" />
/*Line 3408 - 'MicrosoftAjax.debug.js' */    /// <param name="object" mayBeNull="true"></param>
/*Line 3409 - 'MicrosoftAjax.debug.js' */    /// <returns type="String"></returns>
/*Line 3410 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 3411 - 'MicrosoftAjax.debug.js' */        {name: "object", mayBeNull: true}
/*Line 3412 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 3413 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 3414 - 'MicrosoftAjax.debug.js' */    var stringBuilder = new Sys.StringBuilder();
/*Line 3415 - 'MicrosoftAjax.debug.js' */    Sys.Serialization.JavaScriptSerializer._serializeWithBuilder(object, stringBuilder, false);
/*Line 3416 - 'MicrosoftAjax.debug.js' */    return stringBuilder.toString();
/*Line 3417 - 'MicrosoftAjax.debug.js' */}
/*Line 3418 - 'MicrosoftAjax.debug.js' */Sys.Serialization.JavaScriptSerializer.deserialize = function Sys$Serialization$JavaScriptSerializer$deserialize(data, secure) {
/*Line 3419 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Serialization.JavaScriptSerializer.deserialize" />
/*Line 3420 - 'MicrosoftAjax.debug.js' */    /// <param name="data" type="String"></param>
/*Line 3421 - 'MicrosoftAjax.debug.js' */    /// <param name="secure" type="Boolean" optional="true"></param>
/*Line 3422 - 'MicrosoftAjax.debug.js' */    /// <returns></returns>
/*Line 3423 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 3424 - 'MicrosoftAjax.debug.js' */        {name: "data", type: String},
/*Line 3425 - 'MicrosoftAjax.debug.js' */        {name: "secure", type: Boolean, optional: true}
/*Line 3426 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 3427 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
    
/*Line 3429 - 'MicrosoftAjax.debug.js' */    if (data.length === 0) throw Error.argument('data', Sys.Res.cannotDeserializeEmptyString);
/*Line 3430 - 'MicrosoftAjax.debug.js' */    try {    
/*Line 3431 - 'MicrosoftAjax.debug.js' */        var exp = data.replace(Sys.Serialization.JavaScriptSerializer._dateRegEx, "$1new Date($2)");
        
/*Line 3433 - 'MicrosoftAjax.debug.js' */        if (secure && Sys.Serialization.JavaScriptSerializer._jsonRegEx.test(
/*Line 3434 - 'MicrosoftAjax.debug.js' */             exp.replace(Sys.Serialization.JavaScriptSerializer._jsonStringRegEx, ''))) throw null;
/*Line 3435 - 'MicrosoftAjax.debug.js' */        return eval('(' + exp + ')');
/*Line 3436 - 'MicrosoftAjax.debug.js' */    }
/*Line 3437 - 'MicrosoftAjax.debug.js' */    catch (e) {
/*Line 3438 - 'MicrosoftAjax.debug.js' */         throw Error.argument('data', Sys.Res.cannotDeserializeInvalidJson);
/*Line 3439 - 'MicrosoftAjax.debug.js' */    }
/*Line 3440 - 'MicrosoftAjax.debug.js' */}
/*Line 3441 - 'MicrosoftAjax.debug.js' */Type.registerNamespace('Sys.UI');
 
/*Line 3443 - 'MicrosoftAjax.debug.js' */Sys.EventHandlerList = function Sys$EventHandlerList() {
/*Line 3444 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.EventHandlerList.#ctor" />
/*Line 3445 - 'MicrosoftAjax.debug.js' */    if (arguments.length !== 0) throw Error.parameterCount();
/*Line 3446 - 'MicrosoftAjax.debug.js' */    this._list = {};
/*Line 3447 - 'MicrosoftAjax.debug.js' */}
/*Line 3448 - 'MicrosoftAjax.debug.js' */    function Sys$EventHandlerList$_addHandler(id, handler) {
/*Line 3449 - 'MicrosoftAjax.debug.js' */        Array.add(this._getEvent(id, true), handler);
/*Line 3450 - 'MicrosoftAjax.debug.js' */    }
/*Line 3451 - 'MicrosoftAjax.debug.js' */    function Sys$EventHandlerList$addHandler(id, handler) {
/*Line 3452 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.EventHandlerList.addHandler" />
/*Line 3453 - 'MicrosoftAjax.debug.js' */        /// <param name="id" type="String"></param>
/*Line 3454 - 'MicrosoftAjax.debug.js' */        /// <param name="handler" type="Function"></param>
/*Line 3455 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 3456 - 'MicrosoftAjax.debug.js' */            {name: "id", type: String},
/*Line 3457 - 'MicrosoftAjax.debug.js' */            {name: "handler", type: Function}
/*Line 3458 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 3459 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 3460 - 'MicrosoftAjax.debug.js' */        this._addHandler(id, handler);
/*Line 3461 - 'MicrosoftAjax.debug.js' */    }
/*Line 3462 - 'MicrosoftAjax.debug.js' */    function Sys$EventHandlerList$_removeHandler(id, handler) {
/*Line 3463 - 'MicrosoftAjax.debug.js' */        var evt = this._getEvent(id);
/*Line 3464 - 'MicrosoftAjax.debug.js' */        if (!evt) return;
/*Line 3465 - 'MicrosoftAjax.debug.js' */        Array.remove(evt, handler);
/*Line 3466 - 'MicrosoftAjax.debug.js' */    }
/*Line 3467 - 'MicrosoftAjax.debug.js' */    function Sys$EventHandlerList$removeHandler(id, handler) {
/*Line 3468 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.EventHandlerList.removeHandler" />
/*Line 3469 - 'MicrosoftAjax.debug.js' */        /// <param name="id" type="String"></param>
/*Line 3470 - 'MicrosoftAjax.debug.js' */        /// <param name="handler" type="Function"></param>
/*Line 3471 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 3472 - 'MicrosoftAjax.debug.js' */            {name: "id", type: String},
/*Line 3473 - 'MicrosoftAjax.debug.js' */            {name: "handler", type: Function}
/*Line 3474 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 3475 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 3476 - 'MicrosoftAjax.debug.js' */        this._removeHandler(id, handler);
/*Line 3477 - 'MicrosoftAjax.debug.js' */    }
/*Line 3478 - 'MicrosoftAjax.debug.js' */    function Sys$EventHandlerList$getHandler(id) {
/*Line 3479 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.EventHandlerList.getHandler" />
/*Line 3480 - 'MicrosoftAjax.debug.js' */        /// <param name="id" type="String"></param>
/*Line 3481 - 'MicrosoftAjax.debug.js' */        /// <returns type="Function"></returns>
/*Line 3482 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 3483 - 'MicrosoftAjax.debug.js' */            {name: "id", type: String}
/*Line 3484 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 3485 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 3486 - 'MicrosoftAjax.debug.js' */        var evt = this._getEvent(id);
/*Line 3487 - 'MicrosoftAjax.debug.js' */        if (!evt || (evt.length === 0)) return null;
/*Line 3488 - 'MicrosoftAjax.debug.js' */        evt = Array.clone(evt);
/*Line 3489 - 'MicrosoftAjax.debug.js' */        return function(source, args) {
/*Line 3490 - 'MicrosoftAjax.debug.js' */            for (var i = 0, l = evt.length; i < l; i++) {
/*Line 3491 - 'MicrosoftAjax.debug.js' */                evt[i](source, args);
/*Line 3492 - 'MicrosoftAjax.debug.js' */            }
/*Line 3493 - 'MicrosoftAjax.debug.js' */        };
/*Line 3494 - 'MicrosoftAjax.debug.js' */    }
/*Line 3495 - 'MicrosoftAjax.debug.js' */    function Sys$EventHandlerList$_getEvent(id, create) {
/*Line 3496 - 'MicrosoftAjax.debug.js' */        if (!this._list[id]) {
/*Line 3497 - 'MicrosoftAjax.debug.js' */            if (!create) return null;
/*Line 3498 - 'MicrosoftAjax.debug.js' */            this._list[id] = [];
/*Line 3499 - 'MicrosoftAjax.debug.js' */        }
/*Line 3500 - 'MicrosoftAjax.debug.js' */        return this._list[id];
/*Line 3501 - 'MicrosoftAjax.debug.js' */    }
/*Line 3502 - 'MicrosoftAjax.debug.js' */Sys.EventHandlerList.prototype = {
/*Line 3503 - 'MicrosoftAjax.debug.js' */    _addHandler: Sys$EventHandlerList$_addHandler,
/*Line 3504 - 'MicrosoftAjax.debug.js' */    addHandler: Sys$EventHandlerList$addHandler,
/*Line 3505 - 'MicrosoftAjax.debug.js' */    _removeHandler: Sys$EventHandlerList$_removeHandler,
/*Line 3506 - 'MicrosoftAjax.debug.js' */    removeHandler: Sys$EventHandlerList$removeHandler,
/*Line 3507 - 'MicrosoftAjax.debug.js' */    getHandler: Sys$EventHandlerList$getHandler,
/*Line 3508 - 'MicrosoftAjax.debug.js' */    _getEvent: Sys$EventHandlerList$_getEvent
/*Line 3509 - 'MicrosoftAjax.debug.js' */}
/*Line 3510 - 'MicrosoftAjax.debug.js' */Sys.EventHandlerList.registerClass('Sys.EventHandlerList');
/*Line 3511 - 'MicrosoftAjax.debug.js' */Sys.CommandEventArgs = function Sys$CommandEventArgs(commandName, commandArgument, commandSource) {
/*Line 3512 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.CommandEventArgs.#ctor" />
/*Line 3513 - 'MicrosoftAjax.debug.js' */    /// <param name="commandName" type="String"></param>
/*Line 3514 - 'MicrosoftAjax.debug.js' */    /// <param name="commandArgument" mayBeNull="true"></param>
/*Line 3515 - 'MicrosoftAjax.debug.js' */    /// <param name="commandSource" mayBeNull="true"></param>
/*Line 3516 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 3517 - 'MicrosoftAjax.debug.js' */        {name: "commandName", type: String},
/*Line 3518 - 'MicrosoftAjax.debug.js' */        {name: "commandArgument", mayBeNull: true},
/*Line 3519 - 'MicrosoftAjax.debug.js' */        {name: "commandSource", mayBeNull: true}
/*Line 3520 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 3521 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 3522 - 'MicrosoftAjax.debug.js' */    Sys.CommandEventArgs.initializeBase(this);
/*Line 3523 - 'MicrosoftAjax.debug.js' */    this._commandName = commandName;
/*Line 3524 - 'MicrosoftAjax.debug.js' */    this._commandArgument = commandArgument;
/*Line 3525 - 'MicrosoftAjax.debug.js' */    this._commandSource = commandSource;
/*Line 3526 - 'MicrosoftAjax.debug.js' */}
/*Line 3527 - 'MicrosoftAjax.debug.js' */    function Sys$CommandEventArgs$get_commandName() {
/*Line 3528 - 'MicrosoftAjax.debug.js' */        /// <value type="String" locid="P:J#Sys.CommandEventArgs.commandName"></value>
/*Line 3529 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 3530 - 'MicrosoftAjax.debug.js' */        return this._commandName;
/*Line 3531 - 'MicrosoftAjax.debug.js' */    }
/*Line 3532 - 'MicrosoftAjax.debug.js' */    function Sys$CommandEventArgs$get_commandArgument() {
/*Line 3533 - 'MicrosoftAjax.debug.js' */        /// <value mayBeNull="true" locid="P:J#Sys.CommandEventArgs.commandArgument"></value>
/*Line 3534 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 3535 - 'MicrosoftAjax.debug.js' */        return this._commandArgument;
/*Line 3536 - 'MicrosoftAjax.debug.js' */    }
/*Line 3537 - 'MicrosoftAjax.debug.js' */    function Sys$CommandEventArgs$get_commandSource() {
/*Line 3538 - 'MicrosoftAjax.debug.js' */        /// <value mayBeNull="true" locid="P:J#Sys.CommandEventArgs.commandSource"></value>
/*Line 3539 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 3540 - 'MicrosoftAjax.debug.js' */        return this._commandSource;
/*Line 3541 - 'MicrosoftAjax.debug.js' */    }
/*Line 3542 - 'MicrosoftAjax.debug.js' */Sys.CommandEventArgs.prototype = {
/*Line 3543 - 'MicrosoftAjax.debug.js' */    _commandName: null,
/*Line 3544 - 'MicrosoftAjax.debug.js' */    _commandArgument: null,
/*Line 3545 - 'MicrosoftAjax.debug.js' */    _commandSource: null,
/*Line 3546 - 'MicrosoftAjax.debug.js' */    get_commandName: Sys$CommandEventArgs$get_commandName,
/*Line 3547 - 'MicrosoftAjax.debug.js' */    get_commandArgument: Sys$CommandEventArgs$get_commandArgument,
/*Line 3548 - 'MicrosoftAjax.debug.js' */    get_commandSource: Sys$CommandEventArgs$get_commandSource
/*Line 3549 - 'MicrosoftAjax.debug.js' */}
/*Line 3550 - 'MicrosoftAjax.debug.js' */Sys.CommandEventArgs.registerClass("Sys.CommandEventArgs", Sys.CancelEventArgs);
 
/*Line 3552 - 'MicrosoftAjax.debug.js' */Sys.INotifyPropertyChange = function Sys$INotifyPropertyChange() {
/*Line 3553 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.INotifyPropertyChange.#ctor" />
/*Line 3554 - 'MicrosoftAjax.debug.js' */    if (arguments.length !== 0) throw Error.parameterCount();
/*Line 3555 - 'MicrosoftAjax.debug.js' */    throw Error.notImplemented();
/*Line 3556 - 'MicrosoftAjax.debug.js' */}
/*Line 3557 - 'MicrosoftAjax.debug.js' */    function Sys$INotifyPropertyChange$add_propertyChanged(handler) {
/*Line 3558 - 'MicrosoftAjax.debug.js' */    /// <summary locid="E:J#Sys.INotifyPropertyChange.propertyChanged" />
/*Line 3559 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [{name: "handler", type: Function}]);
/*Line 3560 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 3561 - 'MicrosoftAjax.debug.js' */        throw Error.notImplemented();
/*Line 3562 - 'MicrosoftAjax.debug.js' */    }
/*Line 3563 - 'MicrosoftAjax.debug.js' */    function Sys$INotifyPropertyChange$remove_propertyChanged(handler) {
/*Line 3564 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [{name: "handler", type: Function}]);
/*Line 3565 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 3566 - 'MicrosoftAjax.debug.js' */        throw Error.notImplemented();
/*Line 3567 - 'MicrosoftAjax.debug.js' */    }
/*Line 3568 - 'MicrosoftAjax.debug.js' */Sys.INotifyPropertyChange.prototype = {
/*Line 3569 - 'MicrosoftAjax.debug.js' */    add_propertyChanged: Sys$INotifyPropertyChange$add_propertyChanged,
/*Line 3570 - 'MicrosoftAjax.debug.js' */    remove_propertyChanged: Sys$INotifyPropertyChange$remove_propertyChanged
/*Line 3571 - 'MicrosoftAjax.debug.js' */}
/*Line 3572 - 'MicrosoftAjax.debug.js' */Sys.INotifyPropertyChange.registerInterface('Sys.INotifyPropertyChange');
 
/*Line 3574 - 'MicrosoftAjax.debug.js' */Sys.PropertyChangedEventArgs = function Sys$PropertyChangedEventArgs(propertyName) {
/*Line 3575 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.PropertyChangedEventArgs.#ctor" />
/*Line 3576 - 'MicrosoftAjax.debug.js' */    /// <param name="propertyName" type="String"></param>
/*Line 3577 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 3578 - 'MicrosoftAjax.debug.js' */        {name: "propertyName", type: String}
/*Line 3579 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 3580 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 3581 - 'MicrosoftAjax.debug.js' */    Sys.PropertyChangedEventArgs.initializeBase(this);
/*Line 3582 - 'MicrosoftAjax.debug.js' */    this._propertyName = propertyName;
/*Line 3583 - 'MicrosoftAjax.debug.js' */}
 
/*Line 3585 - 'MicrosoftAjax.debug.js' */    function Sys$PropertyChangedEventArgs$get_propertyName() {
/*Line 3586 - 'MicrosoftAjax.debug.js' */        /// <value type="String" locid="P:J#Sys.PropertyChangedEventArgs.propertyName"></value>
/*Line 3587 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 3588 - 'MicrosoftAjax.debug.js' */        return this._propertyName;
/*Line 3589 - 'MicrosoftAjax.debug.js' */    }
/*Line 3590 - 'MicrosoftAjax.debug.js' */Sys.PropertyChangedEventArgs.prototype = {
/*Line 3591 - 'MicrosoftAjax.debug.js' */    get_propertyName: Sys$PropertyChangedEventArgs$get_propertyName
/*Line 3592 - 'MicrosoftAjax.debug.js' */}
/*Line 3593 - 'MicrosoftAjax.debug.js' */Sys.PropertyChangedEventArgs.registerClass('Sys.PropertyChangedEventArgs', Sys.EventArgs);
 
/*Line 3595 - 'MicrosoftAjax.debug.js' */Sys.INotifyDisposing = function Sys$INotifyDisposing() {
/*Line 3596 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.INotifyDisposing.#ctor" />
/*Line 3597 - 'MicrosoftAjax.debug.js' */    if (arguments.length !== 0) throw Error.parameterCount();
/*Line 3598 - 'MicrosoftAjax.debug.js' */    throw Error.notImplemented();
/*Line 3599 - 'MicrosoftAjax.debug.js' */}
/*Line 3600 - 'MicrosoftAjax.debug.js' */    function Sys$INotifyDisposing$add_disposing(handler) {
/*Line 3601 - 'MicrosoftAjax.debug.js' */    /// <summary locid="E:J#Sys.INotifyDisposing.disposing" />
/*Line 3602 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [{name: "handler", type: Function}]);
/*Line 3603 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 3604 - 'MicrosoftAjax.debug.js' */        throw Error.notImplemented();
/*Line 3605 - 'MicrosoftAjax.debug.js' */    }
/*Line 3606 - 'MicrosoftAjax.debug.js' */    function Sys$INotifyDisposing$remove_disposing(handler) {
/*Line 3607 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [{name: "handler", type: Function}]);
/*Line 3608 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 3609 - 'MicrosoftAjax.debug.js' */        throw Error.notImplemented();
/*Line 3610 - 'MicrosoftAjax.debug.js' */    }
/*Line 3611 - 'MicrosoftAjax.debug.js' */Sys.INotifyDisposing.prototype = {
/*Line 3612 - 'MicrosoftAjax.debug.js' */    add_disposing: Sys$INotifyDisposing$add_disposing,
/*Line 3613 - 'MicrosoftAjax.debug.js' */    remove_disposing: Sys$INotifyDisposing$remove_disposing
/*Line 3614 - 'MicrosoftAjax.debug.js' */}
/*Line 3615 - 'MicrosoftAjax.debug.js' */Sys.INotifyDisposing.registerInterface("Sys.INotifyDisposing");
 
/*Line 3617 - 'MicrosoftAjax.debug.js' */Sys.Component = function Sys$Component() {
/*Line 3618 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Component.#ctor" />
/*Line 3619 - 'MicrosoftAjax.debug.js' */    if (arguments.length !== 0) throw Error.parameterCount();
/*Line 3620 - 'MicrosoftAjax.debug.js' */    if (Sys.Application) Sys.Application.registerDisposableObject(this);
/*Line 3621 - 'MicrosoftAjax.debug.js' */}
/*Line 3622 - 'MicrosoftAjax.debug.js' */    function Sys$Component$get_events() {
/*Line 3623 - 'MicrosoftAjax.debug.js' */        /// <value type="Sys.EventHandlerList" locid="P:J#Sys.Component.events"></value>
/*Line 3624 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 3625 - 'MicrosoftAjax.debug.js' */        if (!this._events) {
/*Line 3626 - 'MicrosoftAjax.debug.js' */            this._events = new Sys.EventHandlerList();
/*Line 3627 - 'MicrosoftAjax.debug.js' */        }
/*Line 3628 - 'MicrosoftAjax.debug.js' */        return this._events;
/*Line 3629 - 'MicrosoftAjax.debug.js' */    }
/*Line 3630 - 'MicrosoftAjax.debug.js' */    function Sys$Component$get_id() {
/*Line 3631 - 'MicrosoftAjax.debug.js' */        /// <value type="String" locid="P:J#Sys.Component.id"></value>
/*Line 3632 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 3633 - 'MicrosoftAjax.debug.js' */        return this._id;
/*Line 3634 - 'MicrosoftAjax.debug.js' */    }
/*Line 3635 - 'MicrosoftAjax.debug.js' */    function Sys$Component$set_id(value) {
/*Line 3636 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "value", type: String}]);
/*Line 3637 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 3638 - 'MicrosoftAjax.debug.js' */        if (this._idSet) throw Error.invalidOperation(Sys.Res.componentCantSetIdTwice);
/*Line 3639 - 'MicrosoftAjax.debug.js' */        this._idSet = true;
/*Line 3640 - 'MicrosoftAjax.debug.js' */        var oldId = this.get_id();
/*Line 3641 - 'MicrosoftAjax.debug.js' */        if (oldId && Sys.Application.findComponent(oldId)) throw Error.invalidOperation(Sys.Res.componentCantSetIdAfterAddedToApp);
/*Line 3642 - 'MicrosoftAjax.debug.js' */        this._id = value;
/*Line 3643 - 'MicrosoftAjax.debug.js' */    }
/*Line 3644 - 'MicrosoftAjax.debug.js' */    function Sys$Component$get_isInitialized() {
/*Line 3645 - 'MicrosoftAjax.debug.js' */        /// <value type="Boolean" locid="P:J#Sys.Component.isInitialized"></value>
/*Line 3646 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 3647 - 'MicrosoftAjax.debug.js' */        return this._initialized;
/*Line 3648 - 'MicrosoftAjax.debug.js' */    }
/*Line 3649 - 'MicrosoftAjax.debug.js' */    function Sys$Component$get_isUpdating() {
/*Line 3650 - 'MicrosoftAjax.debug.js' */        /// <value type="Boolean" locid="P:J#Sys.Component.isUpdating"></value>
/*Line 3651 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 3652 - 'MicrosoftAjax.debug.js' */        return this._updating;
/*Line 3653 - 'MicrosoftAjax.debug.js' */    }
/*Line 3654 - 'MicrosoftAjax.debug.js' */    function Sys$Component$add_disposing(handler) {
/*Line 3655 - 'MicrosoftAjax.debug.js' */        /// <summary locid="E:J#Sys.Component.disposing" />
/*Line 3656 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "handler", type: Function}]);
/*Line 3657 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 3658 - 'MicrosoftAjax.debug.js' */        this.get_events().addHandler("disposing", handler);
/*Line 3659 - 'MicrosoftAjax.debug.js' */    }
/*Line 3660 - 'MicrosoftAjax.debug.js' */    function Sys$Component$remove_disposing(handler) {
/*Line 3661 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "handler", type: Function}]);
/*Line 3662 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 3663 - 'MicrosoftAjax.debug.js' */        this.get_events().removeHandler("disposing", handler);
/*Line 3664 - 'MicrosoftAjax.debug.js' */    }
/*Line 3665 - 'MicrosoftAjax.debug.js' */    function Sys$Component$add_propertyChanged(handler) {
/*Line 3666 - 'MicrosoftAjax.debug.js' */        /// <summary locid="E:J#Sys.Component.propertyChanged" />
/*Line 3667 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "handler", type: Function}]);
/*Line 3668 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 3669 - 'MicrosoftAjax.debug.js' */        this.get_events().addHandler("propertyChanged", handler);
/*Line 3670 - 'MicrosoftAjax.debug.js' */    }
/*Line 3671 - 'MicrosoftAjax.debug.js' */    function Sys$Component$remove_propertyChanged(handler) {
/*Line 3672 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "handler", type: Function}]);
/*Line 3673 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 3674 - 'MicrosoftAjax.debug.js' */        this.get_events().removeHandler("propertyChanged", handler);
/*Line 3675 - 'MicrosoftAjax.debug.js' */    }
/*Line 3676 - 'MicrosoftAjax.debug.js' */    function Sys$Component$beginUpdate() {
/*Line 3677 - 'MicrosoftAjax.debug.js' */        this._updating = true;
/*Line 3678 - 'MicrosoftAjax.debug.js' */    }
/*Line 3679 - 'MicrosoftAjax.debug.js' */    function Sys$Component$dispose() {
/*Line 3680 - 'MicrosoftAjax.debug.js' */        if (this._events) {
/*Line 3681 - 'MicrosoftAjax.debug.js' */            var handler = this._events.getHandler("disposing");
/*Line 3682 - 'MicrosoftAjax.debug.js' */            if (handler) {
/*Line 3683 - 'MicrosoftAjax.debug.js' */                handler(this, Sys.EventArgs.Empty);
/*Line 3684 - 'MicrosoftAjax.debug.js' */            }
/*Line 3685 - 'MicrosoftAjax.debug.js' */        }
/*Line 3686 - 'MicrosoftAjax.debug.js' */        delete this._events;
/*Line 3687 - 'MicrosoftAjax.debug.js' */        Sys.Application.unregisterDisposableObject(this);
/*Line 3688 - 'MicrosoftAjax.debug.js' */        Sys.Application.removeComponent(this);
/*Line 3689 - 'MicrosoftAjax.debug.js' */    }
/*Line 3690 - 'MicrosoftAjax.debug.js' */    function Sys$Component$endUpdate() {
/*Line 3691 - 'MicrosoftAjax.debug.js' */        this._updating = false;
/*Line 3692 - 'MicrosoftAjax.debug.js' */        if (!this._initialized) this.initialize();
/*Line 3693 - 'MicrosoftAjax.debug.js' */        this.updated();
/*Line 3694 - 'MicrosoftAjax.debug.js' */    }
/*Line 3695 - 'MicrosoftAjax.debug.js' */    function Sys$Component$initialize() {
/*Line 3696 - 'MicrosoftAjax.debug.js' */        this._initialized = true;
/*Line 3697 - 'MicrosoftAjax.debug.js' */    }
/*Line 3698 - 'MicrosoftAjax.debug.js' */    function Sys$Component$raisePropertyChanged(propertyName) {
/*Line 3699 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Component.raisePropertyChanged" />
/*Line 3700 - 'MicrosoftAjax.debug.js' */        /// <param name="propertyName" type="String"></param>
/*Line 3701 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 3702 - 'MicrosoftAjax.debug.js' */            {name: "propertyName", type: String}
/*Line 3703 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 3704 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 3705 - 'MicrosoftAjax.debug.js' */        if (!this._events) return;
/*Line 3706 - 'MicrosoftAjax.debug.js' */        var handler = this._events.getHandler("propertyChanged");
/*Line 3707 - 'MicrosoftAjax.debug.js' */        if (handler) {
/*Line 3708 - 'MicrosoftAjax.debug.js' */            handler(this, new Sys.PropertyChangedEventArgs(propertyName));
/*Line 3709 - 'MicrosoftAjax.debug.js' */        }
/*Line 3710 - 'MicrosoftAjax.debug.js' */    }
/*Line 3711 - 'MicrosoftAjax.debug.js' */    function Sys$Component$updated() {
/*Line 3712 - 'MicrosoftAjax.debug.js' */    }
/*Line 3713 - 'MicrosoftAjax.debug.js' */Sys.Component.prototype = {
/*Line 3714 - 'MicrosoftAjax.debug.js' */    _id: null,
/*Line 3715 - 'MicrosoftAjax.debug.js' */    _idSet: false,
/*Line 3716 - 'MicrosoftAjax.debug.js' */    _initialized: false,
/*Line 3717 - 'MicrosoftAjax.debug.js' */    _updating: false,
/*Line 3718 - 'MicrosoftAjax.debug.js' */    get_events: Sys$Component$get_events,
/*Line 3719 - 'MicrosoftAjax.debug.js' */    get_id: Sys$Component$get_id,
/*Line 3720 - 'MicrosoftAjax.debug.js' */    set_id: Sys$Component$set_id,
/*Line 3721 - 'MicrosoftAjax.debug.js' */    get_isInitialized: Sys$Component$get_isInitialized,
/*Line 3722 - 'MicrosoftAjax.debug.js' */    get_isUpdating: Sys$Component$get_isUpdating,
/*Line 3723 - 'MicrosoftAjax.debug.js' */    add_disposing: Sys$Component$add_disposing,
/*Line 3724 - 'MicrosoftAjax.debug.js' */    remove_disposing: Sys$Component$remove_disposing,
/*Line 3725 - 'MicrosoftAjax.debug.js' */    add_propertyChanged: Sys$Component$add_propertyChanged,
/*Line 3726 - 'MicrosoftAjax.debug.js' */    remove_propertyChanged: Sys$Component$remove_propertyChanged,
/*Line 3727 - 'MicrosoftAjax.debug.js' */    beginUpdate: Sys$Component$beginUpdate,
/*Line 3728 - 'MicrosoftAjax.debug.js' */    dispose: Sys$Component$dispose,
/*Line 3729 - 'MicrosoftAjax.debug.js' */    endUpdate: Sys$Component$endUpdate,
/*Line 3730 - 'MicrosoftAjax.debug.js' */    initialize: Sys$Component$initialize,
/*Line 3731 - 'MicrosoftAjax.debug.js' */    raisePropertyChanged: Sys$Component$raisePropertyChanged,
/*Line 3732 - 'MicrosoftAjax.debug.js' */    updated: Sys$Component$updated
/*Line 3733 - 'MicrosoftAjax.debug.js' */}
/*Line 3734 - 'MicrosoftAjax.debug.js' */Sys.Component.registerClass('Sys.Component', null, Sys.IDisposable, Sys.INotifyPropertyChange, Sys.INotifyDisposing);
/*Line 3735 - 'MicrosoftAjax.debug.js' */function Sys$Component$_setProperties(target, properties) {
/*Line 3736 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Component._setProperties" />
/*Line 3737 - 'MicrosoftAjax.debug.js' */    /// <param name="target"></param>
/*Line 3738 - 'MicrosoftAjax.debug.js' */    /// <param name="properties"></param>
/*Line 3739 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 3740 - 'MicrosoftAjax.debug.js' */        {name: "target"},
/*Line 3741 - 'MicrosoftAjax.debug.js' */        {name: "properties"}
/*Line 3742 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 3743 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 3744 - 'MicrosoftAjax.debug.js' */    var current;
/*Line 3745 - 'MicrosoftAjax.debug.js' */    var targetType = Object.getType(target);
/*Line 3746 - 'MicrosoftAjax.debug.js' */    var isObject = (targetType === Object) || (targetType === Sys.UI.DomElement);
/*Line 3747 - 'MicrosoftAjax.debug.js' */    var isComponent = Sys.Component.isInstanceOfType(target) && !target.get_isUpdating();
/*Line 3748 - 'MicrosoftAjax.debug.js' */    if (isComponent) target.beginUpdate();
/*Line 3749 - 'MicrosoftAjax.debug.js' */    for (var name in properties) {
/*Line 3750 - 'MicrosoftAjax.debug.js' */        var val = properties[name];
/*Line 3751 - 'MicrosoftAjax.debug.js' */        var getter = isObject ? null : target["get_" + name];
/*Line 3752 - 'MicrosoftAjax.debug.js' */        if (isObject || typeof(getter) !== 'function') {
/*Line 3753 - 'MicrosoftAjax.debug.js' */            var targetVal = target[name];
/*Line 3754 - 'MicrosoftAjax.debug.js' */            if (!isObject && typeof(targetVal) === 'undefined') throw Error.invalidOperation(String.format(Sys.Res.propertyUndefined, name));
/*Line 3755 - 'MicrosoftAjax.debug.js' */            if (!val || (typeof(val) !== 'object') || (isObject && !targetVal)) {
/*Line 3756 - 'MicrosoftAjax.debug.js' */                target[name] = val;
/*Line 3757 - 'MicrosoftAjax.debug.js' */            }
/*Line 3758 - 'MicrosoftAjax.debug.js' */            else {
/*Line 3759 - 'MicrosoftAjax.debug.js' */                Sys$Component$_setProperties(targetVal, val);
/*Line 3760 - 'MicrosoftAjax.debug.js' */            }
/*Line 3761 - 'MicrosoftAjax.debug.js' */        }
/*Line 3762 - 'MicrosoftAjax.debug.js' */        else {
/*Line 3763 - 'MicrosoftAjax.debug.js' */            var setter = target["set_" + name];
/*Line 3764 - 'MicrosoftAjax.debug.js' */            if (typeof(setter) === 'function') {
/*Line 3765 - 'MicrosoftAjax.debug.js' */                setter.apply(target, [val]);
/*Line 3766 - 'MicrosoftAjax.debug.js' */            }
/*Line 3767 - 'MicrosoftAjax.debug.js' */            else if (val instanceof Array) {
/*Line 3768 - 'MicrosoftAjax.debug.js' */                current = getter.apply(target);
/*Line 3769 - 'MicrosoftAjax.debug.js' */                if (!(current instanceof Array)) throw new Error.invalidOperation(String.format(Sys.Res.propertyNotAnArray, name));
/*Line 3770 - 'MicrosoftAjax.debug.js' */                for (var i = 0, j = current.length, l= val.length; i < l; i++, j++) {
/*Line 3771 - 'MicrosoftAjax.debug.js' */                    current[j] = val[i];
/*Line 3772 - 'MicrosoftAjax.debug.js' */                }
/*Line 3773 - 'MicrosoftAjax.debug.js' */            }
/*Line 3774 - 'MicrosoftAjax.debug.js' */            else if ((typeof(val) === 'object') && (Object.getType(val) === Object)) {
/*Line 3775 - 'MicrosoftAjax.debug.js' */                current = getter.apply(target);
/*Line 3776 - 'MicrosoftAjax.debug.js' */                if ((typeof(current) === 'undefined') || (current === null)) throw new Error.invalidOperation(String.format(Sys.Res.propertyNullOrUndefined, name));
/*Line 3777 - 'MicrosoftAjax.debug.js' */                Sys$Component$_setProperties(current, val);
/*Line 3778 - 'MicrosoftAjax.debug.js' */            }
/*Line 3779 - 'MicrosoftAjax.debug.js' */            else {
/*Line 3780 - 'MicrosoftAjax.debug.js' */                throw new Error.invalidOperation(String.format(Sys.Res.propertyNotWritable, name));
/*Line 3781 - 'MicrosoftAjax.debug.js' */            }
/*Line 3782 - 'MicrosoftAjax.debug.js' */        }
/*Line 3783 - 'MicrosoftAjax.debug.js' */    }
/*Line 3784 - 'MicrosoftAjax.debug.js' */    if (isComponent) target.endUpdate();
/*Line 3785 - 'MicrosoftAjax.debug.js' */}
/*Line 3786 - 'MicrosoftAjax.debug.js' */function Sys$Component$_setReferences(component, references) {
/*Line 3787 - 'MicrosoftAjax.debug.js' */    for (var name in references) {
/*Line 3788 - 'MicrosoftAjax.debug.js' */        var setter = component["set_" + name];
/*Line 3789 - 'MicrosoftAjax.debug.js' */        var reference = $find(references[name]);
/*Line 3790 - 'MicrosoftAjax.debug.js' */        if (typeof(setter) !== 'function') throw new Error.invalidOperation(String.format(Sys.Res.propertyNotWritable, name));
/*Line 3791 - 'MicrosoftAjax.debug.js' */        if (!reference) throw Error.invalidOperation(String.format(Sys.Res.referenceNotFound, references[name]));
/*Line 3792 - 'MicrosoftAjax.debug.js' */        setter.apply(component, [reference]);
/*Line 3793 - 'MicrosoftAjax.debug.js' */    }
/*Line 3794 - 'MicrosoftAjax.debug.js' */}
/*Line 3795 - 'MicrosoftAjax.debug.js' */var $create = Sys.Component.create = function Sys$Component$create(type, properties, events, references, element) {
/*Line 3796 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Component.create" />
/*Line 3797 - 'MicrosoftAjax.debug.js' */    /// <param name="type" type="Type"></param>
/*Line 3798 - 'MicrosoftAjax.debug.js' */    /// <param name="properties" optional="true" mayBeNull="true"></param>
/*Line 3799 - 'MicrosoftAjax.debug.js' */    /// <param name="events" optional="true" mayBeNull="true"></param>
/*Line 3800 - 'MicrosoftAjax.debug.js' */    /// <param name="references" optional="true" mayBeNull="true"></param>
/*Line 3801 - 'MicrosoftAjax.debug.js' */    /// <param name="element" domElement="true" optional="true" mayBeNull="true"></param>
/*Line 3802 - 'MicrosoftAjax.debug.js' */    /// <returns type="Sys.UI.Component"></returns>
/*Line 3803 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 3804 - 'MicrosoftAjax.debug.js' */        {name: "type", type: Type},
/*Line 3805 - 'MicrosoftAjax.debug.js' */        {name: "properties", mayBeNull: true, optional: true},
/*Line 3806 - 'MicrosoftAjax.debug.js' */        {name: "events", mayBeNull: true, optional: true},
/*Line 3807 - 'MicrosoftAjax.debug.js' */        {name: "references", mayBeNull: true, optional: true},
/*Line 3808 - 'MicrosoftAjax.debug.js' */        {name: "element", mayBeNull: true, domElement: true, optional: true}
/*Line 3809 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 3810 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 3811 - 'MicrosoftAjax.debug.js' */    if (!type.inheritsFrom(Sys.Component)) {
/*Line 3812 - 'MicrosoftAjax.debug.js' */        throw Error.argument('type', String.format(Sys.Res.createNotComponent, type.getName()));
/*Line 3813 - 'MicrosoftAjax.debug.js' */    }
/*Line 3814 - 'MicrosoftAjax.debug.js' */    if (type.inheritsFrom(Sys.UI.Behavior) || type.inheritsFrom(Sys.UI.Control)) {
/*Line 3815 - 'MicrosoftAjax.debug.js' */        if (!element) throw Error.argument('element', Sys.Res.createNoDom);
/*Line 3816 - 'MicrosoftAjax.debug.js' */    }
/*Line 3817 - 'MicrosoftAjax.debug.js' */    else if (element) throw Error.argument('element', Sys.Res.createComponentOnDom);
/*Line 3818 - 'MicrosoftAjax.debug.js' */    var component = (element ? new type(element): new type());
/*Line 3819 - 'MicrosoftAjax.debug.js' */    var app = Sys.Application;
/*Line 3820 - 'MicrosoftAjax.debug.js' */    var creatingComponents = app.get_isCreatingComponents();
/*Line 3821 - 'MicrosoftAjax.debug.js' */    component.beginUpdate();
/*Line 3822 - 'MicrosoftAjax.debug.js' */    if (properties) {
/*Line 3823 - 'MicrosoftAjax.debug.js' */        Sys$Component$_setProperties(component, properties);
/*Line 3824 - 'MicrosoftAjax.debug.js' */    }
/*Line 3825 - 'MicrosoftAjax.debug.js' */    if (events) {
/*Line 3826 - 'MicrosoftAjax.debug.js' */        for (var name in events) {
/*Line 3827 - 'MicrosoftAjax.debug.js' */            if (!(component["add_" + name] instanceof Function)) throw new Error.invalidOperation(String.format(Sys.Res.undefinedEvent, name));
/*Line 3828 - 'MicrosoftAjax.debug.js' */            if (!(events[name] instanceof Function)) throw new Error.invalidOperation(Sys.Res.eventHandlerNotFunction);
/*Line 3829 - 'MicrosoftAjax.debug.js' */            component["add_" + name](events[name]);
/*Line 3830 - 'MicrosoftAjax.debug.js' */        }
/*Line 3831 - 'MicrosoftAjax.debug.js' */    }
/*Line 3832 - 'MicrosoftAjax.debug.js' */    if (component.get_id()) {
/*Line 3833 - 'MicrosoftAjax.debug.js' */        app.addComponent(component);
/*Line 3834 - 'MicrosoftAjax.debug.js' */    }
/*Line 3835 - 'MicrosoftAjax.debug.js' */    if (creatingComponents) {
/*Line 3836 - 'MicrosoftAjax.debug.js' */        app._createdComponents[app._createdComponents.length] = component;
/*Line 3837 - 'MicrosoftAjax.debug.js' */        if (references) {
/*Line 3838 - 'MicrosoftAjax.debug.js' */            app._addComponentToSecondPass(component, references);
/*Line 3839 - 'MicrosoftAjax.debug.js' */        }
/*Line 3840 - 'MicrosoftAjax.debug.js' */        else {
/*Line 3841 - 'MicrosoftAjax.debug.js' */            component.endUpdate();
/*Line 3842 - 'MicrosoftAjax.debug.js' */        }
/*Line 3843 - 'MicrosoftAjax.debug.js' */    }
/*Line 3844 - 'MicrosoftAjax.debug.js' */    else {
/*Line 3845 - 'MicrosoftAjax.debug.js' */        if (references) {
/*Line 3846 - 'MicrosoftAjax.debug.js' */            Sys$Component$_setReferences(component, references);
/*Line 3847 - 'MicrosoftAjax.debug.js' */        }
/*Line 3848 - 'MicrosoftAjax.debug.js' */        component.endUpdate();
/*Line 3849 - 'MicrosoftAjax.debug.js' */    }
/*Line 3850 - 'MicrosoftAjax.debug.js' */    return component;
/*Line 3851 - 'MicrosoftAjax.debug.js' */}
 
/*Line 3853 - 'MicrosoftAjax.debug.js' */Sys.UI.MouseButton = function Sys$UI$MouseButton() {
/*Line 3854 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.MouseButton.#ctor" />
/*Line 3855 - 'MicrosoftAjax.debug.js' */    /// <field name="leftButton" type="Number" integer="true" static="true" locid="F:J#Sys.UI.MouseButton.leftButton"></field>
/*Line 3856 - 'MicrosoftAjax.debug.js' */    /// <field name="middleButton" type="Number" integer="true" static="true" locid="F:J#Sys.UI.MouseButton.middleButton"></field>
/*Line 3857 - 'MicrosoftAjax.debug.js' */    /// <field name="rightButton" type="Number" integer="true" static="true" locid="F:J#Sys.UI.MouseButton.rightButton"></field>
/*Line 3858 - 'MicrosoftAjax.debug.js' */    if (arguments.length !== 0) throw Error.parameterCount();
/*Line 3859 - 'MicrosoftAjax.debug.js' */    throw Error.notImplemented();
/*Line 3860 - 'MicrosoftAjax.debug.js' */}
/*Line 3861 - 'MicrosoftAjax.debug.js' */Sys.UI.MouseButton.prototype = {
/*Line 3862 - 'MicrosoftAjax.debug.js' */    leftButton: 0,
/*Line 3863 - 'MicrosoftAjax.debug.js' */    middleButton: 1,
/*Line 3864 - 'MicrosoftAjax.debug.js' */    rightButton: 2
/*Line 3865 - 'MicrosoftAjax.debug.js' */}
/*Line 3866 - 'MicrosoftAjax.debug.js' */Sys.UI.MouseButton.registerEnum("Sys.UI.MouseButton");
 
/*Line 3868 - 'MicrosoftAjax.debug.js' */Sys.UI.Key = function Sys$UI$Key() {
/*Line 3869 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.Key.#ctor" />
/*Line 3870 - 'MicrosoftAjax.debug.js' */    /// <field name="backspace" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.backspace"></field>
/*Line 3871 - 'MicrosoftAjax.debug.js' */    /// <field name="tab" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.tab"></field>
/*Line 3872 - 'MicrosoftAjax.debug.js' */    /// <field name="enter" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.enter"></field>
/*Line 3873 - 'MicrosoftAjax.debug.js' */    /// <field name="esc" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.esc"></field>
/*Line 3874 - 'MicrosoftAjax.debug.js' */    /// <field name="space" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.space"></field>
/*Line 3875 - 'MicrosoftAjax.debug.js' */    /// <field name="pageUp" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.pageUp"></field>
/*Line 3876 - 'MicrosoftAjax.debug.js' */    /// <field name="pageDown" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.pageDown"></field>
/*Line 3877 - 'MicrosoftAjax.debug.js' */    /// <field name="end" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.end"></field>
/*Line 3878 - 'MicrosoftAjax.debug.js' */    /// <field name="home" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.home"></field>
/*Line 3879 - 'MicrosoftAjax.debug.js' */    /// <field name="left" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.left"></field>
/*Line 3880 - 'MicrosoftAjax.debug.js' */    /// <field name="up" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.up"></field>
/*Line 3881 - 'MicrosoftAjax.debug.js' */    /// <field name="right" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.right"></field>
/*Line 3882 - 'MicrosoftAjax.debug.js' */    /// <field name="down" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.down"></field>
/*Line 3883 - 'MicrosoftAjax.debug.js' */    /// <field name="del" type="Number" integer="true" static="true" locid="F:J#Sys.UI.Key.del"></field>
/*Line 3884 - 'MicrosoftAjax.debug.js' */    if (arguments.length !== 0) throw Error.parameterCount();
/*Line 3885 - 'MicrosoftAjax.debug.js' */    throw Error.notImplemented();
/*Line 3886 - 'MicrosoftAjax.debug.js' */}
/*Line 3887 - 'MicrosoftAjax.debug.js' */Sys.UI.Key.prototype = {
/*Line 3888 - 'MicrosoftAjax.debug.js' */    backspace: 8,
/*Line 3889 - 'MicrosoftAjax.debug.js' */    tab: 9,
/*Line 3890 - 'MicrosoftAjax.debug.js' */    enter: 13,
/*Line 3891 - 'MicrosoftAjax.debug.js' */    esc: 27,
/*Line 3892 - 'MicrosoftAjax.debug.js' */    space: 32,
/*Line 3893 - 'MicrosoftAjax.debug.js' */    pageUp: 33,
/*Line 3894 - 'MicrosoftAjax.debug.js' */    pageDown: 34,
/*Line 3895 - 'MicrosoftAjax.debug.js' */    end: 35,
/*Line 3896 - 'MicrosoftAjax.debug.js' */    home: 36,
/*Line 3897 - 'MicrosoftAjax.debug.js' */    left: 37,
/*Line 3898 - 'MicrosoftAjax.debug.js' */    up: 38,
/*Line 3899 - 'MicrosoftAjax.debug.js' */    right: 39,
/*Line 3900 - 'MicrosoftAjax.debug.js' */    down: 40,
/*Line 3901 - 'MicrosoftAjax.debug.js' */    del: 127
/*Line 3902 - 'MicrosoftAjax.debug.js' */}
/*Line 3903 - 'MicrosoftAjax.debug.js' */Sys.UI.Key.registerEnum("Sys.UI.Key");
 
/*Line 3905 - 'MicrosoftAjax.debug.js' */Sys.UI.Point = function Sys$UI$Point(x, y) {
/*Line 3906 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.Point.#ctor" />
/*Line 3907 - 'MicrosoftAjax.debug.js' */    /// <param name="x" type="Number" integer="true"></param>
/*Line 3908 - 'MicrosoftAjax.debug.js' */    /// <param name="y" type="Number" integer="true"></param>
/*Line 3909 - 'MicrosoftAjax.debug.js' */    /// <field name="x" type="Number" integer="true" locid="F:J#Sys.UI.Point.x"></field>
/*Line 3910 - 'MicrosoftAjax.debug.js' */    /// <field name="y" type="Number" integer="true" locid="F:J#Sys.UI.Point.y"></field>
/*Line 3911 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 3912 - 'MicrosoftAjax.debug.js' */        {name: "x", type: Number, integer: true},
/*Line 3913 - 'MicrosoftAjax.debug.js' */        {name: "y", type: Number, integer: true}
/*Line 3914 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 3915 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 3916 - 'MicrosoftAjax.debug.js' */    this.x = x;
/*Line 3917 - 'MicrosoftAjax.debug.js' */    this.y = y;
/*Line 3918 - 'MicrosoftAjax.debug.js' */}
/*Line 3919 - 'MicrosoftAjax.debug.js' */Sys.UI.Point.registerClass('Sys.UI.Point');
 
/*Line 3921 - 'MicrosoftAjax.debug.js' */Sys.UI.Bounds = function Sys$UI$Bounds(x, y, width, height) {
/*Line 3922 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.Bounds.#ctor" />
/*Line 3923 - 'MicrosoftAjax.debug.js' */    /// <param name="x" type="Number" integer="true"></param>
/*Line 3924 - 'MicrosoftAjax.debug.js' */    /// <param name="y" type="Number" integer="true"></param>
/*Line 3925 - 'MicrosoftAjax.debug.js' */    /// <param name="width" type="Number" integer="true"></param>
/*Line 3926 - 'MicrosoftAjax.debug.js' */    /// <param name="height" type="Number" integer="true"></param>
/*Line 3927 - 'MicrosoftAjax.debug.js' */    /// <field name="x" type="Number" integer="true" locid="F:J#Sys.UI.Bounds.x"></field>
/*Line 3928 - 'MicrosoftAjax.debug.js' */    /// <field name="y" type="Number" integer="true" locid="F:J#Sys.UI.Bounds.y"></field>
/*Line 3929 - 'MicrosoftAjax.debug.js' */    /// <field name="width" type="Number" integer="true" locid="F:J#Sys.UI.Bounds.width"></field>
/*Line 3930 - 'MicrosoftAjax.debug.js' */    /// <field name="height" type="Number" integer="true" locid="F:J#Sys.UI.Bounds.height"></field>
/*Line 3931 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 3932 - 'MicrosoftAjax.debug.js' */        {name: "x", type: Number, integer: true},
/*Line 3933 - 'MicrosoftAjax.debug.js' */        {name: "y", type: Number, integer: true},
/*Line 3934 - 'MicrosoftAjax.debug.js' */        {name: "width", type: Number, integer: true},
/*Line 3935 - 'MicrosoftAjax.debug.js' */        {name: "height", type: Number, integer: true}
/*Line 3936 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 3937 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 3938 - 'MicrosoftAjax.debug.js' */    this.x = x;
/*Line 3939 - 'MicrosoftAjax.debug.js' */    this.y = y;
/*Line 3940 - 'MicrosoftAjax.debug.js' */    this.height = height;
/*Line 3941 - 'MicrosoftAjax.debug.js' */    this.width = width;
/*Line 3942 - 'MicrosoftAjax.debug.js' */}
/*Line 3943 - 'MicrosoftAjax.debug.js' */Sys.UI.Bounds.registerClass('Sys.UI.Bounds');
 
/*Line 3945 - 'MicrosoftAjax.debug.js' */Sys.UI.DomEvent = function Sys$UI$DomEvent(eventObject) {
/*Line 3946 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.DomEvent.#ctor" />
/*Line 3947 - 'MicrosoftAjax.debug.js' */    /// <param name="eventObject"></param>
/*Line 3948 - 'MicrosoftAjax.debug.js' */    /// <field name="altKey" type="Boolean" locid="F:J#Sys.UI.DomEvent.altKey"></field>
/*Line 3949 - 'MicrosoftAjax.debug.js' */    /// <field name="button" type="Sys.UI.MouseButton" locid="F:J#Sys.UI.DomEvent.button"></field>
/*Line 3950 - 'MicrosoftAjax.debug.js' */    /// <field name="charCode" type="Number" integer="true" locid="F:J#Sys.UI.DomEvent.charCode"></field>
/*Line 3951 - 'MicrosoftAjax.debug.js' */    /// <field name="clientX" type="Number" integer="true" locid="F:J#Sys.UI.DomEvent.clientX"></field>
/*Line 3952 - 'MicrosoftAjax.debug.js' */    /// <field name="clientY" type="Number" integer="true" locid="F:J#Sys.UI.DomEvent.clientY"></field>
/*Line 3953 - 'MicrosoftAjax.debug.js' */    /// <field name="ctrlKey" type="Boolean" locid="F:J#Sys.UI.DomEvent.ctrlKey"></field>
/*Line 3954 - 'MicrosoftAjax.debug.js' */    /// <field name="keyCode" type="Number" integer="true" locid="F:J#Sys.UI.DomEvent.keyCode"></field>
/*Line 3955 - 'MicrosoftAjax.debug.js' */    /// <field name="offsetX" type="Number" integer="true" locid="F:J#Sys.UI.DomEvent.offsetX"></field>
/*Line 3956 - 'MicrosoftAjax.debug.js' */    /// <field name="offsetY" type="Number" integer="true" locid="F:J#Sys.UI.DomEvent.offsetY"></field>
/*Line 3957 - 'MicrosoftAjax.debug.js' */    /// <field name="screenX" type="Number" integer="true" locid="F:J#Sys.UI.DomEvent.screenX"></field>
/*Line 3958 - 'MicrosoftAjax.debug.js' */    /// <field name="screenY" type="Number" integer="true" locid="F:J#Sys.UI.DomEvent.screenY"></field>
/*Line 3959 - 'MicrosoftAjax.debug.js' */    /// <field name="shiftKey" type="Boolean" locid="F:J#Sys.UI.DomEvent.shiftKey"></field>
/*Line 3960 - 'MicrosoftAjax.debug.js' */    /// <field name="target" locid="F:J#Sys.UI.DomEvent.target"></field>
/*Line 3961 - 'MicrosoftAjax.debug.js' */    /// <field name="type" type="String" locid="F:J#Sys.UI.DomEvent.type"></field>
/*Line 3962 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 3963 - 'MicrosoftAjax.debug.js' */        {name: "eventObject"}
/*Line 3964 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 3965 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 3966 - 'MicrosoftAjax.debug.js' */    var ev = eventObject;
/*Line 3967 - 'MicrosoftAjax.debug.js' */    var etype = this.type = ev.type.toLowerCase();
/*Line 3968 - 'MicrosoftAjax.debug.js' */    this.rawEvent = ev;
/*Line 3969 - 'MicrosoftAjax.debug.js' */    this.altKey = ev.altKey;
/*Line 3970 - 'MicrosoftAjax.debug.js' */    if (typeof(ev.button) !== 'undefined') {
/*Line 3971 - 'MicrosoftAjax.debug.js' */        this.button = (typeof(ev.which) !== 'undefined') ? ev.button :
/*Line 3972 - 'MicrosoftAjax.debug.js' */            (ev.button === 4) ? Sys.UI.MouseButton.middleButton :
/*Line 3973 - 'MicrosoftAjax.debug.js' */            (ev.button === 2) ? Sys.UI.MouseButton.rightButton :
/*Line 3974 - 'MicrosoftAjax.debug.js' */            Sys.UI.MouseButton.leftButton;
/*Line 3975 - 'MicrosoftAjax.debug.js' */    }
/*Line 3976 - 'MicrosoftAjax.debug.js' */    if (etype === 'keypress') {
/*Line 3977 - 'MicrosoftAjax.debug.js' */        this.charCode = ev.charCode || ev.keyCode;
/*Line 3978 - 'MicrosoftAjax.debug.js' */    }
/*Line 3979 - 'MicrosoftAjax.debug.js' */    else if (ev.keyCode && (ev.keyCode === 46)) {
/*Line 3980 - 'MicrosoftAjax.debug.js' */        this.keyCode = 127;
/*Line 3981 - 'MicrosoftAjax.debug.js' */    }
/*Line 3982 - 'MicrosoftAjax.debug.js' */    else {
/*Line 3983 - 'MicrosoftAjax.debug.js' */        this.keyCode = ev.keyCode;
/*Line 3984 - 'MicrosoftAjax.debug.js' */    }
/*Line 3985 - 'MicrosoftAjax.debug.js' */    this.clientX = ev.clientX;
/*Line 3986 - 'MicrosoftAjax.debug.js' */    this.clientY = ev.clientY;
/*Line 3987 - 'MicrosoftAjax.debug.js' */    this.ctrlKey = ev.ctrlKey;
/*Line 3988 - 'MicrosoftAjax.debug.js' */    this.target = ev.target ? ev.target : ev.srcElement;
/*Line 3989 - 'MicrosoftAjax.debug.js' */    if (!etype.startsWith('key')) {
/*Line 3990 - 'MicrosoftAjax.debug.js' */        if ((typeof(ev.offsetX) !== 'undefined') && (typeof(ev.offsetY) !== 'undefined')) {
/*Line 3991 - 'MicrosoftAjax.debug.js' */            this.offsetX = ev.offsetX;
/*Line 3992 - 'MicrosoftAjax.debug.js' */            this.offsetY = ev.offsetY;
/*Line 3993 - 'MicrosoftAjax.debug.js' */        }
/*Line 3994 - 'MicrosoftAjax.debug.js' */        else if (this.target && (this.target.nodeType !== 3) && (typeof(ev.clientX) === 'number')) {
/*Line 3995 - 'MicrosoftAjax.debug.js' */            var loc = Sys.UI.DomElement.getLocation(this.target);
/*Line 3996 - 'MicrosoftAjax.debug.js' */            var w = Sys.UI.DomElement._getWindow(this.target);
/*Line 3997 - 'MicrosoftAjax.debug.js' */            this.offsetX = (w.pageXOffset || 0) + ev.clientX - loc.x;
/*Line 3998 - 'MicrosoftAjax.debug.js' */            this.offsetY = (w.pageYOffset || 0) + ev.clientY - loc.y;
/*Line 3999 - 'MicrosoftAjax.debug.js' */        }
/*Line 4000 - 'MicrosoftAjax.debug.js' */    }
/*Line 4001 - 'MicrosoftAjax.debug.js' */    this.screenX = ev.screenX;
/*Line 4002 - 'MicrosoftAjax.debug.js' */    this.screenY = ev.screenY;
/*Line 4003 - 'MicrosoftAjax.debug.js' */    this.shiftKey = ev.shiftKey;
/*Line 4004 - 'MicrosoftAjax.debug.js' */}
/*Line 4005 - 'MicrosoftAjax.debug.js' */    function Sys$UI$DomEvent$preventDefault() {
/*Line 4006 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.UI.DomEvent.preventDefault" />
/*Line 4007 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 4008 - 'MicrosoftAjax.debug.js' */        if (this.rawEvent.preventDefault) {
/*Line 4009 - 'MicrosoftAjax.debug.js' */            this.rawEvent.preventDefault();
/*Line 4010 - 'MicrosoftAjax.debug.js' */        }
/*Line 4011 - 'MicrosoftAjax.debug.js' */        else if (window.event) {
/*Line 4012 - 'MicrosoftAjax.debug.js' */            this.rawEvent.returnValue = false;
/*Line 4013 - 'MicrosoftAjax.debug.js' */        }
/*Line 4014 - 'MicrosoftAjax.debug.js' */    }
/*Line 4015 - 'MicrosoftAjax.debug.js' */    function Sys$UI$DomEvent$stopPropagation() {
/*Line 4016 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.UI.DomEvent.stopPropagation" />
/*Line 4017 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 4018 - 'MicrosoftAjax.debug.js' */        if (this.rawEvent.stopPropagation) {
/*Line 4019 - 'MicrosoftAjax.debug.js' */            this.rawEvent.stopPropagation();
/*Line 4020 - 'MicrosoftAjax.debug.js' */        }
/*Line 4021 - 'MicrosoftAjax.debug.js' */        else if (window.event) {
/*Line 4022 - 'MicrosoftAjax.debug.js' */            this.rawEvent.cancelBubble = true;
/*Line 4023 - 'MicrosoftAjax.debug.js' */        }
/*Line 4024 - 'MicrosoftAjax.debug.js' */    }
/*Line 4025 - 'MicrosoftAjax.debug.js' */Sys.UI.DomEvent.prototype = {
/*Line 4026 - 'MicrosoftAjax.debug.js' */    preventDefault: Sys$UI$DomEvent$preventDefault,
/*Line 4027 - 'MicrosoftAjax.debug.js' */    stopPropagation: Sys$UI$DomEvent$stopPropagation
/*Line 4028 - 'MicrosoftAjax.debug.js' */}
/*Line 4029 - 'MicrosoftAjax.debug.js' */Sys.UI.DomEvent.registerClass('Sys.UI.DomEvent');
/*Line 4030 - 'MicrosoftAjax.debug.js' */var $addHandler = Sys.UI.DomEvent.addHandler = function Sys$UI$DomEvent$addHandler(element, eventName, handler, autoRemove) {
/*Line 4031 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.DomEvent.addHandler" />
/*Line 4032 - 'MicrosoftAjax.debug.js' */    /// <param name="element"></param>
/*Line 4033 - 'MicrosoftAjax.debug.js' */    /// <param name="eventName" type="String"></param>
/*Line 4034 - 'MicrosoftAjax.debug.js' */    /// <param name="handler" type="Function"></param>
/*Line 4035 - 'MicrosoftAjax.debug.js' */    /// <param name="autoRemove" type="Boolean" optional="true"></param>
/*Line 4036 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 4037 - 'MicrosoftAjax.debug.js' */        {name: "element"},
/*Line 4038 - 'MicrosoftAjax.debug.js' */        {name: "eventName", type: String},
/*Line 4039 - 'MicrosoftAjax.debug.js' */        {name: "handler", type: Function},
/*Line 4040 - 'MicrosoftAjax.debug.js' */        {name: "autoRemove", type: Boolean, optional: true}
/*Line 4041 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 4042 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 4043 - 'MicrosoftAjax.debug.js' */    Sys.UI.DomEvent._ensureDomNode(element);
/*Line 4044 - 'MicrosoftAjax.debug.js' */    if (eventName === "error") throw Error.invalidOperation(Sys.Res.addHandlerCantBeUsedForError);
/*Line 4045 - 'MicrosoftAjax.debug.js' */    if (!element._events) {
/*Line 4046 - 'MicrosoftAjax.debug.js' */        element._events = {};
/*Line 4047 - 'MicrosoftAjax.debug.js' */    }
/*Line 4048 - 'MicrosoftAjax.debug.js' */    var eventCache = element._events[eventName];
/*Line 4049 - 'MicrosoftAjax.debug.js' */    if (!eventCache) {
/*Line 4050 - 'MicrosoftAjax.debug.js' */        element._events[eventName] = eventCache = [];
/*Line 4051 - 'MicrosoftAjax.debug.js' */    }
/*Line 4052 - 'MicrosoftAjax.debug.js' */    var browserHandler;
/*Line 4053 - 'MicrosoftAjax.debug.js' */    if (element.addEventListener) {
/*Line 4054 - 'MicrosoftAjax.debug.js' */        browserHandler = function(e) {
/*Line 4055 - 'MicrosoftAjax.debug.js' */            return handler.call(element, new Sys.UI.DomEvent(e));
/*Line 4056 - 'MicrosoftAjax.debug.js' */        }
/*Line 4057 - 'MicrosoftAjax.debug.js' */        element.addEventListener(eventName, browserHandler, false);
/*Line 4058 - 'MicrosoftAjax.debug.js' */    }
/*Line 4059 - 'MicrosoftAjax.debug.js' */    else if (element.attachEvent) {
/*Line 4060 - 'MicrosoftAjax.debug.js' */        browserHandler = function() {
/*Line 4061 - 'MicrosoftAjax.debug.js' */            var e = {};
/*Line 4062 - 'MicrosoftAjax.debug.js' */            try {e = Sys.UI.DomElement._getWindow(element).event} catch(ex) {}
/*Line 4063 - 'MicrosoftAjax.debug.js' */            return handler.call(element, new Sys.UI.DomEvent(e));
/*Line 4064 - 'MicrosoftAjax.debug.js' */        }
/*Line 4065 - 'MicrosoftAjax.debug.js' */        element.attachEvent('on' + eventName, browserHandler);
/*Line 4066 - 'MicrosoftAjax.debug.js' */    }
/*Line 4067 - 'MicrosoftAjax.debug.js' */    eventCache[eventCache.length] = {handler: handler, browserHandler: browserHandler, autoRemove: autoRemove };
/*Line 4068 - 'MicrosoftAjax.debug.js' */    if (autoRemove) {
/*Line 4069 - 'MicrosoftAjax.debug.js' */        var d = element.dispose;
/*Line 4070 - 'MicrosoftAjax.debug.js' */        if (d !== Sys.UI.DomEvent._disposeHandlers) {
/*Line 4071 - 'MicrosoftAjax.debug.js' */            element.dispose = Sys.UI.DomEvent._disposeHandlers;
/*Line 4072 - 'MicrosoftAjax.debug.js' */            if (typeof(d) !== "undefined") {
/*Line 4073 - 'MicrosoftAjax.debug.js' */                element._chainDispose = d;
/*Line 4074 - 'MicrosoftAjax.debug.js' */            }
/*Line 4075 - 'MicrosoftAjax.debug.js' */        }
/*Line 4076 - 'MicrosoftAjax.debug.js' */    }
/*Line 4077 - 'MicrosoftAjax.debug.js' */}
/*Line 4078 - 'MicrosoftAjax.debug.js' */var $addHandlers = Sys.UI.DomEvent.addHandlers = function Sys$UI$DomEvent$addHandlers(element, events, handlerOwner, autoRemove) {
/*Line 4079 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.DomEvent.addHandlers" />
/*Line 4080 - 'MicrosoftAjax.debug.js' */    /// <param name="element"></param>
/*Line 4081 - 'MicrosoftAjax.debug.js' */    /// <param name="events" type="Object"></param>
/*Line 4082 - 'MicrosoftAjax.debug.js' */    /// <param name="handlerOwner" optional="true"></param>
/*Line 4083 - 'MicrosoftAjax.debug.js' */    /// <param name="autoRemove" type="Boolean" optional="true"></param>
/*Line 4084 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 4085 - 'MicrosoftAjax.debug.js' */        {name: "element"},
/*Line 4086 - 'MicrosoftAjax.debug.js' */        {name: "events", type: Object},
/*Line 4087 - 'MicrosoftAjax.debug.js' */        {name: "handlerOwner", optional: true},
/*Line 4088 - 'MicrosoftAjax.debug.js' */        {name: "autoRemove", type: Boolean, optional: true}
/*Line 4089 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 4090 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 4091 - 'MicrosoftAjax.debug.js' */    Sys.UI.DomEvent._ensureDomNode(element);
/*Line 4092 - 'MicrosoftAjax.debug.js' */    for (var name in events) {
/*Line 4093 - 'MicrosoftAjax.debug.js' */        var handler = events[name];
/*Line 4094 - 'MicrosoftAjax.debug.js' */        if (typeof(handler) !== 'function') throw Error.invalidOperation(Sys.Res.cantAddNonFunctionhandler);
/*Line 4095 - 'MicrosoftAjax.debug.js' */        if (handlerOwner) {
/*Line 4096 - 'MicrosoftAjax.debug.js' */            handler = Function.createDelegate(handlerOwner, handler);
/*Line 4097 - 'MicrosoftAjax.debug.js' */        }
/*Line 4098 - 'MicrosoftAjax.debug.js' */        $addHandler(element, name, handler, autoRemove || false);
/*Line 4099 - 'MicrosoftAjax.debug.js' */    }
/*Line 4100 - 'MicrosoftAjax.debug.js' */}
/*Line 4101 - 'MicrosoftAjax.debug.js' */var $clearHandlers = Sys.UI.DomEvent.clearHandlers = function Sys$UI$DomEvent$clearHandlers(element) {
/*Line 4102 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.DomEvent.clearHandlers" />
/*Line 4103 - 'MicrosoftAjax.debug.js' */    /// <param name="element"></param>
/*Line 4104 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 4105 - 'MicrosoftAjax.debug.js' */        {name: "element"}
/*Line 4106 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 4107 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 4108 - 'MicrosoftAjax.debug.js' */    Sys.UI.DomEvent._ensureDomNode(element);
/*Line 4109 - 'MicrosoftAjax.debug.js' */    Sys.UI.DomEvent._clearHandlers(element, false);
/*Line 4110 - 'MicrosoftAjax.debug.js' */}
/*Line 4111 - 'MicrosoftAjax.debug.js' */Sys.UI.DomEvent._clearHandlers = function Sys$UI$DomEvent$_clearHandlers(element, autoRemoving) {
/*Line 4112 - 'MicrosoftAjax.debug.js' */    if (element._events) {
/*Line 4113 - 'MicrosoftAjax.debug.js' */        var cache = element._events;
/*Line 4114 - 'MicrosoftAjax.debug.js' */        for (var name in cache) {
/*Line 4115 - 'MicrosoftAjax.debug.js' */            var handlers = cache[name];
/*Line 4116 - 'MicrosoftAjax.debug.js' */            for (var i = handlers.length - 1; i >= 0; i--) {
/*Line 4117 - 'MicrosoftAjax.debug.js' */                var entry = handlers[i];
/*Line 4118 - 'MicrosoftAjax.debug.js' */                if (!autoRemoving || entry.autoRemove) {
/*Line 4119 - 'MicrosoftAjax.debug.js' */                    $removeHandler(element, name, entry.handler);
/*Line 4120 - 'MicrosoftAjax.debug.js' */                }
/*Line 4121 - 'MicrosoftAjax.debug.js' */            }
/*Line 4122 - 'MicrosoftAjax.debug.js' */        }
/*Line 4123 - 'MicrosoftAjax.debug.js' */        element._events = null;
/*Line 4124 - 'MicrosoftAjax.debug.js' */    }
/*Line 4125 - 'MicrosoftAjax.debug.js' */}
/*Line 4126 - 'MicrosoftAjax.debug.js' */Sys.UI.DomEvent._disposeHandlers = function Sys$UI$DomEvent$_disposeHandlers() {
/*Line 4127 - 'MicrosoftAjax.debug.js' */    Sys.UI.DomEvent._clearHandlers(this, true);
/*Line 4128 - 'MicrosoftAjax.debug.js' */    var d = this._chainDispose, type = typeof(d);
/*Line 4129 - 'MicrosoftAjax.debug.js' */    if (type !== "undefined") {
/*Line 4130 - 'MicrosoftAjax.debug.js' */        this.dispose = d;
/*Line 4131 - 'MicrosoftAjax.debug.js' */        this._chainDispose = null;
/*Line 4132 - 'MicrosoftAjax.debug.js' */        if (type === "function") {
/*Line 4133 - 'MicrosoftAjax.debug.js' */            this.dispose();
/*Line 4134 - 'MicrosoftAjax.debug.js' */        }
/*Line 4135 - 'MicrosoftAjax.debug.js' */    }
/*Line 4136 - 'MicrosoftAjax.debug.js' */}
/*Line 4137 - 'MicrosoftAjax.debug.js' */var $removeHandler = Sys.UI.DomEvent.removeHandler = function Sys$UI$DomEvent$removeHandler(element, eventName, handler) {
/*Line 4138 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.DomEvent.removeHandler" />
/*Line 4139 - 'MicrosoftAjax.debug.js' */    /// <param name="element"></param>
/*Line 4140 - 'MicrosoftAjax.debug.js' */    /// <param name="eventName" type="String"></param>
/*Line 4141 - 'MicrosoftAjax.debug.js' */    /// <param name="handler" type="Function"></param>
/*Line 4142 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 4143 - 'MicrosoftAjax.debug.js' */        {name: "element"},
/*Line 4144 - 'MicrosoftAjax.debug.js' */        {name: "eventName", type: String},
/*Line 4145 - 'MicrosoftAjax.debug.js' */        {name: "handler", type: Function}
/*Line 4146 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 4147 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 4148 - 'MicrosoftAjax.debug.js' */    Sys.UI.DomEvent._removeHandler(element, eventName, handler);
/*Line 4149 - 'MicrosoftAjax.debug.js' */}
/*Line 4150 - 'MicrosoftAjax.debug.js' */Sys.UI.DomEvent._removeHandler = function Sys$UI$DomEvent$_removeHandler(element, eventName, handler) {
/*Line 4151 - 'MicrosoftAjax.debug.js' */    Sys.UI.DomEvent._ensureDomNode(element);
/*Line 4152 - 'MicrosoftAjax.debug.js' */    var browserHandler = null;
/*Line 4153 - 'MicrosoftAjax.debug.js' */    if ((typeof(element._events) !== 'object') || !element._events) throw Error.invalidOperation(Sys.Res.eventHandlerInvalid);
/*Line 4154 - 'MicrosoftAjax.debug.js' */    var cache = element._events[eventName];
/*Line 4155 - 'MicrosoftAjax.debug.js' */    if (!(cache instanceof Array)) throw Error.invalidOperation(Sys.Res.eventHandlerInvalid);
/*Line 4156 - 'MicrosoftAjax.debug.js' */    for (var i = 0, l = cache.length; i < l; i++) {
/*Line 4157 - 'MicrosoftAjax.debug.js' */        if (cache[i].handler === handler) {
/*Line 4158 - 'MicrosoftAjax.debug.js' */            browserHandler = cache[i].browserHandler;
/*Line 4159 - 'MicrosoftAjax.debug.js' */            break;
/*Line 4160 - 'MicrosoftAjax.debug.js' */        }
/*Line 4161 - 'MicrosoftAjax.debug.js' */    }
/*Line 4162 - 'MicrosoftAjax.debug.js' */    if (typeof(browserHandler) !== 'function') throw Error.invalidOperation(Sys.Res.eventHandlerInvalid);
/*Line 4163 - 'MicrosoftAjax.debug.js' */    if (element.removeEventListener) {
/*Line 4164 - 'MicrosoftAjax.debug.js' */        element.removeEventListener(eventName, browserHandler, false);
/*Line 4165 - 'MicrosoftAjax.debug.js' */    }
/*Line 4166 - 'MicrosoftAjax.debug.js' */    else if (element.detachEvent) {
/*Line 4167 - 'MicrosoftAjax.debug.js' */        element.detachEvent('on' + eventName, browserHandler);
/*Line 4168 - 'MicrosoftAjax.debug.js' */    }
/*Line 4169 - 'MicrosoftAjax.debug.js' */    cache.splice(i, 1);
/*Line 4170 - 'MicrosoftAjax.debug.js' */}
/*Line 4171 - 'MicrosoftAjax.debug.js' */Sys.UI.DomEvent._ensureDomNode = function Sys$UI$DomEvent$_ensureDomNode(element) {
/*Line 4172 - 'MicrosoftAjax.debug.js' */    if (element.tagName && (element.tagName.toUpperCase() === "SCRIPT")) return;
    
/*Line 4174 - 'MicrosoftAjax.debug.js' */    var doc = element.ownerDocument || element.document || element;
/*Line 4175 - 'MicrosoftAjax.debug.js' */    if ((typeof(element.document) !== 'object') && (element != doc) && (typeof(element.nodeType) !== 'number')) {
/*Line 4176 - 'MicrosoftAjax.debug.js' */        throw Error.argument("element", Sys.Res.argumentDomNode);
/*Line 4177 - 'MicrosoftAjax.debug.js' */    }
/*Line 4178 - 'MicrosoftAjax.debug.js' */}
 
/*Line 4180 - 'MicrosoftAjax.debug.js' */Sys.UI.DomElement = function Sys$UI$DomElement() {
/*Line 4181 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.DomElement.#ctor" />
/*Line 4182 - 'MicrosoftAjax.debug.js' */    if (arguments.length !== 0) throw Error.parameterCount();
/*Line 4183 - 'MicrosoftAjax.debug.js' */    throw Error.notImplemented();
/*Line 4184 - 'MicrosoftAjax.debug.js' */}
/*Line 4185 - 'MicrosoftAjax.debug.js' */Sys.UI.DomElement.registerClass('Sys.UI.DomElement');
/*Line 4186 - 'MicrosoftAjax.debug.js' */Sys.UI.DomElement.addCssClass = function Sys$UI$DomElement$addCssClass(element, className) {
/*Line 4187 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.DomElement.addCssClass" />
/*Line 4188 - 'MicrosoftAjax.debug.js' */    /// <param name="element" domElement="true"></param>
/*Line 4189 - 'MicrosoftAjax.debug.js' */    /// <param name="className" type="String"></param>
/*Line 4190 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 4191 - 'MicrosoftAjax.debug.js' */        {name: "element", domElement: true},
/*Line 4192 - 'MicrosoftAjax.debug.js' */        {name: "className", type: String}
/*Line 4193 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 4194 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 4195 - 'MicrosoftAjax.debug.js' */    if (!Sys.UI.DomElement.containsCssClass(element, className)) {
/*Line 4196 - 'MicrosoftAjax.debug.js' */        if (element.className === '') {
/*Line 4197 - 'MicrosoftAjax.debug.js' */            element.className = className;
/*Line 4198 - 'MicrosoftAjax.debug.js' */        }
/*Line 4199 - 'MicrosoftAjax.debug.js' */        else {
/*Line 4200 - 'MicrosoftAjax.debug.js' */            element.className += ' ' + className;
/*Line 4201 - 'MicrosoftAjax.debug.js' */        }
/*Line 4202 - 'MicrosoftAjax.debug.js' */    }
/*Line 4203 - 'MicrosoftAjax.debug.js' */}
/*Line 4204 - 'MicrosoftAjax.debug.js' */Sys.UI.DomElement.containsCssClass = function Sys$UI$DomElement$containsCssClass(element, className) {
/*Line 4205 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.DomElement.containsCssClass" />
/*Line 4206 - 'MicrosoftAjax.debug.js' */    /// <param name="element" domElement="true"></param>
/*Line 4207 - 'MicrosoftAjax.debug.js' */    /// <param name="className" type="String"></param>
/*Line 4208 - 'MicrosoftAjax.debug.js' */    /// <returns type="Boolean"></returns>
/*Line 4209 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 4210 - 'MicrosoftAjax.debug.js' */        {name: "element", domElement: true},
/*Line 4211 - 'MicrosoftAjax.debug.js' */        {name: "className", type: String}
/*Line 4212 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 4213 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 4214 - 'MicrosoftAjax.debug.js' */    return Array.contains(element.className.split(' '), className);
/*Line 4215 - 'MicrosoftAjax.debug.js' */}
/*Line 4216 - 'MicrosoftAjax.debug.js' */Sys.UI.DomElement.getBounds = function Sys$UI$DomElement$getBounds(element) {
/*Line 4217 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.DomElement.getBounds" />
/*Line 4218 - 'MicrosoftAjax.debug.js' */    /// <param name="element" domElement="true"></param>
/*Line 4219 - 'MicrosoftAjax.debug.js' */    /// <returns type="Sys.UI.Bounds"></returns>
/*Line 4220 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 4221 - 'MicrosoftAjax.debug.js' */        {name: "element", domElement: true}
/*Line 4222 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 4223 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 4224 - 'MicrosoftAjax.debug.js' */    var offset = Sys.UI.DomElement.getLocation(element);
/*Line 4225 - 'MicrosoftAjax.debug.js' */    return new Sys.UI.Bounds(offset.x, offset.y, element.offsetWidth || 0, element.offsetHeight || 0);
/*Line 4226 - 'MicrosoftAjax.debug.js' */}
/*Line 4227 - 'MicrosoftAjax.debug.js' */var $get = Sys.UI.DomElement.getElementById = function Sys$UI$DomElement$getElementById(id, element) {
/*Line 4228 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.DomElement.getElementById" />
/*Line 4229 - 'MicrosoftAjax.debug.js' */    /// <param name="id" type="String"></param>
/*Line 4230 - 'MicrosoftAjax.debug.js' */    /// <param name="element" domElement="true" optional="true" mayBeNull="true"></param>
/*Line 4231 - 'MicrosoftAjax.debug.js' */    /// <returns domElement="true" mayBeNull="true"></returns>
/*Line 4232 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 4233 - 'MicrosoftAjax.debug.js' */        {name: "id", type: String},
/*Line 4234 - 'MicrosoftAjax.debug.js' */        {name: "element", mayBeNull: true, domElement: true, optional: true}
/*Line 4235 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 4236 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 4237 - 'MicrosoftAjax.debug.js' */    if (!element) return document.getElementById(id);
/*Line 4238 - 'MicrosoftAjax.debug.js' */    if (element.getElementById) return element.getElementById(id);
/*Line 4239 - 'MicrosoftAjax.debug.js' */    var nodeQueue = [];
/*Line 4240 - 'MicrosoftAjax.debug.js' */    var childNodes = element.childNodes;
/*Line 4241 - 'MicrosoftAjax.debug.js' */    for (var i = 0; i < childNodes.length; i++) {
/*Line 4242 - 'MicrosoftAjax.debug.js' */        var node = childNodes[i];
/*Line 4243 - 'MicrosoftAjax.debug.js' */        if (node.nodeType == 1) {
/*Line 4244 - 'MicrosoftAjax.debug.js' */            nodeQueue[nodeQueue.length] = node;
/*Line 4245 - 'MicrosoftAjax.debug.js' */        }
/*Line 4246 - 'MicrosoftAjax.debug.js' */    }
/*Line 4247 - 'MicrosoftAjax.debug.js' */    while (nodeQueue.length) {
/*Line 4248 - 'MicrosoftAjax.debug.js' */        node = nodeQueue.shift();
/*Line 4249 - 'MicrosoftAjax.debug.js' */        if (node.id == id) {
/*Line 4250 - 'MicrosoftAjax.debug.js' */            return node;
/*Line 4251 - 'MicrosoftAjax.debug.js' */        }
/*Line 4252 - 'MicrosoftAjax.debug.js' */        childNodes = node.childNodes;
/*Line 4253 - 'MicrosoftAjax.debug.js' */        for (i = 0; i < childNodes.length; i++) {
/*Line 4254 - 'MicrosoftAjax.debug.js' */            node = childNodes[i];
/*Line 4255 - 'MicrosoftAjax.debug.js' */            if (node.nodeType == 1) {
/*Line 4256 - 'MicrosoftAjax.debug.js' */                nodeQueue[nodeQueue.length] = node;
/*Line 4257 - 'MicrosoftAjax.debug.js' */            }
/*Line 4258 - 'MicrosoftAjax.debug.js' */        }
/*Line 4259 - 'MicrosoftAjax.debug.js' */    }
/*Line 4260 - 'MicrosoftAjax.debug.js' */    return null;
/*Line 4261 - 'MicrosoftAjax.debug.js' */}
/*Line 4262 - 'MicrosoftAjax.debug.js' */if (document.documentElement.getBoundingClientRect) {
/*Line 4263 - 'MicrosoftAjax.debug.js' */    Sys.UI.DomElement.getLocation = function Sys$UI$DomElement$getLocation(element) {
/*Line 4264 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.UI.DomElement.getLocation" />
/*Line 4265 - 'MicrosoftAjax.debug.js' */        /// <param name="element" domElement="true"></param>
/*Line 4266 - 'MicrosoftAjax.debug.js' */        /// <returns type="Sys.UI.Point"></returns>
/*Line 4267 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 4268 - 'MicrosoftAjax.debug.js' */            {name: "element", domElement: true}
/*Line 4269 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 4270 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 4271 - 'MicrosoftAjax.debug.js' */        if (element.self || element.nodeType === 9) return new Sys.UI.Point(0,0);
/*Line 4272 - 'MicrosoftAjax.debug.js' */        var clientRect = element.getBoundingClientRect();
/*Line 4273 - 'MicrosoftAjax.debug.js' */        if (!clientRect) {
/*Line 4274 - 'MicrosoftAjax.debug.js' */            return new Sys.UI.Point(0,0);
/*Line 4275 - 'MicrosoftAjax.debug.js' */        }
/*Line 4276 - 'MicrosoftAjax.debug.js' */        var documentElement = element.ownerDocument.documentElement,
/*Line 4277 - 'MicrosoftAjax.debug.js' */            offsetX = Math.floor(clientRect.left + 0.5) + documentElement.scrollLeft,
/*Line 4278 - 'MicrosoftAjax.debug.js' */            offsetY = Math.floor(clientRect.top + 0.5) + documentElement.scrollTop;
/*Line 4279 - 'MicrosoftAjax.debug.js' */        if (Sys.Browser.agent === Sys.Browser.InternetExplorer) {
/*Line 4280 - 'MicrosoftAjax.debug.js' */            try {
/*Line 4281 - 'MicrosoftAjax.debug.js' */                var f = element.ownerDocument.parentWindow.frameElement || null;
/*Line 4282 - 'MicrosoftAjax.debug.js' */                if (f) {
/*Line 4283 - 'MicrosoftAjax.debug.js' */                    var offset = (f.frameBorder === "0" || f.frameBorder === "no") ? 2 : 0;
/*Line 4284 - 'MicrosoftAjax.debug.js' */                    offsetX += offset;
/*Line 4285 - 'MicrosoftAjax.debug.js' */                    offsetY += offset;
/*Line 4286 - 'MicrosoftAjax.debug.js' */                }
/*Line 4287 - 'MicrosoftAjax.debug.js' */            }
/*Line 4288 - 'MicrosoftAjax.debug.js' */            catch(ex) {
/*Line 4289 - 'MicrosoftAjax.debug.js' */            }
/*Line 4290 - 'MicrosoftAjax.debug.js' */            if (Sys.Browser.version <= 7) {
                
/*Line 4292 - 'MicrosoftAjax.debug.js' */                var multiplier, before, rect, d = document.createElement("div");
/*Line 4293 - 'MicrosoftAjax.debug.js' */                d.style.cssText = "position:absolute !important;left:0px !important;right:0px !important;height:0px !important;width:1px !important;display:hidden !important";
/*Line 4294 - 'MicrosoftAjax.debug.js' */                try {
/*Line 4295 - 'MicrosoftAjax.debug.js' */                    before = document.body.childNodes[0];
/*Line 4296 - 'MicrosoftAjax.debug.js' */                    document.body.insertBefore(d, before);
/*Line 4297 - 'MicrosoftAjax.debug.js' */                    rect = d.getBoundingClientRect();
/*Line 4298 - 'MicrosoftAjax.debug.js' */                    document.body.removeChild(d);
/*Line 4299 - 'MicrosoftAjax.debug.js' */                    multiplier = (rect.right - rect.left);
/*Line 4300 - 'MicrosoftAjax.debug.js' */                }
/*Line 4301 - 'MicrosoftAjax.debug.js' */                catch (e) {
/*Line 4302 - 'MicrosoftAjax.debug.js' */                }
/*Line 4303 - 'MicrosoftAjax.debug.js' */                if (multiplier && (multiplier !== 1)) {
/*Line 4304 - 'MicrosoftAjax.debug.js' */                    offsetX = Math.floor(offsetX / multiplier);
/*Line 4305 - 'MicrosoftAjax.debug.js' */                    offsetY = Math.floor(offsetY / multiplier);
/*Line 4306 - 'MicrosoftAjax.debug.js' */                }
/*Line 4307 - 'MicrosoftAjax.debug.js' */            }        
/*Line 4308 - 'MicrosoftAjax.debug.js' */            if ((document.documentMode || 0) < 8) {
/*Line 4309 - 'MicrosoftAjax.debug.js' */                offsetX -= 2;
/*Line 4310 - 'MicrosoftAjax.debug.js' */                offsetY -= 2;
/*Line 4311 - 'MicrosoftAjax.debug.js' */            }
/*Line 4312 - 'MicrosoftAjax.debug.js' */        }
/*Line 4313 - 'MicrosoftAjax.debug.js' */        return new Sys.UI.Point(offsetX, offsetY);
/*Line 4314 - 'MicrosoftAjax.debug.js' */    }
/*Line 4315 - 'MicrosoftAjax.debug.js' */}
/*Line 4316 - 'MicrosoftAjax.debug.js' */else if (Sys.Browser.agent === Sys.Browser.Safari) {
/*Line 4317 - 'MicrosoftAjax.debug.js' */    Sys.UI.DomElement.getLocation = function Sys$UI$DomElement$getLocation(element) {
/*Line 4318 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.UI.DomElement.getLocation" />
/*Line 4319 - 'MicrosoftAjax.debug.js' */        /// <param name="element" domElement="true"></param>
/*Line 4320 - 'MicrosoftAjax.debug.js' */        /// <returns type="Sys.UI.Point"></returns>
/*Line 4321 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 4322 - 'MicrosoftAjax.debug.js' */            {name: "element", domElement: true}
/*Line 4323 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 4324 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 4325 - 'MicrosoftAjax.debug.js' */        if ((element.window && (element.window === element)) || element.nodeType === 9) return new Sys.UI.Point(0,0);
/*Line 4326 - 'MicrosoftAjax.debug.js' */        var offsetX = 0, offsetY = 0,
/*Line 4327 - 'MicrosoftAjax.debug.js' */            parent,
/*Line 4328 - 'MicrosoftAjax.debug.js' */            previous = null,
/*Line 4329 - 'MicrosoftAjax.debug.js' */            previousStyle = null,
/*Line 4330 - 'MicrosoftAjax.debug.js' */            currentStyle;
/*Line 4331 - 'MicrosoftAjax.debug.js' */        for (parent = element; parent; previous = parent, previousStyle = currentStyle, parent = parent.offsetParent) {
/*Line 4332 - 'MicrosoftAjax.debug.js' */            currentStyle = Sys.UI.DomElement._getCurrentStyle(parent);
/*Line 4333 - 'MicrosoftAjax.debug.js' */            var tagName = parent.tagName ? parent.tagName.toUpperCase() : null;
/*Line 4334 - 'MicrosoftAjax.debug.js' */            if ((parent.offsetLeft || parent.offsetTop) &&
/*Line 4335 - 'MicrosoftAjax.debug.js' */                ((tagName !== "BODY") || (!previousStyle || previousStyle.position !== "absolute"))) {
/*Line 4336 - 'MicrosoftAjax.debug.js' */                offsetX += parent.offsetLeft;
/*Line 4337 - 'MicrosoftAjax.debug.js' */                offsetY += parent.offsetTop;
/*Line 4338 - 'MicrosoftAjax.debug.js' */            }
/*Line 4339 - 'MicrosoftAjax.debug.js' */            if (previous && Sys.Browser.version >= 3) {
/*Line 4340 - 'MicrosoftAjax.debug.js' */                offsetX += parseInt(currentStyle.borderLeftWidth);
/*Line 4341 - 'MicrosoftAjax.debug.js' */                offsetY += parseInt(currentStyle.borderTopWidth);
/*Line 4342 - 'MicrosoftAjax.debug.js' */            }
/*Line 4343 - 'MicrosoftAjax.debug.js' */        }
/*Line 4344 - 'MicrosoftAjax.debug.js' */        currentStyle = Sys.UI.DomElement._getCurrentStyle(element);
/*Line 4345 - 'MicrosoftAjax.debug.js' */        var elementPosition = currentStyle ? currentStyle.position : null;
/*Line 4346 - 'MicrosoftAjax.debug.js' */        if (!elementPosition || (elementPosition !== "absolute")) {
/*Line 4347 - 'MicrosoftAjax.debug.js' */            for (parent = element.parentNode; parent; parent = parent.parentNode) {
/*Line 4348 - 'MicrosoftAjax.debug.js' */                tagName = parent.tagName ? parent.tagName.toUpperCase() : null;
/*Line 4349 - 'MicrosoftAjax.debug.js' */                if ((tagName !== "BODY") && (tagName !== "HTML") && (parent.scrollLeft || parent.scrollTop)) {
/*Line 4350 - 'MicrosoftAjax.debug.js' */                    offsetX -= (parent.scrollLeft || 0);
/*Line 4351 - 'MicrosoftAjax.debug.js' */                    offsetY -= (parent.scrollTop || 0);
/*Line 4352 - 'MicrosoftAjax.debug.js' */                }
/*Line 4353 - 'MicrosoftAjax.debug.js' */                currentStyle = Sys.UI.DomElement._getCurrentStyle(parent);
/*Line 4354 - 'MicrosoftAjax.debug.js' */                var parentPosition = currentStyle ? currentStyle.position : null;
/*Line 4355 - 'MicrosoftAjax.debug.js' */                if (parentPosition && (parentPosition === "absolute")) break;
/*Line 4356 - 'MicrosoftAjax.debug.js' */            }
/*Line 4357 - 'MicrosoftAjax.debug.js' */        }
/*Line 4358 - 'MicrosoftAjax.debug.js' */        return new Sys.UI.Point(offsetX, offsetY);
/*Line 4359 - 'MicrosoftAjax.debug.js' */    }
/*Line 4360 - 'MicrosoftAjax.debug.js' */}
/*Line 4361 - 'MicrosoftAjax.debug.js' */else {
/*Line 4362 - 'MicrosoftAjax.debug.js' */    Sys.UI.DomElement.getLocation = function Sys$UI$DomElement$getLocation(element) {
/*Line 4363 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.UI.DomElement.getLocation" />
/*Line 4364 - 'MicrosoftAjax.debug.js' */        /// <param name="element" domElement="true"></param>
/*Line 4365 - 'MicrosoftAjax.debug.js' */        /// <returns type="Sys.UI.Point"></returns>
/*Line 4366 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 4367 - 'MicrosoftAjax.debug.js' */            {name: "element", domElement: true}
/*Line 4368 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 4369 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 4370 - 'MicrosoftAjax.debug.js' */        if ((element.window && (element.window === element)) || element.nodeType === 9) return new Sys.UI.Point(0,0);
/*Line 4371 - 'MicrosoftAjax.debug.js' */        var offsetX = 0, offsetY = 0,
/*Line 4372 - 'MicrosoftAjax.debug.js' */            parent,
/*Line 4373 - 'MicrosoftAjax.debug.js' */            previous = null,
/*Line 4374 - 'MicrosoftAjax.debug.js' */            previousStyle = null,
/*Line 4375 - 'MicrosoftAjax.debug.js' */            currentStyle = null;
/*Line 4376 - 'MicrosoftAjax.debug.js' */        for (parent = element; parent; previous = parent, previousStyle = currentStyle, parent = parent.offsetParent) {
/*Line 4377 - 'MicrosoftAjax.debug.js' */            var tagName = parent.tagName ? parent.tagName.toUpperCase() : null;
/*Line 4378 - 'MicrosoftAjax.debug.js' */            currentStyle = Sys.UI.DomElement._getCurrentStyle(parent);
/*Line 4379 - 'MicrosoftAjax.debug.js' */            if ((parent.offsetLeft || parent.offsetTop) &&
/*Line 4380 - 'MicrosoftAjax.debug.js' */                !((tagName === "BODY") &&
/*Line 4381 - 'MicrosoftAjax.debug.js' */                (!previousStyle || previousStyle.position !== "absolute"))) {
/*Line 4382 - 'MicrosoftAjax.debug.js' */                offsetX += parent.offsetLeft;
/*Line 4383 - 'MicrosoftAjax.debug.js' */                offsetY += parent.offsetTop;
/*Line 4384 - 'MicrosoftAjax.debug.js' */            }
/*Line 4385 - 'MicrosoftAjax.debug.js' */            if (previous !== null && currentStyle) {
/*Line 4386 - 'MicrosoftAjax.debug.js' */                if ((tagName !== "TABLE") && (tagName !== "TD") && (tagName !== "HTML")) {
/*Line 4387 - 'MicrosoftAjax.debug.js' */                    offsetX += parseInt(currentStyle.borderLeftWidth) || 0;
/*Line 4388 - 'MicrosoftAjax.debug.js' */                    offsetY += parseInt(currentStyle.borderTopWidth) || 0;
/*Line 4389 - 'MicrosoftAjax.debug.js' */                }
/*Line 4390 - 'MicrosoftAjax.debug.js' */                if (tagName === "TABLE" &&
/*Line 4391 - 'MicrosoftAjax.debug.js' */                    (currentStyle.position === "relative" || currentStyle.position === "absolute")) {
/*Line 4392 - 'MicrosoftAjax.debug.js' */                    offsetX += parseInt(currentStyle.marginLeft) || 0;
/*Line 4393 - 'MicrosoftAjax.debug.js' */                    offsetY += parseInt(currentStyle.marginTop) || 0;
/*Line 4394 - 'MicrosoftAjax.debug.js' */                }
/*Line 4395 - 'MicrosoftAjax.debug.js' */            }
/*Line 4396 - 'MicrosoftAjax.debug.js' */        }
/*Line 4397 - 'MicrosoftAjax.debug.js' */        currentStyle = Sys.UI.DomElement._getCurrentStyle(element);
/*Line 4398 - 'MicrosoftAjax.debug.js' */        var elementPosition = currentStyle ? currentStyle.position : null;
/*Line 4399 - 'MicrosoftAjax.debug.js' */        if (!elementPosition || (elementPosition !== "absolute")) {
/*Line 4400 - 'MicrosoftAjax.debug.js' */            for (parent = element.parentNode; parent; parent = parent.parentNode) {
/*Line 4401 - 'MicrosoftAjax.debug.js' */                tagName = parent.tagName ? parent.tagName.toUpperCase() : null;
/*Line 4402 - 'MicrosoftAjax.debug.js' */                if ((tagName !== "BODY") && (tagName !== "HTML") && (parent.scrollLeft || parent.scrollTop)) {
/*Line 4403 - 'MicrosoftAjax.debug.js' */                    offsetX -= (parent.scrollLeft || 0);
/*Line 4404 - 'MicrosoftAjax.debug.js' */                    offsetY -= (parent.scrollTop || 0);
/*Line 4405 - 'MicrosoftAjax.debug.js' */                    currentStyle = Sys.UI.DomElement._getCurrentStyle(parent);
/*Line 4406 - 'MicrosoftAjax.debug.js' */                    if (currentStyle) {
/*Line 4407 - 'MicrosoftAjax.debug.js' */                        offsetX += parseInt(currentStyle.borderLeftWidth) || 0;
/*Line 4408 - 'MicrosoftAjax.debug.js' */                        offsetY += parseInt(currentStyle.borderTopWidth) || 0;
/*Line 4409 - 'MicrosoftAjax.debug.js' */                    }
/*Line 4410 - 'MicrosoftAjax.debug.js' */                }
/*Line 4411 - 'MicrosoftAjax.debug.js' */            }
/*Line 4412 - 'MicrosoftAjax.debug.js' */        }
/*Line 4413 - 'MicrosoftAjax.debug.js' */        return new Sys.UI.Point(offsetX, offsetY);
/*Line 4414 - 'MicrosoftAjax.debug.js' */    }
/*Line 4415 - 'MicrosoftAjax.debug.js' */}
/*Line 4416 - 'MicrosoftAjax.debug.js' */Sys.UI.DomElement.isDomElement = function Sys$UI$DomElement$isDomElement(obj) {
/*Line 4417 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.DomElement.isDomElement" />
/*Line 4418 - 'MicrosoftAjax.debug.js' */    /// <param name="obj"></param>
/*Line 4419 - 'MicrosoftAjax.debug.js' */    /// <returns type="Boolean"></returns>
/*Line 4420 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 4421 - 'MicrosoftAjax.debug.js' */        {name: "obj"}
/*Line 4422 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 4423 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 4424 - 'MicrosoftAjax.debug.js' */    return Sys._isDomElement(obj);
/*Line 4425 - 'MicrosoftAjax.debug.js' */}
/*Line 4426 - 'MicrosoftAjax.debug.js' */Sys.UI.DomElement.removeCssClass = function Sys$UI$DomElement$removeCssClass(element, className) {
/*Line 4427 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.DomElement.removeCssClass" />
/*Line 4428 - 'MicrosoftAjax.debug.js' */    /// <param name="element" domElement="true"></param>
/*Line 4429 - 'MicrosoftAjax.debug.js' */    /// <param name="className" type="String"></param>
/*Line 4430 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 4431 - 'MicrosoftAjax.debug.js' */        {name: "element", domElement: true},
/*Line 4432 - 'MicrosoftAjax.debug.js' */        {name: "className", type: String}
/*Line 4433 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 4434 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 4435 - 'MicrosoftAjax.debug.js' */    var currentClassName = ' ' + element.className + ' ';
/*Line 4436 - 'MicrosoftAjax.debug.js' */    var index = currentClassName.indexOf(' ' + className + ' ');
/*Line 4437 - 'MicrosoftAjax.debug.js' */    if (index >= 0) {
/*Line 4438 - 'MicrosoftAjax.debug.js' */        element.className = (currentClassName.substr(0, index) + ' ' +
/*Line 4439 - 'MicrosoftAjax.debug.js' */            currentClassName.substring(index + className.length + 1, currentClassName.length)).trim();
/*Line 4440 - 'MicrosoftAjax.debug.js' */    }
/*Line 4441 - 'MicrosoftAjax.debug.js' */}
/*Line 4442 - 'MicrosoftAjax.debug.js' */Sys.UI.DomElement.resolveElement = function Sys$UI$DomElement$resolveElement(elementOrElementId, containerElement) {
/*Line 4443 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.DomElement.resolveElement" />
/*Line 4444 - 'MicrosoftAjax.debug.js' */    /// <param name="elementOrElementId" mayBeNull="true"></param>
/*Line 4445 - 'MicrosoftAjax.debug.js' */    /// <param name="containerElement" domElement="true" optional="true" mayBeNull="true"></param>
/*Line 4446 - 'MicrosoftAjax.debug.js' */    /// <returns domElement="true"></returns>
/*Line 4447 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 4448 - 'MicrosoftAjax.debug.js' */        {name: "elementOrElementId", mayBeNull: true},
/*Line 4449 - 'MicrosoftAjax.debug.js' */        {name: "containerElement", mayBeNull: true, domElement: true, optional: true}
/*Line 4450 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 4451 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 4452 - 'MicrosoftAjax.debug.js' */    var el = elementOrElementId;
/*Line 4453 - 'MicrosoftAjax.debug.js' */    if (!el) return null;
/*Line 4454 - 'MicrosoftAjax.debug.js' */    if (typeof(el) === "string") {
/*Line 4455 - 'MicrosoftAjax.debug.js' */        el = Sys.UI.DomElement.getElementById(el, containerElement);
/*Line 4456 - 'MicrosoftAjax.debug.js' */        if (!el) {
/*Line 4457 - 'MicrosoftAjax.debug.js' */            throw Error.argument("elementOrElementId", String.format(Sys.Res.elementNotFound, elementOrElementId));
/*Line 4458 - 'MicrosoftAjax.debug.js' */        }
/*Line 4459 - 'MicrosoftAjax.debug.js' */    }
/*Line 4460 - 'MicrosoftAjax.debug.js' */    else if(!Sys.UI.DomElement.isDomElement(el)) {
/*Line 4461 - 'MicrosoftAjax.debug.js' */        throw Error.argument("elementOrElementId", Sys.Res.expectedElementOrId);
/*Line 4462 - 'MicrosoftAjax.debug.js' */    }
/*Line 4463 - 'MicrosoftAjax.debug.js' */    return el;
/*Line 4464 - 'MicrosoftAjax.debug.js' */}
/*Line 4465 - 'MicrosoftAjax.debug.js' */Sys.UI.DomElement.raiseBubbleEvent = function Sys$UI$DomElement$raiseBubbleEvent(source, args) {
/*Line 4466 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.DomElement.raiseBubbleEvent" />
/*Line 4467 - 'MicrosoftAjax.debug.js' */    /// <param name="source" domElement="true"></param>
/*Line 4468 - 'MicrosoftAjax.debug.js' */    /// <param name="args" type="Sys.EventArgs"></param>
/*Line 4469 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 4470 - 'MicrosoftAjax.debug.js' */        {name: "source", domElement: true},
/*Line 4471 - 'MicrosoftAjax.debug.js' */        {name: "args", type: Sys.EventArgs}
/*Line 4472 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 4473 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 4474 - 'MicrosoftAjax.debug.js' */    var target = source;
/*Line 4475 - 'MicrosoftAjax.debug.js' */    while (target) {
/*Line 4476 - 'MicrosoftAjax.debug.js' */        var control = target.control;
/*Line 4477 - 'MicrosoftAjax.debug.js' */        if (control && control.onBubbleEvent && control.raiseBubbleEvent) {
/*Line 4478 - 'MicrosoftAjax.debug.js' */            Sys.UI.DomElement._raiseBubbleEventFromControl(control, source, args);
/*Line 4479 - 'MicrosoftAjax.debug.js' */            return;
/*Line 4480 - 'MicrosoftAjax.debug.js' */        }
/*Line 4481 - 'MicrosoftAjax.debug.js' */        target = target.parentNode;
/*Line 4482 - 'MicrosoftAjax.debug.js' */    }
/*Line 4483 - 'MicrosoftAjax.debug.js' */}
/*Line 4484 - 'MicrosoftAjax.debug.js' */Sys.UI.DomElement._raiseBubbleEventFromControl = function Sys$UI$DomElement$_raiseBubbleEventFromControl(control, source, args) {
/*Line 4485 - 'MicrosoftAjax.debug.js' */    if (!control.onBubbleEvent(source, args)) {
/*Line 4486 - 'MicrosoftAjax.debug.js' */        control._raiseBubbleEvent(source, args);
/*Line 4487 - 'MicrosoftAjax.debug.js' */    }
/*Line 4488 - 'MicrosoftAjax.debug.js' */}
/*Line 4489 - 'MicrosoftAjax.debug.js' */Sys.UI.DomElement.setLocation = function Sys$UI$DomElement$setLocation(element, x, y) {
/*Line 4490 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.DomElement.setLocation" />
/*Line 4491 - 'MicrosoftAjax.debug.js' */    /// <param name="element" domElement="true"></param>
/*Line 4492 - 'MicrosoftAjax.debug.js' */    /// <param name="x" type="Number" integer="true"></param>
/*Line 4493 - 'MicrosoftAjax.debug.js' */    /// <param name="y" type="Number" integer="true"></param>
/*Line 4494 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 4495 - 'MicrosoftAjax.debug.js' */        {name: "element", domElement: true},
/*Line 4496 - 'MicrosoftAjax.debug.js' */        {name: "x", type: Number, integer: true},
/*Line 4497 - 'MicrosoftAjax.debug.js' */        {name: "y", type: Number, integer: true}
/*Line 4498 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 4499 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 4500 - 'MicrosoftAjax.debug.js' */    var style = element.style;
/*Line 4501 - 'MicrosoftAjax.debug.js' */    style.position = 'absolute';
/*Line 4502 - 'MicrosoftAjax.debug.js' */    style.left = x + "px";
/*Line 4503 - 'MicrosoftAjax.debug.js' */    style.top = y + "px";
/*Line 4504 - 'MicrosoftAjax.debug.js' */}
/*Line 4505 - 'MicrosoftAjax.debug.js' */Sys.UI.DomElement.toggleCssClass = function Sys$UI$DomElement$toggleCssClass(element, className) {
/*Line 4506 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.DomElement.toggleCssClass" />
/*Line 4507 - 'MicrosoftAjax.debug.js' */    /// <param name="element" domElement="true"></param>
/*Line 4508 - 'MicrosoftAjax.debug.js' */    /// <param name="className" type="String"></param>
/*Line 4509 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 4510 - 'MicrosoftAjax.debug.js' */        {name: "element", domElement: true},
/*Line 4511 - 'MicrosoftAjax.debug.js' */        {name: "className", type: String}
/*Line 4512 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 4513 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 4514 - 'MicrosoftAjax.debug.js' */    if (Sys.UI.DomElement.containsCssClass(element, className)) {
/*Line 4515 - 'MicrosoftAjax.debug.js' */        Sys.UI.DomElement.removeCssClass(element, className);
/*Line 4516 - 'MicrosoftAjax.debug.js' */    }
/*Line 4517 - 'MicrosoftAjax.debug.js' */    else {
/*Line 4518 - 'MicrosoftAjax.debug.js' */        Sys.UI.DomElement.addCssClass(element, className);
/*Line 4519 - 'MicrosoftAjax.debug.js' */    }
/*Line 4520 - 'MicrosoftAjax.debug.js' */}
/*Line 4521 - 'MicrosoftAjax.debug.js' */Sys.UI.DomElement.getVisibilityMode = function Sys$UI$DomElement$getVisibilityMode(element) {
/*Line 4522 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.DomElement.getVisibilityMode" />
/*Line 4523 - 'MicrosoftAjax.debug.js' */    /// <param name="element" domElement="true"></param>
/*Line 4524 - 'MicrosoftAjax.debug.js' */    /// <returns type="Sys.UI.VisibilityMode"></returns>
/*Line 4525 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 4526 - 'MicrosoftAjax.debug.js' */        {name: "element", domElement: true}
/*Line 4527 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 4528 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 4529 - 'MicrosoftAjax.debug.js' */    return (element._visibilityMode === Sys.UI.VisibilityMode.hide) ?
/*Line 4530 - 'MicrosoftAjax.debug.js' */        Sys.UI.VisibilityMode.hide :
/*Line 4531 - 'MicrosoftAjax.debug.js' */        Sys.UI.VisibilityMode.collapse;
/*Line 4532 - 'MicrosoftAjax.debug.js' */}
/*Line 4533 - 'MicrosoftAjax.debug.js' */Sys.UI.DomElement.setVisibilityMode = function Sys$UI$DomElement$setVisibilityMode(element, value) {
/*Line 4534 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.DomElement.setVisibilityMode" />
/*Line 4535 - 'MicrosoftAjax.debug.js' */    /// <param name="element" domElement="true"></param>
/*Line 4536 - 'MicrosoftAjax.debug.js' */    /// <param name="value" type="Sys.UI.VisibilityMode"></param>
/*Line 4537 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 4538 - 'MicrosoftAjax.debug.js' */        {name: "element", domElement: true},
/*Line 4539 - 'MicrosoftAjax.debug.js' */        {name: "value", type: Sys.UI.VisibilityMode}
/*Line 4540 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 4541 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 4542 - 'MicrosoftAjax.debug.js' */    Sys.UI.DomElement._ensureOldDisplayMode(element);
/*Line 4543 - 'MicrosoftAjax.debug.js' */    if (element._visibilityMode !== value) {
/*Line 4544 - 'MicrosoftAjax.debug.js' */        element._visibilityMode = value;
/*Line 4545 - 'MicrosoftAjax.debug.js' */        if (Sys.UI.DomElement.getVisible(element) === false) {
/*Line 4546 - 'MicrosoftAjax.debug.js' */            if (element._visibilityMode === Sys.UI.VisibilityMode.hide) {
/*Line 4547 - 'MicrosoftAjax.debug.js' */                element.style.display = element._oldDisplayMode;
/*Line 4548 - 'MicrosoftAjax.debug.js' */            }
/*Line 4549 - 'MicrosoftAjax.debug.js' */            else {
/*Line 4550 - 'MicrosoftAjax.debug.js' */                element.style.display = 'none';
/*Line 4551 - 'MicrosoftAjax.debug.js' */            }
/*Line 4552 - 'MicrosoftAjax.debug.js' */        }
/*Line 4553 - 'MicrosoftAjax.debug.js' */        element._visibilityMode = value;
/*Line 4554 - 'MicrosoftAjax.debug.js' */    }
/*Line 4555 - 'MicrosoftAjax.debug.js' */}
/*Line 4556 - 'MicrosoftAjax.debug.js' */Sys.UI.DomElement.getVisible = function Sys$UI$DomElement$getVisible(element) {
/*Line 4557 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.DomElement.getVisible" />
/*Line 4558 - 'MicrosoftAjax.debug.js' */    /// <param name="element" domElement="true"></param>
/*Line 4559 - 'MicrosoftAjax.debug.js' */    /// <returns type="Boolean"></returns>
/*Line 4560 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 4561 - 'MicrosoftAjax.debug.js' */        {name: "element", domElement: true}
/*Line 4562 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 4563 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 4564 - 'MicrosoftAjax.debug.js' */    var style = element.currentStyle || Sys.UI.DomElement._getCurrentStyle(element);
/*Line 4565 - 'MicrosoftAjax.debug.js' */    if (!style) return true;
/*Line 4566 - 'MicrosoftAjax.debug.js' */    return (style.visibility !== 'hidden') && (style.display !== 'none');
/*Line 4567 - 'MicrosoftAjax.debug.js' */}
/*Line 4568 - 'MicrosoftAjax.debug.js' */Sys.UI.DomElement.setVisible = function Sys$UI$DomElement$setVisible(element, value) {
/*Line 4569 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.DomElement.setVisible" />
/*Line 4570 - 'MicrosoftAjax.debug.js' */    /// <param name="element" domElement="true"></param>
/*Line 4571 - 'MicrosoftAjax.debug.js' */    /// <param name="value" type="Boolean"></param>
/*Line 4572 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 4573 - 'MicrosoftAjax.debug.js' */        {name: "element", domElement: true},
/*Line 4574 - 'MicrosoftAjax.debug.js' */        {name: "value", type: Boolean}
/*Line 4575 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 4576 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 4577 - 'MicrosoftAjax.debug.js' */    if (value !== Sys.UI.DomElement.getVisible(element)) {
/*Line 4578 - 'MicrosoftAjax.debug.js' */        Sys.UI.DomElement._ensureOldDisplayMode(element);
/*Line 4579 - 'MicrosoftAjax.debug.js' */        element.style.visibility = value ? 'visible' : 'hidden';
/*Line 4580 - 'MicrosoftAjax.debug.js' */        if (value || (element._visibilityMode === Sys.UI.VisibilityMode.hide)) {
/*Line 4581 - 'MicrosoftAjax.debug.js' */            element.style.display = element._oldDisplayMode;
/*Line 4582 - 'MicrosoftAjax.debug.js' */        }
/*Line 4583 - 'MicrosoftAjax.debug.js' */        else {
/*Line 4584 - 'MicrosoftAjax.debug.js' */            element.style.display = 'none';
/*Line 4585 - 'MicrosoftAjax.debug.js' */        }
/*Line 4586 - 'MicrosoftAjax.debug.js' */    }
/*Line 4587 - 'MicrosoftAjax.debug.js' */}
/*Line 4588 - 'MicrosoftAjax.debug.js' */Sys.UI.DomElement._ensureOldDisplayMode = function Sys$UI$DomElement$_ensureOldDisplayMode(element) {
/*Line 4589 - 'MicrosoftAjax.debug.js' */    if (!element._oldDisplayMode) {
/*Line 4590 - 'MicrosoftAjax.debug.js' */        var style = element.currentStyle || Sys.UI.DomElement._getCurrentStyle(element);
/*Line 4591 - 'MicrosoftAjax.debug.js' */        element._oldDisplayMode = style ? style.display : null;
/*Line 4592 - 'MicrosoftAjax.debug.js' */        if (!element._oldDisplayMode || element._oldDisplayMode === 'none') {
/*Line 4593 - 'MicrosoftAjax.debug.js' */            switch(element.tagName.toUpperCase()) {
/*Line 4594 - 'MicrosoftAjax.debug.js' */                case 'DIV': case 'P': case 'ADDRESS': case 'BLOCKQUOTE': case 'BODY': case 'COL':
/*Line 4595 - 'MicrosoftAjax.debug.js' */                case 'COLGROUP': case 'DD': case 'DL': case 'DT': case 'FIELDSET': case 'FORM':
/*Line 4596 - 'MicrosoftAjax.debug.js' */                case 'H1': case 'H2': case 'H3': case 'H4': case 'H5': case 'H6': case 'HR':
/*Line 4597 - 'MicrosoftAjax.debug.js' */                case 'IFRAME': case 'LEGEND': case 'OL': case 'PRE': case 'TABLE': case 'TD':
/*Line 4598 - 'MicrosoftAjax.debug.js' */                case 'TH': case 'TR': case 'UL':
/*Line 4599 - 'MicrosoftAjax.debug.js' */                    element._oldDisplayMode = 'block';
/*Line 4600 - 'MicrosoftAjax.debug.js' */                    break;
/*Line 4601 - 'MicrosoftAjax.debug.js' */                case 'LI':
/*Line 4602 - 'MicrosoftAjax.debug.js' */                    element._oldDisplayMode = 'list-item';
/*Line 4603 - 'MicrosoftAjax.debug.js' */                    break;
/*Line 4604 - 'MicrosoftAjax.debug.js' */                default:
/*Line 4605 - 'MicrosoftAjax.debug.js' */                    element._oldDisplayMode = 'inline';
/*Line 4606 - 'MicrosoftAjax.debug.js' */            }
/*Line 4607 - 'MicrosoftAjax.debug.js' */        }
/*Line 4608 - 'MicrosoftAjax.debug.js' */    }
/*Line 4609 - 'MicrosoftAjax.debug.js' */}
/*Line 4610 - 'MicrosoftAjax.debug.js' */Sys.UI.DomElement._getWindow = function Sys$UI$DomElement$_getWindow(element) {
/*Line 4611 - 'MicrosoftAjax.debug.js' */    var doc = element.ownerDocument || element.document || element;
/*Line 4612 - 'MicrosoftAjax.debug.js' */    return doc.defaultView || doc.parentWindow;
/*Line 4613 - 'MicrosoftAjax.debug.js' */}
/*Line 4614 - 'MicrosoftAjax.debug.js' */Sys.UI.DomElement._getCurrentStyle = function Sys$UI$DomElement$_getCurrentStyle(element) {
/*Line 4615 - 'MicrosoftAjax.debug.js' */    if (element.nodeType === 3) return null;
/*Line 4616 - 'MicrosoftAjax.debug.js' */    var w = Sys.UI.DomElement._getWindow(element);
/*Line 4617 - 'MicrosoftAjax.debug.js' */    if (element.documentElement) element = element.documentElement;
/*Line 4618 - 'MicrosoftAjax.debug.js' */    var computedStyle = (w && (element !== w) && w.getComputedStyle) ?
/*Line 4619 - 'MicrosoftAjax.debug.js' */        w.getComputedStyle(element, null) :
/*Line 4620 - 'MicrosoftAjax.debug.js' */        element.currentStyle || element.style;
/*Line 4621 - 'MicrosoftAjax.debug.js' */    if (!computedStyle && (Sys.Browser.agent === Sys.Browser.Safari) && element.style) {
/*Line 4622 - 'MicrosoftAjax.debug.js' */        var oldDisplay = element.style.display;
/*Line 4623 - 'MicrosoftAjax.debug.js' */        var oldPosition = element.style.position;
/*Line 4624 - 'MicrosoftAjax.debug.js' */        element.style.position = 'absolute';
/*Line 4625 - 'MicrosoftAjax.debug.js' */        element.style.display = 'block';
/*Line 4626 - 'MicrosoftAjax.debug.js' */        var style = w.getComputedStyle(element, null);
/*Line 4627 - 'MicrosoftAjax.debug.js' */        element.style.display = oldDisplay;
/*Line 4628 - 'MicrosoftAjax.debug.js' */        element.style.position = oldPosition;
/*Line 4629 - 'MicrosoftAjax.debug.js' */        computedStyle = {};
/*Line 4630 - 'MicrosoftAjax.debug.js' */        for (var n in style) {
/*Line 4631 - 'MicrosoftAjax.debug.js' */            computedStyle[n] = style[n];
/*Line 4632 - 'MicrosoftAjax.debug.js' */        }
/*Line 4633 - 'MicrosoftAjax.debug.js' */        computedStyle.display = 'none';
/*Line 4634 - 'MicrosoftAjax.debug.js' */    }
/*Line 4635 - 'MicrosoftAjax.debug.js' */    return computedStyle;
/*Line 4636 - 'MicrosoftAjax.debug.js' */}
 
/*Line 4638 - 'MicrosoftAjax.debug.js' */Sys.IContainer = function Sys$IContainer() {
/*Line 4639 - 'MicrosoftAjax.debug.js' */    throw Error.notImplemented();
/*Line 4640 - 'MicrosoftAjax.debug.js' */}
/*Line 4641 - 'MicrosoftAjax.debug.js' */    function Sys$IContainer$addComponent(component) {
/*Line 4642 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.IContainer.addComponent" />
/*Line 4643 - 'MicrosoftAjax.debug.js' */        /// <param name="component" type="Sys.Component"></param>
/*Line 4644 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 4645 - 'MicrosoftAjax.debug.js' */            {name: "component", type: Sys.Component}
/*Line 4646 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 4647 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 4648 - 'MicrosoftAjax.debug.js' */        throw Error.notImplemented();
/*Line 4649 - 'MicrosoftAjax.debug.js' */    }
/*Line 4650 - 'MicrosoftAjax.debug.js' */    function Sys$IContainer$removeComponent(component) {
/*Line 4651 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.IContainer.removeComponent" />
/*Line 4652 - 'MicrosoftAjax.debug.js' */        /// <param name="component" type="Sys.Component"></param>
/*Line 4653 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 4654 - 'MicrosoftAjax.debug.js' */            {name: "component", type: Sys.Component}
/*Line 4655 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 4656 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 4657 - 'MicrosoftAjax.debug.js' */        throw Error.notImplemented();
/*Line 4658 - 'MicrosoftAjax.debug.js' */    }
/*Line 4659 - 'MicrosoftAjax.debug.js' */    function Sys$IContainer$findComponent(id) {
/*Line 4660 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.IContainer.findComponent" />
/*Line 4661 - 'MicrosoftAjax.debug.js' */        /// <param name="id" type="String"></param>
/*Line 4662 - 'MicrosoftAjax.debug.js' */        /// <returns type="Sys.Component"></returns>
/*Line 4663 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 4664 - 'MicrosoftAjax.debug.js' */            {name: "id", type: String}
/*Line 4665 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 4666 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 4667 - 'MicrosoftAjax.debug.js' */        throw Error.notImplemented();
/*Line 4668 - 'MicrosoftAjax.debug.js' */    }
/*Line 4669 - 'MicrosoftAjax.debug.js' */    function Sys$IContainer$getComponents() {
/*Line 4670 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.IContainer.getComponents" />
/*Line 4671 - 'MicrosoftAjax.debug.js' */        /// <returns type="Array" elementType="Sys.Component"></returns>
/*Line 4672 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 4673 - 'MicrosoftAjax.debug.js' */        throw Error.notImplemented();
/*Line 4674 - 'MicrosoftAjax.debug.js' */    }
/*Line 4675 - 'MicrosoftAjax.debug.js' */Sys.IContainer.prototype = {
/*Line 4676 - 'MicrosoftAjax.debug.js' */    addComponent: Sys$IContainer$addComponent,
/*Line 4677 - 'MicrosoftAjax.debug.js' */    removeComponent: Sys$IContainer$removeComponent,
/*Line 4678 - 'MicrosoftAjax.debug.js' */    findComponent: Sys$IContainer$findComponent,
/*Line 4679 - 'MicrosoftAjax.debug.js' */    getComponents: Sys$IContainer$getComponents
/*Line 4680 - 'MicrosoftAjax.debug.js' */}
/*Line 4681 - 'MicrosoftAjax.debug.js' */Sys.IContainer.registerInterface("Sys.IContainer");
 
/*Line 4683 - 'MicrosoftAjax.debug.js' */Sys.ApplicationLoadEventArgs = function Sys$ApplicationLoadEventArgs(components, isPartialLoad) {
/*Line 4684 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.ApplicationLoadEventArgs.#ctor" />
/*Line 4685 - 'MicrosoftAjax.debug.js' */    /// <param name="components" type="Array" elementType="Sys.Component"></param>
/*Line 4686 - 'MicrosoftAjax.debug.js' */    /// <param name="isPartialLoad" type="Boolean"></param>
/*Line 4687 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 4688 - 'MicrosoftAjax.debug.js' */        {name: "components", type: Array, elementType: Sys.Component},
/*Line 4689 - 'MicrosoftAjax.debug.js' */        {name: "isPartialLoad", type: Boolean}
/*Line 4690 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 4691 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 4692 - 'MicrosoftAjax.debug.js' */    Sys.ApplicationLoadEventArgs.initializeBase(this);
/*Line 4693 - 'MicrosoftAjax.debug.js' */    this._components = components;
/*Line 4694 - 'MicrosoftAjax.debug.js' */    this._isPartialLoad = isPartialLoad;
/*Line 4695 - 'MicrosoftAjax.debug.js' */}
 
/*Line 4697 - 'MicrosoftAjax.debug.js' */    function Sys$ApplicationLoadEventArgs$get_components() {
/*Line 4698 - 'MicrosoftAjax.debug.js' */        /// <value type="Array" elementType="Sys.Component" locid="P:J#Sys.ApplicationLoadEventArgs.components"></value>
/*Line 4699 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 4700 - 'MicrosoftAjax.debug.js' */        return this._components;
/*Line 4701 - 'MicrosoftAjax.debug.js' */    }
/*Line 4702 - 'MicrosoftAjax.debug.js' */    function Sys$ApplicationLoadEventArgs$get_isPartialLoad() {
/*Line 4703 - 'MicrosoftAjax.debug.js' */        /// <value type="Boolean" locid="P:J#Sys.ApplicationLoadEventArgs.isPartialLoad"></value>
/*Line 4704 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 4705 - 'MicrosoftAjax.debug.js' */        return this._isPartialLoad;
/*Line 4706 - 'MicrosoftAjax.debug.js' */    }
/*Line 4707 - 'MicrosoftAjax.debug.js' */Sys.ApplicationLoadEventArgs.prototype = {
/*Line 4708 - 'MicrosoftAjax.debug.js' */    get_components: Sys$ApplicationLoadEventArgs$get_components,
/*Line 4709 - 'MicrosoftAjax.debug.js' */    get_isPartialLoad: Sys$ApplicationLoadEventArgs$get_isPartialLoad
/*Line 4710 - 'MicrosoftAjax.debug.js' */}
/*Line 4711 - 'MicrosoftAjax.debug.js' */Sys.ApplicationLoadEventArgs.registerClass('Sys.ApplicationLoadEventArgs', Sys.EventArgs);
 
/*Line 4713 - 'MicrosoftAjax.debug.js' */Sys._Application = function Sys$_Application() {
/*Line 4714 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Application.#ctor" />
/*Line 4715 - 'MicrosoftAjax.debug.js' */    if (arguments.length !== 0) throw Error.parameterCount();
/*Line 4716 - 'MicrosoftAjax.debug.js' */    Sys._Application.initializeBase(this);
/*Line 4717 - 'MicrosoftAjax.debug.js' */    this._disposableObjects = [];
/*Line 4718 - 'MicrosoftAjax.debug.js' */    this._components = {};
/*Line 4719 - 'MicrosoftAjax.debug.js' */    this._createdComponents = [];
/*Line 4720 - 'MicrosoftAjax.debug.js' */    this._secondPassComponents = [];
/*Line 4721 - 'MicrosoftAjax.debug.js' */    this._unloadHandlerDelegate = Function.createDelegate(this, this._unloadHandler);
/*Line 4722 - 'MicrosoftAjax.debug.js' */    Sys.UI.DomEvent.addHandler(window, "unload", this._unloadHandlerDelegate);
/*Line 4723 - 'MicrosoftAjax.debug.js' */    this._domReady();
/*Line 4724 - 'MicrosoftAjax.debug.js' */}
/*Line 4725 - 'MicrosoftAjax.debug.js' */    function Sys$_Application$get_isCreatingComponents() {
/*Line 4726 - 'MicrosoftAjax.debug.js' */        /// <value type="Boolean" locid="P:J#Sys.Application.isCreatingComponents"></value>
/*Line 4727 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 4728 - 'MicrosoftAjax.debug.js' */        return this._creatingComponents;
/*Line 4729 - 'MicrosoftAjax.debug.js' */    }
/*Line 4730 - 'MicrosoftAjax.debug.js' */    function Sys$_Application$get_isDisposing() {
/*Line 4731 - 'MicrosoftAjax.debug.js' */        /// <value type="Boolean" locid="P:J#Sys.Application.isDisposing"></value>
/*Line 4732 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 4733 - 'MicrosoftAjax.debug.js' */        return this._disposing;
/*Line 4734 - 'MicrosoftAjax.debug.js' */    }
/*Line 4735 - 'MicrosoftAjax.debug.js' */    function Sys$_Application$add_init(handler) {
/*Line 4736 - 'MicrosoftAjax.debug.js' */        /// <summary locid="E:J#Sys.Application.init" />
/*Line 4737 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "handler", type: Function}]);
/*Line 4738 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 4739 - 'MicrosoftAjax.debug.js' */        if (this._initialized) {
/*Line 4740 - 'MicrosoftAjax.debug.js' */            handler(this, Sys.EventArgs.Empty);
/*Line 4741 - 'MicrosoftAjax.debug.js' */        }
/*Line 4742 - 'MicrosoftAjax.debug.js' */        else {
/*Line 4743 - 'MicrosoftAjax.debug.js' */            this.get_events().addHandler("init", handler);
/*Line 4744 - 'MicrosoftAjax.debug.js' */        }
/*Line 4745 - 'MicrosoftAjax.debug.js' */    }
/*Line 4746 - 'MicrosoftAjax.debug.js' */    function Sys$_Application$remove_init(handler) {
/*Line 4747 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "handler", type: Function}]);
/*Line 4748 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 4749 - 'MicrosoftAjax.debug.js' */        this.get_events().removeHandler("init", handler);
/*Line 4750 - 'MicrosoftAjax.debug.js' */    }
/*Line 4751 - 'MicrosoftAjax.debug.js' */    function Sys$_Application$add_load(handler) {
/*Line 4752 - 'MicrosoftAjax.debug.js' */        /// <summary locid="E:J#Sys.Application.load" />
/*Line 4753 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "handler", type: Function}]);
/*Line 4754 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 4755 - 'MicrosoftAjax.debug.js' */        this.get_events().addHandler("load", handler);
/*Line 4756 - 'MicrosoftAjax.debug.js' */    }
/*Line 4757 - 'MicrosoftAjax.debug.js' */    function Sys$_Application$remove_load(handler) {
/*Line 4758 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "handler", type: Function}]);
/*Line 4759 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 4760 - 'MicrosoftAjax.debug.js' */        this.get_events().removeHandler("load", handler);
/*Line 4761 - 'MicrosoftAjax.debug.js' */    }
/*Line 4762 - 'MicrosoftAjax.debug.js' */    function Sys$_Application$add_unload(handler) {
/*Line 4763 - 'MicrosoftAjax.debug.js' */        /// <summary locid="E:J#Sys.Application.unload" />
/*Line 4764 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "handler", type: Function}]);
/*Line 4765 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 4766 - 'MicrosoftAjax.debug.js' */        this.get_events().addHandler("unload", handler);
/*Line 4767 - 'MicrosoftAjax.debug.js' */    }
/*Line 4768 - 'MicrosoftAjax.debug.js' */    function Sys$_Application$remove_unload(handler) {
/*Line 4769 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "handler", type: Function}]);
/*Line 4770 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 4771 - 'MicrosoftAjax.debug.js' */        this.get_events().removeHandler("unload", handler);
/*Line 4772 - 'MicrosoftAjax.debug.js' */    }
/*Line 4773 - 'MicrosoftAjax.debug.js' */    function Sys$_Application$addComponent(component) {
/*Line 4774 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Application.addComponent" />
/*Line 4775 - 'MicrosoftAjax.debug.js' */        /// <param name="component" type="Sys.Component"></param>
/*Line 4776 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 4777 - 'MicrosoftAjax.debug.js' */            {name: "component", type: Sys.Component}
/*Line 4778 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 4779 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 4780 - 'MicrosoftAjax.debug.js' */        var id = component.get_id();
/*Line 4781 - 'MicrosoftAjax.debug.js' */        if (!id) throw Error.invalidOperation(Sys.Res.cantAddWithoutId);
/*Line 4782 - 'MicrosoftAjax.debug.js' */        if (typeof(this._components[id]) !== 'undefined') throw Error.invalidOperation(String.format(Sys.Res.appDuplicateComponent, id));
/*Line 4783 - 'MicrosoftAjax.debug.js' */        this._components[id] = component;
/*Line 4784 - 'MicrosoftAjax.debug.js' */    }
/*Line 4785 - 'MicrosoftAjax.debug.js' */    function Sys$_Application$beginCreateComponents() {
/*Line 4786 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Application.beginCreateComponents" />
/*Line 4787 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 4788 - 'MicrosoftAjax.debug.js' */        this._creatingComponents = true;
/*Line 4789 - 'MicrosoftAjax.debug.js' */    }
/*Line 4790 - 'MicrosoftAjax.debug.js' */    function Sys$_Application$dispose() {
/*Line 4791 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Application.dispose" />
/*Line 4792 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 4793 - 'MicrosoftAjax.debug.js' */        if (!this._disposing) {
/*Line 4794 - 'MicrosoftAjax.debug.js' */            this._disposing = true;
/*Line 4795 - 'MicrosoftAjax.debug.js' */            if (this._timerCookie) {
/*Line 4796 - 'MicrosoftAjax.debug.js' */                window.clearTimeout(this._timerCookie);
/*Line 4797 - 'MicrosoftAjax.debug.js' */                delete this._timerCookie;
/*Line 4798 - 'MicrosoftAjax.debug.js' */            }
/*Line 4799 - 'MicrosoftAjax.debug.js' */            if (this._endRequestHandler) {
/*Line 4800 - 'MicrosoftAjax.debug.js' */                Sys.WebForms.PageRequestManager.getInstance().remove_endRequest(this._endRequestHandler);
/*Line 4801 - 'MicrosoftAjax.debug.js' */                delete this._endRequestHandler;
/*Line 4802 - 'MicrosoftAjax.debug.js' */            }
/*Line 4803 - 'MicrosoftAjax.debug.js' */            if (this._beginRequestHandler) {
/*Line 4804 - 'MicrosoftAjax.debug.js' */                Sys.WebForms.PageRequestManager.getInstance().remove_beginRequest(this._beginRequestHandler);
/*Line 4805 - 'MicrosoftAjax.debug.js' */                delete this._beginRequestHandler;
/*Line 4806 - 'MicrosoftAjax.debug.js' */            }
/*Line 4807 - 'MicrosoftAjax.debug.js' */            if (window.pageUnload) {
/*Line 4808 - 'MicrosoftAjax.debug.js' */                window.pageUnload(this, Sys.EventArgs.Empty);
/*Line 4809 - 'MicrosoftAjax.debug.js' */            }
/*Line 4810 - 'MicrosoftAjax.debug.js' */            var unloadHandler = this.get_events().getHandler("unload");
/*Line 4811 - 'MicrosoftAjax.debug.js' */            if (unloadHandler) {
/*Line 4812 - 'MicrosoftAjax.debug.js' */                unloadHandler(this, Sys.EventArgs.Empty);
/*Line 4813 - 'MicrosoftAjax.debug.js' */            }
/*Line 4814 - 'MicrosoftAjax.debug.js' */            var disposableObjects = Array.clone(this._disposableObjects);
/*Line 4815 - 'MicrosoftAjax.debug.js' */            for (var i = 0, l = disposableObjects.length; i < l; i++) {
/*Line 4816 - 'MicrosoftAjax.debug.js' */                var object = disposableObjects[i];
/*Line 4817 - 'MicrosoftAjax.debug.js' */                if (typeof(object) !== "undefined") {
/*Line 4818 - 'MicrosoftAjax.debug.js' */                    object.dispose();
/*Line 4819 - 'MicrosoftAjax.debug.js' */                }
/*Line 4820 - 'MicrosoftAjax.debug.js' */            }
/*Line 4821 - 'MicrosoftAjax.debug.js' */            Array.clear(this._disposableObjects);
/*Line 4822 - 'MicrosoftAjax.debug.js' */            Sys.UI.DomEvent.removeHandler(window, "unload", this._unloadHandlerDelegate);
/*Line 4823 - 'MicrosoftAjax.debug.js' */            if (Sys._ScriptLoader) {
/*Line 4824 - 'MicrosoftAjax.debug.js' */                var sl = Sys._ScriptLoader.getInstance();
/*Line 4825 - 'MicrosoftAjax.debug.js' */                if(sl) {
/*Line 4826 - 'MicrosoftAjax.debug.js' */                    sl.dispose();
/*Line 4827 - 'MicrosoftAjax.debug.js' */                }
/*Line 4828 - 'MicrosoftAjax.debug.js' */            }
/*Line 4829 - 'MicrosoftAjax.debug.js' */            Sys._Application.callBaseMethod(this, 'dispose');
/*Line 4830 - 'MicrosoftAjax.debug.js' */        }
/*Line 4831 - 'MicrosoftAjax.debug.js' */    }
/*Line 4832 - 'MicrosoftAjax.debug.js' */    function Sys$_Application$disposeElement(element, childNodesOnly) {
/*Line 4833 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys._Application.disposeElement" />
/*Line 4834 - 'MicrosoftAjax.debug.js' */        /// <param name="element"></param>
/*Line 4835 - 'MicrosoftAjax.debug.js' */        /// <param name="childNodesOnly" type="Boolean"></param>
/*Line 4836 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 4837 - 'MicrosoftAjax.debug.js' */            {name: "element"},
/*Line 4838 - 'MicrosoftAjax.debug.js' */            {name: "childNodesOnly", type: Boolean}
/*Line 4839 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 4840 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 4841 - 'MicrosoftAjax.debug.js' */        if (element.nodeType === 1) {
/*Line 4842 - 'MicrosoftAjax.debug.js' */            var children = element.getElementsByTagName("*");
/*Line 4843 - 'MicrosoftAjax.debug.js' */            for (var i = children.length - 1; i >= 0; i--) {
/*Line 4844 - 'MicrosoftAjax.debug.js' */                this._disposeElementInternal(children[i]);
/*Line 4845 - 'MicrosoftAjax.debug.js' */            }
/*Line 4846 - 'MicrosoftAjax.debug.js' */            if (!childNodesOnly) {
/*Line 4847 - 'MicrosoftAjax.debug.js' */                this._disposeElementInternal(element);
/*Line 4848 - 'MicrosoftAjax.debug.js' */            }
/*Line 4849 - 'MicrosoftAjax.debug.js' */        }
/*Line 4850 - 'MicrosoftAjax.debug.js' */    }
/*Line 4851 - 'MicrosoftAjax.debug.js' */    function Sys$_Application$endCreateComponents() {
/*Line 4852 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Application.endCreateComponents" />
/*Line 4853 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 4854 - 'MicrosoftAjax.debug.js' */        var components = this._secondPassComponents;
/*Line 4855 - 'MicrosoftAjax.debug.js' */        for (var i = 0, l = components.length; i < l; i++) {
/*Line 4856 - 'MicrosoftAjax.debug.js' */            var component = components[i].component;
/*Line 4857 - 'MicrosoftAjax.debug.js' */            Sys$Component$_setReferences(component, components[i].references);
/*Line 4858 - 'MicrosoftAjax.debug.js' */            component.endUpdate();
/*Line 4859 - 'MicrosoftAjax.debug.js' */        }
/*Line 4860 - 'MicrosoftAjax.debug.js' */        this._secondPassComponents = [];
/*Line 4861 - 'MicrosoftAjax.debug.js' */        this._creatingComponents = false;
/*Line 4862 - 'MicrosoftAjax.debug.js' */    }
/*Line 4863 - 'MicrosoftAjax.debug.js' */    function Sys$_Application$findComponent(id, parent) {
/*Line 4864 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Application.findComponent" />
/*Line 4865 - 'MicrosoftAjax.debug.js' */        /// <param name="id" type="String"></param>
/*Line 4866 - 'MicrosoftAjax.debug.js' */        /// <param name="parent" optional="true" mayBeNull="true"></param>
/*Line 4867 - 'MicrosoftAjax.debug.js' */        /// <returns type="Sys.Component" mayBeNull="true"></returns>
/*Line 4868 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 4869 - 'MicrosoftAjax.debug.js' */            {name: "id", type: String},
/*Line 4870 - 'MicrosoftAjax.debug.js' */            {name: "parent", mayBeNull: true, optional: true}
/*Line 4871 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 4872 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 4873 - 'MicrosoftAjax.debug.js' */        return (parent ?
/*Line 4874 - 'MicrosoftAjax.debug.js' */            ((Sys.IContainer.isInstanceOfType(parent)) ?
/*Line 4875 - 'MicrosoftAjax.debug.js' */                parent.findComponent(id) :
/*Line 4876 - 'MicrosoftAjax.debug.js' */                parent[id] || null) :
/*Line 4877 - 'MicrosoftAjax.debug.js' */            Sys.Application._components[id] || null);
/*Line 4878 - 'MicrosoftAjax.debug.js' */    }
/*Line 4879 - 'MicrosoftAjax.debug.js' */    function Sys$_Application$getComponents() {
/*Line 4880 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Application.getComponents" />
/*Line 4881 - 'MicrosoftAjax.debug.js' */        /// <returns type="Array" elementType="Sys.Component"></returns>
/*Line 4882 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 4883 - 'MicrosoftAjax.debug.js' */        var res = [];
/*Line 4884 - 'MicrosoftAjax.debug.js' */        var components = this._components;
/*Line 4885 - 'MicrosoftAjax.debug.js' */        for (var name in components) {
/*Line 4886 - 'MicrosoftAjax.debug.js' */            res[res.length] = components[name];
/*Line 4887 - 'MicrosoftAjax.debug.js' */        }
/*Line 4888 - 'MicrosoftAjax.debug.js' */        return res;
/*Line 4889 - 'MicrosoftAjax.debug.js' */    }
/*Line 4890 - 'MicrosoftAjax.debug.js' */    function Sys$_Application$initialize() {
/*Line 4891 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Application.initialize" />
/*Line 4892 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 4893 - 'MicrosoftAjax.debug.js' */        if(!this.get_isInitialized() && !this._disposing) {
/*Line 4894 - 'MicrosoftAjax.debug.js' */            Sys._Application.callBaseMethod(this, 'initialize');
/*Line 4895 - 'MicrosoftAjax.debug.js' */            this._raiseInit();
/*Line 4896 - 'MicrosoftAjax.debug.js' */            if (this.get_stateString) {
/*Line 4897 - 'MicrosoftAjax.debug.js' */                if (Sys.WebForms && Sys.WebForms.PageRequestManager) {
/*Line 4898 - 'MicrosoftAjax.debug.js' */                    this._beginRequestHandler = Function.createDelegate(this, this._onPageRequestManagerBeginRequest);
/*Line 4899 - 'MicrosoftAjax.debug.js' */                    Sys.WebForms.PageRequestManager.getInstance().add_beginRequest(this._beginRequestHandler);
/*Line 4900 - 'MicrosoftAjax.debug.js' */                    this._endRequestHandler = Function.createDelegate(this, this._onPageRequestManagerEndRequest);
/*Line 4901 - 'MicrosoftAjax.debug.js' */                    Sys.WebForms.PageRequestManager.getInstance().add_endRequest(this._endRequestHandler);
/*Line 4902 - 'MicrosoftAjax.debug.js' */                }
/*Line 4903 - 'MicrosoftAjax.debug.js' */                var loadedEntry = this.get_stateString();
/*Line 4904 - 'MicrosoftAjax.debug.js' */                if (loadedEntry !== this._currentEntry) {
/*Line 4905 - 'MicrosoftAjax.debug.js' */                    this._navigate(loadedEntry);
/*Line 4906 - 'MicrosoftAjax.debug.js' */                }
/*Line 4907 - 'MicrosoftAjax.debug.js' */                else {
/*Line 4908 - 'MicrosoftAjax.debug.js' */                    this._ensureHistory();
/*Line 4909 - 'MicrosoftAjax.debug.js' */                }
/*Line 4910 - 'MicrosoftAjax.debug.js' */            }
/*Line 4911 - 'MicrosoftAjax.debug.js' */            this.raiseLoad();
/*Line 4912 - 'MicrosoftAjax.debug.js' */        }
/*Line 4913 - 'MicrosoftAjax.debug.js' */    }
/*Line 4914 - 'MicrosoftAjax.debug.js' */    function Sys$_Application$notifyScriptLoaded() {
/*Line 4915 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Application.notifyScriptLoaded" />
/*Line 4916 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 4917 - 'MicrosoftAjax.debug.js' */    }
/*Line 4918 - 'MicrosoftAjax.debug.js' */    function Sys$_Application$registerDisposableObject(object) {
/*Line 4919 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Application.registerDisposableObject" />
/*Line 4920 - 'MicrosoftAjax.debug.js' */        /// <param name="object" type="Sys.IDisposable"></param>
/*Line 4921 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 4922 - 'MicrosoftAjax.debug.js' */            {name: "object", type: Sys.IDisposable}
/*Line 4923 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 4924 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 4925 - 'MicrosoftAjax.debug.js' */        if (!this._disposing) {
/*Line 4926 - 'MicrosoftAjax.debug.js' */            var objects = this._disposableObjects,
/*Line 4927 - 'MicrosoftAjax.debug.js' */                i = objects.length;
/*Line 4928 - 'MicrosoftAjax.debug.js' */            objects[i] = object;
/*Line 4929 - 'MicrosoftAjax.debug.js' */            object.__msdisposeindex = i;
/*Line 4930 - 'MicrosoftAjax.debug.js' */        }
/*Line 4931 - 'MicrosoftAjax.debug.js' */    }
/*Line 4932 - 'MicrosoftAjax.debug.js' */    function Sys$_Application$raiseLoad() {
/*Line 4933 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Application.raiseLoad" />
/*Line 4934 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 4935 - 'MicrosoftAjax.debug.js' */        var h = this.get_events().getHandler("load");
/*Line 4936 - 'MicrosoftAjax.debug.js' */        var args = new Sys.ApplicationLoadEventArgs(Array.clone(this._createdComponents), !!this._loaded);
/*Line 4937 - 'MicrosoftAjax.debug.js' */        this._loaded = true;
/*Line 4938 - 'MicrosoftAjax.debug.js' */        if (h) {
/*Line 4939 - 'MicrosoftAjax.debug.js' */            h(this, args);
/*Line 4940 - 'MicrosoftAjax.debug.js' */        }
/*Line 4941 - 'MicrosoftAjax.debug.js' */        if (window.pageLoad) {
/*Line 4942 - 'MicrosoftAjax.debug.js' */            window.pageLoad(this, args);
/*Line 4943 - 'MicrosoftAjax.debug.js' */        }
/*Line 4944 - 'MicrosoftAjax.debug.js' */        this._createdComponents = [];
/*Line 4945 - 'MicrosoftAjax.debug.js' */    }
/*Line 4946 - 'MicrosoftAjax.debug.js' */    function Sys$_Application$removeComponent(component) {
/*Line 4947 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Application.removeComponent" />
/*Line 4948 - 'MicrosoftAjax.debug.js' */        /// <param name="component" type="Sys.Component"></param>
/*Line 4949 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 4950 - 'MicrosoftAjax.debug.js' */            {name: "component", type: Sys.Component}
/*Line 4951 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 4952 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 4953 - 'MicrosoftAjax.debug.js' */        var id = component.get_id();
/*Line 4954 - 'MicrosoftAjax.debug.js' */        if (id) delete this._components[id];
/*Line 4955 - 'MicrosoftAjax.debug.js' */    }
/*Line 4956 - 'MicrosoftAjax.debug.js' */    function Sys$_Application$unregisterDisposableObject(object) {
/*Line 4957 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Application.unregisterDisposableObject" />
/*Line 4958 - 'MicrosoftAjax.debug.js' */        /// <param name="object" type="Sys.IDisposable"></param>
/*Line 4959 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 4960 - 'MicrosoftAjax.debug.js' */            {name: "object", type: Sys.IDisposable}
/*Line 4961 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 4962 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 4963 - 'MicrosoftAjax.debug.js' */        if (!this._disposing) {
/*Line 4964 - 'MicrosoftAjax.debug.js' */            var i = object.__msdisposeindex;
/*Line 4965 - 'MicrosoftAjax.debug.js' */            if (typeof(i) === "number") {
/*Line 4966 - 'MicrosoftAjax.debug.js' */                var disposableObjects = this._disposableObjects;
/*Line 4967 - 'MicrosoftAjax.debug.js' */                delete disposableObjects[i];
/*Line 4968 - 'MicrosoftAjax.debug.js' */                delete object.__msdisposeindex;
/*Line 4969 - 'MicrosoftAjax.debug.js' */                if (++this._deleteCount > 1000) {
/*Line 4970 - 'MicrosoftAjax.debug.js' */                    var newArray = [];
/*Line 4971 - 'MicrosoftAjax.debug.js' */                    for (var j = 0, l = disposableObjects.length; j < l; j++) {
/*Line 4972 - 'MicrosoftAjax.debug.js' */                        object = disposableObjects[j];
/*Line 4973 - 'MicrosoftAjax.debug.js' */                        if (typeof(object) !== "undefined") {
/*Line 4974 - 'MicrosoftAjax.debug.js' */                            object.__msdisposeindex = newArray.length;
/*Line 4975 - 'MicrosoftAjax.debug.js' */                            newArray.push(object);
/*Line 4976 - 'MicrosoftAjax.debug.js' */                        }
/*Line 4977 - 'MicrosoftAjax.debug.js' */                    }
/*Line 4978 - 'MicrosoftAjax.debug.js' */                    this._disposableObjects = newArray;
/*Line 4979 - 'MicrosoftAjax.debug.js' */                    this._deleteCount = 0;
/*Line 4980 - 'MicrosoftAjax.debug.js' */                }
/*Line 4981 - 'MicrosoftAjax.debug.js' */            }
/*Line 4982 - 'MicrosoftAjax.debug.js' */        }
/*Line 4983 - 'MicrosoftAjax.debug.js' */    }
/*Line 4984 - 'MicrosoftAjax.debug.js' */    function Sys$_Application$_addComponentToSecondPass(component, references) {
/*Line 4985 - 'MicrosoftAjax.debug.js' */        this._secondPassComponents[this._secondPassComponents.length] = {component: component, references: references};
/*Line 4986 - 'MicrosoftAjax.debug.js' */    }
/*Line 4987 - 'MicrosoftAjax.debug.js' */    function Sys$_Application$_disposeComponents(list) {
/*Line 4988 - 'MicrosoftAjax.debug.js' */        if (list) {
/*Line 4989 - 'MicrosoftAjax.debug.js' */            for (var i = list.length - 1; i >= 0; i--) {
/*Line 4990 - 'MicrosoftAjax.debug.js' */                var item = list[i];
/*Line 4991 - 'MicrosoftAjax.debug.js' */                if (typeof(item.dispose) === "function") {
/*Line 4992 - 'MicrosoftAjax.debug.js' */                    item.dispose();
/*Line 4993 - 'MicrosoftAjax.debug.js' */                }
/*Line 4994 - 'MicrosoftAjax.debug.js' */            }
/*Line 4995 - 'MicrosoftAjax.debug.js' */        }
/*Line 4996 - 'MicrosoftAjax.debug.js' */    }
/*Line 4997 - 'MicrosoftAjax.debug.js' */    function Sys$_Application$_disposeElementInternal(element) {
/*Line 4998 - 'MicrosoftAjax.debug.js' */        var d = element.dispose;
/*Line 4999 - 'MicrosoftAjax.debug.js' */        if (d && typeof(d) === "function") {
/*Line 5000 - 'MicrosoftAjax.debug.js' */            element.dispose();
/*Line 5001 - 'MicrosoftAjax.debug.js' */        }
/*Line 5002 - 'MicrosoftAjax.debug.js' */        else {
/*Line 5003 - 'MicrosoftAjax.debug.js' */            var c = element.control;
/*Line 5004 - 'MicrosoftAjax.debug.js' */            if (c && typeof(c.dispose) === "function") {
/*Line 5005 - 'MicrosoftAjax.debug.js' */                c.dispose();
/*Line 5006 - 'MicrosoftAjax.debug.js' */            }
/*Line 5007 - 'MicrosoftAjax.debug.js' */        }
/*Line 5008 - 'MicrosoftAjax.debug.js' */        var list = element._behaviors;
/*Line 5009 - 'MicrosoftAjax.debug.js' */        if (list) {
/*Line 5010 - 'MicrosoftAjax.debug.js' */            this._disposeComponents(list);
/*Line 5011 - 'MicrosoftAjax.debug.js' */        }
/*Line 5012 - 'MicrosoftAjax.debug.js' */        list = element._components;
/*Line 5013 - 'MicrosoftAjax.debug.js' */        if (list) {
/*Line 5014 - 'MicrosoftAjax.debug.js' */            this._disposeComponents(list);
/*Line 5015 - 'MicrosoftAjax.debug.js' */            element._components = null;
/*Line 5016 - 'MicrosoftAjax.debug.js' */        }
/*Line 5017 - 'MicrosoftAjax.debug.js' */    }
/*Line 5018 - 'MicrosoftAjax.debug.js' */    function Sys$_Application$_domReady() {
/*Line 5019 - 'MicrosoftAjax.debug.js' */        var check, er, app = this;
/*Line 5020 - 'MicrosoftAjax.debug.js' */        function init() { app.initialize(); }
/*Line 5021 - 'MicrosoftAjax.debug.js' */        var onload = function() {
/*Line 5022 - 'MicrosoftAjax.debug.js' */            Sys.UI.DomEvent.removeHandler(window, "load", onload);
/*Line 5023 - 'MicrosoftAjax.debug.js' */            init();
/*Line 5024 - 'MicrosoftAjax.debug.js' */        }
/*Line 5025 - 'MicrosoftAjax.debug.js' */        Sys.UI.DomEvent.addHandler(window, "load", onload);
        
/*Line 5027 - 'MicrosoftAjax.debug.js' */        if (document.addEventListener) {
/*Line 5028 - 'MicrosoftAjax.debug.js' */            try {
/*Line 5029 - 'MicrosoftAjax.debug.js' */                document.addEventListener("DOMContentLoaded", check = function() {
/*Line 5030 - 'MicrosoftAjax.debug.js' */                    document.removeEventListener("DOMContentLoaded", check, false);
/*Line 5031 - 'MicrosoftAjax.debug.js' */                    init();
/*Line 5032 - 'MicrosoftAjax.debug.js' */                }, false);
/*Line 5033 - 'MicrosoftAjax.debug.js' */            }
/*Line 5034 - 'MicrosoftAjax.debug.js' */            catch (er) { }
/*Line 5035 - 'MicrosoftAjax.debug.js' */        }
/*Line 5036 - 'MicrosoftAjax.debug.js' */        else if (document.attachEvent) {
/*Line 5037 - 'MicrosoftAjax.debug.js' */            if ((window == window.top) && document.documentElement.doScroll) {
/*Line 5038 - 'MicrosoftAjax.debug.js' */                var timeout, el = document.createElement("div");
/*Line 5039 - 'MicrosoftAjax.debug.js' */                check = function() {
/*Line 5040 - 'MicrosoftAjax.debug.js' */                    try {
/*Line 5041 - 'MicrosoftAjax.debug.js' */                        el.doScroll("left");
/*Line 5042 - 'MicrosoftAjax.debug.js' */                    }
/*Line 5043 - 'MicrosoftAjax.debug.js' */                    catch (er) {
/*Line 5044 - 'MicrosoftAjax.debug.js' */                        timeout = window.setTimeout(check, 0);
/*Line 5045 - 'MicrosoftAjax.debug.js' */                        return;
/*Line 5046 - 'MicrosoftAjax.debug.js' */                    }
/*Line 5047 - 'MicrosoftAjax.debug.js' */                    el = null;
/*Line 5048 - 'MicrosoftAjax.debug.js' */                    init();
/*Line 5049 - 'MicrosoftAjax.debug.js' */                }
/*Line 5050 - 'MicrosoftAjax.debug.js' */                check();
/*Line 5051 - 'MicrosoftAjax.debug.js' */            }
/*Line 5052 - 'MicrosoftAjax.debug.js' */            else {
/*Line 5053 - 'MicrosoftAjax.debug.js' */		document.attachEvent("onreadystatechange", check = function() {
/*Line 5054 - 'MicrosoftAjax.debug.js' */                    if (document.readyState === "complete") {
/*Line 5055 - 'MicrosoftAjax.debug.js' */                        document.detachEvent("onreadystatechange", check);
/*Line 5056 - 'MicrosoftAjax.debug.js' */                        init();
/*Line 5057 - 'MicrosoftAjax.debug.js' */                    }
/*Line 5058 - 'MicrosoftAjax.debug.js' */                });
/*Line 5059 - 'MicrosoftAjax.debug.js' */            }
/*Line 5060 - 'MicrosoftAjax.debug.js' */        }
/*Line 5061 - 'MicrosoftAjax.debug.js' */    }
/*Line 5062 - 'MicrosoftAjax.debug.js' */    function Sys$_Application$_raiseInit() {
/*Line 5063 - 'MicrosoftAjax.debug.js' */        var handler = this.get_events().getHandler("init");
/*Line 5064 - 'MicrosoftAjax.debug.js' */        if (handler) {
/*Line 5065 - 'MicrosoftAjax.debug.js' */            this.beginCreateComponents();
/*Line 5066 - 'MicrosoftAjax.debug.js' */            handler(this, Sys.EventArgs.Empty);
/*Line 5067 - 'MicrosoftAjax.debug.js' */            this.endCreateComponents();
/*Line 5068 - 'MicrosoftAjax.debug.js' */        }
/*Line 5069 - 'MicrosoftAjax.debug.js' */    }
/*Line 5070 - 'MicrosoftAjax.debug.js' */    function Sys$_Application$_unloadHandler(event) {
/*Line 5071 - 'MicrosoftAjax.debug.js' */        this.dispose();
/*Line 5072 - 'MicrosoftAjax.debug.js' */    }
/*Line 5073 - 'MicrosoftAjax.debug.js' */Sys._Application.prototype = {
/*Line 5074 - 'MicrosoftAjax.debug.js' */    _creatingComponents: false,
/*Line 5075 - 'MicrosoftAjax.debug.js' */    _disposing: false,
/*Line 5076 - 'MicrosoftAjax.debug.js' */    _deleteCount: 0,
/*Line 5077 - 'MicrosoftAjax.debug.js' */    get_isCreatingComponents: Sys$_Application$get_isCreatingComponents,
/*Line 5078 - 'MicrosoftAjax.debug.js' */    get_isDisposing: Sys$_Application$get_isDisposing,
/*Line 5079 - 'MicrosoftAjax.debug.js' */    add_init: Sys$_Application$add_init,
/*Line 5080 - 'MicrosoftAjax.debug.js' */    remove_init: Sys$_Application$remove_init,
/*Line 5081 - 'MicrosoftAjax.debug.js' */    add_load: Sys$_Application$add_load,
/*Line 5082 - 'MicrosoftAjax.debug.js' */    remove_load: Sys$_Application$remove_load,
/*Line 5083 - 'MicrosoftAjax.debug.js' */    add_unload: Sys$_Application$add_unload,
/*Line 5084 - 'MicrosoftAjax.debug.js' */    remove_unload: Sys$_Application$remove_unload,
/*Line 5085 - 'MicrosoftAjax.debug.js' */    addComponent: Sys$_Application$addComponent,
/*Line 5086 - 'MicrosoftAjax.debug.js' */    beginCreateComponents: Sys$_Application$beginCreateComponents,
/*Line 5087 - 'MicrosoftAjax.debug.js' */    dispose: Sys$_Application$dispose,
/*Line 5088 - 'MicrosoftAjax.debug.js' */    disposeElement: Sys$_Application$disposeElement,
/*Line 5089 - 'MicrosoftAjax.debug.js' */    endCreateComponents: Sys$_Application$endCreateComponents,
/*Line 5090 - 'MicrosoftAjax.debug.js' */    findComponent: Sys$_Application$findComponent,
/*Line 5091 - 'MicrosoftAjax.debug.js' */    getComponents: Sys$_Application$getComponents,
/*Line 5092 - 'MicrosoftAjax.debug.js' */    initialize: Sys$_Application$initialize,
/*Line 5093 - 'MicrosoftAjax.debug.js' */    notifyScriptLoaded: Sys$_Application$notifyScriptLoaded,
/*Line 5094 - 'MicrosoftAjax.debug.js' */    registerDisposableObject: Sys$_Application$registerDisposableObject,
/*Line 5095 - 'MicrosoftAjax.debug.js' */    raiseLoad: Sys$_Application$raiseLoad,
/*Line 5096 - 'MicrosoftAjax.debug.js' */    removeComponent: Sys$_Application$removeComponent,
/*Line 5097 - 'MicrosoftAjax.debug.js' */    unregisterDisposableObject: Sys$_Application$unregisterDisposableObject,
/*Line 5098 - 'MicrosoftAjax.debug.js' */    _addComponentToSecondPass: Sys$_Application$_addComponentToSecondPass,
/*Line 5099 - 'MicrosoftAjax.debug.js' */    _disposeComponents: Sys$_Application$_disposeComponents,
/*Line 5100 - 'MicrosoftAjax.debug.js' */    _disposeElementInternal: Sys$_Application$_disposeElementInternal,
/*Line 5101 - 'MicrosoftAjax.debug.js' */    _domReady: Sys$_Application$_domReady,
/*Line 5102 - 'MicrosoftAjax.debug.js' */    _raiseInit: Sys$_Application$_raiseInit,
/*Line 5103 - 'MicrosoftAjax.debug.js' */    _unloadHandler: Sys$_Application$_unloadHandler
/*Line 5104 - 'MicrosoftAjax.debug.js' */}
/*Line 5105 - 'MicrosoftAjax.debug.js' */Sys._Application.registerClass('Sys._Application', Sys.Component, Sys.IContainer);
/*Line 5106 - 'MicrosoftAjax.debug.js' */Sys.Application = new Sys._Application();
/*Line 5107 - 'MicrosoftAjax.debug.js' */var $find = Sys.Application.findComponent;
 
/*Line 5109 - 'MicrosoftAjax.debug.js' */Sys.UI.Behavior = function Sys$UI$Behavior(element) {
/*Line 5110 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.Behavior.#ctor" />
/*Line 5111 - 'MicrosoftAjax.debug.js' */    /// <param name="element" domElement="true"></param>
/*Line 5112 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 5113 - 'MicrosoftAjax.debug.js' */        {name: "element", domElement: true}
/*Line 5114 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 5115 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 5116 - 'MicrosoftAjax.debug.js' */    Sys.UI.Behavior.initializeBase(this);
/*Line 5117 - 'MicrosoftAjax.debug.js' */    this._element = element;
/*Line 5118 - 'MicrosoftAjax.debug.js' */    var behaviors = element._behaviors;
/*Line 5119 - 'MicrosoftAjax.debug.js' */    if (!behaviors) {
/*Line 5120 - 'MicrosoftAjax.debug.js' */        element._behaviors = [this];
/*Line 5121 - 'MicrosoftAjax.debug.js' */    }
/*Line 5122 - 'MicrosoftAjax.debug.js' */    else {
/*Line 5123 - 'MicrosoftAjax.debug.js' */        behaviors[behaviors.length] = this;
/*Line 5124 - 'MicrosoftAjax.debug.js' */    }
/*Line 5125 - 'MicrosoftAjax.debug.js' */}
/*Line 5126 - 'MicrosoftAjax.debug.js' */    function Sys$UI$Behavior$get_element() {
/*Line 5127 - 'MicrosoftAjax.debug.js' */        /// <value domElement="true" locid="P:J#Sys.UI.Behavior.element"></value>
/*Line 5128 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5129 - 'MicrosoftAjax.debug.js' */        return this._element;
/*Line 5130 - 'MicrosoftAjax.debug.js' */    }
/*Line 5131 - 'MicrosoftAjax.debug.js' */    function Sys$UI$Behavior$get_id() {
/*Line 5132 - 'MicrosoftAjax.debug.js' */        /// <value type="String" locid="P:J#Sys.UI.Behavior.id"></value>
/*Line 5133 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5134 - 'MicrosoftAjax.debug.js' */        var baseId = Sys.UI.Behavior.callBaseMethod(this, 'get_id');
/*Line 5135 - 'MicrosoftAjax.debug.js' */        if (baseId) return baseId;
/*Line 5136 - 'MicrosoftAjax.debug.js' */        if (!this._element || !this._element.id) return '';
/*Line 5137 - 'MicrosoftAjax.debug.js' */        return this._element.id + '$' + this.get_name();
/*Line 5138 - 'MicrosoftAjax.debug.js' */    }
/*Line 5139 - 'MicrosoftAjax.debug.js' */    function Sys$UI$Behavior$get_name() {
/*Line 5140 - 'MicrosoftAjax.debug.js' */        /// <value type="String" locid="P:J#Sys.UI.Behavior.name"></value>
/*Line 5141 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5142 - 'MicrosoftAjax.debug.js' */        if (this._name) return this._name;
/*Line 5143 - 'MicrosoftAjax.debug.js' */        var name = Object.getTypeName(this);
/*Line 5144 - 'MicrosoftAjax.debug.js' */        var i = name.lastIndexOf('.');
/*Line 5145 - 'MicrosoftAjax.debug.js' */        if (i !== -1) name = name.substr(i + 1);
/*Line 5146 - 'MicrosoftAjax.debug.js' */        if (!this.get_isInitialized()) this._name = name;
/*Line 5147 - 'MicrosoftAjax.debug.js' */        return name;
/*Line 5148 - 'MicrosoftAjax.debug.js' */    }
/*Line 5149 - 'MicrosoftAjax.debug.js' */    function Sys$UI$Behavior$set_name(value) {
/*Line 5150 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "value", type: String}]);
/*Line 5151 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 5152 - 'MicrosoftAjax.debug.js' */        if ((value === '') || (value.charAt(0) === ' ') || (value.charAt(value.length - 1) === ' '))
/*Line 5153 - 'MicrosoftAjax.debug.js' */            throw Error.argument('value', Sys.Res.invalidId);
/*Line 5154 - 'MicrosoftAjax.debug.js' */        if (typeof(this._element[value]) !== 'undefined')
/*Line 5155 - 'MicrosoftAjax.debug.js' */            throw Error.invalidOperation(String.format(Sys.Res.behaviorDuplicateName, value));
/*Line 5156 - 'MicrosoftAjax.debug.js' */        if (this.get_isInitialized()) throw Error.invalidOperation(Sys.Res.cantSetNameAfterInit);
/*Line 5157 - 'MicrosoftAjax.debug.js' */        this._name = value;
/*Line 5158 - 'MicrosoftAjax.debug.js' */    }
/*Line 5159 - 'MicrosoftAjax.debug.js' */    function Sys$UI$Behavior$initialize() {
/*Line 5160 - 'MicrosoftAjax.debug.js' */        Sys.UI.Behavior.callBaseMethod(this, 'initialize');
/*Line 5161 - 'MicrosoftAjax.debug.js' */        var name = this.get_name();
/*Line 5162 - 'MicrosoftAjax.debug.js' */        if (name) this._element[name] = this;
/*Line 5163 - 'MicrosoftAjax.debug.js' */    }
/*Line 5164 - 'MicrosoftAjax.debug.js' */    function Sys$UI$Behavior$dispose() {
/*Line 5165 - 'MicrosoftAjax.debug.js' */        Sys.UI.Behavior.callBaseMethod(this, 'dispose');
/*Line 5166 - 'MicrosoftAjax.debug.js' */        var e = this._element;
/*Line 5167 - 'MicrosoftAjax.debug.js' */        if (e) {
/*Line 5168 - 'MicrosoftAjax.debug.js' */            var name = this.get_name();
/*Line 5169 - 'MicrosoftAjax.debug.js' */            if (name) {
/*Line 5170 - 'MicrosoftAjax.debug.js' */                e[name] = null;
/*Line 5171 - 'MicrosoftAjax.debug.js' */            }
/*Line 5172 - 'MicrosoftAjax.debug.js' */            var behaviors = e._behaviors;
/*Line 5173 - 'MicrosoftAjax.debug.js' */            Array.remove(behaviors, this);
/*Line 5174 - 'MicrosoftAjax.debug.js' */            if (behaviors.length === 0) {
/*Line 5175 - 'MicrosoftAjax.debug.js' */                e._behaviors = null;
/*Line 5176 - 'MicrosoftAjax.debug.js' */            }
/*Line 5177 - 'MicrosoftAjax.debug.js' */            delete this._element;
/*Line 5178 - 'MicrosoftAjax.debug.js' */        }
/*Line 5179 - 'MicrosoftAjax.debug.js' */    }
/*Line 5180 - 'MicrosoftAjax.debug.js' */Sys.UI.Behavior.prototype = {
/*Line 5181 - 'MicrosoftAjax.debug.js' */    _name: null,
/*Line 5182 - 'MicrosoftAjax.debug.js' */    get_element: Sys$UI$Behavior$get_element,
/*Line 5183 - 'MicrosoftAjax.debug.js' */    get_id: Sys$UI$Behavior$get_id,
/*Line 5184 - 'MicrosoftAjax.debug.js' */    get_name: Sys$UI$Behavior$get_name,
/*Line 5185 - 'MicrosoftAjax.debug.js' */    set_name: Sys$UI$Behavior$set_name,
/*Line 5186 - 'MicrosoftAjax.debug.js' */    initialize: Sys$UI$Behavior$initialize,
/*Line 5187 - 'MicrosoftAjax.debug.js' */    dispose: Sys$UI$Behavior$dispose
/*Line 5188 - 'MicrosoftAjax.debug.js' */}
/*Line 5189 - 'MicrosoftAjax.debug.js' */Sys.UI.Behavior.registerClass('Sys.UI.Behavior', Sys.Component);
/*Line 5190 - 'MicrosoftAjax.debug.js' */Sys.UI.Behavior.getBehaviorByName = function Sys$UI$Behavior$getBehaviorByName(element, name) {
/*Line 5191 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.Behavior.getBehaviorByName" />
/*Line 5192 - 'MicrosoftAjax.debug.js' */    /// <param name="element" domElement="true"></param>
/*Line 5193 - 'MicrosoftAjax.debug.js' */    /// <param name="name" type="String"></param>
/*Line 5194 - 'MicrosoftAjax.debug.js' */    /// <returns type="Sys.UI.Behavior" mayBeNull="true"></returns>
/*Line 5195 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 5196 - 'MicrosoftAjax.debug.js' */        {name: "element", domElement: true},
/*Line 5197 - 'MicrosoftAjax.debug.js' */        {name: "name", type: String}
/*Line 5198 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 5199 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 5200 - 'MicrosoftAjax.debug.js' */    var b = element[name];
/*Line 5201 - 'MicrosoftAjax.debug.js' */    return (b && Sys.UI.Behavior.isInstanceOfType(b)) ? b : null;
/*Line 5202 - 'MicrosoftAjax.debug.js' */}
/*Line 5203 - 'MicrosoftAjax.debug.js' */Sys.UI.Behavior.getBehaviors = function Sys$UI$Behavior$getBehaviors(element) {
/*Line 5204 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.Behavior.getBehaviors" />
/*Line 5205 - 'MicrosoftAjax.debug.js' */    /// <param name="element" domElement="true"></param>
/*Line 5206 - 'MicrosoftAjax.debug.js' */    /// <returns type="Array" elementType="Sys.UI.Behavior"></returns>
/*Line 5207 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 5208 - 'MicrosoftAjax.debug.js' */        {name: "element", domElement: true}
/*Line 5209 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 5210 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 5211 - 'MicrosoftAjax.debug.js' */    if (!element._behaviors) return [];
/*Line 5212 - 'MicrosoftAjax.debug.js' */    return Array.clone(element._behaviors);
/*Line 5213 - 'MicrosoftAjax.debug.js' */}
/*Line 5214 - 'MicrosoftAjax.debug.js' */Sys.UI.Behavior.getBehaviorsByType = function Sys$UI$Behavior$getBehaviorsByType(element, type) {
/*Line 5215 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.Behavior.getBehaviorsByType" />
/*Line 5216 - 'MicrosoftAjax.debug.js' */    /// <param name="element" domElement="true"></param>
/*Line 5217 - 'MicrosoftAjax.debug.js' */    /// <param name="type" type="Type"></param>
/*Line 5218 - 'MicrosoftAjax.debug.js' */    /// <returns type="Array" elementType="Sys.UI.Behavior"></returns>
/*Line 5219 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 5220 - 'MicrosoftAjax.debug.js' */        {name: "element", domElement: true},
/*Line 5221 - 'MicrosoftAjax.debug.js' */        {name: "type", type: Type}
/*Line 5222 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 5223 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 5224 - 'MicrosoftAjax.debug.js' */    var behaviors = element._behaviors;
/*Line 5225 - 'MicrosoftAjax.debug.js' */    var results = [];
/*Line 5226 - 'MicrosoftAjax.debug.js' */    if (behaviors) {
/*Line 5227 - 'MicrosoftAjax.debug.js' */        for (var i = 0, l = behaviors.length; i < l; i++) {
/*Line 5228 - 'MicrosoftAjax.debug.js' */            if (type.isInstanceOfType(behaviors[i])) {
/*Line 5229 - 'MicrosoftAjax.debug.js' */                results[results.length] = behaviors[i];
/*Line 5230 - 'MicrosoftAjax.debug.js' */            }
/*Line 5231 - 'MicrosoftAjax.debug.js' */        }
/*Line 5232 - 'MicrosoftAjax.debug.js' */    }
/*Line 5233 - 'MicrosoftAjax.debug.js' */    return results;
/*Line 5234 - 'MicrosoftAjax.debug.js' */}
 
/*Line 5236 - 'MicrosoftAjax.debug.js' */Sys.UI.VisibilityMode = function Sys$UI$VisibilityMode() {
/*Line 5237 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.VisibilityMode.#ctor" />
/*Line 5238 - 'MicrosoftAjax.debug.js' */    /// <field name="hide" type="Number" integer="true" static="true" locid="F:J#Sys.UI.VisibilityMode.hide"></field>
/*Line 5239 - 'MicrosoftAjax.debug.js' */    /// <field name="collapse" type="Number" integer="true" static="true" locid="F:J#Sys.UI.VisibilityMode.collapse"></field>
/*Line 5240 - 'MicrosoftAjax.debug.js' */    if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5241 - 'MicrosoftAjax.debug.js' */    throw Error.notImplemented();
/*Line 5242 - 'MicrosoftAjax.debug.js' */}
/*Line 5243 - 'MicrosoftAjax.debug.js' */Sys.UI.VisibilityMode.prototype = {
/*Line 5244 - 'MicrosoftAjax.debug.js' */    hide: 0,
/*Line 5245 - 'MicrosoftAjax.debug.js' */    collapse: 1
/*Line 5246 - 'MicrosoftAjax.debug.js' */}
/*Line 5247 - 'MicrosoftAjax.debug.js' */Sys.UI.VisibilityMode.registerEnum("Sys.UI.VisibilityMode");
 
/*Line 5249 - 'MicrosoftAjax.debug.js' */Sys.UI.Control = function Sys$UI$Control(element) {
/*Line 5250 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.UI.Control.#ctor" />
/*Line 5251 - 'MicrosoftAjax.debug.js' */    /// <param name="element" domElement="true"></param>
/*Line 5252 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 5253 - 'MicrosoftAjax.debug.js' */        {name: "element", domElement: true}
/*Line 5254 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 5255 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 5256 - 'MicrosoftAjax.debug.js' */    if (typeof(element.control) !== 'undefined') throw Error.invalidOperation(Sys.Res.controlAlreadyDefined);
/*Line 5257 - 'MicrosoftAjax.debug.js' */    Sys.UI.Control.initializeBase(this);
/*Line 5258 - 'MicrosoftAjax.debug.js' */    this._element = element;
/*Line 5259 - 'MicrosoftAjax.debug.js' */    element.control = this;
/*Line 5260 - 'MicrosoftAjax.debug.js' */    var role = this.get_role();
/*Line 5261 - 'MicrosoftAjax.debug.js' */    if (role) {
/*Line 5262 - 'MicrosoftAjax.debug.js' */        element.setAttribute("role", role);
/*Line 5263 - 'MicrosoftAjax.debug.js' */    }
/*Line 5264 - 'MicrosoftAjax.debug.js' */}
/*Line 5265 - 'MicrosoftAjax.debug.js' */    function Sys$UI$Control$get_element() {
/*Line 5266 - 'MicrosoftAjax.debug.js' */        /// <value domElement="true" locid="P:J#Sys.UI.Control.element"></value>
/*Line 5267 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5268 - 'MicrosoftAjax.debug.js' */        return this._element;
/*Line 5269 - 'MicrosoftAjax.debug.js' */    }
/*Line 5270 - 'MicrosoftAjax.debug.js' */    function Sys$UI$Control$get_id() {
/*Line 5271 - 'MicrosoftAjax.debug.js' */        /// <value type="String" locid="P:J#Sys.UI.Control.id"></value>
/*Line 5272 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5273 - 'MicrosoftAjax.debug.js' */        if (!this._element) return '';
/*Line 5274 - 'MicrosoftAjax.debug.js' */        return this._element.id;
/*Line 5275 - 'MicrosoftAjax.debug.js' */    }
/*Line 5276 - 'MicrosoftAjax.debug.js' */    function Sys$UI$Control$set_id(value) {
/*Line 5277 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "value", type: String}]);
/*Line 5278 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 5279 - 'MicrosoftAjax.debug.js' */        throw Error.invalidOperation(Sys.Res.cantSetId);
/*Line 5280 - 'MicrosoftAjax.debug.js' */    }
/*Line 5281 - 'MicrosoftAjax.debug.js' */    function Sys$UI$Control$get_parent() {
/*Line 5282 - 'MicrosoftAjax.debug.js' */        /// <value type="Sys.UI.Control" locid="P:J#Sys.UI.Control.parent"></value>
/*Line 5283 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5284 - 'MicrosoftAjax.debug.js' */        if (this._parent) return this._parent;
/*Line 5285 - 'MicrosoftAjax.debug.js' */        if (!this._element) return null;
        
/*Line 5287 - 'MicrosoftAjax.debug.js' */        var parentElement = this._element.parentNode;
/*Line 5288 - 'MicrosoftAjax.debug.js' */        while (parentElement) {
/*Line 5289 - 'MicrosoftAjax.debug.js' */            if (parentElement.control) {
/*Line 5290 - 'MicrosoftAjax.debug.js' */                return parentElement.control;
/*Line 5291 - 'MicrosoftAjax.debug.js' */            }
/*Line 5292 - 'MicrosoftAjax.debug.js' */            parentElement = parentElement.parentNode;
/*Line 5293 - 'MicrosoftAjax.debug.js' */        }
/*Line 5294 - 'MicrosoftAjax.debug.js' */        return null;
/*Line 5295 - 'MicrosoftAjax.debug.js' */    }
/*Line 5296 - 'MicrosoftAjax.debug.js' */    function Sys$UI$Control$set_parent(value) {
/*Line 5297 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "value", type: Sys.UI.Control}]);
/*Line 5298 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 5299 - 'MicrosoftAjax.debug.js' */        if (!this._element) throw Error.invalidOperation(Sys.Res.cantBeCalledAfterDispose);
/*Line 5300 - 'MicrosoftAjax.debug.js' */        var parents = [this];
/*Line 5301 - 'MicrosoftAjax.debug.js' */        var current = value;
/*Line 5302 - 'MicrosoftAjax.debug.js' */        while (current) {
/*Line 5303 - 'MicrosoftAjax.debug.js' */            if (Array.contains(parents, current)) throw Error.invalidOperation(Sys.Res.circularParentChain);
/*Line 5304 - 'MicrosoftAjax.debug.js' */            parents[parents.length] = current;
/*Line 5305 - 'MicrosoftAjax.debug.js' */            current = current.get_parent();
/*Line 5306 - 'MicrosoftAjax.debug.js' */        }
/*Line 5307 - 'MicrosoftAjax.debug.js' */        this._parent = value;
/*Line 5308 - 'MicrosoftAjax.debug.js' */    }
/*Line 5309 - 'MicrosoftAjax.debug.js' */    function Sys$UI$Control$get_role() {
/*Line 5310 - 'MicrosoftAjax.debug.js' */        /// <value type="String" locid="P:J#Sys.UI.Control.role"></value>
/*Line 5311 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5312 - 'MicrosoftAjax.debug.js' */        return null;
/*Line 5313 - 'MicrosoftAjax.debug.js' */    }
/*Line 5314 - 'MicrosoftAjax.debug.js' */    function Sys$UI$Control$get_visibilityMode() {
/*Line 5315 - 'MicrosoftAjax.debug.js' */        /// <value type="Sys.UI.VisibilityMode" locid="P:J#Sys.UI.Control.visibilityMode"></value>
/*Line 5316 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5317 - 'MicrosoftAjax.debug.js' */        if (!this._element) throw Error.invalidOperation(Sys.Res.cantBeCalledAfterDispose);
/*Line 5318 - 'MicrosoftAjax.debug.js' */        return Sys.UI.DomElement.getVisibilityMode(this._element);
/*Line 5319 - 'MicrosoftAjax.debug.js' */    }
/*Line 5320 - 'MicrosoftAjax.debug.js' */    function Sys$UI$Control$set_visibilityMode(value) {
/*Line 5321 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "value", type: Sys.UI.VisibilityMode}]);
/*Line 5322 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 5323 - 'MicrosoftAjax.debug.js' */        if (!this._element) throw Error.invalidOperation(Sys.Res.cantBeCalledAfterDispose);
/*Line 5324 - 'MicrosoftAjax.debug.js' */        Sys.UI.DomElement.setVisibilityMode(this._element, value);
/*Line 5325 - 'MicrosoftAjax.debug.js' */    }
/*Line 5326 - 'MicrosoftAjax.debug.js' */    function Sys$UI$Control$get_visible() {
/*Line 5327 - 'MicrosoftAjax.debug.js' */        /// <value type="Boolean" locid="P:J#Sys.UI.Control.visible"></value>
/*Line 5328 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5329 - 'MicrosoftAjax.debug.js' */        if (!this._element) throw Error.invalidOperation(Sys.Res.cantBeCalledAfterDispose);
/*Line 5330 - 'MicrosoftAjax.debug.js' */        return Sys.UI.DomElement.getVisible(this._element);
/*Line 5331 - 'MicrosoftAjax.debug.js' */    }
/*Line 5332 - 'MicrosoftAjax.debug.js' */    function Sys$UI$Control$set_visible(value) {
/*Line 5333 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "value", type: Boolean}]);
/*Line 5334 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 5335 - 'MicrosoftAjax.debug.js' */        if (!this._element) throw Error.invalidOperation(Sys.Res.cantBeCalledAfterDispose);
/*Line 5336 - 'MicrosoftAjax.debug.js' */        Sys.UI.DomElement.setVisible(this._element, value)
/*Line 5337 - 'MicrosoftAjax.debug.js' */    }
/*Line 5338 - 'MicrosoftAjax.debug.js' */    function Sys$UI$Control$addCssClass(className) {
/*Line 5339 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.UI.Control.addCssClass" />
/*Line 5340 - 'MicrosoftAjax.debug.js' */        /// <param name="className" type="String"></param>
/*Line 5341 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 5342 - 'MicrosoftAjax.debug.js' */            {name: "className", type: String}
/*Line 5343 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 5344 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 5345 - 'MicrosoftAjax.debug.js' */        if (!this._element) throw Error.invalidOperation(Sys.Res.cantBeCalledAfterDispose);
/*Line 5346 - 'MicrosoftAjax.debug.js' */        Sys.UI.DomElement.addCssClass(this._element, className);
/*Line 5347 - 'MicrosoftAjax.debug.js' */    }
/*Line 5348 - 'MicrosoftAjax.debug.js' */    function Sys$UI$Control$dispose() {
/*Line 5349 - 'MicrosoftAjax.debug.js' */        Sys.UI.Control.callBaseMethod(this, 'dispose');
/*Line 5350 - 'MicrosoftAjax.debug.js' */        if (this._element) {
/*Line 5351 - 'MicrosoftAjax.debug.js' */            this._element.control = null;
/*Line 5352 - 'MicrosoftAjax.debug.js' */            delete this._element;
/*Line 5353 - 'MicrosoftAjax.debug.js' */        }
/*Line 5354 - 'MicrosoftAjax.debug.js' */        if (this._parent) delete this._parent;
/*Line 5355 - 'MicrosoftAjax.debug.js' */    }
/*Line 5356 - 'MicrosoftAjax.debug.js' */    function Sys$UI$Control$onBubbleEvent(source, args) {
/*Line 5357 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.UI.Control.onBubbleEvent" />
/*Line 5358 - 'MicrosoftAjax.debug.js' */        /// <param name="source"></param>
/*Line 5359 - 'MicrosoftAjax.debug.js' */        /// <param name="args" type="Sys.EventArgs"></param>
/*Line 5360 - 'MicrosoftAjax.debug.js' */        /// <returns type="Boolean"></returns>
/*Line 5361 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 5362 - 'MicrosoftAjax.debug.js' */            {name: "source"},
/*Line 5363 - 'MicrosoftAjax.debug.js' */            {name: "args", type: Sys.EventArgs}
/*Line 5364 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 5365 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 5366 - 'MicrosoftAjax.debug.js' */        return false;
/*Line 5367 - 'MicrosoftAjax.debug.js' */    }
/*Line 5368 - 'MicrosoftAjax.debug.js' */    function Sys$UI$Control$raiseBubbleEvent(source, args) {
/*Line 5369 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.UI.Control.raiseBubbleEvent" />
/*Line 5370 - 'MicrosoftAjax.debug.js' */        /// <param name="source"></param>
/*Line 5371 - 'MicrosoftAjax.debug.js' */        /// <param name="args" type="Sys.EventArgs"></param>
/*Line 5372 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 5373 - 'MicrosoftAjax.debug.js' */            {name: "source"},
/*Line 5374 - 'MicrosoftAjax.debug.js' */            {name: "args", type: Sys.EventArgs}
/*Line 5375 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 5376 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 5377 - 'MicrosoftAjax.debug.js' */        this._raiseBubbleEvent(source, args);
/*Line 5378 - 'MicrosoftAjax.debug.js' */    }
/*Line 5379 - 'MicrosoftAjax.debug.js' */    function Sys$UI$Control$_raiseBubbleEvent(source, args) {
/*Line 5380 - 'MicrosoftAjax.debug.js' */        var currentTarget = this.get_parent();
/*Line 5381 - 'MicrosoftAjax.debug.js' */        while (currentTarget) {
/*Line 5382 - 'MicrosoftAjax.debug.js' */            if (currentTarget.onBubbleEvent(source, args)) {
/*Line 5383 - 'MicrosoftAjax.debug.js' */                return;
/*Line 5384 - 'MicrosoftAjax.debug.js' */            }
/*Line 5385 - 'MicrosoftAjax.debug.js' */            currentTarget = currentTarget.get_parent();
/*Line 5386 - 'MicrosoftAjax.debug.js' */        }
/*Line 5387 - 'MicrosoftAjax.debug.js' */    }
/*Line 5388 - 'MicrosoftAjax.debug.js' */    function Sys$UI$Control$removeCssClass(className) {
/*Line 5389 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.UI.Control.removeCssClass" />
/*Line 5390 - 'MicrosoftAjax.debug.js' */        /// <param name="className" type="String"></param>
/*Line 5391 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 5392 - 'MicrosoftAjax.debug.js' */            {name: "className", type: String}
/*Line 5393 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 5394 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 5395 - 'MicrosoftAjax.debug.js' */        if (!this._element) throw Error.invalidOperation(Sys.Res.cantBeCalledAfterDispose);
/*Line 5396 - 'MicrosoftAjax.debug.js' */        Sys.UI.DomElement.removeCssClass(this._element, className);
/*Line 5397 - 'MicrosoftAjax.debug.js' */    }
/*Line 5398 - 'MicrosoftAjax.debug.js' */    function Sys$UI$Control$toggleCssClass(className) {
/*Line 5399 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.UI.Control.toggleCssClass" />
/*Line 5400 - 'MicrosoftAjax.debug.js' */        /// <param name="className" type="String"></param>
/*Line 5401 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 5402 - 'MicrosoftAjax.debug.js' */            {name: "className", type: String}
/*Line 5403 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 5404 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 5405 - 'MicrosoftAjax.debug.js' */        if (!this._element) throw Error.invalidOperation(Sys.Res.cantBeCalledAfterDispose);
/*Line 5406 - 'MicrosoftAjax.debug.js' */        Sys.UI.DomElement.toggleCssClass(this._element, className);
/*Line 5407 - 'MicrosoftAjax.debug.js' */    }
/*Line 5408 - 'MicrosoftAjax.debug.js' */Sys.UI.Control.prototype = {
/*Line 5409 - 'MicrosoftAjax.debug.js' */    _parent: null,
/*Line 5410 - 'MicrosoftAjax.debug.js' */    _visibilityMode: Sys.UI.VisibilityMode.hide,
/*Line 5411 - 'MicrosoftAjax.debug.js' */    get_element: Sys$UI$Control$get_element,
/*Line 5412 - 'MicrosoftAjax.debug.js' */    get_id: Sys$UI$Control$get_id,
/*Line 5413 - 'MicrosoftAjax.debug.js' */    set_id: Sys$UI$Control$set_id,
/*Line 5414 - 'MicrosoftAjax.debug.js' */    get_parent: Sys$UI$Control$get_parent,
/*Line 5415 - 'MicrosoftAjax.debug.js' */    set_parent: Sys$UI$Control$set_parent,
/*Line 5416 - 'MicrosoftAjax.debug.js' */    get_role: Sys$UI$Control$get_role,
/*Line 5417 - 'MicrosoftAjax.debug.js' */    get_visibilityMode: Sys$UI$Control$get_visibilityMode,
/*Line 5418 - 'MicrosoftAjax.debug.js' */    set_visibilityMode: Sys$UI$Control$set_visibilityMode,
/*Line 5419 - 'MicrosoftAjax.debug.js' */    get_visible: Sys$UI$Control$get_visible,
/*Line 5420 - 'MicrosoftAjax.debug.js' */    set_visible: Sys$UI$Control$set_visible,
/*Line 5421 - 'MicrosoftAjax.debug.js' */    addCssClass: Sys$UI$Control$addCssClass,
/*Line 5422 - 'MicrosoftAjax.debug.js' */    dispose: Sys$UI$Control$dispose,
/*Line 5423 - 'MicrosoftAjax.debug.js' */    onBubbleEvent: Sys$UI$Control$onBubbleEvent,
/*Line 5424 - 'MicrosoftAjax.debug.js' */    raiseBubbleEvent: Sys$UI$Control$raiseBubbleEvent,
/*Line 5425 - 'MicrosoftAjax.debug.js' */    _raiseBubbleEvent: Sys$UI$Control$_raiseBubbleEvent,
/*Line 5426 - 'MicrosoftAjax.debug.js' */    removeCssClass: Sys$UI$Control$removeCssClass,
/*Line 5427 - 'MicrosoftAjax.debug.js' */    toggleCssClass: Sys$UI$Control$toggleCssClass
/*Line 5428 - 'MicrosoftAjax.debug.js' */}
/*Line 5429 - 'MicrosoftAjax.debug.js' */Sys.UI.Control.registerClass('Sys.UI.Control', Sys.Component);
/*Line 5430 - 'MicrosoftAjax.debug.js' */Sys.HistoryEventArgs = function Sys$HistoryEventArgs(state) {
/*Line 5431 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.HistoryEventArgs.#ctor" />
/*Line 5432 - 'MicrosoftAjax.debug.js' */    /// <param name="state" type="Object"></param>
/*Line 5433 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 5434 - 'MicrosoftAjax.debug.js' */        {name: "state", type: Object}
/*Line 5435 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 5436 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 5437 - 'MicrosoftAjax.debug.js' */    Sys.HistoryEventArgs.initializeBase(this);
/*Line 5438 - 'MicrosoftAjax.debug.js' */    this._state = state;
/*Line 5439 - 'MicrosoftAjax.debug.js' */}
/*Line 5440 - 'MicrosoftAjax.debug.js' */    function Sys$HistoryEventArgs$get_state() {
/*Line 5441 - 'MicrosoftAjax.debug.js' */        /// <value type="Object" locid="P:J#Sys.HistoryEventArgs.state"></value>
/*Line 5442 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5443 - 'MicrosoftAjax.debug.js' */        return this._state;
/*Line 5444 - 'MicrosoftAjax.debug.js' */    }
/*Line 5445 - 'MicrosoftAjax.debug.js' */Sys.HistoryEventArgs.prototype = {
/*Line 5446 - 'MicrosoftAjax.debug.js' */    get_state: Sys$HistoryEventArgs$get_state
/*Line 5447 - 'MicrosoftAjax.debug.js' */}
/*Line 5448 - 'MicrosoftAjax.debug.js' */Sys.HistoryEventArgs.registerClass('Sys.HistoryEventArgs', Sys.EventArgs);
/*Line 5449 - 'MicrosoftAjax.debug.js' */Sys.Application._appLoadHandler = null;
/*Line 5450 - 'MicrosoftAjax.debug.js' */Sys.Application._beginRequestHandler = null;
/*Line 5451 - 'MicrosoftAjax.debug.js' */Sys.Application._clientId = null;
/*Line 5452 - 'MicrosoftAjax.debug.js' */Sys.Application._currentEntry = '';
/*Line 5453 - 'MicrosoftAjax.debug.js' */Sys.Application._endRequestHandler = null;
/*Line 5454 - 'MicrosoftAjax.debug.js' */Sys.Application._history = null;
/*Line 5455 - 'MicrosoftAjax.debug.js' */Sys.Application._enableHistory = false;
/*Line 5456 - 'MicrosoftAjax.debug.js' */Sys.Application._historyEnabledInScriptManager = false;
/*Line 5457 - 'MicrosoftAjax.debug.js' */Sys.Application._historyFrame = null;
/*Line 5458 - 'MicrosoftAjax.debug.js' */Sys.Application._historyInitialized = false;
/*Line 5459 - 'MicrosoftAjax.debug.js' */Sys.Application._historyPointIsNew = false;
/*Line 5460 - 'MicrosoftAjax.debug.js' */Sys.Application._ignoreTimer = false;
/*Line 5461 - 'MicrosoftAjax.debug.js' */Sys.Application._initialState = null;
/*Line 5462 - 'MicrosoftAjax.debug.js' */Sys.Application._state = {};
/*Line 5463 - 'MicrosoftAjax.debug.js' */Sys.Application._timerCookie = 0;
/*Line 5464 - 'MicrosoftAjax.debug.js' */Sys.Application._timerHandler = null;
/*Line 5465 - 'MicrosoftAjax.debug.js' */Sys.Application._uniqueId = null;
/*Line 5466 - 'MicrosoftAjax.debug.js' */Sys._Application.prototype.get_stateString = function Sys$_Application$get_stateString() {
/*Line 5467 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys._Application.get_stateString" />
/*Line 5468 - 'MicrosoftAjax.debug.js' */    if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5469 - 'MicrosoftAjax.debug.js' */    var hash = null;
    
/*Line 5471 - 'MicrosoftAjax.debug.js' */    if (Sys.Browser.agent === Sys.Browser.Firefox) {
/*Line 5472 - 'MicrosoftAjax.debug.js' */        var href = window.location.href;
/*Line 5473 - 'MicrosoftAjax.debug.js' */        var hashIndex = href.indexOf('#');
/*Line 5474 - 'MicrosoftAjax.debug.js' */        if (hashIndex !== -1) {
/*Line 5475 - 'MicrosoftAjax.debug.js' */            hash = href.substring(hashIndex + 1);
/*Line 5476 - 'MicrosoftAjax.debug.js' */        }
/*Line 5477 - 'MicrosoftAjax.debug.js' */        else {
/*Line 5478 - 'MicrosoftAjax.debug.js' */            hash = "";
/*Line 5479 - 'MicrosoftAjax.debug.js' */        }
/*Line 5480 - 'MicrosoftAjax.debug.js' */        return hash;
/*Line 5481 - 'MicrosoftAjax.debug.js' */    }
/*Line 5482 - 'MicrosoftAjax.debug.js' */    else {
/*Line 5483 - 'MicrosoftAjax.debug.js' */        hash = window.location.hash;
/*Line 5484 - 'MicrosoftAjax.debug.js' */    }
    
/*Line 5486 - 'MicrosoftAjax.debug.js' */    if ((hash.length > 0) && (hash.charAt(0) === '#')) {
/*Line 5487 - 'MicrosoftAjax.debug.js' */        hash = hash.substring(1);
/*Line 5488 - 'MicrosoftAjax.debug.js' */    }
/*Line 5489 - 'MicrosoftAjax.debug.js' */    return hash;
/*Line 5490 - 'MicrosoftAjax.debug.js' */};
/*Line 5491 - 'MicrosoftAjax.debug.js' */Sys._Application.prototype.get_enableHistory = function Sys$_Application$get_enableHistory() {
/*Line 5492 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys._Application.get_enableHistory" />
/*Line 5493 - 'MicrosoftAjax.debug.js' */    if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5494 - 'MicrosoftAjax.debug.js' */    return this._enableHistory;
/*Line 5495 - 'MicrosoftAjax.debug.js' */};
/*Line 5496 - 'MicrosoftAjax.debug.js' */Sys._Application.prototype.set_enableHistory = function Sys$_Application$set_enableHistory(value) {
/*Line 5497 - 'MicrosoftAjax.debug.js' */    if (this._initialized && !this._initializing) {
/*Line 5498 - 'MicrosoftAjax.debug.js' */        throw Error.invalidOperation(Sys.Res.historyCannotEnableHistory);
/*Line 5499 - 'MicrosoftAjax.debug.js' */    }
/*Line 5500 - 'MicrosoftAjax.debug.js' */    else if (this._historyEnabledInScriptManager && !value) {
/*Line 5501 - 'MicrosoftAjax.debug.js' */        throw Error.invalidOperation(Sys.Res.invalidHistorySettingCombination);
/*Line 5502 - 'MicrosoftAjax.debug.js' */    }
/*Line 5503 - 'MicrosoftAjax.debug.js' */    this._enableHistory = value;
/*Line 5504 - 'MicrosoftAjax.debug.js' */};
/*Line 5505 - 'MicrosoftAjax.debug.js' */Sys._Application.prototype.add_navigate = function Sys$_Application$add_navigate(handler) {
/*Line 5506 - 'MicrosoftAjax.debug.js' */    /// <summary locid="E:J#Sys.Application.navigate" />
/*Line 5507 - 'MicrosoftAjax.debug.js' */    /// <param name="handler" type="Function"></param>
/*Line 5508 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 5509 - 'MicrosoftAjax.debug.js' */        {name: "handler", type: Function}
/*Line 5510 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 5511 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 5512 - 'MicrosoftAjax.debug.js' */    this.get_events().addHandler("navigate", handler);
/*Line 5513 - 'MicrosoftAjax.debug.js' */};
/*Line 5514 - 'MicrosoftAjax.debug.js' */Sys._Application.prototype.remove_navigate = function Sys$_Application$remove_navigate(handler) {
/*Line 5515 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys._Application.remove_navigate" />
/*Line 5516 - 'MicrosoftAjax.debug.js' */    /// <param name="handler" type="Function"></param>
/*Line 5517 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 5518 - 'MicrosoftAjax.debug.js' */        {name: "handler", type: Function}
/*Line 5519 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 5520 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 5521 - 'MicrosoftAjax.debug.js' */    this.get_events().removeHandler("navigate", handler);
/*Line 5522 - 'MicrosoftAjax.debug.js' */};
/*Line 5523 - 'MicrosoftAjax.debug.js' */Sys._Application.prototype.addHistoryPoint = function Sys$_Application$addHistoryPoint(state, title) {
/*Line 5524 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Application.addHistoryPoint" />
/*Line 5525 - 'MicrosoftAjax.debug.js' */    /// <param name="state" type="Object"></param>
/*Line 5526 - 'MicrosoftAjax.debug.js' */    /// <param name="title" type="String" optional="true" mayBeNull="true"></param>
/*Line 5527 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 5528 - 'MicrosoftAjax.debug.js' */        {name: "state", type: Object},
/*Line 5529 - 'MicrosoftAjax.debug.js' */        {name: "title", type: String, mayBeNull: true, optional: true}
/*Line 5530 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 5531 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 5532 - 'MicrosoftAjax.debug.js' */    if (!this._enableHistory) throw Error.invalidOperation(Sys.Res.historyCannotAddHistoryPointWithHistoryDisabled);
/*Line 5533 - 'MicrosoftAjax.debug.js' */    for (var n in state) {
/*Line 5534 - 'MicrosoftAjax.debug.js' */        var v = state[n];
/*Line 5535 - 'MicrosoftAjax.debug.js' */        var t = typeof(v);
/*Line 5536 - 'MicrosoftAjax.debug.js' */        if ((v !== null) && ((t === 'object') || (t === 'function') || (t === 'undefined'))) {
/*Line 5537 - 'MicrosoftAjax.debug.js' */            throw Error.argument('state', Sys.Res.stateMustBeStringDictionary);
/*Line 5538 - 'MicrosoftAjax.debug.js' */        }
/*Line 5539 - 'MicrosoftAjax.debug.js' */    }
/*Line 5540 - 'MicrosoftAjax.debug.js' */    this._ensureHistory();
/*Line 5541 - 'MicrosoftAjax.debug.js' */    var initialState = this._state;
/*Line 5542 - 'MicrosoftAjax.debug.js' */    for (var key in state) {
/*Line 5543 - 'MicrosoftAjax.debug.js' */        var value = state[key];
/*Line 5544 - 'MicrosoftAjax.debug.js' */        if (value === null) {
/*Line 5545 - 'MicrosoftAjax.debug.js' */            if (typeof(initialState[key]) !== 'undefined') {
/*Line 5546 - 'MicrosoftAjax.debug.js' */                delete initialState[key];
/*Line 5547 - 'MicrosoftAjax.debug.js' */            }
/*Line 5548 - 'MicrosoftAjax.debug.js' */        }
/*Line 5549 - 'MicrosoftAjax.debug.js' */        else {
/*Line 5550 - 'MicrosoftAjax.debug.js' */            initialState[key] = value;
/*Line 5551 - 'MicrosoftAjax.debug.js' */        }
/*Line 5552 - 'MicrosoftAjax.debug.js' */    }
/*Line 5553 - 'MicrosoftAjax.debug.js' */    var entry = this._serializeState(initialState);
/*Line 5554 - 'MicrosoftAjax.debug.js' */    this._historyPointIsNew = true;
/*Line 5555 - 'MicrosoftAjax.debug.js' */    this._setState(entry, title);
/*Line 5556 - 'MicrosoftAjax.debug.js' */    this._raiseNavigate();
/*Line 5557 - 'MicrosoftAjax.debug.js' */};
/*Line 5558 - 'MicrosoftAjax.debug.js' */Sys._Application.prototype.setServerId = function Sys$_Application$setServerId(clientId, uniqueId) {
/*Line 5559 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Application.setServerId" />
/*Line 5560 - 'MicrosoftAjax.debug.js' */    /// <param name="clientId" type="String"></param>
/*Line 5561 - 'MicrosoftAjax.debug.js' */    /// <param name="uniqueId" type="String"></param>
/*Line 5562 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 5563 - 'MicrosoftAjax.debug.js' */        {name: "clientId", type: String},
/*Line 5564 - 'MicrosoftAjax.debug.js' */        {name: "uniqueId", type: String}
/*Line 5565 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 5566 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 5567 - 'MicrosoftAjax.debug.js' */    this._clientId = clientId;
/*Line 5568 - 'MicrosoftAjax.debug.js' */    this._uniqueId = uniqueId;
/*Line 5569 - 'MicrosoftAjax.debug.js' */};
/*Line 5570 - 'MicrosoftAjax.debug.js' */Sys._Application.prototype.setServerState = function Sys$_Application$setServerState(value) {
/*Line 5571 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Application.setServerState" />
/*Line 5572 - 'MicrosoftAjax.debug.js' */    /// <param name="value" type="String"></param>
/*Line 5573 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 5574 - 'MicrosoftAjax.debug.js' */        {name: "value", type: String}
/*Line 5575 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 5576 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 5577 - 'MicrosoftAjax.debug.js' */    this._ensureHistory();
/*Line 5578 - 'MicrosoftAjax.debug.js' */    this._state.__s = value;
/*Line 5579 - 'MicrosoftAjax.debug.js' */    this._updateHiddenField(value);
/*Line 5580 - 'MicrosoftAjax.debug.js' */};
/*Line 5581 - 'MicrosoftAjax.debug.js' */Sys._Application.prototype._deserializeState = function Sys$_Application$_deserializeState(entry) {
/*Line 5582 - 'MicrosoftAjax.debug.js' */    var result = {};
/*Line 5583 - 'MicrosoftAjax.debug.js' */    entry = entry || '';
/*Line 5584 - 'MicrosoftAjax.debug.js' */    var serverSeparator = entry.indexOf('&&');
/*Line 5585 - 'MicrosoftAjax.debug.js' */    if ((serverSeparator !== -1) && (serverSeparator + 2 < entry.length)) {
/*Line 5586 - 'MicrosoftAjax.debug.js' */        result.__s = entry.substr(serverSeparator + 2);
/*Line 5587 - 'MicrosoftAjax.debug.js' */        entry = entry.substr(0, serverSeparator);
/*Line 5588 - 'MicrosoftAjax.debug.js' */    }
/*Line 5589 - 'MicrosoftAjax.debug.js' */    var tokens = entry.split('&');
/*Line 5590 - 'MicrosoftAjax.debug.js' */    for (var i = 0, l = tokens.length; i < l; i++) {
/*Line 5591 - 'MicrosoftAjax.debug.js' */        var token = tokens[i];
/*Line 5592 - 'MicrosoftAjax.debug.js' */        var equal = token.indexOf('=');
/*Line 5593 - 'MicrosoftAjax.debug.js' */        if ((equal !== -1) && (equal + 1 < token.length)) {
/*Line 5594 - 'MicrosoftAjax.debug.js' */            var name = token.substr(0, equal);
/*Line 5595 - 'MicrosoftAjax.debug.js' */            var value = token.substr(equal + 1);
/*Line 5596 - 'MicrosoftAjax.debug.js' */            result[name] = decodeURIComponent(value);
/*Line 5597 - 'MicrosoftAjax.debug.js' */        }
/*Line 5598 - 'MicrosoftAjax.debug.js' */    }
/*Line 5599 - 'MicrosoftAjax.debug.js' */    return result;
/*Line 5600 - 'MicrosoftAjax.debug.js' */};
/*Line 5601 - 'MicrosoftAjax.debug.js' */Sys._Application.prototype._enableHistoryInScriptManager = function Sys$_Application$_enableHistoryInScriptManager() {
/*Line 5602 - 'MicrosoftAjax.debug.js' */    this._enableHistory = true;
/*Line 5603 - 'MicrosoftAjax.debug.js' */    this._historyEnabledInScriptManager = true;
/*Line 5604 - 'MicrosoftAjax.debug.js' */};
/*Line 5605 - 'MicrosoftAjax.debug.js' */Sys._Application.prototype._ensureHistory = function Sys$_Application$_ensureHistory() {
/*Line 5606 - 'MicrosoftAjax.debug.js' */    if (!this._historyInitialized && this._enableHistory) {
/*Line 5607 - 'MicrosoftAjax.debug.js' */        if ((Sys.Browser.agent === Sys.Browser.InternetExplorer) && (Sys.Browser.documentMode < 8)) {
/*Line 5608 - 'MicrosoftAjax.debug.js' */            this._historyFrame = document.getElementById('__historyFrame');
/*Line 5609 - 'MicrosoftAjax.debug.js' */            if (!this._historyFrame) throw Error.invalidOperation(Sys.Res.historyMissingFrame);
/*Line 5610 - 'MicrosoftAjax.debug.js' */            this._ignoreIFrame = true;
/*Line 5611 - 'MicrosoftAjax.debug.js' */        }
/*Line 5612 - 'MicrosoftAjax.debug.js' */        this._timerHandler = Function.createDelegate(this, this._onIdle);
/*Line 5613 - 'MicrosoftAjax.debug.js' */        this._timerCookie = window.setTimeout(this._timerHandler, 100);
        
/*Line 5615 - 'MicrosoftAjax.debug.js' */        try {
/*Line 5616 - 'MicrosoftAjax.debug.js' */            this._initialState = this._deserializeState(this.get_stateString());
/*Line 5617 - 'MicrosoftAjax.debug.js' */        } catch(e) {}
        
/*Line 5619 - 'MicrosoftAjax.debug.js' */        this._historyInitialized = true;
/*Line 5620 - 'MicrosoftAjax.debug.js' */    }
/*Line 5621 - 'MicrosoftAjax.debug.js' */};
/*Line 5622 - 'MicrosoftAjax.debug.js' */Sys._Application.prototype._navigate = function Sys$_Application$_navigate(entry) {
/*Line 5623 - 'MicrosoftAjax.debug.js' */    this._ensureHistory();
/*Line 5624 - 'MicrosoftAjax.debug.js' */    var state = this._deserializeState(entry);
    
/*Line 5626 - 'MicrosoftAjax.debug.js' */    if (this._uniqueId) {
/*Line 5627 - 'MicrosoftAjax.debug.js' */        var oldServerEntry = this._state.__s || '';
/*Line 5628 - 'MicrosoftAjax.debug.js' */        var newServerEntry = state.__s || '';
/*Line 5629 - 'MicrosoftAjax.debug.js' */        if (newServerEntry !== oldServerEntry) {
/*Line 5630 - 'MicrosoftAjax.debug.js' */            this._updateHiddenField(newServerEntry);
/*Line 5631 - 'MicrosoftAjax.debug.js' */            __doPostBack(this._uniqueId, newServerEntry);
/*Line 5632 - 'MicrosoftAjax.debug.js' */            this._state = state;
/*Line 5633 - 'MicrosoftAjax.debug.js' */            return;
/*Line 5634 - 'MicrosoftAjax.debug.js' */        }
/*Line 5635 - 'MicrosoftAjax.debug.js' */    }
/*Line 5636 - 'MicrosoftAjax.debug.js' */    this._setState(entry);
/*Line 5637 - 'MicrosoftAjax.debug.js' */    this._state = state;
/*Line 5638 - 'MicrosoftAjax.debug.js' */    this._raiseNavigate();
/*Line 5639 - 'MicrosoftAjax.debug.js' */};
/*Line 5640 - 'MicrosoftAjax.debug.js' */Sys._Application.prototype._onIdle = function Sys$_Application$_onIdle() {
/*Line 5641 - 'MicrosoftAjax.debug.js' */    delete this._timerCookie;
    
/*Line 5643 - 'MicrosoftAjax.debug.js' */    var entry = this.get_stateString();
/*Line 5644 - 'MicrosoftAjax.debug.js' */    if (entry !== this._currentEntry) {
/*Line 5645 - 'MicrosoftAjax.debug.js' */        if (!this._ignoreTimer) {
/*Line 5646 - 'MicrosoftAjax.debug.js' */            this._historyPointIsNew = false;
/*Line 5647 - 'MicrosoftAjax.debug.js' */            this._navigate(entry);
/*Line 5648 - 'MicrosoftAjax.debug.js' */        }
/*Line 5649 - 'MicrosoftAjax.debug.js' */    }
/*Line 5650 - 'MicrosoftAjax.debug.js' */    else {
/*Line 5651 - 'MicrosoftAjax.debug.js' */        this._ignoreTimer = false;
/*Line 5652 - 'MicrosoftAjax.debug.js' */    }
/*Line 5653 - 'MicrosoftAjax.debug.js' */    this._timerCookie = window.setTimeout(this._timerHandler, 100);
/*Line 5654 - 'MicrosoftAjax.debug.js' */};
/*Line 5655 - 'MicrosoftAjax.debug.js' */Sys._Application.prototype._onIFrameLoad = function Sys$_Application$_onIFrameLoad(entry) {
/*Line 5656 - 'MicrosoftAjax.debug.js' */    this._ensureHistory();
/*Line 5657 - 'MicrosoftAjax.debug.js' */    if (!this._ignoreIFrame) {
/*Line 5658 - 'MicrosoftAjax.debug.js' */        this._historyPointIsNew = false;
/*Line 5659 - 'MicrosoftAjax.debug.js' */        this._navigate(entry);
/*Line 5660 - 'MicrosoftAjax.debug.js' */    }
/*Line 5661 - 'MicrosoftAjax.debug.js' */    this._ignoreIFrame = false;
/*Line 5662 - 'MicrosoftAjax.debug.js' */};
/*Line 5663 - 'MicrosoftAjax.debug.js' */Sys._Application.prototype._onPageRequestManagerBeginRequest = function Sys$_Application$_onPageRequestManagerBeginRequest(sender, args) {
/*Line 5664 - 'MicrosoftAjax.debug.js' */    this._ignoreTimer = true;
/*Line 5665 - 'MicrosoftAjax.debug.js' */};
/*Line 5666 - 'MicrosoftAjax.debug.js' */Sys._Application.prototype._onPageRequestManagerEndRequest = function Sys$_Application$_onPageRequestManagerEndRequest(sender, args) {
/*Line 5667 - 'MicrosoftAjax.debug.js' */    var dataItem = args.get_dataItems()[this._clientId];
/*Line 5668 - 'MicrosoftAjax.debug.js' */    var eventTarget = document.getElementById("__EVENTTARGET");
/*Line 5669 - 'MicrosoftAjax.debug.js' */    if (eventTarget && eventTarget.value === this._uniqueId) {
/*Line 5670 - 'MicrosoftAjax.debug.js' */        eventTarget.value = '';
/*Line 5671 - 'MicrosoftAjax.debug.js' */    }
/*Line 5672 - 'MicrosoftAjax.debug.js' */    if (typeof(dataItem) !== 'undefined') {
/*Line 5673 - 'MicrosoftAjax.debug.js' */        this.setServerState(dataItem);
/*Line 5674 - 'MicrosoftAjax.debug.js' */        this._historyPointIsNew = true;
/*Line 5675 - 'MicrosoftAjax.debug.js' */    }
/*Line 5676 - 'MicrosoftAjax.debug.js' */    else {
/*Line 5677 - 'MicrosoftAjax.debug.js' */        this._ignoreTimer = false;
/*Line 5678 - 'MicrosoftAjax.debug.js' */    }
/*Line 5679 - 'MicrosoftAjax.debug.js' */    var entry = this._serializeState(this._state);
/*Line 5680 - 'MicrosoftAjax.debug.js' */    if (entry !== this._currentEntry) {
/*Line 5681 - 'MicrosoftAjax.debug.js' */        this._ignoreTimer = true;
/*Line 5682 - 'MicrosoftAjax.debug.js' */        this._setState(entry);
/*Line 5683 - 'MicrosoftAjax.debug.js' */        this._raiseNavigate();
/*Line 5684 - 'MicrosoftAjax.debug.js' */    }
/*Line 5685 - 'MicrosoftAjax.debug.js' */};
/*Line 5686 - 'MicrosoftAjax.debug.js' */Sys._Application.prototype._raiseNavigate = function Sys$_Application$_raiseNavigate() {
/*Line 5687 - 'MicrosoftAjax.debug.js' */    var h = this.get_events().getHandler("navigate");
/*Line 5688 - 'MicrosoftAjax.debug.js' */    var stateClone = {};
/*Line 5689 - 'MicrosoftAjax.debug.js' */    for (var key in this._state) {
/*Line 5690 - 'MicrosoftAjax.debug.js' */        if (key !== '__s') {
/*Line 5691 - 'MicrosoftAjax.debug.js' */            stateClone[key] = this._state[key];
/*Line 5692 - 'MicrosoftAjax.debug.js' */        }
/*Line 5693 - 'MicrosoftAjax.debug.js' */    }
/*Line 5694 - 'MicrosoftAjax.debug.js' */    var args = new Sys.HistoryEventArgs(stateClone);
/*Line 5695 - 'MicrosoftAjax.debug.js' */    if (h) {
/*Line 5696 - 'MicrosoftAjax.debug.js' */        h(this, args);
/*Line 5697 - 'MicrosoftAjax.debug.js' */    }
/*Line 5698 - 'MicrosoftAjax.debug.js' */    var err;
/*Line 5699 - 'MicrosoftAjax.debug.js' */    try {
/*Line 5700 - 'MicrosoftAjax.debug.js' */        if ((Sys.Browser.agent === Sys.Browser.Firefox) && window.location.hash &&
/*Line 5701 - 'MicrosoftAjax.debug.js' */            (!window.frameElement || window.top.location.hash)) {
/*Line 5702 - 'MicrosoftAjax.debug.js' */            window.history.go(0);
/*Line 5703 - 'MicrosoftAjax.debug.js' */        }
/*Line 5704 - 'MicrosoftAjax.debug.js' */    }
/*Line 5705 - 'MicrosoftAjax.debug.js' */    catch(err) {
/*Line 5706 - 'MicrosoftAjax.debug.js' */    }
/*Line 5707 - 'MicrosoftAjax.debug.js' */};
/*Line 5708 - 'MicrosoftAjax.debug.js' */Sys._Application.prototype._serializeState = function Sys$_Application$_serializeState(state) {
/*Line 5709 - 'MicrosoftAjax.debug.js' */    var serialized = [];
/*Line 5710 - 'MicrosoftAjax.debug.js' */    for (var key in state) {
/*Line 5711 - 'MicrosoftAjax.debug.js' */        var value = state[key];
/*Line 5712 - 'MicrosoftAjax.debug.js' */        if (key === '__s') {
/*Line 5713 - 'MicrosoftAjax.debug.js' */            var serverState = value;
/*Line 5714 - 'MicrosoftAjax.debug.js' */        }
/*Line 5715 - 'MicrosoftAjax.debug.js' */        else {
/*Line 5716 - 'MicrosoftAjax.debug.js' */            if (key.indexOf('=') !== -1) throw Error.argument('state', Sys.Res.stateFieldNameInvalid);
/*Line 5717 - 'MicrosoftAjax.debug.js' */            serialized[serialized.length] = key + '=' + encodeURIComponent(value);
/*Line 5718 - 'MicrosoftAjax.debug.js' */        }
/*Line 5719 - 'MicrosoftAjax.debug.js' */    }
/*Line 5720 - 'MicrosoftAjax.debug.js' */    return serialized.join('&') + (serverState ? '&&' + serverState : '');
/*Line 5721 - 'MicrosoftAjax.debug.js' */};
/*Line 5722 - 'MicrosoftAjax.debug.js' */Sys._Application.prototype._setState = function Sys$_Application$_setState(entry, title) {
/*Line 5723 - 'MicrosoftAjax.debug.js' */    if (this._enableHistory) {
/*Line 5724 - 'MicrosoftAjax.debug.js' */        entry = entry || '';
/*Line 5725 - 'MicrosoftAjax.debug.js' */        if (entry !== this._currentEntry) {
/*Line 5726 - 'MicrosoftAjax.debug.js' */            if (window.theForm) {
/*Line 5727 - 'MicrosoftAjax.debug.js' */                var action = window.theForm.action;
/*Line 5728 - 'MicrosoftAjax.debug.js' */                var hashIndex = action.indexOf('#');
/*Line 5729 - 'MicrosoftAjax.debug.js' */                window.theForm.action = ((hashIndex !== -1) ? action.substring(0, hashIndex) : action) + '#' + entry;
/*Line 5730 - 'MicrosoftAjax.debug.js' */            }
        
/*Line 5732 - 'MicrosoftAjax.debug.js' */            if (this._historyFrame && this._historyPointIsNew) {
/*Line 5733 - 'MicrosoftAjax.debug.js' */                this._ignoreIFrame = true;
/*Line 5734 - 'MicrosoftAjax.debug.js' */                var frameDoc = this._historyFrame.contentWindow.document;
/*Line 5735 - 'MicrosoftAjax.debug.js' */                frameDoc.open("javascript:'<html></html>'");
/*Line 5736 - 'MicrosoftAjax.debug.js' */                frameDoc.write("<html><head><title>" + (title || document.title) +
/*Line 5737 - 'MicrosoftAjax.debug.js' */                    "</title><scri" + "pt type=\"text/javascript\">parent.Sys.Application._onIFrameLoad(" + 
/*Line 5738 - 'MicrosoftAjax.debug.js' */                    Sys.Serialization.JavaScriptSerializer.serialize(entry) +
/*Line 5739 - 'MicrosoftAjax.debug.js' */                    ");</scri" + "pt></head><body></body></html>");
/*Line 5740 - 'MicrosoftAjax.debug.js' */                frameDoc.close();
/*Line 5741 - 'MicrosoftAjax.debug.js' */            }
/*Line 5742 - 'MicrosoftAjax.debug.js' */            this._ignoreTimer = false;
/*Line 5743 - 'MicrosoftAjax.debug.js' */            this._currentEntry = entry;
/*Line 5744 - 'MicrosoftAjax.debug.js' */            if (this._historyFrame || this._historyPointIsNew) {
/*Line 5745 - 'MicrosoftAjax.debug.js' */                var currentHash = this.get_stateString();
/*Line 5746 - 'MicrosoftAjax.debug.js' */                if (entry !== currentHash) {
/*Line 5747 - 'MicrosoftAjax.debug.js' */                    var loc = document.location;
/*Line 5748 - 'MicrosoftAjax.debug.js' */                    if (loc.href.length - loc.hash.length + entry.length > 1024) {
/*Line 5749 - 'MicrosoftAjax.debug.js' */                        throw Error.invalidOperation(Sys.Res.urlMustBeLessThan1024chars);
/*Line 5750 - 'MicrosoftAjax.debug.js' */                    }
/*Line 5751 - 'MicrosoftAjax.debug.js' */                    window.location.hash = entry;
/*Line 5752 - 'MicrosoftAjax.debug.js' */                    this._currentEntry = this.get_stateString();
/*Line 5753 - 'MicrosoftAjax.debug.js' */                    if ((typeof(title) !== 'undefined') && (title !== null)) {
/*Line 5754 - 'MicrosoftAjax.debug.js' */                        document.title = title;
/*Line 5755 - 'MicrosoftAjax.debug.js' */                    }
/*Line 5756 - 'MicrosoftAjax.debug.js' */                }
/*Line 5757 - 'MicrosoftAjax.debug.js' */            }
/*Line 5758 - 'MicrosoftAjax.debug.js' */            this._historyPointIsNew = false;
/*Line 5759 - 'MicrosoftAjax.debug.js' */        }
/*Line 5760 - 'MicrosoftAjax.debug.js' */    }
/*Line 5761 - 'MicrosoftAjax.debug.js' */};
/*Line 5762 - 'MicrosoftAjax.debug.js' */Sys._Application.prototype._updateHiddenField = function Sys$_Application$_updateHiddenField(value) {
/*Line 5763 - 'MicrosoftAjax.debug.js' */    if (this._clientId) {
/*Line 5764 - 'MicrosoftAjax.debug.js' */        var serverStateField = document.getElementById(this._clientId);
/*Line 5765 - 'MicrosoftAjax.debug.js' */        if (serverStateField) {
/*Line 5766 - 'MicrosoftAjax.debug.js' */            serverStateField.value = value;
/*Line 5767 - 'MicrosoftAjax.debug.js' */        }
/*Line 5768 - 'MicrosoftAjax.debug.js' */    }
/*Line 5769 - 'MicrosoftAjax.debug.js' */};
 
/*Line 5771 - 'MicrosoftAjax.debug.js' */if (!window.XMLHttpRequest) {
/*Line 5772 - 'MicrosoftAjax.debug.js' */    window.XMLHttpRequest = function window$XMLHttpRequest() {
/*Line 5773 - 'MicrosoftAjax.debug.js' */        var progIDs = [ 'Msxml2.XMLHTTP.3.0', 'Msxml2.XMLHTTP' ];
/*Line 5774 - 'MicrosoftAjax.debug.js' */        for (var i = 0, l = progIDs.length; i < l; i++) {
/*Line 5775 - 'MicrosoftAjax.debug.js' */            try {
/*Line 5776 - 'MicrosoftAjax.debug.js' */                return new ActiveXObject(progIDs[i]);
/*Line 5777 - 'MicrosoftAjax.debug.js' */            }
/*Line 5778 - 'MicrosoftAjax.debug.js' */            catch (ex) {
/*Line 5779 - 'MicrosoftAjax.debug.js' */            }
/*Line 5780 - 'MicrosoftAjax.debug.js' */        }
/*Line 5781 - 'MicrosoftAjax.debug.js' */        return null;
/*Line 5782 - 'MicrosoftAjax.debug.js' */    }
/*Line 5783 - 'MicrosoftAjax.debug.js' */}
/*Line 5784 - 'MicrosoftAjax.debug.js' */Type.registerNamespace('Sys.Net');
 
/*Line 5786 - 'MicrosoftAjax.debug.js' */Sys.Net.WebRequestExecutor = function Sys$Net$WebRequestExecutor() {
/*Line 5787 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Net.WebRequestExecutor.#ctor" />
/*Line 5788 - 'MicrosoftAjax.debug.js' */    if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5789 - 'MicrosoftAjax.debug.js' */    this._webRequest = null;
/*Line 5790 - 'MicrosoftAjax.debug.js' */    this._resultObject = null;
/*Line 5791 - 'MicrosoftAjax.debug.js' */}
/*Line 5792 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequestExecutor$get_webRequest() {
/*Line 5793 - 'MicrosoftAjax.debug.js' */        /// <value type="Sys.Net.WebRequest" locid="P:J#Sys.Net.WebRequestExecutor.webRequest"></value>
/*Line 5794 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5795 - 'MicrosoftAjax.debug.js' */        return this._webRequest;
/*Line 5796 - 'MicrosoftAjax.debug.js' */    }
/*Line 5797 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequestExecutor$_set_webRequest(value) {
/*Line 5798 - 'MicrosoftAjax.debug.js' */        if (this.get_started()) {
/*Line 5799 - 'MicrosoftAjax.debug.js' */            throw Error.invalidOperation(String.format(Sys.Res.cannotCallOnceStarted, 'set_webRequest'));
/*Line 5800 - 'MicrosoftAjax.debug.js' */        }
/*Line 5801 - 'MicrosoftAjax.debug.js' */        this._webRequest = value;
/*Line 5802 - 'MicrosoftAjax.debug.js' */    }
/*Line 5803 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequestExecutor$get_started() {
/*Line 5804 - 'MicrosoftAjax.debug.js' */        /// <value type="Boolean" locid="P:J#Sys.Net.WebRequestExecutor.started"></value>
/*Line 5805 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5806 - 'MicrosoftAjax.debug.js' */        throw Error.notImplemented();
/*Line 5807 - 'MicrosoftAjax.debug.js' */    }
/*Line 5808 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequestExecutor$get_responseAvailable() {
/*Line 5809 - 'MicrosoftAjax.debug.js' */        /// <value type="Boolean" locid="P:J#Sys.Net.WebRequestExecutor.responseAvailable"></value>
/*Line 5810 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5811 - 'MicrosoftAjax.debug.js' */        throw Error.notImplemented();
/*Line 5812 - 'MicrosoftAjax.debug.js' */    }
/*Line 5813 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequestExecutor$get_timedOut() {
/*Line 5814 - 'MicrosoftAjax.debug.js' */        /// <value type="Boolean" locid="P:J#Sys.Net.WebRequestExecutor.timedOut"></value>
/*Line 5815 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5816 - 'MicrosoftAjax.debug.js' */        throw Error.notImplemented();
/*Line 5817 - 'MicrosoftAjax.debug.js' */    }
/*Line 5818 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequestExecutor$get_aborted() {
/*Line 5819 - 'MicrosoftAjax.debug.js' */        /// <value type="Boolean" locid="P:J#Sys.Net.WebRequestExecutor.aborted"></value>
/*Line 5820 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5821 - 'MicrosoftAjax.debug.js' */        throw Error.notImplemented();
/*Line 5822 - 'MicrosoftAjax.debug.js' */    }
/*Line 5823 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequestExecutor$get_responseData() {
/*Line 5824 - 'MicrosoftAjax.debug.js' */        /// <value type="String" locid="P:J#Sys.Net.WebRequestExecutor.responseData"></value>
/*Line 5825 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5826 - 'MicrosoftAjax.debug.js' */        throw Error.notImplemented();
/*Line 5827 - 'MicrosoftAjax.debug.js' */    }
/*Line 5828 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequestExecutor$get_statusCode() {
/*Line 5829 - 'MicrosoftAjax.debug.js' */        /// <value type="Number" locid="P:J#Sys.Net.WebRequestExecutor.statusCode"></value>
/*Line 5830 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5831 - 'MicrosoftAjax.debug.js' */        throw Error.notImplemented();
/*Line 5832 - 'MicrosoftAjax.debug.js' */    }
/*Line 5833 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequestExecutor$get_statusText() {
/*Line 5834 - 'MicrosoftAjax.debug.js' */        /// <value type="String" locid="P:J#Sys.Net.WebRequestExecutor.statusText"></value>
/*Line 5835 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5836 - 'MicrosoftAjax.debug.js' */        throw Error.notImplemented();
/*Line 5837 - 'MicrosoftAjax.debug.js' */    }
/*Line 5838 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequestExecutor$get_xml() {
/*Line 5839 - 'MicrosoftAjax.debug.js' */        /// <value locid="P:J#Sys.Net.WebRequestExecutor.xml"></value>
/*Line 5840 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5841 - 'MicrosoftAjax.debug.js' */        throw Error.notImplemented();
/*Line 5842 - 'MicrosoftAjax.debug.js' */    }
/*Line 5843 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequestExecutor$get_object() {
/*Line 5844 - 'MicrosoftAjax.debug.js' */        /// <value locid="P:J#Sys.Net.WebRequestExecutor.object"></value>
/*Line 5845 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5846 - 'MicrosoftAjax.debug.js' */        if (!this._resultObject) {
/*Line 5847 - 'MicrosoftAjax.debug.js' */            this._resultObject = Sys.Serialization.JavaScriptSerializer.deserialize(this.get_responseData());
/*Line 5848 - 'MicrosoftAjax.debug.js' */        }
/*Line 5849 - 'MicrosoftAjax.debug.js' */        return this._resultObject;
/*Line 5850 - 'MicrosoftAjax.debug.js' */    }
/*Line 5851 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequestExecutor$executeRequest() {
/*Line 5852 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Net.WebRequestExecutor.executeRequest" />
/*Line 5853 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5854 - 'MicrosoftAjax.debug.js' */        throw Error.notImplemented();
/*Line 5855 - 'MicrosoftAjax.debug.js' */    }
/*Line 5856 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequestExecutor$abort() {
/*Line 5857 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Net.WebRequestExecutor.abort" />
/*Line 5858 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5859 - 'MicrosoftAjax.debug.js' */        throw Error.notImplemented();
/*Line 5860 - 'MicrosoftAjax.debug.js' */    }
/*Line 5861 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequestExecutor$getResponseHeader(header) {
/*Line 5862 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Net.WebRequestExecutor.getResponseHeader" />
/*Line 5863 - 'MicrosoftAjax.debug.js' */        /// <param name="header" type="String"></param>
/*Line 5864 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 5865 - 'MicrosoftAjax.debug.js' */            {name: "header", type: String}
/*Line 5866 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 5867 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 5868 - 'MicrosoftAjax.debug.js' */        throw Error.notImplemented();
/*Line 5869 - 'MicrosoftAjax.debug.js' */    }
/*Line 5870 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequestExecutor$getAllResponseHeaders() {
/*Line 5871 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Net.WebRequestExecutor.getAllResponseHeaders" />
/*Line 5872 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5873 - 'MicrosoftAjax.debug.js' */        throw Error.notImplemented();
/*Line 5874 - 'MicrosoftAjax.debug.js' */    }
/*Line 5875 - 'MicrosoftAjax.debug.js' */Sys.Net.WebRequestExecutor.prototype = {
/*Line 5876 - 'MicrosoftAjax.debug.js' */    get_webRequest: Sys$Net$WebRequestExecutor$get_webRequest,
/*Line 5877 - 'MicrosoftAjax.debug.js' */    _set_webRequest: Sys$Net$WebRequestExecutor$_set_webRequest,
/*Line 5878 - 'MicrosoftAjax.debug.js' */    get_started: Sys$Net$WebRequestExecutor$get_started,
/*Line 5879 - 'MicrosoftAjax.debug.js' */    get_responseAvailable: Sys$Net$WebRequestExecutor$get_responseAvailable,
/*Line 5880 - 'MicrosoftAjax.debug.js' */    get_timedOut: Sys$Net$WebRequestExecutor$get_timedOut,
/*Line 5881 - 'MicrosoftAjax.debug.js' */    get_aborted: Sys$Net$WebRequestExecutor$get_aborted,
/*Line 5882 - 'MicrosoftAjax.debug.js' */    get_responseData: Sys$Net$WebRequestExecutor$get_responseData,
/*Line 5883 - 'MicrosoftAjax.debug.js' */    get_statusCode: Sys$Net$WebRequestExecutor$get_statusCode,
/*Line 5884 - 'MicrosoftAjax.debug.js' */    get_statusText: Sys$Net$WebRequestExecutor$get_statusText,
/*Line 5885 - 'MicrosoftAjax.debug.js' */    get_xml: Sys$Net$WebRequestExecutor$get_xml,
/*Line 5886 - 'MicrosoftAjax.debug.js' */    get_object: Sys$Net$WebRequestExecutor$get_object,
/*Line 5887 - 'MicrosoftAjax.debug.js' */    executeRequest: Sys$Net$WebRequestExecutor$executeRequest,
/*Line 5888 - 'MicrosoftAjax.debug.js' */    abort: Sys$Net$WebRequestExecutor$abort,
/*Line 5889 - 'MicrosoftAjax.debug.js' */    getResponseHeader: Sys$Net$WebRequestExecutor$getResponseHeader,
/*Line 5890 - 'MicrosoftAjax.debug.js' */    getAllResponseHeaders: Sys$Net$WebRequestExecutor$getAllResponseHeaders
/*Line 5891 - 'MicrosoftAjax.debug.js' */}
/*Line 5892 - 'MicrosoftAjax.debug.js' */Sys.Net.WebRequestExecutor.registerClass('Sys.Net.WebRequestExecutor');
 
/*Line 5894 - 'MicrosoftAjax.debug.js' */Sys.Net.XMLDOM = function Sys$Net$XMLDOM(markup) {
/*Line 5895 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Net.XMLDOM.#ctor" />
/*Line 5896 - 'MicrosoftAjax.debug.js' */    /// <param name="markup" type="String"></param>
/*Line 5897 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 5898 - 'MicrosoftAjax.debug.js' */        {name: "markup", type: String}
/*Line 5899 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 5900 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 5901 - 'MicrosoftAjax.debug.js' */    if (!window.DOMParser) {
/*Line 5902 - 'MicrosoftAjax.debug.js' */        var progIDs = [ 'Msxml2.DOMDocument.3.0', 'Msxml2.DOMDocument' ];
/*Line 5903 - 'MicrosoftAjax.debug.js' */        for (var i = 0, l = progIDs.length; i < l; i++) {
/*Line 5904 - 'MicrosoftAjax.debug.js' */            try {
/*Line 5905 - 'MicrosoftAjax.debug.js' */                var xmlDOM = new ActiveXObject(progIDs[i]);
/*Line 5906 - 'MicrosoftAjax.debug.js' */                xmlDOM.async = false;
/*Line 5907 - 'MicrosoftAjax.debug.js' */                xmlDOM.loadXML(markup);
/*Line 5908 - 'MicrosoftAjax.debug.js' */                xmlDOM.setProperty('SelectionLanguage', 'XPath');
/*Line 5909 - 'MicrosoftAjax.debug.js' */                return xmlDOM;
/*Line 5910 - 'MicrosoftAjax.debug.js' */            }
/*Line 5911 - 'MicrosoftAjax.debug.js' */            catch (ex) {
/*Line 5912 - 'MicrosoftAjax.debug.js' */            }
/*Line 5913 - 'MicrosoftAjax.debug.js' */        }
/*Line 5914 - 'MicrosoftAjax.debug.js' */    }
/*Line 5915 - 'MicrosoftAjax.debug.js' */    else {
/*Line 5916 - 'MicrosoftAjax.debug.js' */        try {
/*Line 5917 - 'MicrosoftAjax.debug.js' */            var domParser = new window.DOMParser();
/*Line 5918 - 'MicrosoftAjax.debug.js' */            return domParser.parseFromString(markup, 'text/xml');
/*Line 5919 - 'MicrosoftAjax.debug.js' */        }
/*Line 5920 - 'MicrosoftAjax.debug.js' */        catch (ex) {
/*Line 5921 - 'MicrosoftAjax.debug.js' */        }
/*Line 5922 - 'MicrosoftAjax.debug.js' */    }
/*Line 5923 - 'MicrosoftAjax.debug.js' */    return null;
/*Line 5924 - 'MicrosoftAjax.debug.js' */}
/*Line 5925 - 'MicrosoftAjax.debug.js' */Sys.Net.XMLHttpExecutor = function Sys$Net$XMLHttpExecutor() {
/*Line 5926 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Net.XMLHttpExecutor.#ctor" />
/*Line 5927 - 'MicrosoftAjax.debug.js' */    if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5928 - 'MicrosoftAjax.debug.js' */    Sys.Net.XMLHttpExecutor.initializeBase(this);
/*Line 5929 - 'MicrosoftAjax.debug.js' */    var _this = this;
/*Line 5930 - 'MicrosoftAjax.debug.js' */    this._xmlHttpRequest = null;
/*Line 5931 - 'MicrosoftAjax.debug.js' */    this._webRequest = null;
/*Line 5932 - 'MicrosoftAjax.debug.js' */    this._responseAvailable = false;
/*Line 5933 - 'MicrosoftAjax.debug.js' */    this._timedOut = false;
/*Line 5934 - 'MicrosoftAjax.debug.js' */    this._timer = null;
/*Line 5935 - 'MicrosoftAjax.debug.js' */    this._aborted = false;
/*Line 5936 - 'MicrosoftAjax.debug.js' */    this._started = false;
/*Line 5937 - 'MicrosoftAjax.debug.js' */    this._onReadyStateChange = (function () {
        
/*Line 5939 - 'MicrosoftAjax.debug.js' */        if (_this._xmlHttpRequest.readyState === 4 ) {
/*Line 5940 - 'MicrosoftAjax.debug.js' */            try {
/*Line 5941 - 'MicrosoftAjax.debug.js' */                if (typeof(_this._xmlHttpRequest.status) === "undefined") {
/*Line 5942 - 'MicrosoftAjax.debug.js' */                    return;
/*Line 5943 - 'MicrosoftAjax.debug.js' */                }
/*Line 5944 - 'MicrosoftAjax.debug.js' */            }
/*Line 5945 - 'MicrosoftAjax.debug.js' */            catch(ex) {
/*Line 5946 - 'MicrosoftAjax.debug.js' */                return;
/*Line 5947 - 'MicrosoftAjax.debug.js' */            }
            
/*Line 5949 - 'MicrosoftAjax.debug.js' */            _this._clearTimer();
/*Line 5950 - 'MicrosoftAjax.debug.js' */            _this._responseAvailable = true;
/*Line 5951 - 'MicrosoftAjax.debug.js' */                _this._webRequest.completed(Sys.EventArgs.Empty);
/*Line 5952 - 'MicrosoftAjax.debug.js' */                if (_this._xmlHttpRequest != null) {
/*Line 5953 - 'MicrosoftAjax.debug.js' */                    _this._xmlHttpRequest.onreadystatechange = Function.emptyMethod;
/*Line 5954 - 'MicrosoftAjax.debug.js' */                    _this._xmlHttpRequest = null;
/*Line 5955 - 'MicrosoftAjax.debug.js' */                }
/*Line 5956 - 'MicrosoftAjax.debug.js' */        }
/*Line 5957 - 'MicrosoftAjax.debug.js' */    });
/*Line 5958 - 'MicrosoftAjax.debug.js' */    this._clearTimer = (function() {
/*Line 5959 - 'MicrosoftAjax.debug.js' */        if (_this._timer != null) {
/*Line 5960 - 'MicrosoftAjax.debug.js' */            window.clearTimeout(_this._timer);
/*Line 5961 - 'MicrosoftAjax.debug.js' */            _this._timer = null;
/*Line 5962 - 'MicrosoftAjax.debug.js' */        }
/*Line 5963 - 'MicrosoftAjax.debug.js' */    });
/*Line 5964 - 'MicrosoftAjax.debug.js' */    this._onTimeout = (function() {
/*Line 5965 - 'MicrosoftAjax.debug.js' */        if (!_this._responseAvailable) {
/*Line 5966 - 'MicrosoftAjax.debug.js' */            _this._clearTimer();
/*Line 5967 - 'MicrosoftAjax.debug.js' */            _this._timedOut = true;
/*Line 5968 - 'MicrosoftAjax.debug.js' */            _this._xmlHttpRequest.onreadystatechange = Function.emptyMethod;
/*Line 5969 - 'MicrosoftAjax.debug.js' */            _this._xmlHttpRequest.abort();
/*Line 5970 - 'MicrosoftAjax.debug.js' */            _this._webRequest.completed(Sys.EventArgs.Empty);
/*Line 5971 - 'MicrosoftAjax.debug.js' */            _this._xmlHttpRequest = null;
/*Line 5972 - 'MicrosoftAjax.debug.js' */        }
/*Line 5973 - 'MicrosoftAjax.debug.js' */    });
/*Line 5974 - 'MicrosoftAjax.debug.js' */}
/*Line 5975 - 'MicrosoftAjax.debug.js' */    function Sys$Net$XMLHttpExecutor$get_timedOut() {
/*Line 5976 - 'MicrosoftAjax.debug.js' */        /// <value type="Boolean" locid="P:J#Sys.Net.XMLHttpExecutor.timedOut"></value>
/*Line 5977 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5978 - 'MicrosoftAjax.debug.js' */        return this._timedOut;
/*Line 5979 - 'MicrosoftAjax.debug.js' */    }
/*Line 5980 - 'MicrosoftAjax.debug.js' */    function Sys$Net$XMLHttpExecutor$get_started() {
/*Line 5981 - 'MicrosoftAjax.debug.js' */        /// <value type="Boolean" locid="P:J#Sys.Net.XMLHttpExecutor.started"></value>
/*Line 5982 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5983 - 'MicrosoftAjax.debug.js' */        return this._started;
/*Line 5984 - 'MicrosoftAjax.debug.js' */    }
/*Line 5985 - 'MicrosoftAjax.debug.js' */    function Sys$Net$XMLHttpExecutor$get_responseAvailable() {
/*Line 5986 - 'MicrosoftAjax.debug.js' */        /// <value type="Boolean" locid="P:J#Sys.Net.XMLHttpExecutor.responseAvailable"></value>
/*Line 5987 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5988 - 'MicrosoftAjax.debug.js' */        return this._responseAvailable;
/*Line 5989 - 'MicrosoftAjax.debug.js' */    }
/*Line 5990 - 'MicrosoftAjax.debug.js' */    function Sys$Net$XMLHttpExecutor$get_aborted() {
/*Line 5991 - 'MicrosoftAjax.debug.js' */        /// <value type="Boolean" locid="P:J#Sys.Net.XMLHttpExecutor.aborted"></value>
/*Line 5992 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5993 - 'MicrosoftAjax.debug.js' */        return this._aborted;
/*Line 5994 - 'MicrosoftAjax.debug.js' */    }
/*Line 5995 - 'MicrosoftAjax.debug.js' */    function Sys$Net$XMLHttpExecutor$executeRequest() {
/*Line 5996 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Net.XMLHttpExecutor.executeRequest" />
/*Line 5997 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 5998 - 'MicrosoftAjax.debug.js' */        this._webRequest = this.get_webRequest();
/*Line 5999 - 'MicrosoftAjax.debug.js' */        if (this._started) {
/*Line 6000 - 'MicrosoftAjax.debug.js' */            throw Error.invalidOperation(String.format(Sys.Res.cannotCallOnceStarted, 'executeRequest'));
/*Line 6001 - 'MicrosoftAjax.debug.js' */        }
/*Line 6002 - 'MicrosoftAjax.debug.js' */        if (this._webRequest === null) {
/*Line 6003 - 'MicrosoftAjax.debug.js' */            throw Error.invalidOperation(Sys.Res.nullWebRequest);
/*Line 6004 - 'MicrosoftAjax.debug.js' */        }
/*Line 6005 - 'MicrosoftAjax.debug.js' */        var body = this._webRequest.get_body();
/*Line 6006 - 'MicrosoftAjax.debug.js' */        var headers = this._webRequest.get_headers();
/*Line 6007 - 'MicrosoftAjax.debug.js' */        this._xmlHttpRequest = new XMLHttpRequest();
/*Line 6008 - 'MicrosoftAjax.debug.js' */        this._xmlHttpRequest.onreadystatechange = this._onReadyStateChange;
/*Line 6009 - 'MicrosoftAjax.debug.js' */        var verb = this._webRequest.get_httpVerb();
/*Line 6010 - 'MicrosoftAjax.debug.js' */        this._xmlHttpRequest.open(verb, this._webRequest.getResolvedUrl(), true );
/*Line 6011 - 'MicrosoftAjax.debug.js' */        this._xmlHttpRequest.setRequestHeader("X-Requested-With", "XMLHttpRequest");
/*Line 6012 - 'MicrosoftAjax.debug.js' */        if (headers) {
/*Line 6013 - 'MicrosoftAjax.debug.js' */            for (var header in headers) {
/*Line 6014 - 'MicrosoftAjax.debug.js' */                var val = headers[header];
/*Line 6015 - 'MicrosoftAjax.debug.js' */                if (typeof(val) !== "function")
/*Line 6016 - 'MicrosoftAjax.debug.js' */                    this._xmlHttpRequest.setRequestHeader(header, val);
/*Line 6017 - 'MicrosoftAjax.debug.js' */            }
/*Line 6018 - 'MicrosoftAjax.debug.js' */        }
/*Line 6019 - 'MicrosoftAjax.debug.js' */        if (verb.toLowerCase() === "post") {
/*Line 6020 - 'MicrosoftAjax.debug.js' */            if ((headers === null) || !headers['Content-Type']) {
/*Line 6021 - 'MicrosoftAjax.debug.js' */                this._xmlHttpRequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=utf-8');
/*Line 6022 - 'MicrosoftAjax.debug.js' */            }
/*Line 6023 - 'MicrosoftAjax.debug.js' */            if (!body) {
/*Line 6024 - 'MicrosoftAjax.debug.js' */                body = "";
/*Line 6025 - 'MicrosoftAjax.debug.js' */            }
/*Line 6026 - 'MicrosoftAjax.debug.js' */        }
/*Line 6027 - 'MicrosoftAjax.debug.js' */        var timeout = this._webRequest.get_timeout();
/*Line 6028 - 'MicrosoftAjax.debug.js' */        if (timeout > 0) {
/*Line 6029 - 'MicrosoftAjax.debug.js' */            this._timer = window.setTimeout(Function.createDelegate(this, this._onTimeout), timeout);
/*Line 6030 - 'MicrosoftAjax.debug.js' */        }
/*Line 6031 - 'MicrosoftAjax.debug.js' */        this._xmlHttpRequest.send(body);
/*Line 6032 - 'MicrosoftAjax.debug.js' */        this._started = true;
/*Line 6033 - 'MicrosoftAjax.debug.js' */    }
/*Line 6034 - 'MicrosoftAjax.debug.js' */    function Sys$Net$XMLHttpExecutor$getResponseHeader(header) {
/*Line 6035 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Net.XMLHttpExecutor.getResponseHeader" />
/*Line 6036 - 'MicrosoftAjax.debug.js' */        /// <param name="header" type="String"></param>
/*Line 6037 - 'MicrosoftAjax.debug.js' */        /// <returns type="String"></returns>
/*Line 6038 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 6039 - 'MicrosoftAjax.debug.js' */            {name: "header", type: String}
/*Line 6040 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 6041 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 6042 - 'MicrosoftAjax.debug.js' */        if (!this._responseAvailable) {
/*Line 6043 - 'MicrosoftAjax.debug.js' */            throw Error.invalidOperation(String.format(Sys.Res.cannotCallBeforeResponse, 'getResponseHeader'));
/*Line 6044 - 'MicrosoftAjax.debug.js' */        }
/*Line 6045 - 'MicrosoftAjax.debug.js' */        if (!this._xmlHttpRequest) {
/*Line 6046 - 'MicrosoftAjax.debug.js' */            throw Error.invalidOperation(String.format(Sys.Res.cannotCallOutsideHandler, 'getResponseHeader'));
/*Line 6047 - 'MicrosoftAjax.debug.js' */        }
/*Line 6048 - 'MicrosoftAjax.debug.js' */        var result;
/*Line 6049 - 'MicrosoftAjax.debug.js' */        try {
/*Line 6050 - 'MicrosoftAjax.debug.js' */            result = this._xmlHttpRequest.getResponseHeader(header);
/*Line 6051 - 'MicrosoftAjax.debug.js' */        } catch (e) {
/*Line 6052 - 'MicrosoftAjax.debug.js' */        }
/*Line 6053 - 'MicrosoftAjax.debug.js' */        if (!result) result = "";
/*Line 6054 - 'MicrosoftAjax.debug.js' */        return result;
/*Line 6055 - 'MicrosoftAjax.debug.js' */    }
/*Line 6056 - 'MicrosoftAjax.debug.js' */    function Sys$Net$XMLHttpExecutor$getAllResponseHeaders() {
/*Line 6057 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Net.XMLHttpExecutor.getAllResponseHeaders" />
/*Line 6058 - 'MicrosoftAjax.debug.js' */        /// <returns type="String"></returns>
/*Line 6059 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6060 - 'MicrosoftAjax.debug.js' */        if (!this._responseAvailable) {
/*Line 6061 - 'MicrosoftAjax.debug.js' */            throw Error.invalidOperation(String.format(Sys.Res.cannotCallBeforeResponse, 'getAllResponseHeaders'));
/*Line 6062 - 'MicrosoftAjax.debug.js' */        }
/*Line 6063 - 'MicrosoftAjax.debug.js' */        if (!this._xmlHttpRequest) {
/*Line 6064 - 'MicrosoftAjax.debug.js' */            throw Error.invalidOperation(String.format(Sys.Res.cannotCallOutsideHandler, 'getAllResponseHeaders'));
/*Line 6065 - 'MicrosoftAjax.debug.js' */        }
/*Line 6066 - 'MicrosoftAjax.debug.js' */        return this._xmlHttpRequest.getAllResponseHeaders();
/*Line 6067 - 'MicrosoftAjax.debug.js' */    }
/*Line 6068 - 'MicrosoftAjax.debug.js' */    function Sys$Net$XMLHttpExecutor$get_responseData() {
/*Line 6069 - 'MicrosoftAjax.debug.js' */        /// <value type="String" locid="P:J#Sys.Net.XMLHttpExecutor.responseData"></value>
/*Line 6070 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6071 - 'MicrosoftAjax.debug.js' */        if (!this._responseAvailable) {
/*Line 6072 - 'MicrosoftAjax.debug.js' */            throw Error.invalidOperation(String.format(Sys.Res.cannotCallBeforeResponse, 'get_responseData'));
/*Line 6073 - 'MicrosoftAjax.debug.js' */        }
/*Line 6074 - 'MicrosoftAjax.debug.js' */        if (!this._xmlHttpRequest) {
/*Line 6075 - 'MicrosoftAjax.debug.js' */            throw Error.invalidOperation(String.format(Sys.Res.cannotCallOutsideHandler, 'get_responseData'));
/*Line 6076 - 'MicrosoftAjax.debug.js' */        }
/*Line 6077 - 'MicrosoftAjax.debug.js' */        return this._xmlHttpRequest.responseText;
/*Line 6078 - 'MicrosoftAjax.debug.js' */    }
/*Line 6079 - 'MicrosoftAjax.debug.js' */    function Sys$Net$XMLHttpExecutor$get_statusCode() {
/*Line 6080 - 'MicrosoftAjax.debug.js' */        /// <value type="Number" locid="P:J#Sys.Net.XMLHttpExecutor.statusCode"></value>
/*Line 6081 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6082 - 'MicrosoftAjax.debug.js' */        if (!this._responseAvailable) {
/*Line 6083 - 'MicrosoftAjax.debug.js' */            throw Error.invalidOperation(String.format(Sys.Res.cannotCallBeforeResponse, 'get_statusCode'));
/*Line 6084 - 'MicrosoftAjax.debug.js' */        }
/*Line 6085 - 'MicrosoftAjax.debug.js' */        if (!this._xmlHttpRequest) {
/*Line 6086 - 'MicrosoftAjax.debug.js' */            throw Error.invalidOperation(String.format(Sys.Res.cannotCallOutsideHandler, 'get_statusCode'));
/*Line 6087 - 'MicrosoftAjax.debug.js' */        }
/*Line 6088 - 'MicrosoftAjax.debug.js' */        var result = 0;
/*Line 6089 - 'MicrosoftAjax.debug.js' */        try {
/*Line 6090 - 'MicrosoftAjax.debug.js' */            result = this._xmlHttpRequest.status;
/*Line 6091 - 'MicrosoftAjax.debug.js' */        }
/*Line 6092 - 'MicrosoftAjax.debug.js' */        catch(ex) {
/*Line 6093 - 'MicrosoftAjax.debug.js' */        }
/*Line 6094 - 'MicrosoftAjax.debug.js' */        return result;
/*Line 6095 - 'MicrosoftAjax.debug.js' */    }
/*Line 6096 - 'MicrosoftAjax.debug.js' */    function Sys$Net$XMLHttpExecutor$get_statusText() {
/*Line 6097 - 'MicrosoftAjax.debug.js' */        /// <value type="String" locid="P:J#Sys.Net.XMLHttpExecutor.statusText"></value>
/*Line 6098 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6099 - 'MicrosoftAjax.debug.js' */        if (!this._responseAvailable) {
/*Line 6100 - 'MicrosoftAjax.debug.js' */            throw Error.invalidOperation(String.format(Sys.Res.cannotCallBeforeResponse, 'get_statusText'));
/*Line 6101 - 'MicrosoftAjax.debug.js' */        }
/*Line 6102 - 'MicrosoftAjax.debug.js' */        if (!this._xmlHttpRequest) {
/*Line 6103 - 'MicrosoftAjax.debug.js' */            throw Error.invalidOperation(String.format(Sys.Res.cannotCallOutsideHandler, 'get_statusText'));
/*Line 6104 - 'MicrosoftAjax.debug.js' */        }
/*Line 6105 - 'MicrosoftAjax.debug.js' */        return this._xmlHttpRequest.statusText;
/*Line 6106 - 'MicrosoftAjax.debug.js' */    }
/*Line 6107 - 'MicrosoftAjax.debug.js' */    function Sys$Net$XMLHttpExecutor$get_xml() {
/*Line 6108 - 'MicrosoftAjax.debug.js' */        /// <value locid="P:J#Sys.Net.XMLHttpExecutor.xml"></value>
/*Line 6109 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6110 - 'MicrosoftAjax.debug.js' */        if (!this._responseAvailable) {
/*Line 6111 - 'MicrosoftAjax.debug.js' */            throw Error.invalidOperation(String.format(Sys.Res.cannotCallBeforeResponse, 'get_xml'));
/*Line 6112 - 'MicrosoftAjax.debug.js' */        }
/*Line 6113 - 'MicrosoftAjax.debug.js' */        if (!this._xmlHttpRequest) {
/*Line 6114 - 'MicrosoftAjax.debug.js' */            throw Error.invalidOperation(String.format(Sys.Res.cannotCallOutsideHandler, 'get_xml'));
/*Line 6115 - 'MicrosoftAjax.debug.js' */        }
/*Line 6116 - 'MicrosoftAjax.debug.js' */        var xml = this._xmlHttpRequest.responseXML;
/*Line 6117 - 'MicrosoftAjax.debug.js' */        if (!xml || !xml.documentElement) {
/*Line 6118 - 'MicrosoftAjax.debug.js' */            xml = Sys.Net.XMLDOM(this._xmlHttpRequest.responseText);
/*Line 6119 - 'MicrosoftAjax.debug.js' */            if (!xml || !xml.documentElement)
/*Line 6120 - 'MicrosoftAjax.debug.js' */                return null;
/*Line 6121 - 'MicrosoftAjax.debug.js' */        }
/*Line 6122 - 'MicrosoftAjax.debug.js' */        else if (navigator.userAgent.indexOf('MSIE') !== -1) {
/*Line 6123 - 'MicrosoftAjax.debug.js' */            xml.setProperty('SelectionLanguage', 'XPath');
/*Line 6124 - 'MicrosoftAjax.debug.js' */        }
/*Line 6125 - 'MicrosoftAjax.debug.js' */        if (xml.documentElement.namespaceURI === "http://www.mozilla.org/newlayout/xml/parsererror.xml" &&
/*Line 6126 - 'MicrosoftAjax.debug.js' */            xml.documentElement.tagName === "parsererror") {
/*Line 6127 - 'MicrosoftAjax.debug.js' */            return null;
/*Line 6128 - 'MicrosoftAjax.debug.js' */        }
        
/*Line 6130 - 'MicrosoftAjax.debug.js' */        if (xml.documentElement.firstChild && xml.documentElement.firstChild.tagName === "parsererror") {
/*Line 6131 - 'MicrosoftAjax.debug.js' */            return null;
/*Line 6132 - 'MicrosoftAjax.debug.js' */        }
        
/*Line 6134 - 'MicrosoftAjax.debug.js' */        return xml;
/*Line 6135 - 'MicrosoftAjax.debug.js' */    }
/*Line 6136 - 'MicrosoftAjax.debug.js' */    function Sys$Net$XMLHttpExecutor$abort() {
/*Line 6137 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Net.XMLHttpExecutor.abort" />
/*Line 6138 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6139 - 'MicrosoftAjax.debug.js' */        if (!this._started) {
/*Line 6140 - 'MicrosoftAjax.debug.js' */            throw Error.invalidOperation(Sys.Res.cannotAbortBeforeStart);
/*Line 6141 - 'MicrosoftAjax.debug.js' */        }
/*Line 6142 - 'MicrosoftAjax.debug.js' */        if (this._aborted || this._responseAvailable || this._timedOut)
/*Line 6143 - 'MicrosoftAjax.debug.js' */            return;
/*Line 6144 - 'MicrosoftAjax.debug.js' */        this._aborted = true;
/*Line 6145 - 'MicrosoftAjax.debug.js' */        this._clearTimer();
/*Line 6146 - 'MicrosoftAjax.debug.js' */        if (this._xmlHttpRequest && !this._responseAvailable) {
/*Line 6147 - 'MicrosoftAjax.debug.js' */            this._xmlHttpRequest.onreadystatechange = Function.emptyMethod;
/*Line 6148 - 'MicrosoftAjax.debug.js' */            this._xmlHttpRequest.abort();
            
/*Line 6150 - 'MicrosoftAjax.debug.js' */            this._xmlHttpRequest = null;            
/*Line 6151 - 'MicrosoftAjax.debug.js' */            this._webRequest.completed(Sys.EventArgs.Empty);
/*Line 6152 - 'MicrosoftAjax.debug.js' */        }
/*Line 6153 - 'MicrosoftAjax.debug.js' */    }
/*Line 6154 - 'MicrosoftAjax.debug.js' */Sys.Net.XMLHttpExecutor.prototype = {
/*Line 6155 - 'MicrosoftAjax.debug.js' */    get_timedOut: Sys$Net$XMLHttpExecutor$get_timedOut,
/*Line 6156 - 'MicrosoftAjax.debug.js' */    get_started: Sys$Net$XMLHttpExecutor$get_started,
/*Line 6157 - 'MicrosoftAjax.debug.js' */    get_responseAvailable: Sys$Net$XMLHttpExecutor$get_responseAvailable,
/*Line 6158 - 'MicrosoftAjax.debug.js' */    get_aborted: Sys$Net$XMLHttpExecutor$get_aborted,
/*Line 6159 - 'MicrosoftAjax.debug.js' */    executeRequest: Sys$Net$XMLHttpExecutor$executeRequest,
/*Line 6160 - 'MicrosoftAjax.debug.js' */    getResponseHeader: Sys$Net$XMLHttpExecutor$getResponseHeader,
/*Line 6161 - 'MicrosoftAjax.debug.js' */    getAllResponseHeaders: Sys$Net$XMLHttpExecutor$getAllResponseHeaders,
/*Line 6162 - 'MicrosoftAjax.debug.js' */    get_responseData: Sys$Net$XMLHttpExecutor$get_responseData,
/*Line 6163 - 'MicrosoftAjax.debug.js' */    get_statusCode: Sys$Net$XMLHttpExecutor$get_statusCode,
/*Line 6164 - 'MicrosoftAjax.debug.js' */    get_statusText: Sys$Net$XMLHttpExecutor$get_statusText,
/*Line 6165 - 'MicrosoftAjax.debug.js' */    get_xml: Sys$Net$XMLHttpExecutor$get_xml,
/*Line 6166 - 'MicrosoftAjax.debug.js' */    abort: Sys$Net$XMLHttpExecutor$abort
/*Line 6167 - 'MicrosoftAjax.debug.js' */}
/*Line 6168 - 'MicrosoftAjax.debug.js' */Sys.Net.XMLHttpExecutor.registerClass('Sys.Net.XMLHttpExecutor', Sys.Net.WebRequestExecutor);
 
/*Line 6170 - 'MicrosoftAjax.debug.js' */Sys.Net._WebRequestManager = function Sys$Net$_WebRequestManager() {
/*Line 6171 - 'MicrosoftAjax.debug.js' */    /// <summary locid="P:J#Sys.Net.WebRequestManager.#ctor" />
/*Line 6172 - 'MicrosoftAjax.debug.js' */    if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6173 - 'MicrosoftAjax.debug.js' */    this._defaultTimeout = 0;
/*Line 6174 - 'MicrosoftAjax.debug.js' */    this._defaultExecutorType = "Sys.Net.XMLHttpExecutor";
/*Line 6175 - 'MicrosoftAjax.debug.js' */}
/*Line 6176 - 'MicrosoftAjax.debug.js' */    function Sys$Net$_WebRequestManager$add_invokingRequest(handler) {
/*Line 6177 - 'MicrosoftAjax.debug.js' */        /// <summary locid="E:J#Sys.Net.WebRequestManager.invokingRequest" />
/*Line 6178 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "handler", type: Function}]);
/*Line 6179 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 6180 - 'MicrosoftAjax.debug.js' */        this._get_eventHandlerList().addHandler("invokingRequest", handler);
/*Line 6181 - 'MicrosoftAjax.debug.js' */    }
/*Line 6182 - 'MicrosoftAjax.debug.js' */    function Sys$Net$_WebRequestManager$remove_invokingRequest(handler) {
/*Line 6183 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "handler", type: Function}]);
/*Line 6184 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 6185 - 'MicrosoftAjax.debug.js' */        this._get_eventHandlerList().removeHandler("invokingRequest", handler);
/*Line 6186 - 'MicrosoftAjax.debug.js' */    }
/*Line 6187 - 'MicrosoftAjax.debug.js' */    function Sys$Net$_WebRequestManager$add_completedRequest(handler) {
/*Line 6188 - 'MicrosoftAjax.debug.js' */        /// <summary locid="E:J#Sys.Net.WebRequestManager.completedRequest" />
/*Line 6189 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "handler", type: Function}]);
/*Line 6190 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 6191 - 'MicrosoftAjax.debug.js' */        this._get_eventHandlerList().addHandler("completedRequest", handler);
/*Line 6192 - 'MicrosoftAjax.debug.js' */    }
/*Line 6193 - 'MicrosoftAjax.debug.js' */    function Sys$Net$_WebRequestManager$remove_completedRequest(handler) {
/*Line 6194 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "handler", type: Function}]);
/*Line 6195 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 6196 - 'MicrosoftAjax.debug.js' */        this._get_eventHandlerList().removeHandler("completedRequest", handler);
/*Line 6197 - 'MicrosoftAjax.debug.js' */    }
/*Line 6198 - 'MicrosoftAjax.debug.js' */    function Sys$Net$_WebRequestManager$_get_eventHandlerList() {
/*Line 6199 - 'MicrosoftAjax.debug.js' */        if (!this._events) {
/*Line 6200 - 'MicrosoftAjax.debug.js' */            this._events = new Sys.EventHandlerList();
/*Line 6201 - 'MicrosoftAjax.debug.js' */        }
/*Line 6202 - 'MicrosoftAjax.debug.js' */        return this._events;
/*Line 6203 - 'MicrosoftAjax.debug.js' */    }
/*Line 6204 - 'MicrosoftAjax.debug.js' */    function Sys$Net$_WebRequestManager$get_defaultTimeout() {
/*Line 6205 - 'MicrosoftAjax.debug.js' */        /// <value type="Number" locid="P:J#Sys.Net.WebRequestManager.defaultTimeout"></value>
/*Line 6206 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6207 - 'MicrosoftAjax.debug.js' */        return this._defaultTimeout;
/*Line 6208 - 'MicrosoftAjax.debug.js' */    }
/*Line 6209 - 'MicrosoftAjax.debug.js' */    function Sys$Net$_WebRequestManager$set_defaultTimeout(value) {
/*Line 6210 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "value", type: Number}]);
/*Line 6211 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 6212 - 'MicrosoftAjax.debug.js' */        if (value < 0) {
/*Line 6213 - 'MicrosoftAjax.debug.js' */            throw Error.argumentOutOfRange("value", value, Sys.Res.invalidTimeout);
/*Line 6214 - 'MicrosoftAjax.debug.js' */        }
/*Line 6215 - 'MicrosoftAjax.debug.js' */        this._defaultTimeout = value;
/*Line 6216 - 'MicrosoftAjax.debug.js' */    }
/*Line 6217 - 'MicrosoftAjax.debug.js' */    function Sys$Net$_WebRequestManager$get_defaultExecutorType() {
/*Line 6218 - 'MicrosoftAjax.debug.js' */        /// <value type="String" locid="P:J#Sys.Net.WebRequestManager.defaultExecutorType"></value>
/*Line 6219 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6220 - 'MicrosoftAjax.debug.js' */        return this._defaultExecutorType;
/*Line 6221 - 'MicrosoftAjax.debug.js' */    }
/*Line 6222 - 'MicrosoftAjax.debug.js' */    function Sys$Net$_WebRequestManager$set_defaultExecutorType(value) {
/*Line 6223 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "value", type: String}]);
/*Line 6224 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 6225 - 'MicrosoftAjax.debug.js' */        this._defaultExecutorType = value;
/*Line 6226 - 'MicrosoftAjax.debug.js' */    }
/*Line 6227 - 'MicrosoftAjax.debug.js' */    function Sys$Net$_WebRequestManager$executeRequest(webRequest) {
/*Line 6228 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Net.WebRequestManager.executeRequest" />
/*Line 6229 - 'MicrosoftAjax.debug.js' */        /// <param name="webRequest" type="Sys.Net.WebRequest"></param>
/*Line 6230 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 6231 - 'MicrosoftAjax.debug.js' */            {name: "webRequest", type: Sys.Net.WebRequest}
/*Line 6232 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 6233 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 6234 - 'MicrosoftAjax.debug.js' */        var executor = webRequest.get_executor();
/*Line 6235 - 'MicrosoftAjax.debug.js' */        if (!executor) {
/*Line 6236 - 'MicrosoftAjax.debug.js' */            var failed = false;
/*Line 6237 - 'MicrosoftAjax.debug.js' */            try {
/*Line 6238 - 'MicrosoftAjax.debug.js' */                var executorType = eval(this._defaultExecutorType);
/*Line 6239 - 'MicrosoftAjax.debug.js' */                executor = new executorType();
/*Line 6240 - 'MicrosoftAjax.debug.js' */            } catch (e) {
/*Line 6241 - 'MicrosoftAjax.debug.js' */                failed = true;
/*Line 6242 - 'MicrosoftAjax.debug.js' */            }
/*Line 6243 - 'MicrosoftAjax.debug.js' */            if (failed  || !Sys.Net.WebRequestExecutor.isInstanceOfType(executor) || !executor) {
/*Line 6244 - 'MicrosoftAjax.debug.js' */                throw Error.argument("defaultExecutorType", String.format(Sys.Res.invalidExecutorType, this._defaultExecutorType));
/*Line 6245 - 'MicrosoftAjax.debug.js' */            }
/*Line 6246 - 'MicrosoftAjax.debug.js' */            webRequest.set_executor(executor);
/*Line 6247 - 'MicrosoftAjax.debug.js' */        }
/*Line 6248 - 'MicrosoftAjax.debug.js' */        if (executor.get_aborted()) {
/*Line 6249 - 'MicrosoftAjax.debug.js' */            return;
/*Line 6250 - 'MicrosoftAjax.debug.js' */        }
/*Line 6251 - 'MicrosoftAjax.debug.js' */        var evArgs = new Sys.Net.NetworkRequestEventArgs(webRequest);
/*Line 6252 - 'MicrosoftAjax.debug.js' */        var handler = this._get_eventHandlerList().getHandler("invokingRequest");
/*Line 6253 - 'MicrosoftAjax.debug.js' */        if (handler) {
/*Line 6254 - 'MicrosoftAjax.debug.js' */            handler(this, evArgs);
/*Line 6255 - 'MicrosoftAjax.debug.js' */        }
/*Line 6256 - 'MicrosoftAjax.debug.js' */        if (!evArgs.get_cancel()) {
/*Line 6257 - 'MicrosoftAjax.debug.js' */            executor.executeRequest();
/*Line 6258 - 'MicrosoftAjax.debug.js' */        }
/*Line 6259 - 'MicrosoftAjax.debug.js' */    }
/*Line 6260 - 'MicrosoftAjax.debug.js' */Sys.Net._WebRequestManager.prototype = {
/*Line 6261 - 'MicrosoftAjax.debug.js' */    add_invokingRequest: Sys$Net$_WebRequestManager$add_invokingRequest,
/*Line 6262 - 'MicrosoftAjax.debug.js' */    remove_invokingRequest: Sys$Net$_WebRequestManager$remove_invokingRequest,
/*Line 6263 - 'MicrosoftAjax.debug.js' */    add_completedRequest: Sys$Net$_WebRequestManager$add_completedRequest,
/*Line 6264 - 'MicrosoftAjax.debug.js' */    remove_completedRequest: Sys$Net$_WebRequestManager$remove_completedRequest,
/*Line 6265 - 'MicrosoftAjax.debug.js' */    _get_eventHandlerList: Sys$Net$_WebRequestManager$_get_eventHandlerList,
/*Line 6266 - 'MicrosoftAjax.debug.js' */    get_defaultTimeout: Sys$Net$_WebRequestManager$get_defaultTimeout,
/*Line 6267 - 'MicrosoftAjax.debug.js' */    set_defaultTimeout: Sys$Net$_WebRequestManager$set_defaultTimeout,
/*Line 6268 - 'MicrosoftAjax.debug.js' */    get_defaultExecutorType: Sys$Net$_WebRequestManager$get_defaultExecutorType,
/*Line 6269 - 'MicrosoftAjax.debug.js' */    set_defaultExecutorType: Sys$Net$_WebRequestManager$set_defaultExecutorType,
/*Line 6270 - 'MicrosoftAjax.debug.js' */    executeRequest: Sys$Net$_WebRequestManager$executeRequest
/*Line 6271 - 'MicrosoftAjax.debug.js' */}
/*Line 6272 - 'MicrosoftAjax.debug.js' */Sys.Net._WebRequestManager.registerClass('Sys.Net._WebRequestManager');
/*Line 6273 - 'MicrosoftAjax.debug.js' */Sys.Net.WebRequestManager = new Sys.Net._WebRequestManager();
 
/*Line 6275 - 'MicrosoftAjax.debug.js' */Sys.Net.NetworkRequestEventArgs = function Sys$Net$NetworkRequestEventArgs(webRequest) {
/*Line 6276 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Net.NetworkRequestEventArgs.#ctor" />
/*Line 6277 - 'MicrosoftAjax.debug.js' */    /// <param name="webRequest" type="Sys.Net.WebRequest"></param>
/*Line 6278 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 6279 - 'MicrosoftAjax.debug.js' */        {name: "webRequest", type: Sys.Net.WebRequest}
/*Line 6280 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 6281 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 6282 - 'MicrosoftAjax.debug.js' */    Sys.Net.NetworkRequestEventArgs.initializeBase(this);
/*Line 6283 - 'MicrosoftAjax.debug.js' */    this._webRequest = webRequest;
/*Line 6284 - 'MicrosoftAjax.debug.js' */}
/*Line 6285 - 'MicrosoftAjax.debug.js' */    function Sys$Net$NetworkRequestEventArgs$get_webRequest() {
/*Line 6286 - 'MicrosoftAjax.debug.js' */        /// <value type="Sys.Net.WebRequest" locid="P:J#Sys.Net.NetworkRequestEventArgs.webRequest"></value>
/*Line 6287 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6288 - 'MicrosoftAjax.debug.js' */        return this._webRequest;
/*Line 6289 - 'MicrosoftAjax.debug.js' */    }
/*Line 6290 - 'MicrosoftAjax.debug.js' */Sys.Net.NetworkRequestEventArgs.prototype = {
/*Line 6291 - 'MicrosoftAjax.debug.js' */    get_webRequest: Sys$Net$NetworkRequestEventArgs$get_webRequest
/*Line 6292 - 'MicrosoftAjax.debug.js' */}
/*Line 6293 - 'MicrosoftAjax.debug.js' */Sys.Net.NetworkRequestEventArgs.registerClass('Sys.Net.NetworkRequestEventArgs', Sys.CancelEventArgs);
 
/*Line 6295 - 'MicrosoftAjax.debug.js' */Sys.Net.WebRequest = function Sys$Net$WebRequest() {
/*Line 6296 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Net.WebRequest.#ctor" />
/*Line 6297 - 'MicrosoftAjax.debug.js' */    if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6298 - 'MicrosoftAjax.debug.js' */    this._url = "";
/*Line 6299 - 'MicrosoftAjax.debug.js' */    this._headers = { };
/*Line 6300 - 'MicrosoftAjax.debug.js' */    this._body = null;
/*Line 6301 - 'MicrosoftAjax.debug.js' */    this._userContext = null;
/*Line 6302 - 'MicrosoftAjax.debug.js' */    this._httpVerb = null;
/*Line 6303 - 'MicrosoftAjax.debug.js' */    this._executor = null;
/*Line 6304 - 'MicrosoftAjax.debug.js' */    this._invokeCalled = false;
/*Line 6305 - 'MicrosoftAjax.debug.js' */    this._timeout = 0;
/*Line 6306 - 'MicrosoftAjax.debug.js' */}
/*Line 6307 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequest$add_completed(handler) {
/*Line 6308 - 'MicrosoftAjax.debug.js' */    /// <summary locid="E:J#Sys.Net.WebRequest.completed" />
/*Line 6309 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [{name: "handler", type: Function}]);
/*Line 6310 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 6311 - 'MicrosoftAjax.debug.js' */        this._get_eventHandlerList().addHandler("completed", handler);
/*Line 6312 - 'MicrosoftAjax.debug.js' */    }
/*Line 6313 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequest$remove_completed(handler) {
/*Line 6314 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [{name: "handler", type: Function}]);
/*Line 6315 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 6316 - 'MicrosoftAjax.debug.js' */        this._get_eventHandlerList().removeHandler("completed", handler);
/*Line 6317 - 'MicrosoftAjax.debug.js' */    }
/*Line 6318 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequest$completed(eventArgs) {
/*Line 6319 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Net.WebRequest.completed" />
/*Line 6320 - 'MicrosoftAjax.debug.js' */        /// <param name="eventArgs" type="Sys.EventArgs"></param>
/*Line 6321 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 6322 - 'MicrosoftAjax.debug.js' */            {name: "eventArgs", type: Sys.EventArgs}
/*Line 6323 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 6324 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 6325 - 'MicrosoftAjax.debug.js' */        var handler = Sys.Net.WebRequestManager._get_eventHandlerList().getHandler("completedRequest");
/*Line 6326 - 'MicrosoftAjax.debug.js' */        if (handler) {
/*Line 6327 - 'MicrosoftAjax.debug.js' */            handler(this._executor, eventArgs);
/*Line 6328 - 'MicrosoftAjax.debug.js' */        }
/*Line 6329 - 'MicrosoftAjax.debug.js' */        handler = this._get_eventHandlerList().getHandler("completed");
/*Line 6330 - 'MicrosoftAjax.debug.js' */        if (handler) {
/*Line 6331 - 'MicrosoftAjax.debug.js' */            handler(this._executor, eventArgs);
/*Line 6332 - 'MicrosoftAjax.debug.js' */        }
/*Line 6333 - 'MicrosoftAjax.debug.js' */    }
/*Line 6334 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequest$_get_eventHandlerList() {
/*Line 6335 - 'MicrosoftAjax.debug.js' */        if (!this._events) {
/*Line 6336 - 'MicrosoftAjax.debug.js' */            this._events = new Sys.EventHandlerList();
/*Line 6337 - 'MicrosoftAjax.debug.js' */        }
/*Line 6338 - 'MicrosoftAjax.debug.js' */        return this._events;
/*Line 6339 - 'MicrosoftAjax.debug.js' */    }
/*Line 6340 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequest$get_url() {
/*Line 6341 - 'MicrosoftAjax.debug.js' */        /// <value type="String" locid="P:J#Sys.Net.WebRequest.url"></value>
/*Line 6342 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6343 - 'MicrosoftAjax.debug.js' */        return this._url;
/*Line 6344 - 'MicrosoftAjax.debug.js' */    }
/*Line 6345 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequest$set_url(value) {
/*Line 6346 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "value", type: String}]);
/*Line 6347 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 6348 - 'MicrosoftAjax.debug.js' */        this._url = value;
/*Line 6349 - 'MicrosoftAjax.debug.js' */    }
/*Line 6350 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequest$get_headers() {
/*Line 6351 - 'MicrosoftAjax.debug.js' */        /// <value locid="P:J#Sys.Net.WebRequest.headers"></value>
/*Line 6352 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6353 - 'MicrosoftAjax.debug.js' */        return this._headers;
/*Line 6354 - 'MicrosoftAjax.debug.js' */    }
/*Line 6355 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequest$get_httpVerb() {
/*Line 6356 - 'MicrosoftAjax.debug.js' */        /// <value type="String" locid="P:J#Sys.Net.WebRequest.httpVerb"></value>
/*Line 6357 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6358 - 'MicrosoftAjax.debug.js' */        if (this._httpVerb === null) {
/*Line 6359 - 'MicrosoftAjax.debug.js' */            if (this._body === null) {
/*Line 6360 - 'MicrosoftAjax.debug.js' */                return "GET";
/*Line 6361 - 'MicrosoftAjax.debug.js' */            }
/*Line 6362 - 'MicrosoftAjax.debug.js' */            return "POST";
/*Line 6363 - 'MicrosoftAjax.debug.js' */        }
/*Line 6364 - 'MicrosoftAjax.debug.js' */        return this._httpVerb;
/*Line 6365 - 'MicrosoftAjax.debug.js' */    }
/*Line 6366 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequest$set_httpVerb(value) {
/*Line 6367 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "value", type: String}]);
/*Line 6368 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 6369 - 'MicrosoftAjax.debug.js' */        if (value.length === 0) {
/*Line 6370 - 'MicrosoftAjax.debug.js' */            throw Error.argument('value', Sys.Res.invalidHttpVerb);
/*Line 6371 - 'MicrosoftAjax.debug.js' */        }
/*Line 6372 - 'MicrosoftAjax.debug.js' */        this._httpVerb = value;
/*Line 6373 - 'MicrosoftAjax.debug.js' */    }
/*Line 6374 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequest$get_body() {
/*Line 6375 - 'MicrosoftAjax.debug.js' */        /// <value mayBeNull="true" locid="P:J#Sys.Net.WebRequest.body"></value>
/*Line 6376 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6377 - 'MicrosoftAjax.debug.js' */        return this._body;
/*Line 6378 - 'MicrosoftAjax.debug.js' */    }
/*Line 6379 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequest$set_body(value) {
/*Line 6380 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "value", mayBeNull: true}]);
/*Line 6381 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 6382 - 'MicrosoftAjax.debug.js' */        this._body = value;
/*Line 6383 - 'MicrosoftAjax.debug.js' */    }
/*Line 6384 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequest$get_userContext() {
/*Line 6385 - 'MicrosoftAjax.debug.js' */        /// <value mayBeNull="true" locid="P:J#Sys.Net.WebRequest.userContext"></value>
/*Line 6386 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6387 - 'MicrosoftAjax.debug.js' */        return this._userContext;
/*Line 6388 - 'MicrosoftAjax.debug.js' */    }
/*Line 6389 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequest$set_userContext(value) {
/*Line 6390 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "value", mayBeNull: true}]);
/*Line 6391 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 6392 - 'MicrosoftAjax.debug.js' */        this._userContext = value;
/*Line 6393 - 'MicrosoftAjax.debug.js' */    }
/*Line 6394 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequest$get_executor() {
/*Line 6395 - 'MicrosoftAjax.debug.js' */        /// <value type="Sys.Net.WebRequestExecutor" locid="P:J#Sys.Net.WebRequest.executor"></value>
/*Line 6396 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6397 - 'MicrosoftAjax.debug.js' */        return this._executor;
/*Line 6398 - 'MicrosoftAjax.debug.js' */    }
/*Line 6399 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequest$set_executor(value) {
/*Line 6400 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "value", type: Sys.Net.WebRequestExecutor}]);
/*Line 6401 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 6402 - 'MicrosoftAjax.debug.js' */        if (this._executor !== null && this._executor.get_started()) {
/*Line 6403 - 'MicrosoftAjax.debug.js' */            throw Error.invalidOperation(Sys.Res.setExecutorAfterActive);
/*Line 6404 - 'MicrosoftAjax.debug.js' */        }
/*Line 6405 - 'MicrosoftAjax.debug.js' */        this._executor = value;
/*Line 6406 - 'MicrosoftAjax.debug.js' */        this._executor._set_webRequest(this);
/*Line 6407 - 'MicrosoftAjax.debug.js' */    }
/*Line 6408 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequest$get_timeout() {
/*Line 6409 - 'MicrosoftAjax.debug.js' */        /// <value type="Number" locid="P:J#Sys.Net.WebRequest.timeout"></value>
/*Line 6410 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6411 - 'MicrosoftAjax.debug.js' */        if (this._timeout === 0) {
/*Line 6412 - 'MicrosoftAjax.debug.js' */            return Sys.Net.WebRequestManager.get_defaultTimeout();
/*Line 6413 - 'MicrosoftAjax.debug.js' */        }
/*Line 6414 - 'MicrosoftAjax.debug.js' */        return this._timeout;
/*Line 6415 - 'MicrosoftAjax.debug.js' */    }
/*Line 6416 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequest$set_timeout(value) {
/*Line 6417 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "value", type: Number}]);
/*Line 6418 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 6419 - 'MicrosoftAjax.debug.js' */        if (value < 0) {
/*Line 6420 - 'MicrosoftAjax.debug.js' */            throw Error.argumentOutOfRange("value", value, Sys.Res.invalidTimeout);
/*Line 6421 - 'MicrosoftAjax.debug.js' */        }
/*Line 6422 - 'MicrosoftAjax.debug.js' */        this._timeout = value;
/*Line 6423 - 'MicrosoftAjax.debug.js' */    }
/*Line 6424 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequest$getResolvedUrl() {
/*Line 6425 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Net.WebRequest.getResolvedUrl" />
/*Line 6426 - 'MicrosoftAjax.debug.js' */        /// <returns type="String"></returns>
/*Line 6427 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6428 - 'MicrosoftAjax.debug.js' */        return Sys.Net.WebRequest._resolveUrl(this._url);
/*Line 6429 - 'MicrosoftAjax.debug.js' */    }
/*Line 6430 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebRequest$invoke() {
/*Line 6431 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Net.WebRequest.invoke" />
/*Line 6432 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6433 - 'MicrosoftAjax.debug.js' */        if (this._invokeCalled) {
/*Line 6434 - 'MicrosoftAjax.debug.js' */            throw Error.invalidOperation(Sys.Res.invokeCalledTwice);
/*Line 6435 - 'MicrosoftAjax.debug.js' */        }
/*Line 6436 - 'MicrosoftAjax.debug.js' */        Sys.Net.WebRequestManager.executeRequest(this);
/*Line 6437 - 'MicrosoftAjax.debug.js' */        this._invokeCalled = true;
/*Line 6438 - 'MicrosoftAjax.debug.js' */    }
/*Line 6439 - 'MicrosoftAjax.debug.js' */Sys.Net.WebRequest.prototype = {
/*Line 6440 - 'MicrosoftAjax.debug.js' */    add_completed: Sys$Net$WebRequest$add_completed,
/*Line 6441 - 'MicrosoftAjax.debug.js' */    remove_completed: Sys$Net$WebRequest$remove_completed,
/*Line 6442 - 'MicrosoftAjax.debug.js' */    completed: Sys$Net$WebRequest$completed,
/*Line 6443 - 'MicrosoftAjax.debug.js' */    _get_eventHandlerList: Sys$Net$WebRequest$_get_eventHandlerList,
/*Line 6444 - 'MicrosoftAjax.debug.js' */    get_url: Sys$Net$WebRequest$get_url,
/*Line 6445 - 'MicrosoftAjax.debug.js' */    set_url: Sys$Net$WebRequest$set_url,
/*Line 6446 - 'MicrosoftAjax.debug.js' */    get_headers: Sys$Net$WebRequest$get_headers,
/*Line 6447 - 'MicrosoftAjax.debug.js' */    get_httpVerb: Sys$Net$WebRequest$get_httpVerb,
/*Line 6448 - 'MicrosoftAjax.debug.js' */    set_httpVerb: Sys$Net$WebRequest$set_httpVerb,
/*Line 6449 - 'MicrosoftAjax.debug.js' */    get_body: Sys$Net$WebRequest$get_body,
/*Line 6450 - 'MicrosoftAjax.debug.js' */    set_body: Sys$Net$WebRequest$set_body,
/*Line 6451 - 'MicrosoftAjax.debug.js' */    get_userContext: Sys$Net$WebRequest$get_userContext,
/*Line 6452 - 'MicrosoftAjax.debug.js' */    set_userContext: Sys$Net$WebRequest$set_userContext,
/*Line 6453 - 'MicrosoftAjax.debug.js' */    get_executor: Sys$Net$WebRequest$get_executor,
/*Line 6454 - 'MicrosoftAjax.debug.js' */    set_executor: Sys$Net$WebRequest$set_executor,
/*Line 6455 - 'MicrosoftAjax.debug.js' */    get_timeout: Sys$Net$WebRequest$get_timeout,
/*Line 6456 - 'MicrosoftAjax.debug.js' */    set_timeout: Sys$Net$WebRequest$set_timeout,
/*Line 6457 - 'MicrosoftAjax.debug.js' */    getResolvedUrl: Sys$Net$WebRequest$getResolvedUrl,
/*Line 6458 - 'MicrosoftAjax.debug.js' */    invoke: Sys$Net$WebRequest$invoke
/*Line 6459 - 'MicrosoftAjax.debug.js' */}
/*Line 6460 - 'MicrosoftAjax.debug.js' */Sys.Net.WebRequest._resolveUrl = function Sys$Net$WebRequest$_resolveUrl(url, baseUrl) {
/*Line 6461 - 'MicrosoftAjax.debug.js' */    if (url && url.indexOf('://') !== -1) {
/*Line 6462 - 'MicrosoftAjax.debug.js' */        return url;
/*Line 6463 - 'MicrosoftAjax.debug.js' */    }
/*Line 6464 - 'MicrosoftAjax.debug.js' */    if (!baseUrl || baseUrl.length === 0) {
/*Line 6465 - 'MicrosoftAjax.debug.js' */        var baseElement = document.getElementsByTagName('base')[0];
/*Line 6466 - 'MicrosoftAjax.debug.js' */        if (baseElement && baseElement.href && baseElement.href.length > 0) {
/*Line 6467 - 'MicrosoftAjax.debug.js' */            baseUrl = baseElement.href;
/*Line 6468 - 'MicrosoftAjax.debug.js' */        }
/*Line 6469 - 'MicrosoftAjax.debug.js' */        else {
/*Line 6470 - 'MicrosoftAjax.debug.js' */            baseUrl = document.URL;
/*Line 6471 - 'MicrosoftAjax.debug.js' */        }
/*Line 6472 - 'MicrosoftAjax.debug.js' */    }
/*Line 6473 - 'MicrosoftAjax.debug.js' */    var qsStart = baseUrl.indexOf('?');
/*Line 6474 - 'MicrosoftAjax.debug.js' */    if (qsStart !== -1) {
/*Line 6475 - 'MicrosoftAjax.debug.js' */        baseUrl = baseUrl.substr(0, qsStart);
/*Line 6476 - 'MicrosoftAjax.debug.js' */    }
/*Line 6477 - 'MicrosoftAjax.debug.js' */    qsStart = baseUrl.indexOf('#');
/*Line 6478 - 'MicrosoftAjax.debug.js' */    if (qsStart !== -1) {
/*Line 6479 - 'MicrosoftAjax.debug.js' */        baseUrl = baseUrl.substr(0, qsStart);
/*Line 6480 - 'MicrosoftAjax.debug.js' */    }
/*Line 6481 - 'MicrosoftAjax.debug.js' */    baseUrl = baseUrl.substr(0, baseUrl.lastIndexOf('/') + 1);
/*Line 6482 - 'MicrosoftAjax.debug.js' */    if (!url || url.length === 0) {
/*Line 6483 - 'MicrosoftAjax.debug.js' */        return baseUrl;
/*Line 6484 - 'MicrosoftAjax.debug.js' */    }
/*Line 6485 - 'MicrosoftAjax.debug.js' */    if (url.charAt(0) === '/') {
/*Line 6486 - 'MicrosoftAjax.debug.js' */        var slashslash = baseUrl.indexOf('://');
/*Line 6487 - 'MicrosoftAjax.debug.js' */        if (slashslash === -1) {
/*Line 6488 - 'MicrosoftAjax.debug.js' */            throw Error.argument("baseUrl", Sys.Res.badBaseUrl1);
/*Line 6489 - 'MicrosoftAjax.debug.js' */        }
/*Line 6490 - 'MicrosoftAjax.debug.js' */        var nextSlash = baseUrl.indexOf('/', slashslash + 3);
/*Line 6491 - 'MicrosoftAjax.debug.js' */        if (nextSlash === -1) {
/*Line 6492 - 'MicrosoftAjax.debug.js' */            throw Error.argument("baseUrl", Sys.Res.badBaseUrl2);
/*Line 6493 - 'MicrosoftAjax.debug.js' */        }
/*Line 6494 - 'MicrosoftAjax.debug.js' */        return baseUrl.substr(0, nextSlash) + url;
/*Line 6495 - 'MicrosoftAjax.debug.js' */    }
/*Line 6496 - 'MicrosoftAjax.debug.js' */    else {
/*Line 6497 - 'MicrosoftAjax.debug.js' */        var lastSlash = baseUrl.lastIndexOf('/');
/*Line 6498 - 'MicrosoftAjax.debug.js' */        if (lastSlash === -1) {
/*Line 6499 - 'MicrosoftAjax.debug.js' */            throw Error.argument("baseUrl", Sys.Res.badBaseUrl3);
/*Line 6500 - 'MicrosoftAjax.debug.js' */        }
/*Line 6501 - 'MicrosoftAjax.debug.js' */        return baseUrl.substr(0, lastSlash+1) + url;
/*Line 6502 - 'MicrosoftAjax.debug.js' */    }
/*Line 6503 - 'MicrosoftAjax.debug.js' */}
/*Line 6504 - 'MicrosoftAjax.debug.js' */Sys.Net.WebRequest._createQueryString = function Sys$Net$WebRequest$_createQueryString(queryString, encodeMethod, addParams) {
/*Line 6505 - 'MicrosoftAjax.debug.js' */    encodeMethod = encodeMethod || encodeURIComponent;
/*Line 6506 - 'MicrosoftAjax.debug.js' */    var i = 0, obj, val, arg, sb = new Sys.StringBuilder();
/*Line 6507 - 'MicrosoftAjax.debug.js' */    if (queryString) {
/*Line 6508 - 'MicrosoftAjax.debug.js' */        for (arg in queryString) {
/*Line 6509 - 'MicrosoftAjax.debug.js' */            obj = queryString[arg];
/*Line 6510 - 'MicrosoftAjax.debug.js' */            if (typeof(obj) === "function") continue;
/*Line 6511 - 'MicrosoftAjax.debug.js' */            val = Sys.Serialization.JavaScriptSerializer.serialize(obj);
/*Line 6512 - 'MicrosoftAjax.debug.js' */            if (i++) {
/*Line 6513 - 'MicrosoftAjax.debug.js' */                sb.append('&');
/*Line 6514 - 'MicrosoftAjax.debug.js' */            }
/*Line 6515 - 'MicrosoftAjax.debug.js' */            sb.append(arg);
/*Line 6516 - 'MicrosoftAjax.debug.js' */            sb.append('=');
/*Line 6517 - 'MicrosoftAjax.debug.js' */            sb.append(encodeMethod(val));
/*Line 6518 - 'MicrosoftAjax.debug.js' */        }
/*Line 6519 - 'MicrosoftAjax.debug.js' */    }
/*Line 6520 - 'MicrosoftAjax.debug.js' */    if (addParams) {
/*Line 6521 - 'MicrosoftAjax.debug.js' */        if (i) {
/*Line 6522 - 'MicrosoftAjax.debug.js' */            sb.append('&');
/*Line 6523 - 'MicrosoftAjax.debug.js' */        }
/*Line 6524 - 'MicrosoftAjax.debug.js' */        sb.append(addParams);
/*Line 6525 - 'MicrosoftAjax.debug.js' */    }
/*Line 6526 - 'MicrosoftAjax.debug.js' */    return sb.toString();
/*Line 6527 - 'MicrosoftAjax.debug.js' */}
/*Line 6528 - 'MicrosoftAjax.debug.js' */Sys.Net.WebRequest._createUrl = function Sys$Net$WebRequest$_createUrl(url, queryString, addParams) {
/*Line 6529 - 'MicrosoftAjax.debug.js' */    if (!queryString && !addParams) {
/*Line 6530 - 'MicrosoftAjax.debug.js' */        return url;
/*Line 6531 - 'MicrosoftAjax.debug.js' */    }
/*Line 6532 - 'MicrosoftAjax.debug.js' */    var qs = Sys.Net.WebRequest._createQueryString(queryString, null, addParams);
/*Line 6533 - 'MicrosoftAjax.debug.js' */    return qs.length
/*Line 6534 - 'MicrosoftAjax.debug.js' */        ? url + ((url && url.indexOf('?') >= 0) ? "&" : "?") + qs
/*Line 6535 - 'MicrosoftAjax.debug.js' */        : url;
/*Line 6536 - 'MicrosoftAjax.debug.js' */}
/*Line 6537 - 'MicrosoftAjax.debug.js' */Sys.Net.WebRequest.registerClass('Sys.Net.WebRequest');
 
/*Line 6539 - 'MicrosoftAjax.debug.js' */Sys._ScriptLoaderTask = function Sys$_ScriptLoaderTask(scriptElement, completedCallback) {
/*Line 6540 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys._ScriptLoaderTask.#ctor" />
/*Line 6541 - 'MicrosoftAjax.debug.js' */    /// <param name="scriptElement" domElement="true"></param>
/*Line 6542 - 'MicrosoftAjax.debug.js' */    /// <param name="completedCallback" type="Function"></param>
/*Line 6543 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 6544 - 'MicrosoftAjax.debug.js' */        {name: "scriptElement", domElement: true},
/*Line 6545 - 'MicrosoftAjax.debug.js' */        {name: "completedCallback", type: Function}
/*Line 6546 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 6547 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 6548 - 'MicrosoftAjax.debug.js' */    this._scriptElement = scriptElement;
/*Line 6549 - 'MicrosoftAjax.debug.js' */    this._completedCallback = completedCallback;
/*Line 6550 - 'MicrosoftAjax.debug.js' */}
/*Line 6551 - 'MicrosoftAjax.debug.js' */    function Sys$_ScriptLoaderTask$get_scriptElement() {
/*Line 6552 - 'MicrosoftAjax.debug.js' */        /// <value domElement="true" locid="P:J#Sys._ScriptLoaderTask.scriptElement"></value>
/*Line 6553 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6554 - 'MicrosoftAjax.debug.js' */        return this._scriptElement;
/*Line 6555 - 'MicrosoftAjax.debug.js' */    }
/*Line 6556 - 'MicrosoftAjax.debug.js' */    function Sys$_ScriptLoaderTask$dispose() {
/*Line 6557 - 'MicrosoftAjax.debug.js' */        if(this._disposed) {
/*Line 6558 - 'MicrosoftAjax.debug.js' */            return;
/*Line 6559 - 'MicrosoftAjax.debug.js' */        }
/*Line 6560 - 'MicrosoftAjax.debug.js' */        this._disposed = true;
/*Line 6561 - 'MicrosoftAjax.debug.js' */        this._removeScriptElementHandlers();
/*Line 6562 - 'MicrosoftAjax.debug.js' */        Sys._ScriptLoaderTask._clearScript(this._scriptElement);
/*Line 6563 - 'MicrosoftAjax.debug.js' */        this._scriptElement = null;
/*Line 6564 - 'MicrosoftAjax.debug.js' */    }
/*Line 6565 - 'MicrosoftAjax.debug.js' */    function Sys$_ScriptLoaderTask$execute() {
/*Line 6566 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys._ScriptLoaderTask.execute" />
/*Line 6567 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6568 - 'MicrosoftAjax.debug.js' */        this._addScriptElementHandlers();
/*Line 6569 - 'MicrosoftAjax.debug.js' */        var headElements = document.getElementsByTagName('head');
/*Line 6570 - 'MicrosoftAjax.debug.js' */        if (headElements.length === 0) {
/*Line 6571 - 'MicrosoftAjax.debug.js' */             throw new Error.invalidOperation(Sys.Res.scriptLoadFailedNoHead);
/*Line 6572 - 'MicrosoftAjax.debug.js' */        }
/*Line 6573 - 'MicrosoftAjax.debug.js' */        else {
/*Line 6574 - 'MicrosoftAjax.debug.js' */             headElements[0].appendChild(this._scriptElement);
/*Line 6575 - 'MicrosoftAjax.debug.js' */        }
/*Line 6576 - 'MicrosoftAjax.debug.js' */    }
/*Line 6577 - 'MicrosoftAjax.debug.js' */    function Sys$_ScriptLoaderTask$_addScriptElementHandlers() {
/*Line 6578 - 'MicrosoftAjax.debug.js' */        this._scriptLoadDelegate = Function.createDelegate(this, this._scriptLoadHandler);
        
/*Line 6580 - 'MicrosoftAjax.debug.js' */        if (Sys.Browser.agent !== Sys.Browser.InternetExplorer) {
/*Line 6581 - 'MicrosoftAjax.debug.js' */            this._scriptElement.readyState = 'loaded';
/*Line 6582 - 'MicrosoftAjax.debug.js' */            $addHandler(this._scriptElement, 'load', this._scriptLoadDelegate);
/*Line 6583 - 'MicrosoftAjax.debug.js' */        }
/*Line 6584 - 'MicrosoftAjax.debug.js' */        else {
/*Line 6585 - 'MicrosoftAjax.debug.js' */            $addHandler(this._scriptElement, 'readystatechange', this._scriptLoadDelegate);
/*Line 6586 - 'MicrosoftAjax.debug.js' */        }    
/*Line 6587 - 'MicrosoftAjax.debug.js' */        if (this._scriptElement.addEventListener) {
/*Line 6588 - 'MicrosoftAjax.debug.js' */            this._scriptErrorDelegate = Function.createDelegate(this, this._scriptErrorHandler);
/*Line 6589 - 'MicrosoftAjax.debug.js' */            this._scriptElement.addEventListener('error', this._scriptErrorDelegate, false);
/*Line 6590 - 'MicrosoftAjax.debug.js' */        }
/*Line 6591 - 'MicrosoftAjax.debug.js' */    }
/*Line 6592 - 'MicrosoftAjax.debug.js' */    function Sys$_ScriptLoaderTask$_removeScriptElementHandlers() {
/*Line 6593 - 'MicrosoftAjax.debug.js' */        if(this._scriptLoadDelegate) {
/*Line 6594 - 'MicrosoftAjax.debug.js' */            var scriptElement = this.get_scriptElement();
/*Line 6595 - 'MicrosoftAjax.debug.js' */            if (Sys.Browser.agent !== Sys.Browser.InternetExplorer) {
/*Line 6596 - 'MicrosoftAjax.debug.js' */                $removeHandler(scriptElement, 'load', this._scriptLoadDelegate);
/*Line 6597 - 'MicrosoftAjax.debug.js' */            }
/*Line 6598 - 'MicrosoftAjax.debug.js' */            else {
/*Line 6599 - 'MicrosoftAjax.debug.js' */                $removeHandler(scriptElement, 'readystatechange', this._scriptLoadDelegate);
/*Line 6600 - 'MicrosoftAjax.debug.js' */            }
/*Line 6601 - 'MicrosoftAjax.debug.js' */            if (this._scriptErrorDelegate) {
/*Line 6602 - 'MicrosoftAjax.debug.js' */                this._scriptElement.removeEventListener('error', this._scriptErrorDelegate, false);
/*Line 6603 - 'MicrosoftAjax.debug.js' */                this._scriptErrorDelegate = null;
/*Line 6604 - 'MicrosoftAjax.debug.js' */            }
/*Line 6605 - 'MicrosoftAjax.debug.js' */            this._scriptLoadDelegate = null;
/*Line 6606 - 'MicrosoftAjax.debug.js' */        }
/*Line 6607 - 'MicrosoftAjax.debug.js' */    }
/*Line 6608 - 'MicrosoftAjax.debug.js' */    function Sys$_ScriptLoaderTask$_scriptErrorHandler() {
/*Line 6609 - 'MicrosoftAjax.debug.js' */        if(this._disposed) {
/*Line 6610 - 'MicrosoftAjax.debug.js' */            return;
/*Line 6611 - 'MicrosoftAjax.debug.js' */        }
        
/*Line 6613 - 'MicrosoftAjax.debug.js' */        this._completedCallback(this.get_scriptElement(), false);
/*Line 6614 - 'MicrosoftAjax.debug.js' */    }
/*Line 6615 - 'MicrosoftAjax.debug.js' */    function Sys$_ScriptLoaderTask$_scriptLoadHandler() {
/*Line 6616 - 'MicrosoftAjax.debug.js' */        if(this._disposed) {
/*Line 6617 - 'MicrosoftAjax.debug.js' */            return;
/*Line 6618 - 'MicrosoftAjax.debug.js' */        }
/*Line 6619 - 'MicrosoftAjax.debug.js' */        var scriptElement = this.get_scriptElement();
/*Line 6620 - 'MicrosoftAjax.debug.js' */        if ((scriptElement.readyState !== 'loaded') &&
/*Line 6621 - 'MicrosoftAjax.debug.js' */            (scriptElement.readyState !== 'complete')) {
/*Line 6622 - 'MicrosoftAjax.debug.js' */            return;
/*Line 6623 - 'MicrosoftAjax.debug.js' */        }
        
/*Line 6625 - 'MicrosoftAjax.debug.js' */        this._completedCallback(scriptElement, true);
/*Line 6626 - 'MicrosoftAjax.debug.js' */    }
/*Line 6627 - 'MicrosoftAjax.debug.js' */Sys._ScriptLoaderTask.prototype = {
/*Line 6628 - 'MicrosoftAjax.debug.js' */    get_scriptElement: Sys$_ScriptLoaderTask$get_scriptElement,
/*Line 6629 - 'MicrosoftAjax.debug.js' */    dispose: Sys$_ScriptLoaderTask$dispose,
/*Line 6630 - 'MicrosoftAjax.debug.js' */    execute: Sys$_ScriptLoaderTask$execute,
/*Line 6631 - 'MicrosoftAjax.debug.js' */    _addScriptElementHandlers: Sys$_ScriptLoaderTask$_addScriptElementHandlers,    
/*Line 6632 - 'MicrosoftAjax.debug.js' */    _removeScriptElementHandlers: Sys$_ScriptLoaderTask$_removeScriptElementHandlers,    
/*Line 6633 - 'MicrosoftAjax.debug.js' */    _scriptErrorHandler: Sys$_ScriptLoaderTask$_scriptErrorHandler,
/*Line 6634 - 'MicrosoftAjax.debug.js' */    _scriptLoadHandler: Sys$_ScriptLoaderTask$_scriptLoadHandler  
/*Line 6635 - 'MicrosoftAjax.debug.js' */}
/*Line 6636 - 'MicrosoftAjax.debug.js' */Sys._ScriptLoaderTask.registerClass("Sys._ScriptLoaderTask", null, Sys.IDisposable);
/*Line 6637 - 'MicrosoftAjax.debug.js' */Sys._ScriptLoaderTask._clearScript = function Sys$_ScriptLoaderTask$_clearScript(scriptElement) {
/*Line 6638 - 'MicrosoftAjax.debug.js' */    if (!Sys.Debug.isDebug) {
/*Line 6639 - 'MicrosoftAjax.debug.js' */        scriptElement.parentNode.removeChild(scriptElement);
/*Line 6640 - 'MicrosoftAjax.debug.js' */    }
/*Line 6641 - 'MicrosoftAjax.debug.js' */}
/*Line 6642 - 'MicrosoftAjax.debug.js' */Type.registerNamespace('Sys.Net');
 
/*Line 6644 - 'MicrosoftAjax.debug.js' */Sys.Net.WebServiceProxy = function Sys$Net$WebServiceProxy() {
/*Line 6645 - 'MicrosoftAjax.debug.js' */}
/*Line 6646 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebServiceProxy$get_timeout() {
/*Line 6647 - 'MicrosoftAjax.debug.js' */        /// <value type="Number" locid="P:J#Sys.Net.WebServiceProxy.timeout"></value>
/*Line 6648 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6649 - 'MicrosoftAjax.debug.js' */        return this._timeout || 0;
/*Line 6650 - 'MicrosoftAjax.debug.js' */    }
/*Line 6651 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebServiceProxy$set_timeout(value) {
/*Line 6652 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "value", type: Number}]);
/*Line 6653 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 6654 - 'MicrosoftAjax.debug.js' */        if (value < 0) { throw Error.argumentOutOfRange('value', value, Sys.Res.invalidTimeout); }
/*Line 6655 - 'MicrosoftAjax.debug.js' */        this._timeout = value;
/*Line 6656 - 'MicrosoftAjax.debug.js' */    }
/*Line 6657 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebServiceProxy$get_defaultUserContext() {
/*Line 6658 - 'MicrosoftAjax.debug.js' */        /// <value mayBeNull="true" locid="P:J#Sys.Net.WebServiceProxy.defaultUserContext"></value>
/*Line 6659 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6660 - 'MicrosoftAjax.debug.js' */        return (typeof(this._userContext) === "undefined") ? null : this._userContext;
/*Line 6661 - 'MicrosoftAjax.debug.js' */    }
/*Line 6662 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebServiceProxy$set_defaultUserContext(value) {
/*Line 6663 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "value", mayBeNull: true}]);
/*Line 6664 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 6665 - 'MicrosoftAjax.debug.js' */        this._userContext = value;
/*Line 6666 - 'MicrosoftAjax.debug.js' */    }
/*Line 6667 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebServiceProxy$get_defaultSucceededCallback() {
/*Line 6668 - 'MicrosoftAjax.debug.js' */        /// <value type="Function" mayBeNull="true" locid="P:J#Sys.Net.WebServiceProxy.defaultSucceededCallback"></value>
/*Line 6669 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6670 - 'MicrosoftAjax.debug.js' */        return this._succeeded || null;
/*Line 6671 - 'MicrosoftAjax.debug.js' */    }
/*Line 6672 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebServiceProxy$set_defaultSucceededCallback(value) {
/*Line 6673 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "value", type: Function, mayBeNull: true}]);
/*Line 6674 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 6675 - 'MicrosoftAjax.debug.js' */        this._succeeded = value;
/*Line 6676 - 'MicrosoftAjax.debug.js' */    }
/*Line 6677 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebServiceProxy$get_defaultFailedCallback() {
/*Line 6678 - 'MicrosoftAjax.debug.js' */        /// <value type="Function" mayBeNull="true" locid="P:J#Sys.Net.WebServiceProxy.defaultFailedCallback"></value>
/*Line 6679 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6680 - 'MicrosoftAjax.debug.js' */        return this._failed || null;
/*Line 6681 - 'MicrosoftAjax.debug.js' */    }
/*Line 6682 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebServiceProxy$set_defaultFailedCallback(value) {
/*Line 6683 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "value", type: Function, mayBeNull: true}]);
/*Line 6684 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 6685 - 'MicrosoftAjax.debug.js' */        this._failed = value;
/*Line 6686 - 'MicrosoftAjax.debug.js' */    }
/*Line 6687 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebServiceProxy$get_enableJsonp() {
/*Line 6688 - 'MicrosoftAjax.debug.js' */        /// <value type="Boolean" locid="P:J#Sys.Net.WebServiceProxy.enableJsonp"></value>
/*Line 6689 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6690 - 'MicrosoftAjax.debug.js' */        return !!this._jsonp;
/*Line 6691 - 'MicrosoftAjax.debug.js' */    }
/*Line 6692 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebServiceProxy$set_enableJsonp(value) {
/*Line 6693 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "value", type: Boolean}]);
/*Line 6694 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 6695 - 'MicrosoftAjax.debug.js' */        this._jsonp = value;
/*Line 6696 - 'MicrosoftAjax.debug.js' */    }
/*Line 6697 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebServiceProxy$get_path() {
/*Line 6698 - 'MicrosoftAjax.debug.js' */        /// <value type="String" locid="P:J#Sys.Net.WebServiceProxy.path"></value>
/*Line 6699 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6700 - 'MicrosoftAjax.debug.js' */        return this._path || null;
/*Line 6701 - 'MicrosoftAjax.debug.js' */    }
/*Line 6702 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebServiceProxy$set_path(value) {
/*Line 6703 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "value", type: String}]);
/*Line 6704 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 6705 - 'MicrosoftAjax.debug.js' */        this._path = value;
/*Line 6706 - 'MicrosoftAjax.debug.js' */    }
/*Line 6707 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebServiceProxy$get_jsonpCallbackParameter() {
/*Line 6708 - 'MicrosoftAjax.debug.js' */        /// <value type="String" locid="P:J#Sys.Net.WebServiceProxy.jsonpCallbackParameter"></value>
/*Line 6709 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6710 - 'MicrosoftAjax.debug.js' */        return this._callbackParameter || "callback";
/*Line 6711 - 'MicrosoftAjax.debug.js' */    }
/*Line 6712 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebServiceProxy$set_jsonpCallbackParameter(value) {
/*Line 6713 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [{name: "value", type: String}]);
/*Line 6714 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 6715 - 'MicrosoftAjax.debug.js' */        this._callbackParameter = value;
/*Line 6716 - 'MicrosoftAjax.debug.js' */    }
/*Line 6717 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebServiceProxy$_invoke(servicePath, methodName, useGet, params, onSuccess, onFailure, userContext) {
/*Line 6718 - 'MicrosoftAjax.debug.js' */        /// <summary locid="M:J#Sys.Net.WebServiceProxy._invoke" />
/*Line 6719 - 'MicrosoftAjax.debug.js' */        /// <param name="servicePath" type="String"></param>
/*Line 6720 - 'MicrosoftAjax.debug.js' */        /// <param name="methodName" type="String"></param>
/*Line 6721 - 'MicrosoftAjax.debug.js' */        /// <param name="useGet" type="Boolean"></param>
/*Line 6722 - 'MicrosoftAjax.debug.js' */        /// <param name="params"></param>
/*Line 6723 - 'MicrosoftAjax.debug.js' */        /// <param name="onSuccess" type="Function" mayBeNull="true" optional="true"></param>
/*Line 6724 - 'MicrosoftAjax.debug.js' */        /// <param name="onFailure" type="Function" mayBeNull="true" optional="true"></param>
/*Line 6725 - 'MicrosoftAjax.debug.js' */        /// <param name="userContext" mayBeNull="true" optional="true"></param>
/*Line 6726 - 'MicrosoftAjax.debug.js' */        /// <returns type="Sys.Net.WebRequest" mayBeNull="true"></returns>
/*Line 6727 - 'MicrosoftAjax.debug.js' */        var e = Function._validateParams(arguments, [
/*Line 6728 - 'MicrosoftAjax.debug.js' */            {name: "servicePath", type: String},
/*Line 6729 - 'MicrosoftAjax.debug.js' */            {name: "methodName", type: String},
/*Line 6730 - 'MicrosoftAjax.debug.js' */            {name: "useGet", type: Boolean},
/*Line 6731 - 'MicrosoftAjax.debug.js' */            {name: "params"},
/*Line 6732 - 'MicrosoftAjax.debug.js' */            {name: "onSuccess", type: Function, mayBeNull: true, optional: true},
/*Line 6733 - 'MicrosoftAjax.debug.js' */            {name: "onFailure", type: Function, mayBeNull: true, optional: true},
/*Line 6734 - 'MicrosoftAjax.debug.js' */            {name: "userContext", mayBeNull: true, optional: true}
/*Line 6735 - 'MicrosoftAjax.debug.js' */        ]);
/*Line 6736 - 'MicrosoftAjax.debug.js' */        if (e) throw e;
/*Line 6737 - 'MicrosoftAjax.debug.js' */        onSuccess = onSuccess || this.get_defaultSucceededCallback();
/*Line 6738 - 'MicrosoftAjax.debug.js' */        onFailure = onFailure || this.get_defaultFailedCallback();
/*Line 6739 - 'MicrosoftAjax.debug.js' */        if (userContext === null || typeof userContext === 'undefined') userContext = this.get_defaultUserContext();
/*Line 6740 - 'MicrosoftAjax.debug.js' */        return Sys.Net.WebServiceProxy.invoke(servicePath, methodName, useGet, params, onSuccess, onFailure, userContext, this.get_timeout(), this.get_enableJsonp(), this.get_jsonpCallbackParameter());
/*Line 6741 - 'MicrosoftAjax.debug.js' */    }
/*Line 6742 - 'MicrosoftAjax.debug.js' */Sys.Net.WebServiceProxy.prototype = {
/*Line 6743 - 'MicrosoftAjax.debug.js' */    get_timeout: Sys$Net$WebServiceProxy$get_timeout,
/*Line 6744 - 'MicrosoftAjax.debug.js' */    set_timeout: Sys$Net$WebServiceProxy$set_timeout,
/*Line 6745 - 'MicrosoftAjax.debug.js' */    get_defaultUserContext: Sys$Net$WebServiceProxy$get_defaultUserContext,
/*Line 6746 - 'MicrosoftAjax.debug.js' */    set_defaultUserContext: Sys$Net$WebServiceProxy$set_defaultUserContext,
/*Line 6747 - 'MicrosoftAjax.debug.js' */    get_defaultSucceededCallback: Sys$Net$WebServiceProxy$get_defaultSucceededCallback,
/*Line 6748 - 'MicrosoftAjax.debug.js' */    set_defaultSucceededCallback: Sys$Net$WebServiceProxy$set_defaultSucceededCallback,
/*Line 6749 - 'MicrosoftAjax.debug.js' */    get_defaultFailedCallback: Sys$Net$WebServiceProxy$get_defaultFailedCallback,
/*Line 6750 - 'MicrosoftAjax.debug.js' */    set_defaultFailedCallback: Sys$Net$WebServiceProxy$set_defaultFailedCallback,
/*Line 6751 - 'MicrosoftAjax.debug.js' */    get_enableJsonp: Sys$Net$WebServiceProxy$get_enableJsonp,
/*Line 6752 - 'MicrosoftAjax.debug.js' */    set_enableJsonp: Sys$Net$WebServiceProxy$set_enableJsonp,
/*Line 6753 - 'MicrosoftAjax.debug.js' */    get_path: Sys$Net$WebServiceProxy$get_path,
/*Line 6754 - 'MicrosoftAjax.debug.js' */    set_path: Sys$Net$WebServiceProxy$set_path,
/*Line 6755 - 'MicrosoftAjax.debug.js' */    get_jsonpCallbackParameter: Sys$Net$WebServiceProxy$get_jsonpCallbackParameter,
/*Line 6756 - 'MicrosoftAjax.debug.js' */    set_jsonpCallbackParameter: Sys$Net$WebServiceProxy$set_jsonpCallbackParameter,
/*Line 6757 - 'MicrosoftAjax.debug.js' */    _invoke: Sys$Net$WebServiceProxy$_invoke
/*Line 6758 - 'MicrosoftAjax.debug.js' */}
/*Line 6759 - 'MicrosoftAjax.debug.js' */Sys.Net.WebServiceProxy.registerClass('Sys.Net.WebServiceProxy');
/*Line 6760 - 'MicrosoftAjax.debug.js' */Sys.Net.WebServiceProxy.invoke = function Sys$Net$WebServiceProxy$invoke(servicePath, methodName, useGet, params, onSuccess, onFailure, userContext, timeout, enableJsonp, jsonpCallbackParameter) {
/*Line 6761 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Net.WebServiceProxy.invoke" />
/*Line 6762 - 'MicrosoftAjax.debug.js' */    /// <param name="servicePath" type="String"></param>
/*Line 6763 - 'MicrosoftAjax.debug.js' */    /// <param name="methodName" type="String" mayBeNull="true" optional="true"></param>
/*Line 6764 - 'MicrosoftAjax.debug.js' */    /// <param name="useGet" type="Boolean" optional="true"></param>
/*Line 6765 - 'MicrosoftAjax.debug.js' */    /// <param name="params" mayBeNull="true" optional="true"></param>
/*Line 6766 - 'MicrosoftAjax.debug.js' */    /// <param name="onSuccess" type="Function" mayBeNull="true" optional="true"></param>
/*Line 6767 - 'MicrosoftAjax.debug.js' */    /// <param name="onFailure" type="Function" mayBeNull="true" optional="true"></param>
/*Line 6768 - 'MicrosoftAjax.debug.js' */    /// <param name="userContext" mayBeNull="true" optional="true"></param>
/*Line 6769 - 'MicrosoftAjax.debug.js' */    /// <param name="timeout" type="Number" optional="true"></param>
/*Line 6770 - 'MicrosoftAjax.debug.js' */    /// <param name="enableJsonp" type="Boolean" optional="true" mayBeNull="true"></param>
/*Line 6771 - 'MicrosoftAjax.debug.js' */    /// <param name="jsonpCallbackParameter" type="String" optional="true" mayBeNull="true"></param>
/*Line 6772 - 'MicrosoftAjax.debug.js' */    /// <returns type="Sys.Net.WebRequest" mayBeNull="true"></returns>
/*Line 6773 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 6774 - 'MicrosoftAjax.debug.js' */        {name: "servicePath", type: String},
/*Line 6775 - 'MicrosoftAjax.debug.js' */        {name: "methodName", type: String, mayBeNull: true, optional: true},
/*Line 6776 - 'MicrosoftAjax.debug.js' */        {name: "useGet", type: Boolean, optional: true},
/*Line 6777 - 'MicrosoftAjax.debug.js' */        {name: "params", mayBeNull: true, optional: true},
/*Line 6778 - 'MicrosoftAjax.debug.js' */        {name: "onSuccess", type: Function, mayBeNull: true, optional: true},
/*Line 6779 - 'MicrosoftAjax.debug.js' */        {name: "onFailure", type: Function, mayBeNull: true, optional: true},
/*Line 6780 - 'MicrosoftAjax.debug.js' */        {name: "userContext", mayBeNull: true, optional: true},
/*Line 6781 - 'MicrosoftAjax.debug.js' */        {name: "timeout", type: Number, optional: true},
/*Line 6782 - 'MicrosoftAjax.debug.js' */        {name: "enableJsonp", type: Boolean, mayBeNull: true, optional: true},
/*Line 6783 - 'MicrosoftAjax.debug.js' */        {name: "jsonpCallbackParameter", type: String, mayBeNull: true, optional: true}
/*Line 6784 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 6785 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 6786 - 'MicrosoftAjax.debug.js' */    var schemeHost = (enableJsonp !== false) ? Sys.Net.WebServiceProxy._xdomain.exec(servicePath) : null,
/*Line 6787 - 'MicrosoftAjax.debug.js' */        tempCallback, jsonp = schemeHost && (schemeHost.length === 3) && 
/*Line 6788 - 'MicrosoftAjax.debug.js' */            ((schemeHost[1] !== location.protocol) || (schemeHost[2] !== location.host));
/*Line 6789 - 'MicrosoftAjax.debug.js' */    useGet = jsonp || useGet;
/*Line 6790 - 'MicrosoftAjax.debug.js' */    if (jsonp) {
/*Line 6791 - 'MicrosoftAjax.debug.js' */        jsonpCallbackParameter = jsonpCallbackParameter || "callback";
/*Line 6792 - 'MicrosoftAjax.debug.js' */        tempCallback = "_jsonp" + Sys._jsonp++;
/*Line 6793 - 'MicrosoftAjax.debug.js' */    }
/*Line 6794 - 'MicrosoftAjax.debug.js' */    if (!params) params = {};
/*Line 6795 - 'MicrosoftAjax.debug.js' */    var urlParams = params;
/*Line 6796 - 'MicrosoftAjax.debug.js' */    if (!useGet || !urlParams) urlParams = {};
/*Line 6797 - 'MicrosoftAjax.debug.js' */    var script, error, timeoutcookie = null, loader, body = null,
/*Line 6798 - 'MicrosoftAjax.debug.js' */        url = Sys.Net.WebRequest._createUrl(methodName
/*Line 6799 - 'MicrosoftAjax.debug.js' */            ? (servicePath+"/"+encodeURIComponent(methodName))
/*Line 6800 - 'MicrosoftAjax.debug.js' */            : servicePath, urlParams, jsonp ? (jsonpCallbackParameter + "=Sys." + tempCallback) : null);
/*Line 6801 - 'MicrosoftAjax.debug.js' */    if (jsonp) {
/*Line 6802 - 'MicrosoftAjax.debug.js' */        script = document.createElement("script");
/*Line 6803 - 'MicrosoftAjax.debug.js' */        script.src = url;
/*Line 6804 - 'MicrosoftAjax.debug.js' */        loader = new Sys._ScriptLoaderTask(script, function(script, loaded) {
/*Line 6805 - 'MicrosoftAjax.debug.js' */            if (!loaded || tempCallback) {
/*Line 6806 - 'MicrosoftAjax.debug.js' */                jsonpComplete({ Message: String.format(Sys.Res.webServiceFailedNoMsg, methodName) }, -1);
/*Line 6807 - 'MicrosoftAjax.debug.js' */            }
/*Line 6808 - 'MicrosoftAjax.debug.js' */        });
/*Line 6809 - 'MicrosoftAjax.debug.js' */        function jsonpComplete(data, statusCode) {
/*Line 6810 - 'MicrosoftAjax.debug.js' */            if (timeoutcookie !== null) {
/*Line 6811 - 'MicrosoftAjax.debug.js' */                window.clearTimeout(timeoutcookie);
/*Line 6812 - 'MicrosoftAjax.debug.js' */                timeoutcookie = null;
/*Line 6813 - 'MicrosoftAjax.debug.js' */            }
/*Line 6814 - 'MicrosoftAjax.debug.js' */            loader.dispose();
/*Line 6815 - 'MicrosoftAjax.debug.js' */            delete Sys[tempCallback];
/*Line 6816 - 'MicrosoftAjax.debug.js' */            tempCallback = null; 
/*Line 6817 - 'MicrosoftAjax.debug.js' */            if ((typeof(statusCode) !== "undefined") && (statusCode !== 200)) {
/*Line 6818 - 'MicrosoftAjax.debug.js' */                if (onFailure) {
/*Line 6819 - 'MicrosoftAjax.debug.js' */                    error = new Sys.Net.WebServiceError(false,
/*Line 6820 - 'MicrosoftAjax.debug.js' */                            data.Message || String.format(Sys.Res.webServiceFailedNoMsg, methodName),
/*Line 6821 - 'MicrosoftAjax.debug.js' */                            data.StackTrace || null,
/*Line 6822 - 'MicrosoftAjax.debug.js' */                            data.ExceptionType || null,
/*Line 6823 - 'MicrosoftAjax.debug.js' */                            data);
/*Line 6824 - 'MicrosoftAjax.debug.js' */                    error._statusCode = statusCode;
/*Line 6825 - 'MicrosoftAjax.debug.js' */                    onFailure(error, userContext, methodName);
/*Line 6826 - 'MicrosoftAjax.debug.js' */                }
/*Line 6827 - 'MicrosoftAjax.debug.js' */                else {
/*Line 6828 - 'MicrosoftAjax.debug.js' */                    if (data.StackTrace && data.Message) {
/*Line 6829 - 'MicrosoftAjax.debug.js' */                        error = data.StackTrace + "-- " + data.Message;
/*Line 6830 - 'MicrosoftAjax.debug.js' */                    }
/*Line 6831 - 'MicrosoftAjax.debug.js' */                    else {
/*Line 6832 - 'MicrosoftAjax.debug.js' */                        error = data.StackTrace || data.Message;
/*Line 6833 - 'MicrosoftAjax.debug.js' */                    }
/*Line 6834 - 'MicrosoftAjax.debug.js' */                    error = String.format(error ? Sys.Res.webServiceFailed : Sys.Res.webServiceFailedNoMsg, methodName, error);
/*Line 6835 - 'MicrosoftAjax.debug.js' */                    throw Sys.Net.WebServiceProxy._createFailedError(methodName, String.format(Sys.Res.webServiceFailed, methodName, error));
/*Line 6836 - 'MicrosoftAjax.debug.js' */                }
/*Line 6837 - 'MicrosoftAjax.debug.js' */            }
/*Line 6838 - 'MicrosoftAjax.debug.js' */            else if (onSuccess) {
/*Line 6839 - 'MicrosoftAjax.debug.js' */                onSuccess(data, userContext, methodName);
/*Line 6840 - 'MicrosoftAjax.debug.js' */            }
/*Line 6841 - 'MicrosoftAjax.debug.js' */        }
/*Line 6842 - 'MicrosoftAjax.debug.js' */        Sys[tempCallback] = jsonpComplete;
/*Line 6843 - 'MicrosoftAjax.debug.js' */        loader.execute();
/*Line 6844 - 'MicrosoftAjax.debug.js' */        return null;
/*Line 6845 - 'MicrosoftAjax.debug.js' */    }
/*Line 6846 - 'MicrosoftAjax.debug.js' */    var request = new Sys.Net.WebRequest();
/*Line 6847 - 'MicrosoftAjax.debug.js' */    request.set_url(url);
/*Line 6848 - 'MicrosoftAjax.debug.js' */    request.get_headers()['Content-Type'] = 'application/json; charset=utf-8';
/*Line 6849 - 'MicrosoftAjax.debug.js' */    if (!useGet) {
/*Line 6850 - 'MicrosoftAjax.debug.js' */        body = Sys.Serialization.JavaScriptSerializer.serialize(params);
/*Line 6851 - 'MicrosoftAjax.debug.js' */        if (body === "{}") body = "";
/*Line 6852 - 'MicrosoftAjax.debug.js' */    }
/*Line 6853 - 'MicrosoftAjax.debug.js' */    request.set_body(body);
/*Line 6854 - 'MicrosoftAjax.debug.js' */    request.add_completed(onComplete);
/*Line 6855 - 'MicrosoftAjax.debug.js' */    if (timeout && timeout > 0) request.set_timeout(timeout);
/*Line 6856 - 'MicrosoftAjax.debug.js' */    request.invoke();
    
/*Line 6858 - 'MicrosoftAjax.debug.js' */    function onComplete(response, eventArgs) {
/*Line 6859 - 'MicrosoftAjax.debug.js' */        if (response.get_responseAvailable()) {
/*Line 6860 - 'MicrosoftAjax.debug.js' */            var statusCode = response.get_statusCode();
/*Line 6861 - 'MicrosoftAjax.debug.js' */            var result = null;
           
/*Line 6863 - 'MicrosoftAjax.debug.js' */            try {
/*Line 6864 - 'MicrosoftAjax.debug.js' */                var contentType = response.getResponseHeader("Content-Type");
/*Line 6865 - 'MicrosoftAjax.debug.js' */                if (contentType.startsWith("application/json")) {
/*Line 6866 - 'MicrosoftAjax.debug.js' */                    result = response.get_object();
/*Line 6867 - 'MicrosoftAjax.debug.js' */                }
/*Line 6868 - 'MicrosoftAjax.debug.js' */                else if (contentType.startsWith("text/xml")) {
/*Line 6869 - 'MicrosoftAjax.debug.js' */                    result = response.get_xml();
/*Line 6870 - 'MicrosoftAjax.debug.js' */                }
/*Line 6871 - 'MicrosoftAjax.debug.js' */                else {
/*Line 6872 - 'MicrosoftAjax.debug.js' */                    result = response.get_responseData();
/*Line 6873 - 'MicrosoftAjax.debug.js' */                }
/*Line 6874 - 'MicrosoftAjax.debug.js' */            } catch (ex) {
/*Line 6875 - 'MicrosoftAjax.debug.js' */            }
/*Line 6876 - 'MicrosoftAjax.debug.js' */            var error = response.getResponseHeader("jsonerror");
/*Line 6877 - 'MicrosoftAjax.debug.js' */            var errorObj = (error === "true");
/*Line 6878 - 'MicrosoftAjax.debug.js' */            if (errorObj) {
/*Line 6879 - 'MicrosoftAjax.debug.js' */                if (result) {
/*Line 6880 - 'MicrosoftAjax.debug.js' */                    result = new Sys.Net.WebServiceError(false, result.Message, result.StackTrace, result.ExceptionType, result);
/*Line 6881 - 'MicrosoftAjax.debug.js' */                }
/*Line 6882 - 'MicrosoftAjax.debug.js' */            }
/*Line 6883 - 'MicrosoftAjax.debug.js' */            else if (contentType.startsWith("application/json")) {
/*Line 6884 - 'MicrosoftAjax.debug.js' */                result = (!result || (typeof(result.d) === "undefined")) ? result : result.d;
/*Line 6885 - 'MicrosoftAjax.debug.js' */            }
/*Line 6886 - 'MicrosoftAjax.debug.js' */            if (((statusCode < 200) || (statusCode >= 300)) || errorObj) {
/*Line 6887 - 'MicrosoftAjax.debug.js' */                if (onFailure) {
/*Line 6888 - 'MicrosoftAjax.debug.js' */                    if (!result || !errorObj) {
/*Line 6889 - 'MicrosoftAjax.debug.js' */                        result = new Sys.Net.WebServiceError(false , String.format(Sys.Res.webServiceFailedNoMsg, methodName));
/*Line 6890 - 'MicrosoftAjax.debug.js' */                    }
/*Line 6891 - 'MicrosoftAjax.debug.js' */                    result._statusCode = statusCode;
/*Line 6892 - 'MicrosoftAjax.debug.js' */                    onFailure(result, userContext, methodName);
/*Line 6893 - 'MicrosoftAjax.debug.js' */                }
/*Line 6894 - 'MicrosoftAjax.debug.js' */                else {
/*Line 6895 - 'MicrosoftAjax.debug.js' */                    if (result && errorObj) {
/*Line 6896 - 'MicrosoftAjax.debug.js' */                        error = result.get_exceptionType() + "-- " + result.get_message();
/*Line 6897 - 'MicrosoftAjax.debug.js' */                    }
/*Line 6898 - 'MicrosoftAjax.debug.js' */                    else {
/*Line 6899 - 'MicrosoftAjax.debug.js' */                        error = response.get_responseData();
/*Line 6900 - 'MicrosoftAjax.debug.js' */                    }
/*Line 6901 - 'MicrosoftAjax.debug.js' */                    throw Sys.Net.WebServiceProxy._createFailedError(methodName, String.format(Sys.Res.webServiceFailed, methodName, error));
/*Line 6902 - 'MicrosoftAjax.debug.js' */                }
/*Line 6903 - 'MicrosoftAjax.debug.js' */            }
/*Line 6904 - 'MicrosoftAjax.debug.js' */            else if (onSuccess) {
/*Line 6905 - 'MicrosoftAjax.debug.js' */                onSuccess(result, userContext, methodName);
/*Line 6906 - 'MicrosoftAjax.debug.js' */            }
/*Line 6907 - 'MicrosoftAjax.debug.js' */        }
/*Line 6908 - 'MicrosoftAjax.debug.js' */        else {
/*Line 6909 - 'MicrosoftAjax.debug.js' */            var msg;
/*Line 6910 - 'MicrosoftAjax.debug.js' */            if (response.get_timedOut()) {
/*Line 6911 - 'MicrosoftAjax.debug.js' */                msg = String.format(Sys.Res.webServiceTimedOut, methodName);
/*Line 6912 - 'MicrosoftAjax.debug.js' */            }
/*Line 6913 - 'MicrosoftAjax.debug.js' */            else {
/*Line 6914 - 'MicrosoftAjax.debug.js' */                msg = String.format(Sys.Res.webServiceFailedNoMsg, methodName)
/*Line 6915 - 'MicrosoftAjax.debug.js' */            }
/*Line 6916 - 'MicrosoftAjax.debug.js' */            if (onFailure) {
/*Line 6917 - 'MicrosoftAjax.debug.js' */                onFailure(new Sys.Net.WebServiceError(response.get_timedOut(), msg, "", ""), userContext, methodName);
/*Line 6918 - 'MicrosoftAjax.debug.js' */            }
/*Line 6919 - 'MicrosoftAjax.debug.js' */            else {
/*Line 6920 - 'MicrosoftAjax.debug.js' */                throw Sys.Net.WebServiceProxy._createFailedError(methodName, msg);
/*Line 6921 - 'MicrosoftAjax.debug.js' */            }
/*Line 6922 - 'MicrosoftAjax.debug.js' */        }
/*Line 6923 - 'MicrosoftAjax.debug.js' */    }
/*Line 6924 - 'MicrosoftAjax.debug.js' */    return request;
/*Line 6925 - 'MicrosoftAjax.debug.js' */}
/*Line 6926 - 'MicrosoftAjax.debug.js' */Sys.Net.WebServiceProxy._createFailedError = function Sys$Net$WebServiceProxy$_createFailedError(methodName, errorMessage) {
/*Line 6927 - 'MicrosoftAjax.debug.js' */    var displayMessage = "Sys.Net.WebServiceFailedException: " + errorMessage;
/*Line 6928 - 'MicrosoftAjax.debug.js' */    var e = Error.create(displayMessage, { 'name': 'Sys.Net.WebServiceFailedException', 'methodName': methodName });
/*Line 6929 - 'MicrosoftAjax.debug.js' */    e.popStackFrame();
/*Line 6930 - 'MicrosoftAjax.debug.js' */    return e;
/*Line 6931 - 'MicrosoftAjax.debug.js' */}
/*Line 6932 - 'MicrosoftAjax.debug.js' */Sys.Net.WebServiceProxy._defaultFailedCallback = function Sys$Net$WebServiceProxy$_defaultFailedCallback(err, methodName) {
/*Line 6933 - 'MicrosoftAjax.debug.js' */    var error = err.get_exceptionType() + "-- " + err.get_message();
/*Line 6934 - 'MicrosoftAjax.debug.js' */    throw Sys.Net.WebServiceProxy._createFailedError(methodName, String.format(Sys.Res.webServiceFailed, methodName, error));
/*Line 6935 - 'MicrosoftAjax.debug.js' */}
/*Line 6936 - 'MicrosoftAjax.debug.js' */Sys.Net.WebServiceProxy._generateTypedConstructor = function Sys$Net$WebServiceProxy$_generateTypedConstructor(type) {
/*Line 6937 - 'MicrosoftAjax.debug.js' */    return function(properties) {
/*Line 6938 - 'MicrosoftAjax.debug.js' */        if (properties) {
/*Line 6939 - 'MicrosoftAjax.debug.js' */            for (var name in properties) {
/*Line 6940 - 'MicrosoftAjax.debug.js' */                this[name] = properties[name];
/*Line 6941 - 'MicrosoftAjax.debug.js' */            }
/*Line 6942 - 'MicrosoftAjax.debug.js' */        }
/*Line 6943 - 'MicrosoftAjax.debug.js' */        this.__type = type;
/*Line 6944 - 'MicrosoftAjax.debug.js' */    }
/*Line 6945 - 'MicrosoftAjax.debug.js' */}
/*Line 6946 - 'MicrosoftAjax.debug.js' */Sys._jsonp = 0;
/*Line 6947 - 'MicrosoftAjax.debug.js' */Sys.Net.WebServiceProxy._xdomain = /^\s*([a-zA-Z0-9\+\-\.]+\:)\/\/([^?#\/]+)/;
 
/*Line 6949 - 'MicrosoftAjax.debug.js' */Sys.Net.WebServiceError = function Sys$Net$WebServiceError(timedOut, message, stackTrace, exceptionType, errorObject) {
/*Line 6950 - 'MicrosoftAjax.debug.js' */    /// <summary locid="M:J#Sys.Net.WebServiceError.#ctor" />
/*Line 6951 - 'MicrosoftAjax.debug.js' */    /// <param name="timedOut" type="Boolean"></param>
/*Line 6952 - 'MicrosoftAjax.debug.js' */    /// <param name="message" type="String" mayBeNull="true"></param>
/*Line 6953 - 'MicrosoftAjax.debug.js' */    /// <param name="stackTrace" type="String" mayBeNull="true" optional="true"></param>
/*Line 6954 - 'MicrosoftAjax.debug.js' */    /// <param name="exceptionType" type="String" mayBeNull="true" optional="true"></param>
/*Line 6955 - 'MicrosoftAjax.debug.js' */    /// <param name="errorObject" type="Object" mayBeNull="true" optional="true"></param>
/*Line 6956 - 'MicrosoftAjax.debug.js' */    var e = Function._validateParams(arguments, [
/*Line 6957 - 'MicrosoftAjax.debug.js' */        {name: "timedOut", type: Boolean},
/*Line 6958 - 'MicrosoftAjax.debug.js' */        {name: "message", type: String, mayBeNull: true},
/*Line 6959 - 'MicrosoftAjax.debug.js' */        {name: "stackTrace", type: String, mayBeNull: true, optional: true},
/*Line 6960 - 'MicrosoftAjax.debug.js' */        {name: "exceptionType", type: String, mayBeNull: true, optional: true},
/*Line 6961 - 'MicrosoftAjax.debug.js' */        {name: "errorObject", type: Object, mayBeNull: true, optional: true}
/*Line 6962 - 'MicrosoftAjax.debug.js' */    ]);
/*Line 6963 - 'MicrosoftAjax.debug.js' */    if (e) throw e;
/*Line 6964 - 'MicrosoftAjax.debug.js' */    this._timedOut = timedOut;
/*Line 6965 - 'MicrosoftAjax.debug.js' */    this._message = message;
/*Line 6966 - 'MicrosoftAjax.debug.js' */    this._stackTrace = stackTrace;
/*Line 6967 - 'MicrosoftAjax.debug.js' */    this._exceptionType = exceptionType;
/*Line 6968 - 'MicrosoftAjax.debug.js' */    this._errorObject = errorObject;
/*Line 6969 - 'MicrosoftAjax.debug.js' */    this._statusCode = -1;
/*Line 6970 - 'MicrosoftAjax.debug.js' */}
/*Line 6971 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebServiceError$get_timedOut() {
/*Line 6972 - 'MicrosoftAjax.debug.js' */        /// <value type="Boolean" locid="P:J#Sys.Net.WebServiceError.timedOut"></value>
/*Line 6973 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6974 - 'MicrosoftAjax.debug.js' */        return this._timedOut;
/*Line 6975 - 'MicrosoftAjax.debug.js' */    }
/*Line 6976 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebServiceError$get_statusCode() {
/*Line 6977 - 'MicrosoftAjax.debug.js' */        /// <value type="Number" locid="P:J#Sys.Net.WebServiceError.statusCode"></value>
/*Line 6978 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6979 - 'MicrosoftAjax.debug.js' */        return this._statusCode;
/*Line 6980 - 'MicrosoftAjax.debug.js' */    }
/*Line 6981 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebServiceError$get_message() {
/*Line 6982 - 'MicrosoftAjax.debug.js' */        /// <value type="String" locid="P:J#Sys.Net.WebServiceError.message"></value>
/*Line 6983 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6984 - 'MicrosoftAjax.debug.js' */        return this._message;
/*Line 6985 - 'MicrosoftAjax.debug.js' */    }
/*Line 6986 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebServiceError$get_stackTrace() {
/*Line 6987 - 'MicrosoftAjax.debug.js' */        /// <value type="String" locid="P:J#Sys.Net.WebServiceError.stackTrace"></value>
/*Line 6988 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6989 - 'MicrosoftAjax.debug.js' */        return this._stackTrace || "";
/*Line 6990 - 'MicrosoftAjax.debug.js' */    }
/*Line 6991 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebServiceError$get_exceptionType() {
/*Line 6992 - 'MicrosoftAjax.debug.js' */        /// <value type="String" locid="P:J#Sys.Net.WebServiceError.exceptionType"></value>
/*Line 6993 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6994 - 'MicrosoftAjax.debug.js' */        return this._exceptionType || "";
/*Line 6995 - 'MicrosoftAjax.debug.js' */    }
/*Line 6996 - 'MicrosoftAjax.debug.js' */    function Sys$Net$WebServiceError$get_errorObject() {
/*Line 6997 - 'MicrosoftAjax.debug.js' */        /// <value type="Object" locid="P:J#Sys.Net.WebServiceError.errorObject"></value>
/*Line 6998 - 'MicrosoftAjax.debug.js' */        if (arguments.length !== 0) throw Error.parameterCount();
/*Line 6999 - 'MicrosoftAjax.debug.js' */        return this._errorObject || null;
/*Line 7000 - 'MicrosoftAjax.debug.js' */    }
/*Line 7001 - 'MicrosoftAjax.debug.js' */Sys.Net.WebServiceError.prototype = {
/*Line 7002 - 'MicrosoftAjax.debug.js' */    get_timedOut: Sys$Net$WebServiceError$get_timedOut,
/*Line 7003 - 'MicrosoftAjax.debug.js' */    get_statusCode: Sys$Net$WebServiceError$get_statusCode,
/*Line 7004 - 'MicrosoftAjax.debug.js' */    get_message: Sys$Net$WebServiceError$get_message,
/*Line 7005 - 'MicrosoftAjax.debug.js' */    get_stackTrace: Sys$Net$WebServiceError$get_stackTrace,
/*Line 7006 - 'MicrosoftAjax.debug.js' */    get_exceptionType: Sys$Net$WebServiceError$get_exceptionType,
/*Line 7007 - 'MicrosoftAjax.debug.js' */    get_errorObject: Sys$Net$WebServiceError$get_errorObject
/*Line 7008 - 'MicrosoftAjax.debug.js' */}
/*Line 7009 - 'MicrosoftAjax.debug.js' */Sys.Net.WebServiceError.registerClass('Sys.Net.WebServiceError');


/*Line 7012 - 'MicrosoftAjax.debug.js' */Type.registerNamespace('Sys');

/*Line 7014 - 'MicrosoftAjax.debug.js' */Sys.Res={
/*Line 7015 - 'MicrosoftAjax.debug.js' */'urlMustBeLessThan1024chars':'The history state must be small enough to not make the url larger than 1024 characters.',
/*Line 7016 - 'MicrosoftAjax.debug.js' */'argumentTypeName':'Value is not the name of an existing type.',
/*Line 7017 - 'MicrosoftAjax.debug.js' */'cantBeCalledAfterDispose':'Can\'t be called after dispose.',
/*Line 7018 - 'MicrosoftAjax.debug.js' */'componentCantSetIdAfterAddedToApp':'The id property of a component can\'t be set after it\'s been added to the Application object.',
/*Line 7019 - 'MicrosoftAjax.debug.js' */'behaviorDuplicateName':'A behavior with name \'{0}\' already exists or it is the name of an existing property on the target element.',
/*Line 7020 - 'MicrosoftAjax.debug.js' */'notATypeName':'Value is not a valid type name.',
/*Line 7021 - 'MicrosoftAjax.debug.js' */'elementNotFound':'An element with id \'{0}\' could not be found.',
/*Line 7022 - 'MicrosoftAjax.debug.js' */'stateMustBeStringDictionary':'The state object can only have null and string fields.',
/*Line 7023 - 'MicrosoftAjax.debug.js' */'boolTrueOrFalse':'Value must be \'true\' or \'false\'.',
/*Line 7024 - 'MicrosoftAjax.debug.js' */'scriptLoadFailedNoHead':'ScriptLoader requires pages to contain a <head> element.',
/*Line 7025 - 'MicrosoftAjax.debug.js' */'stringFormatInvalid':'The format string is invalid.',
/*Line 7026 - 'MicrosoftAjax.debug.js' */'referenceNotFound':'Component \'{0}\' was not found.',
/*Line 7027 - 'MicrosoftAjax.debug.js' */'enumReservedName':'\'{0}\' is a reserved name that can\'t be used as an enum value name.',
/*Line 7028 - 'MicrosoftAjax.debug.js' */'circularParentChain':'The chain of control parents can\'t have circular references.',
/*Line 7029 - 'MicrosoftAjax.debug.js' */'namespaceContainsNonObject':'Object {0} already exists and is not an object.',
/*Line 7030 - 'MicrosoftAjax.debug.js' */'undefinedEvent':'\'{0}\' is not an event.',
/*Line 7031 - 'MicrosoftAjax.debug.js' */'propertyUndefined':'\'{0}\' is not a property or an existing field.',
/*Line 7032 - 'MicrosoftAjax.debug.js' */'observableConflict':'Object already contains a member with the name \'{0}\'.',
/*Line 7033 - 'MicrosoftAjax.debug.js' */'historyCannotEnableHistory':'Cannot set enableHistory after initialization.',
/*Line 7034 - 'MicrosoftAjax.debug.js' */'eventHandlerInvalid':'Handler was not added through the Sys.UI.DomEvent.addHandler method.',
/*Line 7035 - 'MicrosoftAjax.debug.js' */'scriptLoadFailedDebug':'The script \'{0}\' failed to load. Check for:\r\n Inaccessible path.\r\n Script errors. (IE) Enable \'Display a notification about every script error\' under advanced settings.',
/*Line 7036 - 'MicrosoftAjax.debug.js' */'propertyNotWritable':'\'{0}\' is not a writable property.',
/*Line 7037 - 'MicrosoftAjax.debug.js' */'enumInvalidValueName':'\'{0}\' is not a valid name for an enum value.',
/*Line 7038 - 'MicrosoftAjax.debug.js' */'controlAlreadyDefined':'A control is already associated with the element.',
/*Line 7039 - 'MicrosoftAjax.debug.js' */'addHandlerCantBeUsedForError':'Can\'t add a handler for the error event using this method. Please set the window.onerror property instead.',
/*Line 7040 - 'MicrosoftAjax.debug.js' */'cantAddNonFunctionhandler':'Can\'t add a handler that is not a function.',
/*Line 7041 - 'MicrosoftAjax.debug.js' */'invalidNameSpace':'Value is not a valid namespace identifier.',
/*Line 7042 - 'MicrosoftAjax.debug.js' */'notAnInterface':'Value is not a valid interface.',
/*Line 7043 - 'MicrosoftAjax.debug.js' */'eventHandlerNotFunction':'Handler must be a function.',
/*Line 7044 - 'MicrosoftAjax.debug.js' */'propertyNotAnArray':'\'{0}\' is not an Array property.',
/*Line 7045 - 'MicrosoftAjax.debug.js' */'namespaceContainsClass':'Object {0} already exists as a class, enum, or interface.',
/*Line 7046 - 'MicrosoftAjax.debug.js' */'typeRegisteredTwice':'Type {0} has already been registered. The type may be defined multiple times or the script file that defines it may have already been loaded. A possible cause is a change of settings during a partial update.',
/*Line 7047 - 'MicrosoftAjax.debug.js' */'cantSetNameAfterInit':'The name property can\'t be set on this object after initialization.',
/*Line 7048 - 'MicrosoftAjax.debug.js' */'historyMissingFrame':'For the history feature to work in IE, the page must have an iFrame element with id \'__historyFrame\' pointed to a page that gets its title from the \'title\' query string parameter and calls Sys.Application._onIFrameLoad() on the parent window. This can be done by setting EnableHistory to true on ScriptManager.',
/*Line 7049 - 'MicrosoftAjax.debug.js' */'appDuplicateComponent':'Two components with the same id \'{0}\' can\'t be added to the application.',
/*Line 7050 - 'MicrosoftAjax.debug.js' */'historyCannotAddHistoryPointWithHistoryDisabled':'A history point can only be added if enableHistory is set to true.',
/*Line 7051 - 'MicrosoftAjax.debug.js' */'baseNotAClass':'Value is not a class.',
/*Line 7052 - 'MicrosoftAjax.debug.js' */'expectedElementOrId':'Value must be a DOM element or DOM element Id.',
/*Line 7053 - 'MicrosoftAjax.debug.js' */'methodNotFound':'No method found with name \'{0}\'.',
/*Line 7054 - 'MicrosoftAjax.debug.js' */'arrayParseBadFormat':'Value must be a valid string representation for an array. It must start with a \'[\' and end with a \']\'.',
/*Line 7055 - 'MicrosoftAjax.debug.js' */'stateFieldNameInvalid':'State field names must not contain any \'=\' characters.',
/*Line 7056 - 'MicrosoftAjax.debug.js' */'cantSetId':'The id property can\'t be set on this object.',
/*Line 7057 - 'MicrosoftAjax.debug.js' */'stringFormatBraceMismatch':'The format string contains an unmatched opening or closing brace.',
/*Line 7058 - 'MicrosoftAjax.debug.js' */'enumValueNotInteger':'An enumeration definition can only contain integer values.',
/*Line 7059 - 'MicrosoftAjax.debug.js' */'propertyNullOrUndefined':'Cannot set the properties of \'{0}\' because it returned a null value.',
/*Line 7060 - 'MicrosoftAjax.debug.js' */'argumentDomNode':'Value must be a DOM element or a text node.',
/*Line 7061 - 'MicrosoftAjax.debug.js' */'componentCantSetIdTwice':'The id property of a component can\'t be set more than once.',
/*Line 7062 - 'MicrosoftAjax.debug.js' */'createComponentOnDom':'Value must be null for Components that are not Controls or Behaviors.',
/*Line 7063 - 'MicrosoftAjax.debug.js' */'createNotComponent':'{0} does not derive from Sys.Component.',
/*Line 7064 - 'MicrosoftAjax.debug.js' */'createNoDom':'Value must not be null for Controls and Behaviors.',
/*Line 7065 - 'MicrosoftAjax.debug.js' */'cantAddWithoutId':'Can\'t add a component that doesn\'t have an id.',
/*Line 7066 - 'MicrosoftAjax.debug.js' */'notObservable':'Instances of type \'{0}\' cannot be observed.',
/*Line 7067 - 'MicrosoftAjax.debug.js' */'badTypeName':'Value is not the name of the type being registered or the name is a reserved word.',
/*Line 7068 - 'MicrosoftAjax.debug.js' */'argumentInteger':'Value must be an integer.',
/*Line 7069 - 'MicrosoftAjax.debug.js' */'invokeCalledTwice':'Cannot call invoke more than once.',
/*Line 7070 - 'MicrosoftAjax.debug.js' */'webServiceFailed':'The server method \'{0}\' failed with the following error: {1}',
/*Line 7071 - 'MicrosoftAjax.debug.js' */'argumentType':'Object cannot be converted to the required type.',
/*Line 7072 - 'MicrosoftAjax.debug.js' */'argumentNull':'Value cannot be null.',
/*Line 7073 - 'MicrosoftAjax.debug.js' */'scriptAlreadyLoaded':'The script \'{0}\' has been referenced multiple times. If referencing Microsoft AJAX scripts explicitly, set the MicrosoftAjaxMode property of the ScriptManager to Explicit.',
/*Line 7074 - 'MicrosoftAjax.debug.js' */'scriptDependencyNotFound':'The script \'{0}\' failed to load because it is dependent on script \'{1}\'.',
/*Line 7075 - 'MicrosoftAjax.debug.js' */'formatBadFormatSpecifier':'Format specifier was invalid.',
/*Line 7076 - 'MicrosoftAjax.debug.js' */'requiredScriptReferenceNotIncluded':'\'{0}\' requires that you have included a script reference to \'{1}\'.',
/*Line 7077 - 'MicrosoftAjax.debug.js' */'webServiceFailedNoMsg':'The server method \'{0}\' failed.',
/*Line 7078 - 'MicrosoftAjax.debug.js' */'argumentDomElement':'Value must be a DOM element.',
/*Line 7079 - 'MicrosoftAjax.debug.js' */'invalidExecutorType':'Could not create a valid Sys.Net.WebRequestExecutor from: {0}.',
/*Line 7080 - 'MicrosoftAjax.debug.js' */'cannotCallBeforeResponse':'Cannot call {0} when responseAvailable is false.',
/*Line 7081 - 'MicrosoftAjax.debug.js' */'actualValue':'Actual value was {0}.',
/*Line 7082 - 'MicrosoftAjax.debug.js' */'enumInvalidValue':'\'{0}\' is not a valid value for enum {1}.',
/*Line 7083 - 'MicrosoftAjax.debug.js' */'scriptLoadFailed':'The script \'{0}\' could not be loaded.',
/*Line 7084 - 'MicrosoftAjax.debug.js' */'parameterCount':'Parameter count mismatch.',
/*Line 7085 - 'MicrosoftAjax.debug.js' */'cannotDeserializeEmptyString':'Cannot deserialize empty string.',
/*Line 7086 - 'MicrosoftAjax.debug.js' */'formatInvalidString':'Input string was not in a correct format.',
/*Line 7087 - 'MicrosoftAjax.debug.js' */'invalidTimeout':'Value must be greater than or equal to zero.',
/*Line 7088 - 'MicrosoftAjax.debug.js' */'cannotAbortBeforeStart':'Cannot abort when executor has not started.',
/*Line 7089 - 'MicrosoftAjax.debug.js' */'argument':'Value does not fall within the expected range.',
/*Line 7090 - 'MicrosoftAjax.debug.js' */'cannotDeserializeInvalidJson':'Cannot deserialize. The data does not correspond to valid JSON.',
/*Line 7091 - 'MicrosoftAjax.debug.js' */'invalidHttpVerb':'httpVerb cannot be set to an empty or null string.',
/*Line 7092 - 'MicrosoftAjax.debug.js' */'nullWebRequest':'Cannot call executeRequest with a null webRequest.',
/*Line 7093 - 'MicrosoftAjax.debug.js' */'eventHandlerInvalid':'Handler was not added through the Sys.UI.DomEvent.addHandler method.',
/*Line 7094 - 'MicrosoftAjax.debug.js' */'cannotSerializeNonFiniteNumbers':'Cannot serialize non finite numbers.',
/*Line 7095 - 'MicrosoftAjax.debug.js' */'argumentUndefined':'Value cannot be undefined.',
/*Line 7096 - 'MicrosoftAjax.debug.js' */'webServiceInvalidReturnType':'The server method \'{0}\' returned an invalid type. Expected type: {1}',
/*Line 7097 - 'MicrosoftAjax.debug.js' */'servicePathNotSet':'The path to the web service has not been set.',
/*Line 7098 - 'MicrosoftAjax.debug.js' */'argumentTypeWithTypes':'Object of type \'{0}\' cannot be converted to type \'{1}\'.',
/*Line 7099 - 'MicrosoftAjax.debug.js' */'cannotCallOnceStarted':'Cannot call {0} once started.',
/*Line 7100 - 'MicrosoftAjax.debug.js' */'badBaseUrl1':'Base URL does not contain ://.',
/*Line 7101 - 'MicrosoftAjax.debug.js' */'badBaseUrl2':'Base URL does not contain another /.',
/*Line 7102 - 'MicrosoftAjax.debug.js' */'badBaseUrl3':'Cannot find last / in base URL.',
/*Line 7103 - 'MicrosoftAjax.debug.js' */'setExecutorAfterActive':'Cannot set executor after it has become active.',
/*Line 7104 - 'MicrosoftAjax.debug.js' */'paramName':'Parameter name: {0}',
/*Line 7105 - 'MicrosoftAjax.debug.js' */'nullReferenceInPath':'Null reference while evaluating data path: \'{0}\'.',
/*Line 7106 - 'MicrosoftAjax.debug.js' */'cannotCallOutsideHandler':'Cannot call {0} outside of a completed event handler.',
/*Line 7107 - 'MicrosoftAjax.debug.js' */'cannotSerializeObjectWithCycle':'Cannot serialize object with cyclic reference within child properties.',
/*Line 7108 - 'MicrosoftAjax.debug.js' */'format':'One of the identified items was in an invalid format.',
/*Line 7109 - 'MicrosoftAjax.debug.js' */'assertFailedCaller':'Assertion Failed: {0}\r\nat {1}',
/*Line 7110 - 'MicrosoftAjax.debug.js' */'argumentOutOfRange':'Specified argument was out of the range of valid values.',
/*Line 7111 - 'MicrosoftAjax.debug.js' */'webServiceTimedOut':'The server method \'{0}\' timed out.',
/*Line 7112 - 'MicrosoftAjax.debug.js' */'notImplemented':'The method or operation is not implemented.',
/*Line 7113 - 'MicrosoftAjax.debug.js' */'assertFailed':'Assertion Failed: {0}',
/*Line 7114 - 'MicrosoftAjax.debug.js' */'invalidOperation':'Operation is not valid due to the current state of the object.',
/*Line 7115 - 'MicrosoftAjax.debug.js' */'breakIntoDebugger':'{0}\r\n\r\nBreak into debugger?'
/*Line 7116 - 'MicrosoftAjax.debug.js' */};
/*Line 0 - 'Atom.js' */var Atom = {


/*Line 3 - 'Atom.js' */    url: function (url, q) {
/*Line 4 - 'Atom.js' */        var finalUrl = url;
/*Line 5 - 'Atom.js' */        var index = finalUrl.indexOf('?');
/*Line 6 - 'Atom.js' */        if (index == -1) {
/*Line 7 - 'Atom.js' */            finalUrl += "?";
/*Line 8 - 'Atom.js' */        }else {
/*Line 9 - 'Atom.js' */            finalUrl += '&';
/*Line 10 - 'Atom.js' */        }
/*Line 11 - 'Atom.js' */        var plist = [];
/*Line 12 - 'Atom.js' */        for (var i in q) {
/*Line 13 - 'Atom.js' */            if (q.hasOwnProperty(i)) {
/*Line 14 - 'Atom.js' */                var val = q[i];
/*Line 15 - 'Atom.js' */                if (val === undefined)
/*Line 16 - 'Atom.js' */                    continue;
/*Line 17 - 'Atom.js' */                if (val === null)
/*Line 18 - 'Atom.js' */                    continue;
/*Line 19 - 'Atom.js' */                plist.push(i + '=' + encodeURIComponent(val) );
/*Line 20 - 'Atom.js' */            }
/*Line 21 - 'Atom.js' */        }
/*Line 22 - 'Atom.js' */        finalUrl += plist.join('&');
/*Line 23 - 'Atom.js' */        return finalUrl;
/*Line 24 - 'Atom.js' */    },

/*Line 26 - 'Atom.js' */    tableLayout: function (columns, cellWidth, cellHeight) {
/*Line 27 - 'Atom.js' */        return new NeuroSpeech.WebAtoms.AtomTableLayout(columns, cellWidth, cellHeight);
/*Line 28 - 'Atom.js' */    }
/*Line 29 - 'Atom.js' */};
/*Line 0 - 'WebAtoms.Core.js' */
/*Line 1 - 'WebAtoms.Core.js' */
/*Line 2 - 'WebAtoms.Core.js' */
/*Line 3 - 'WebAtoms.Core.js' */
/*Line 4 - 'WebAtoms.Core.js' */

/*Line 6 - 'WebAtoms.Core.js' */function log(s) {
/*Line 7 - 'WebAtoms.Core.js' */    //var l = $get("logger");
/*Line 8 - 'WebAtoms.Core.js' */    //l.innerHTML += s + "<br/>";

/*Line 10 - 'WebAtoms.Core.js' */    if (typeof console!="undefined") {
/*Line 11 - 'WebAtoms.Core.js' */        console.log(s);
/*Line 12 - 'WebAtoms.Core.js' */    }

/*Line 14 - 'WebAtoms.Core.js' */}

/*Line 16 - 'WebAtoms.Core.js' */AtomBrowser = {
/*Line 17 - 'WebAtoms.Core.js' */    browserName: "",
/*Line 18 - 'WebAtoms.Core.js' */    version: "1.0",
/*Line 19 - 'WebAtoms.Core.js' */    majorVersion: 1,
/*Line 20 - 'WebAtoms.Core.js' */    isMobile: false,
/*Line 21 - 'WebAtoms.Core.js' */    detect: function () {
/*Line 22 - 'WebAtoms.Core.js' */        var nVer = navigator.appVersion;
/*Line 23 - 'WebAtoms.Core.js' */        var nAgt = navigator.userAgent;
/*Line 24 - 'WebAtoms.Core.js' */        var browserName = navigator.appName;
/*Line 25 - 'WebAtoms.Core.js' */        var fullVersion = '' + parseFloat(navigator.appVersion);
/*Line 26 - 'WebAtoms.Core.js' */        var majorVersion = parseInt(navigator.appVersion, 10);
/*Line 27 - 'WebAtoms.Core.js' */        var nameOffset, verOffset, ix;

/*Line 29 - 'WebAtoms.Core.js' */        // In Opera, the true version is after "Opera" or after "Version"
/*Line 30 - 'WebAtoms.Core.js' */        if ((verOffset = nAgt.indexOf("Opera")) != -1) {
/*Line 31 - 'WebAtoms.Core.js' */            browserName = "Opera";
/*Line 32 - 'WebAtoms.Core.js' */            fullVersion = nAgt.substring(verOffset + 6);
/*Line 33 - 'WebAtoms.Core.js' */            if ((verOffset = nAgt.indexOf("Version")) != -1)
/*Line 34 - 'WebAtoms.Core.js' */                fullVersion = nAgt.substring(verOffset + 8);
/*Line 35 - 'WebAtoms.Core.js' */        }
/*Line 36 - 'WebAtoms.Core.js' */        // In MSIE, the true version is after "MSIE" in userAgent
/*Line 37 - 'WebAtoms.Core.js' */        else if ((verOffset = nAgt.indexOf("MSIE")) != -1) {
/*Line 38 - 'WebAtoms.Core.js' */            browserName = "Microsoft Internet Explorer";
/*Line 39 - 'WebAtoms.Core.js' */            fullVersion = nAgt.substring(verOffset + 5);
/*Line 40 - 'WebAtoms.Core.js' */        }
/*Line 41 - 'WebAtoms.Core.js' */        // In Chrome, the true version is after "Chrome"
/*Line 42 - 'WebAtoms.Core.js' */        else if ((verOffset = nAgt.indexOf("Chrome")) != -1) {
/*Line 43 - 'WebAtoms.Core.js' */            browserName = "Chrome";
/*Line 44 - 'WebAtoms.Core.js' */            fullVersion = nAgt.substring(verOffset + 7);
/*Line 45 - 'WebAtoms.Core.js' */        }
/*Line 46 - 'WebAtoms.Core.js' */        // In Safari, the true version is after "Safari" or after "Version"
/*Line 47 - 'WebAtoms.Core.js' */        else if ((verOffset = nAgt.indexOf("Safari")) != -1) {
/*Line 48 - 'WebAtoms.Core.js' */            browserName = "Safari";
/*Line 49 - 'WebAtoms.Core.js' */            this.isMobile = nAgt.indexOf("iOS") != -1;
/*Line 50 - 'WebAtoms.Core.js' */            fullVersion = nAgt.substring(verOffset + 7);
/*Line 51 - 'WebAtoms.Core.js' */            if ((verOffset = nAgt.indexOf("Version")) != -1)
/*Line 52 - 'WebAtoms.Core.js' */                fullVersion = nAgt.substring(verOffset + 8);
/*Line 53 - 'WebAtoms.Core.js' */        }
/*Line 54 - 'WebAtoms.Core.js' */        // In Firefox, the true version is after "Firefox"
/*Line 55 - 'WebAtoms.Core.js' */        else if ((verOffset = nAgt.indexOf("Firefox")) != -1) {
/*Line 56 - 'WebAtoms.Core.js' */            browserName = "Firefox";
/*Line 57 - 'WebAtoms.Core.js' */            fullVersion = nAgt.substring(verOffset + 8);
/*Line 58 - 'WebAtoms.Core.js' */        }
/*Line 59 - 'WebAtoms.Core.js' */        // In most other browsers, "name/version" is at the end of userAgent
/*Line 60 - 'WebAtoms.Core.js' */        else if ((nameOffset = nAgt.lastIndexOf(' ') + 1) <
/*Line 61 - 'WebAtoms.Core.js' */              (verOffset = nAgt.lastIndexOf('/'))) {
/*Line 62 - 'WebAtoms.Core.js' */            browserName = nAgt.substring(nameOffset, verOffset);
/*Line 63 - 'WebAtoms.Core.js' */            fullVersion = nAgt.substring(verOffset + 1);
/*Line 64 - 'WebAtoms.Core.js' */            if (browserName.toLowerCase() == browserName.toUpperCase()) {
/*Line 65 - 'WebAtoms.Core.js' */                browserName = navigator.appName;
/*Line 66 - 'WebAtoms.Core.js' */            }
/*Line 67 - 'WebAtoms.Core.js' */        }
/*Line 68 - 'WebAtoms.Core.js' */        // trim the fullVersion string at semicolon/space if present
/*Line 69 - 'WebAtoms.Core.js' */        if ((ix = fullVersion.indexOf(";")) != -1)
/*Line 70 - 'WebAtoms.Core.js' */            fullVersion = fullVersion.substring(0, ix);
/*Line 71 - 'WebAtoms.Core.js' */        if ((ix = fullVersion.indexOf(" ")) != -1)
/*Line 72 - 'WebAtoms.Core.js' */            fullVersion = fullVersion.substring(0, ix);

/*Line 74 - 'WebAtoms.Core.js' */        majorVersion = parseInt('' + fullVersion, 10);
/*Line 75 - 'WebAtoms.Core.js' */        if (isNaN(majorVersion)) {
/*Line 76 - 'WebAtoms.Core.js' */            fullVersion = '' + parseFloat(navigator.appVersion);
/*Line 77 - 'WebAtoms.Core.js' */            majorVersion = parseInt(navigator.appVersion, 10);
/*Line 78 - 'WebAtoms.Core.js' */        }

/*Line 80 - 'WebAtoms.Core.js' */        this.browserName = browserName;
/*Line 81 - 'WebAtoms.Core.js' */        this.majorVersion = majorVersion;
/*Line 82 - 'WebAtoms.Core.js' */    },

/*Line 84 - 'WebAtoms.Core.js' */    isFF: false,
/*Line 85 - 'WebAtoms.Core.js' */    isChrome: false,
/*Line 86 - 'WebAtoms.Core.js' */    isIE: false,
/*Line 87 - 'WebAtoms.Core.js' */    isSafari:false,

/*Line 89 - 'WebAtoms.Core.js' */    initialize: function () {
/*Line 90 - 'WebAtoms.Core.js' */        switch (this.browserName) {
/*Line 91 - 'WebAtoms.Core.js' */            case "Firefox":
/*Line 92 - 'WebAtoms.Core.js' */                this.supportsUpload = this.majorVersion >= 4;
/*Line 93 - 'WebAtoms.Core.js' */                this.isFF = true;
/*Line 94 - 'WebAtoms.Core.js' */                break;
/*Line 95 - 'WebAtoms.Core.js' */            case "Chrome":
/*Line 96 - 'WebAtoms.Core.js' */                this.supportsUpload = this.majorVersion >= 6;
/*Line 97 - 'WebAtoms.Core.js' */                this.isChrome = true;
/*Line 98 - 'WebAtoms.Core.js' */                break;
/*Line 99 - 'WebAtoms.Core.js' */            case "Microsoft Internet Explorer":
/*Line 100 - 'WebAtoms.Core.js' */                this.supportsUpload = this.majorVersion >= 10;
/*Line 101 - 'WebAtoms.Core.js' */                this.isIE = true;
/*Line 102 - 'WebAtoms.Core.js' */                break;
/*Line 103 - 'WebAtoms.Core.js' */            case "Safari":
/*Line 104 - 'WebAtoms.Core.js' */                this.isSafari = true;
/*Line 105 - 'WebAtoms.Core.js' */                if(!this.isMobile)
/*Line 106 - 'WebAtoms.Core.js' */                    this.supportsUpload = this.majorVersion >= 5;
/*Line 107 - 'WebAtoms.Core.js' */                break;
/*Line 108 - 'WebAtoms.Core.js' */        }

/*Line 110 - 'WebAtoms.Core.js' */        // is it ios??
/*Line 111 - 'WebAtoms.Core.js' */        this.supportsFlash = !this.isMobile;
/*Line 112 - 'WebAtoms.Core.js' */    }

/*Line 114 - 'WebAtoms.Core.js' */};

/*Line 116 - 'WebAtoms.Core.js' */AtomBrowser.detect();
/*Line 117 - 'WebAtoms.Core.js' */AtomBrowser.initialize();

/*Line 119 - 'WebAtoms.Core.js' */AtomEnumerator = function (array) {
/*Line 120 - 'WebAtoms.Core.js' */    this._array = array;
/*Line 121 - 'WebAtoms.Core.js' */    this.n = array.length;
/*Line 122 - 'WebAtoms.Core.js' */    this.i = -1;
/*Line 123 - 'WebAtoms.Core.js' */};

/*Line 125 - 'WebAtoms.Core.js' */AtomEnumerator.prototype = {
/*Line 126 - 'WebAtoms.Core.js' */    next: function () {
/*Line 127 - 'WebAtoms.Core.js' */        this.i = this.i + 1;
/*Line 128 - 'WebAtoms.Core.js' */        return this.i < this.n;
/*Line 129 - 'WebAtoms.Core.js' */    },
/*Line 130 - 'WebAtoms.Core.js' */    current: function () {
/*Line 131 - 'WebAtoms.Core.js' */        return this._array[this.i];
/*Line 132 - 'WebAtoms.Core.js' */    },
/*Line 133 - 'WebAtoms.Core.js' */    currentIndex: function () {
/*Line 134 - 'WebAtoms.Core.js' */        return this.i;
/*Line 135 - 'WebAtoms.Core.js' */    },
/*Line 136 - 'WebAtoms.Core.js' */    isFirst: function () {
/*Line 137 - 'WebAtoms.Core.js' */        return this.i == 0;
/*Line 138 - 'WebAtoms.Core.js' */    },
/*Line 139 - 'WebAtoms.Core.js' */    isLast: function () {
/*Line 140 - 'WebAtoms.Core.js' */        return this.i == this.n - 1;
/*Line 141 - 'WebAtoms.Core.js' */    },
/*Line 142 - 'WebAtoms.Core.js' */    reset: function () {
/*Line 143 - 'WebAtoms.Core.js' */        this.i = -1;
/*Line 144 - 'WebAtoms.Core.js' */    }
/*Line 145 - 'WebAtoms.Core.js' */};



/*Line 149 - 'WebAtoms.Core.js' */AtomEnumerator.registerClass("AtomEnumerator");

/*Line 151 - 'WebAtoms.Core.js' */AtomLogicContext = function () {
/*Line 152 - 'WebAtoms.Core.js' */    this._called = false;
/*Line 153 - 'WebAtoms.Core.js' */};

/*Line 155 - 'WebAtoms.Core.js' */AtomLogicContext.prototype = {
/*Line 156 - 'WebAtoms.Core.js' */    preventRecursive: function (f,thisArg) {
/*Line 157 - 'WebAtoms.Core.js' */        if (this._called)
/*Line 158 - 'WebAtoms.Core.js' */            return;
/*Line 159 - 'WebAtoms.Core.js' */        this._called = true;
/*Line 160 - 'WebAtoms.Core.js' */        try {
/*Line 161 - 'WebAtoms.Core.js' */            f.apply(thisArg);
/*Line 162 - 'WebAtoms.Core.js' */        } finally {
/*Line 163 - 'WebAtoms.Core.js' */            this._called = false;
/*Line 164 - 'WebAtoms.Core.js' */        }
/*Line 165 - 'WebAtoms.Core.js' */    }
/*Line 166 - 'WebAtoms.Core.js' */};

/*Line 168 - 'WebAtoms.Core.js' */AtomLogicContext.registerClass("AtomLogicContext");

/*Line 170 - 'WebAtoms.Core.js' */Array.prototype.enumerator = function () {
/*Line 171 - 'WebAtoms.Core.js' */    return new AtomEnumerator(this);
/*Line 172 - 'WebAtoms.Core.js' */};

/*Line 174 - 'WebAtoms.Core.js' */if (!Array.prototype.indexOf) {
/*Line 175 - 'WebAtoms.Core.js' */    Array.prototype.indexOf = function (item) {
/*Line 176 - 'WebAtoms.Core.js' */        var i = 0;
/*Line 177 - 'WebAtoms.Core.js' */        for (i = 0; i < this.length; i++) {
/*Line 178 - 'WebAtoms.Core.js' */            if (item == this[i])
/*Line 179 - 'WebAtoms.Core.js' */                return i;
/*Line 180 - 'WebAtoms.Core.js' */        }
/*Line 181 - 'WebAtoms.Core.js' */        return -1;
/*Line 182 - 'WebAtoms.Core.js' */    }
/*Line 183 - 'WebAtoms.Core.js' */}

/*Line 185 - 'WebAtoms.Core.js' */AtomArray = {

/*Line 187 - 'WebAtoms.Core.js' */    split: function (text, sep) {
/*Line 188 - 'WebAtoms.Core.js' */        var ar = text.split(sep);
/*Line 189 - 'WebAtoms.Core.js' */        var r = [];
/*Line 190 - 'WebAtoms.Core.js' */        var ae = new AtomEnumerator(ar);
/*Line 191 - 'WebAtoms.Core.js' */        var item;
/*Line 192 - 'WebAtoms.Core.js' */        while (ae.next()) {
/*Line 193 - 'WebAtoms.Core.js' */            item = ae.current();
/*Line 194 - 'WebAtoms.Core.js' */            if (item && item.constructor == String) {
/*Line 195 - 'WebAtoms.Core.js' */                item = $.trim(item);
/*Line 196 - 'WebAtoms.Core.js' */            }
/*Line 197 - 'WebAtoms.Core.js' */            r.push(item);
/*Line 198 - 'WebAtoms.Core.js' */        }
/*Line 199 - 'WebAtoms.Core.js' */        return r;
/*Line 200 - 'WebAtoms.Core.js' */    },

/*Line 202 - 'WebAtoms.Core.js' */    getValues: function (array, path) {
/*Line 203 - 'WebAtoms.Core.js' */        var item;
/*Line 204 - 'WebAtoms.Core.js' */        var result = array;
/*Line 205 - 'WebAtoms.Core.js' */        if (path) {
/*Line 206 - 'WebAtoms.Core.js' */            result = [];
/*Line 207 - 'WebAtoms.Core.js' */            var ae = new AtomEnumerator(array);
/*Line 208 - 'WebAtoms.Core.js' */            while (ae.next()) {
/*Line 209 - 'WebAtoms.Core.js' */                item = ae.current();
/*Line 210 - 'WebAtoms.Core.js' */                result.push(item[path]);
/*Line 211 - 'WebAtoms.Core.js' */            }
/*Line 212 - 'WebAtoms.Core.js' */        }
/*Line 213 - 'WebAtoms.Core.js' */        return result;
/*Line 214 - 'WebAtoms.Core.js' */    },

/*Line 216 - 'WebAtoms.Core.js' */    intersect: function (array, path, value) {
/*Line 217 - 'WebAtoms.Core.js' */        var result = [];
/*Line 218 - 'WebAtoms.Core.js' */        var ae = new AtomEnumerator(value);
/*Line 219 - 'WebAtoms.Core.js' */        var item;
/*Line 220 - 'WebAtoms.Core.js' */        var match;
/*Line 221 - 'WebAtoms.Core.js' */        while (ae.next()) {
/*Line 222 - 'WebAtoms.Core.js' */            item = ae.current();
/*Line 223 - 'WebAtoms.Core.js' */            match = this.getMatch(array, path, item);
/*Line 224 - 'WebAtoms.Core.js' */            if (match != undefined)
/*Line 225 - 'WebAtoms.Core.js' */                result.push(match);
/*Line 226 - 'WebAtoms.Core.js' */        }
/*Line 227 - 'WebAtoms.Core.js' */        return result;
/*Line 228 - 'WebAtoms.Core.js' */    },

/*Line 230 - 'WebAtoms.Core.js' */    getMatch: function (array, path, value) {
/*Line 231 - 'WebAtoms.Core.js' */        var ae = new AtomEnumerator(array);
/*Line 232 - 'WebAtoms.Core.js' */        var dataItem;
/*Line 233 - 'WebAtoms.Core.js' */        var item;
/*Line 234 - 'WebAtoms.Core.js' */        while (ae.next()) {
/*Line 235 - 'WebAtoms.Core.js' */            dataItem = ae.current();
/*Line 236 - 'WebAtoms.Core.js' */            item = dataItem;
/*Line 237 - 'WebAtoms.Core.js' */            if (path)
/*Line 238 - 'WebAtoms.Core.js' */                item = dataItem[path];
/*Line 239 - 'WebAtoms.Core.js' */            if (item == value)
/*Line 240 - 'WebAtoms.Core.js' */                return dataItem;
/*Line 241 - 'WebAtoms.Core.js' */        }
/*Line 242 - 'WebAtoms.Core.js' */    },

/*Line 244 - 'WebAtoms.Core.js' */    remove: function (array, item) {
/*Line 245 - 'WebAtoms.Core.js' */        var ae = new AtomEnumerator(array);
/*Line 246 - 'WebAtoms.Core.js' */        while (ae.next()) {
/*Line 247 - 'WebAtoms.Core.js' */            var arrayItem = ae.current();
/*Line 248 - 'WebAtoms.Core.js' */            if (arrayItem == item) {
/*Line 249 - 'WebAtoms.Core.js' */                array.splice(ae.currentIndex(), 1);
/*Line 250 - 'WebAtoms.Core.js' */                return;
/*Line 251 - 'WebAtoms.Core.js' */            }
/*Line 252 - 'WebAtoms.Core.js' */        }
/*Line 253 - 'WebAtoms.Core.js' */    }
/*Line 254 - 'WebAtoms.Core.js' */};

/*Line 256 - 'WebAtoms.Core.js' */AtomRect = function () {
/*Line 257 - 'WebAtoms.Core.js' */    if (arguments) {
/*Line 258 - 'WebAtoms.Core.js' */        if (arguments.length == 1) {
/*Line 259 - 'WebAtoms.Core.js' */            // copy from rect
/*Line 260 - 'WebAtoms.Core.js' */            var r = arguments[0];
/*Line 261 - 'WebAtoms.Core.js' */            this.copyFrom(r);
/*Line 262 - 'WebAtoms.Core.js' */        } else if (arguments.length == 4) {
/*Line 263 - 'WebAtoms.Core.js' */            this.left = arguments[0];
/*Line 264 - 'WebAtoms.Core.js' */            this.top = arguments[1];
/*Line 265 - 'WebAtoms.Core.js' */            this.width = arguments[2];
/*Line 266 - 'WebAtoms.Core.js' */            this.height = arguments[3];
/*Line 267 - 'WebAtoms.Core.js' */        }
/*Line 268 - 'WebAtoms.Core.js' */    }
/*Line 269 - 'WebAtoms.Core.js' */};

/*Line 271 - 'WebAtoms.Core.js' */AtomRect.prototype = {
/*Line 272 - 'WebAtoms.Core.js' */    copyFrom: function (r) {
/*Line 273 - 'WebAtoms.Core.js' */        this.left = r.left;
/*Line 274 - 'WebAtoms.Core.js' */        this.top = r.top;
/*Line 275 - 'WebAtoms.Core.js' */        this.width = r.width;
/*Line 276 - 'WebAtoms.Core.js' */        this.height = r.height;
/*Line 277 - 'WebAtoms.Core.js' */    },
/*Line 278 - 'WebAtoms.Core.js' */    clone: function () {
/*Line 279 - 'WebAtoms.Core.js' */        return new AtomRect(this);
/*Line 280 - 'WebAtoms.Core.js' */    },
/*Line 281 - 'WebAtoms.Core.js' */    load: function (e) {
/*Line 282 - 'WebAtoms.Core.js' */        this.copyFrom(AtomUI.getItemRect(e));
/*Line 283 - 'WebAtoms.Core.js' */    },
/*Line 284 - 'WebAtoms.Core.js' */    apply: function (e) {
/*Line 285 - 'WebAtoms.Core.js' */        AtomUI.setItemRect(e, this);
/*Line 286 - 'WebAtoms.Core.js' */    }
/*Line 287 - 'WebAtoms.Core.js' */};

/*Line 289 - 'WebAtoms.Core.js' */AtomRect.registerClass("AtomRect");

/*Line 291 - 'WebAtoms.Core.js' */if (!Type.isNamespace("NeuroSpeech.WebAtoms"))
/*Line 292 - 'WebAtoms.Core.js' */    Type.registerNamespace("NeuroSpeech.WebAtoms");

/*Line 294 - 'WebAtoms.Core.js' */AtomUI =
/*Line 295 - 'WebAtoms.Core.js' */{

/*Line 297 - 'WebAtoms.Core.js' */    startsWith: function (text, part) {
/*Line 298 - 'WebAtoms.Core.js' */        return text.indexOf(part) == 0;
/*Line 299 - 'WebAtoms.Core.js' */    },
/*Line 300 - 'WebAtoms.Core.js' */    endsWith: function (text, part) {
/*Line 301 - 'WebAtoms.Core.js' */        return text.lastIndexOf(part) == (text.length - part.length);
/*Line 302 - 'WebAtoms.Core.js' */    },

/*Line 304 - 'WebAtoms.Core.js' */    isNode: function (o) {
/*Line 305 - 'WebAtoms.Core.js' */        if (o === window || o === document)
/*Line 306 - 'WebAtoms.Core.js' */            return true;
/*Line 307 - 'WebAtoms.Core.js' */        return (
/*Line 308 - 'WebAtoms.Core.js' */        typeof Node === "object" ? o instanceof Node :
/*Line 309 - 'WebAtoms.Core.js' */        typeof o === "object" && typeof o.nodeType === "number" && typeof o.nodeName === "string"
/*Line 310 - 'WebAtoms.Core.js' */      );
/*Line 311 - 'WebAtoms.Core.js' */    },

/*Line 313 - 'WebAtoms.Core.js' */    createDelegate: function (instance, methodName) {
/*Line 314 - 'WebAtoms.Core.js' */        return this.getDelegate(instance, methodName, true);
/*Line 315 - 'WebAtoms.Core.js' */    },
/*Line 316 - 'WebAtoms.Core.js' */    getDelegate: function (instance, methodName, create) {
/*Line 317 - 'WebAtoms.Core.js' */        if (methodName && methodName.constructor != String)
/*Line 318 - 'WebAtoms.Core.js' */            throw new Error("methodName has to be string");
/*Line 319 - 'WebAtoms.Core.js' */        var d = instance.__delegates;
/*Line 320 - 'WebAtoms.Core.js' */        if (!d) {
/*Line 321 - 'WebAtoms.Core.js' */            if (!create)
/*Line 322 - 'WebAtoms.Core.js' */                return null;
/*Line 323 - 'WebAtoms.Core.js' */            d = {};
/*Line 324 - 'WebAtoms.Core.js' */            instance.__delegates = d;
/*Line 325 - 'WebAtoms.Core.js' */        }
/*Line 326 - 'WebAtoms.Core.js' */        var m = d[methodName];
/*Line 327 - 'WebAtoms.Core.js' */        if (!m) {
/*Line 328 - 'WebAtoms.Core.js' */            if (!create)
/*Line 329 - 'WebAtoms.Core.js' */                return null;
/*Line 330 - 'WebAtoms.Core.js' */            var f = instance[methodName];
/*Line 331 - 'WebAtoms.Core.js' */            m = function () {
/*Line 332 - 'WebAtoms.Core.js' */                return f.apply(instance, arguments);
/*Line 333 - 'WebAtoms.Core.js' */            };
/*Line 334 - 'WebAtoms.Core.js' */            d[methodName] = m;
/*Line 335 - 'WebAtoms.Core.js' */        }
/*Line 336 - 'WebAtoms.Core.js' */        return m;
/*Line 337 - 'WebAtoms.Core.js' */    },

/*Line 339 - 'WebAtoms.Core.js' */    getNewIndex: function () {
/*Line 340 - 'WebAtoms.Core.js' */        if (this.__index == undefined || this.__index == null) {
/*Line 341 - 'WebAtoms.Core.js' */            this.__index = 1001;
/*Line 342 - 'WebAtoms.Core.js' */        }else {
/*Line 343 - 'WebAtoms.Core.js' */            this.__index = this.__index + 1;
/*Line 344 - 'WebAtoms.Core.js' */        }
/*Line 345 - 'WebAtoms.Core.js' */        return this.__index;
/*Line 346 - 'WebAtoms.Core.js' */    },
/*Line 347 - 'WebAtoms.Core.js' */    addCssAt: function (element, index, css) {
/*Line 348 - 'WebAtoms.Core.js' */        var child = $(element).children()[index];
/*Line 349 - 'WebAtoms.Core.js' */        Sys.UI.DomElement.addCssClass(child, css)
/*Line 350 - 'WebAtoms.Core.js' */    },
/*Line 351 - 'WebAtoms.Core.js' */    removeCssAt: function (element, index, css) {
/*Line 352 - 'WebAtoms.Core.js' */        var child = $(element).children()[index];
/*Line 353 - 'WebAtoms.Core.js' */        Sys.UI.DomElement.removeCssClass(child, css)
/*Line 354 - 'WebAtoms.Core.js' */    },
/*Line 355 - 'WebAtoms.Core.js' */    childIndexOf: function (parent, element) {
/*Line 356 - 'WebAtoms.Core.js' */        var n = parent.children.length;
/*Line 357 - 'WebAtoms.Core.js' */        for (var i = 0; i < n; i++) {
/*Line 358 - 'WebAtoms.Core.js' */            if (parent.children[i] == element)
/*Line 359 - 'WebAtoms.Core.js' */                return i;
/*Line 360 - 'WebAtoms.Core.js' */        }
/*Line 361 - 'WebAtoms.Core.js' */        return -1;
/*Line 362 - 'WebAtoms.Core.js' */    },

/*Line 364 - 'WebAtoms.Core.js' */    addClass: function (element, css) {
/*Line 365 - 'WebAtoms.Core.js' */        $(element).addClass(css);
/*Line 366 - 'WebAtoms.Core.js' */        AtomUI.updateCss(element);
/*Line 367 - 'WebAtoms.Core.js' */    },
/*Line 368 - 'WebAtoms.Core.js' */    removeClass: function (element, css) {
/*Line 369 - 'WebAtoms.Core.js' */        $(element).removeClass(css);
/*Line 370 - 'WebAtoms.Core.js' */        AtomUI.updateCss(element);
/*Line 371 - 'WebAtoms.Core.js' */    },

/*Line 373 - 'WebAtoms.Core.js' */    updateCss: function (element) {
/*Line 374 - 'WebAtoms.Core.js' */        var selected = $(element).hasClass("atom-selected");
/*Line 375 - 'WebAtoms.Core.js' */        var type = $(element).attr("atom-style");
/*Line 376 - 'WebAtoms.Core.js' */        if (type == undefined || type == null || type == "") {
/*Line 377 - 'WebAtoms.Core.js' */            return;
/*Line 378 - 'WebAtoms.Core.js' */        }
/*Line 379 - 'WebAtoms.Core.js' */        if (selected)
/*Line 380 - 'WebAtoms.Core.js' */            type = type + "Active";

/*Line 382 - 'WebAtoms.Core.js' */        var url = 'url("/Handlers/GetPNG.ashx?control=' + type;
/*Line 383 - 'WebAtoms.Core.js' */        //var r = AtomUI.getItemRect(element);
/*Line 384 - 'WebAtoms.Core.js' */        url += "&width=" + $(element).outerWidth();
/*Line 385 - 'WebAtoms.Core.js' */        url += "&height=" + $(element).outerHeight();
/*Line 386 - 'WebAtoms.Core.js' */        url += '")';
/*Line 387 - 'WebAtoms.Core.js' */        var oldUrl = element.style.backgroundImage;
/*Line 388 - 'WebAtoms.Core.js' */        if (url != oldUrl) {
/*Line 389 - 'WebAtoms.Core.js' */            element.style.backgroundImage = url;
/*Line 390 - 'WebAtoms.Core.js' */            element.style.backgroundRepeat = "no-repeat";
/*Line 391 - 'WebAtoms.Core.js' */        }

/*Line 393 - 'WebAtoms.Core.js' */        //ss.addRule("." + id + "xamlStyle", "background-image:url(" + url + "); cursor:pointer; padding:" + padding);

/*Line 395 - 'WebAtoms.Core.js' */        //$(element).addClass(id + "xamlStyle");

/*Line 397 - 'WebAtoms.Core.js' */    },
/*Line 398 - 'WebAtoms.Core.js' */    setUI: function (element, type, css) {
/*Line 399 - 'WebAtoms.Core.js' */        if (type != null) {
/*Line 400 - 'WebAtoms.Core.js' */            $(element).attr("atom-style", function () {
/*Line 401 - 'WebAtoms.Core.js' */                return type;
/*Line 402 - 'WebAtoms.Core.js' */            });
/*Line 403 - 'WebAtoms.Core.js' */        }
/*Line 404 - 'WebAtoms.Core.js' */        if (css != undefined && css != null && css != "") {
/*Line 405 - 'WebAtoms.Core.js' */            if (!$(element).hasClass(css))
/*Line 406 - 'WebAtoms.Core.js' */                $(element).addClass(css);
/*Line 407 - 'WebAtoms.Core.js' */        }
/*Line 408 - 'WebAtoms.Core.js' */        AtomUI.updateCss(element);
/*Line 409 - 'WebAtoms.Core.js' */    },

/*Line 411 - 'WebAtoms.Core.js' */    contains: function (array, item) {
/*Line 412 - 'WebAtoms.Core.js' */        var n = array.length;
/*Line 413 - 'WebAtoms.Core.js' */        var i = 0;
/*Line 414 - 'WebAtoms.Core.js' */        for (i = 0; i < n; i++) {
/*Line 415 - 'WebAtoms.Core.js' */            if (array[i] == item)
/*Line 416 - 'WebAtoms.Core.js' */                return true;
/*Line 417 - 'WebAtoms.Core.js' */        }
/*Line 418 - 'WebAtoms.Core.js' */        return false;
/*Line 419 - 'WebAtoms.Core.js' */    },

/*Line 421 - 'WebAtoms.Core.js' */    removeAllChildren: function (element) {
/*Line 422 - 'WebAtoms.Core.js' */        while (element.hasChildNodes()) {
/*Line 423 - 'WebAtoms.Core.js' */            var lc = element.lastChild;
/*Line 424 - 'WebAtoms.Core.js' */            element.removeChild(lc);
/*Line 425 - 'WebAtoms.Core.js' */            if (lc.atomControl) {
/*Line 426 - 'WebAtoms.Core.js' */                lc.atomControl.dispose();
/*Line 427 - 'WebAtoms.Core.js' */                delete lc.atomControl;
/*Line 428 - 'WebAtoms.Core.js' */            }
/*Line 429 - 'WebAtoms.Core.js' */            delete lc;
/*Line 430 - 'WebAtoms.Core.js' */        }
/*Line 431 - 'WebAtoms.Core.js' */    },

/*Line 433 - 'WebAtoms.Core.js' */    parseStyleNumber: function (x) {
/*Line 434 - 'WebAtoms.Core.js' */        var n = parseFloat(x);
/*Line 435 - 'WebAtoms.Core.js' */        if (isNaN(n))
/*Line 436 - 'WebAtoms.Core.js' */            return 0;
/*Line 437 - 'WebAtoms.Core.js' */        return n;
/*Line 438 - 'WebAtoms.Core.js' */    },

/*Line 440 - 'WebAtoms.Core.js' */    parseStyleRect: function (e, key, addTo, pad) {

/*Line 442 - 'WebAtoms.Core.js' */        var r = {
/*Line 443 - 'WebAtoms.Core.js' */            left: 0,
/*Line 444 - 'WebAtoms.Core.js' */            top: 0,
/*Line 445 - 'WebAtoms.Core.js' */            right: 0,
/*Line 446 - 'WebAtoms.Core.js' */            bottom: 0
/*Line 447 - 'WebAtoms.Core.js' */        };
/*Line 448 - 'WebAtoms.Core.js' */        if (addTo) {
/*Line 449 - 'WebAtoms.Core.js' */            r.left += addTo.left;
/*Line 450 - 'WebAtoms.Core.js' */            r.right += addTo.right;
/*Line 451 - 'WebAtoms.Core.js' */            r.top += addTo.top;
/*Line 452 - 'WebAtoms.Core.js' */            r.bottom += addTo.bottom;
/*Line 453 - 'WebAtoms.Core.js' */        }
/*Line 454 - 'WebAtoms.Core.js' */        if (!pad)
/*Line 455 - 'WebAtoms.Core.js' */            pad = "";
/*Line 456 - 'WebAtoms.Core.js' */        r.left += this.parseStyleNumber(e[key + "Left" + pad]);
/*Line 457 - 'WebAtoms.Core.js' */        r.right += this.parseStyleNumber(e[key + "Right" + pad]);
/*Line 458 - 'WebAtoms.Core.js' */        r.top += this.parseStyleNumber(e[key + "Top" + pad]);
/*Line 459 - 'WebAtoms.Core.js' */        r.bottom += this.parseStyleNumber(e[key + "Bottom" + pad]);

/*Line 461 - 'WebAtoms.Core.js' */        return r;
/*Line 462 - 'WebAtoms.Core.js' */    },

/*Line 464 - 'WebAtoms.Core.js' */    camelize: function (s) {
/*Line 465 - 'WebAtoms.Core.js' */        return s.replace(/\-([a-z])/g, function (a, b) {
/*Line 466 - 'WebAtoms.Core.js' */            return b.toUpperCase();
/*Line 467 - 'WebAtoms.Core.js' */        });
/*Line 468 - 'WebAtoms.Core.js' */    },

/*Line 470 - 'WebAtoms.Core.js' */    ignoreStyleNames: {},

/*Line 472 - 'WebAtoms.Core.js' */    getComputedStyle: function (e) {
/*Line 473 - 'WebAtoms.Core.js' */        var style;
/*Line 474 - 'WebAtoms.Core.js' */        var returns = {};
/*Line 475 - 'WebAtoms.Core.js' */        if (window.getComputedStyle) {
/*Line 476 - 'WebAtoms.Core.js' */            style = window.getComputedStyle(e, null);
/*Line 477 - 'WebAtoms.Core.js' */            var ae = new AtomEnumerator(style);
/*Line 478 - 'WebAtoms.Core.js' */            while (ae.next()) {
/*Line 479 - 'WebAtoms.Core.js' */                var p = ae.current();
/*Line 480 - 'WebAtoms.Core.js' */                //if (this.ignoreStyleNames[p])
/*Line 481 - 'WebAtoms.Core.js' */                //    continue;
/*Line 482 - 'WebAtoms.Core.js' */                try {
/*Line 483 - 'WebAtoms.Core.js' */                    returns[this.camelize(p)] = style.getPropertyValue(p);
/*Line 484 - 'WebAtoms.Core.js' */                } catch (error) {
/*Line 485 - 'WebAtoms.Core.js' */                    this.ignoreStyleNames[p] = "ignore";
/*Line 486 - 'WebAtoms.Core.js' */                }
/*Line 487 - 'WebAtoms.Core.js' */            }
/*Line 488 - 'WebAtoms.Core.js' */            return returns;
/*Line 489 - 'WebAtoms.Core.js' */        }
/*Line 490 - 'WebAtoms.Core.js' */        if (e.currentStyle) {
/*Line 491 - 'WebAtoms.Core.js' */            style = e.currentStyle;
/*Line 492 - 'WebAtoms.Core.js' */            for (var p in style) {
/*Line 493 - 'WebAtoms.Core.js' */                returns[p] = style[p];
/*Line 494 - 'WebAtoms.Core.js' */            }
/*Line 495 - 'WebAtoms.Core.js' */            return returns;
/*Line 496 - 'WebAtoms.Core.js' */        }
/*Line 497 - 'WebAtoms.Core.js' */        return $(e).css();
/*Line 498 - 'WebAtoms.Core.js' */    },

/*Line 500 - 'WebAtoms.Core.js' */    getItemRect: function (e) {
/*Line 501 - 'WebAtoms.Core.js' */        var s = this.getComputedStyle(e);
/*Line 502 - 'WebAtoms.Core.js' */        if (s.display == "none")
/*Line 503 - 'WebAtoms.Core.js' */            return new AtomRect(0, 0, 0, 0);
/*Line 504 - 'WebAtoms.Core.js' */        var r = new AtomRect();
/*Line 505 - 'WebAtoms.Core.js' */        r.left = this.parseStyleNumber(s.left);
/*Line 506 - 'WebAtoms.Core.js' */        r.top = this.parseStyleNumber(s.top);
/*Line 507 - 'WebAtoms.Core.js' */        r.width = this.parseStyleNumber(s.width);
/*Line 508 - 'WebAtoms.Core.js' */        r.height = this.parseStyleNumber(s.height);
/*Line 509 - 'WebAtoms.Core.js' */        var pad = this.parseStyleRect(s, "margin");
/*Line 510 - 'WebAtoms.Core.js' */        if (this.isWebkit()) {
/*Line 511 - 'WebAtoms.Core.js' */            if (!this.isWeirdControl(e)) {
/*Line 512 - 'WebAtoms.Core.js' */                pad = this.parseStyleRect(s, "padding", pad);
/*Line 513 - 'WebAtoms.Core.js' */                pad = this.parseStyleRect(s, "border", pad, "Width");
/*Line 514 - 'WebAtoms.Core.js' */            }
/*Line 515 - 'WebAtoms.Core.js' */        }
/*Line 516 - 'WebAtoms.Core.js' */        else {
/*Line 517 - 'WebAtoms.Core.js' */            pad = this.parseStyleRect(s, "padding", pad);
/*Line 518 - 'WebAtoms.Core.js' */            pad = this.parseStyleRect(s, "border", pad, "Width");
/*Line 519 - 'WebAtoms.Core.js' */        }
/*Line 520 - 'WebAtoms.Core.js' */        r.left = 0;
/*Line 521 - 'WebAtoms.Core.js' */        r.top = 0;
/*Line 522 - 'WebAtoms.Core.js' */        r.width += pad.left + pad.right;
/*Line 523 - 'WebAtoms.Core.js' */        r.height += pad.top + pad.bottom;
/*Line 524 - 'WebAtoms.Core.js' */        return r;
/*Line 525 - 'WebAtoms.Core.js' */    },

/*Line 527 - 'WebAtoms.Core.js' */    isWebkit: function () {
/*Line 528 - 'WebAtoms.Core.js' */        if (window.navigator.userAgent.toLowerCase().indexOf("webkit") == -1)
/*Line 529 - 'WebAtoms.Core.js' */            return false;
/*Line 530 - 'WebAtoms.Core.js' */        return true;
/*Line 531 - 'WebAtoms.Core.js' */    },

/*Line 533 - 'WebAtoms.Core.js' */    isWeirdControl: function (e) {
/*Line 534 - 'WebAtoms.Core.js' */        return e.nodeName == "BUTTON" || e.nodeName == "SELECT" || (e.nodeName == "INPUT" && $(e).attr("type") == "submit");
/*Line 535 - 'WebAtoms.Core.js' */    },

/*Line 537 - 'WebAtoms.Core.js' */    setItemRect: function (e, r) {
/*Line 538 - 'WebAtoms.Core.js' */        var s = this.getComputedStyle(e);
/*Line 539 - 'WebAtoms.Core.js' */        var pad = this.parseStyleRect(s, "margin");

/*Line 541 - 'WebAtoms.Core.js' */        if (!this.isWeirdControl(e)) {
/*Line 542 - 'WebAtoms.Core.js' */            pad = this.parseStyleRect(s, "padding", pad);
/*Line 543 - 'WebAtoms.Core.js' */            pad = this.parseStyleRect(s, "border", pad, "Width");
/*Line 544 - 'WebAtoms.Core.js' */        }

/*Line 546 - 'WebAtoms.Core.js' */        if (r.width) {
/*Line 547 - 'WebAtoms.Core.js' */            r.width -= (pad.left + pad.right);
/*Line 548 - 'WebAtoms.Core.js' */            if (r.width < 0)
/*Line 549 - 'WebAtoms.Core.js' */                r.width = 0;
/*Line 550 - 'WebAtoms.Core.js' */            e.style.width = r.width + "px";
/*Line 551 - 'WebAtoms.Core.js' */        }
/*Line 552 - 'WebAtoms.Core.js' */        if (r.height) {
/*Line 553 - 'WebAtoms.Core.js' */            r.height -= (pad.top + pad.bottom);
/*Line 554 - 'WebAtoms.Core.js' */            if (r.height < 0)
/*Line 555 - 'WebAtoms.Core.js' */                r.height = 0;
/*Line 556 - 'WebAtoms.Core.js' */            e.style.height = r.height + "px";
/*Line 557 - 'WebAtoms.Core.js' */        }
/*Line 558 - 'WebAtoms.Core.js' */        if (r.left) {
/*Line 559 - 'WebAtoms.Core.js' */            e.style.left = r.left + "px";
/*Line 560 - 'WebAtoms.Core.js' */        }
/*Line 561 - 'WebAtoms.Core.js' */        if (r.top) {
/*Line 562 - 'WebAtoms.Core.js' */            e.style.top = r.top + "px";
/*Line 563 - 'WebAtoms.Core.js' */        }
/*Line 564 - 'WebAtoms.Core.js' */    },

/*Line 566 - 'WebAtoms.Core.js' */    isControl: function (element) {
/*Line 567 - 'WebAtoms.Core.js' */        // in release version attributes will be removed..
/*Line 568 - 'WebAtoms.Core.js' */        if (element.atomControl)
/*Line 569 - 'WebAtoms.Core.js' */            return true;
/*Line 570 - 'WebAtoms.Core.js' */        var attr = $(element).attr("atom-type");
/*Line 571 - 'WebAtoms.Core.js' */        if (attr && attr == "Template")
/*Line 572 - 'WebAtoms.Core.js' */            return false;
/*Line 573 - 'WebAtoms.Core.js' */        return attr || element.atomControl;
/*Line 574 - 'WebAtoms.Core.js' */    },
/*Line 575 - 'WebAtoms.Core.js' */    isTemplate: function (element) {
/*Line 576 - 'WebAtoms.Core.js' */        // template will not exist in the control at runtime
/*Line 577 - 'WebAtoms.Core.js' */        var attr = $(element).attr("atom-type");
/*Line 578 - 'WebAtoms.Core.js' */        if (attr && attr == "Template")
/*Line 579 - 'WebAtoms.Core.js' */            return true;
/*Line 580 - 'WebAtoms.Core.js' */        return false;
/*Line 581 - 'WebAtoms.Core.js' */    },
/*Line 582 - 'WebAtoms.Core.js' */    isNotControl: function (element) {
/*Line 583 - 'WebAtoms.Core.js' */        return !(this.isControl(element) || this.isTemplate(element));
/*Line 584 - 'WebAtoms.Core.js' */    },

/*Line 586 - 'WebAtoms.Core.js' */    forEachChildren: function (element, action, filter) {
/*Line 587 - 'WebAtoms.Core.js' */        var ae = new AtomEnumerator($(element).children());
/*Line 588 - 'WebAtoms.Core.js' */        var child;
/*Line 589 - 'WebAtoms.Core.js' */        while (ae.next()) {
/*Line 590 - 'WebAtoms.Core.js' */            child = ae.current();
/*Line 591 - 'WebAtoms.Core.js' */            if (filter && !filter(child))
/*Line 592 - 'WebAtoms.Core.js' */                continue;
/*Line 593 - 'WebAtoms.Core.js' */            action(child);
/*Line 594 - 'WebAtoms.Core.js' */            this.forEachChildren(child,action,filter);
/*Line 595 - 'WebAtoms.Core.js' */        }
/*Line 596 - 'WebAtoms.Core.js' */    },
/*Line 597 - 'WebAtoms.Core.js' */    createControl: function (element, type, data, newScope) {
/*Line 598 - 'WebAtoms.Core.js' */        if (element.atomControl)
/*Line 599 - 'WebAtoms.Core.js' */            return;
/*Line 600 - 'WebAtoms.Core.js' */        var controlType = $(element).attr("atom-type");
/*Line 601 - 'WebAtoms.Core.js' */        if (controlType) {
/*Line 602 - 'WebAtoms.Core.js' */            type = NeuroSpeech.WebAtoms[controlType];
/*Line 603 - 'WebAtoms.Core.js' */        }
/*Line 604 - 'WebAtoms.Core.js' */        if (type) {
/*Line 605 - 'WebAtoms.Core.js' */            var ctrl = new type(element);
/*Line 606 - 'WebAtoms.Core.js' */            if (data) {
/*Line 607 - 'WebAtoms.Core.js' */                ctrl._data = data;
/*Line 608 - 'WebAtoms.Core.js' */            }
/*Line 609 - 'WebAtoms.Core.js' */            if (newScope) {
/*Line 610 - 'WebAtoms.Core.js' */                ctrl._scope = newScope;
/*Line 611 - 'WebAtoms.Core.js' */             }
/*Line 612 - 'WebAtoms.Core.js' */            ctrl.createChildren();
/*Line 613 - 'WebAtoms.Core.js' */            if (data) {
/*Line 614 - 'WebAtoms.Core.js' */                ctrl.initialize();
/*Line 615 - 'WebAtoms.Core.js' */            }
/*Line 616 - 'WebAtoms.Core.js' */            return ctrl;
/*Line 617 - 'WebAtoms.Core.js' */        }
/*Line 618 - 'WebAtoms.Core.js' */        return null;
/*Line 619 - 'WebAtoms.Core.js' */    }


/*Line 622 - 'WebAtoms.Core.js' */}

/*Line 624 - 'WebAtoms.Core.js' */AtomUI.isIE7 =  window.navigator.userAgent.indexOf("MSIE 7.0")!=-1;
/*Line 625 - 'WebAtoms.Core.js' */AtomUI.isIE8 =  window.navigator.userAgent.indexOf("MSIE 8.0")!=-1;



/*Line 629 - 'WebAtoms.Core.js' */NeuroSpeech.WebAtoms.AtomEvents = function () {
/*Line 630 - 'WebAtoms.Core.js' */    this.events = {};
/*Line 631 - 'WebAtoms.Core.js' */};

/*Line 633 - 'WebAtoms.Core.js' */NeuroSpeech.WebAtoms.AtomEvents.prototype = {
/*Line 634 - 'WebAtoms.Core.js' */    getHandler: function (name, create) {
/*Line 635 - 'WebAtoms.Core.js' */        if (create == undefined || create == null)
/*Line 636 - 'WebAtoms.Core.js' */            create = true;
/*Line 637 - 'WebAtoms.Core.js' */        var h = this.events[name];
/*Line 638 - 'WebAtoms.Core.js' */        if (h != undefined && h != null)
/*Line 639 - 'WebAtoms.Core.js' */            return h;
/*Line 640 - 'WebAtoms.Core.js' */        if (!create)
/*Line 641 - 'WebAtoms.Core.js' */            return null;
/*Line 642 - 'WebAtoms.Core.js' */        h = [];
/*Line 643 - 'WebAtoms.Core.js' */        this.events[name] = h;
/*Line 644 - 'WebAtoms.Core.js' */        return h;
/*Line 645 - 'WebAtoms.Core.js' */    },
/*Line 646 - 'WebAtoms.Core.js' */    addHandler: function (name, handler) {
/*Line 647 - 'WebAtoms.Core.js' */        var handlers = this.getHandler(name, true);
/*Line 648 - 'WebAtoms.Core.js' */        handlers.push(handler);
/*Line 649 - 'WebAtoms.Core.js' */    },
/*Line 650 - 'WebAtoms.Core.js' */    removeHandler: function (name, handler) {
/*Line 651 - 'WebAtoms.Core.js' */        var handlers = this.getHandler(name);
/*Line 652 - 'WebAtoms.Core.js' */        if (handlers == null)
/*Line 653 - 'WebAtoms.Core.js' */            return;
/*Line 654 - 'WebAtoms.Core.js' */        var index = handlers.indexOf(handler);
/*Line 655 - 'WebAtoms.Core.js' */        if (index != -1) {
/*Line 656 - 'WebAtoms.Core.js' */            handlers.splice(index, 1);
/*Line 657 - 'WebAtoms.Core.js' */        }
/*Line 658 - 'WebAtoms.Core.js' */    },
/*Line 659 - 'WebAtoms.Core.js' */    raise: function (name, args) {
/*Line 660 - 'WebAtoms.Core.js' */        var handlers = this.getHandler(name, false);
/*Line 661 - 'WebAtoms.Core.js' */        if (handlers == null)
/*Line 662 - 'WebAtoms.Core.js' */            return;
/*Line 663 - 'WebAtoms.Core.js' */        var ae = new AtomEnumerator(handlers);
/*Line 664 - 'WebAtoms.Core.js' */        while (ae.next()) {
/*Line 665 - 'WebAtoms.Core.js' */            var h = ae.current();
/*Line 666 - 'WebAtoms.Core.js' */            h.apply(null, args);
/*Line 667 - 'WebAtoms.Core.js' */        }
/*Line 668 - 'WebAtoms.Core.js' */    }
/*Line 669 - 'WebAtoms.Core.js' */};

/*Line 671 - 'WebAtoms.Core.js' */NeuroSpeech.WebAtoms.AtomEvents.registerClass("NeuroSpeech.WebAtoms.AtomEvents");
/*Line 0 - 'AtomBindingHelper.js' */


/*Line 3 - 'AtomBindingHelper.js' */AtomBinder = {
/*Line 4 - 'AtomBindingHelper.js' */    getClone: function (dupeObj) {
/*Line 5 - 'AtomBindingHelper.js' */        var retObj = {};
/*Line 6 - 'AtomBindingHelper.js' */        if (typeof (dupeObj) == 'object') {
/*Line 7 - 'AtomBindingHelper.js' */            if (typeof (dupeObj.length) != 'undefined')
/*Line 8 - 'AtomBindingHelper.js' */                var retObj = new Array();
/*Line 9 - 'AtomBindingHelper.js' */            for (var objInd in dupeObj) {
/*Line 10 - 'AtomBindingHelper.js' */                var val = dupeObj[objInd];
/*Line 11 - 'AtomBindingHelper.js' */                if (val == undefined || val == null)
/*Line 12 - 'AtomBindingHelper.js' */                    continue;
/*Line 13 - 'AtomBindingHelper.js' */                if (objInd == "_$_handlers")
/*Line 14 - 'AtomBindingHelper.js' */                    continue;
/*Line 15 - 'AtomBindingHelper.js' */                var type = typeof (val);
/*Line 16 - 'AtomBindingHelper.js' */                if (type == 'object') {
/*Line 17 - 'AtomBindingHelper.js' */                    if (val.constructor == Date) {
/*Line 18 - 'AtomBindingHelper.js' */                        retObj[objInd] = val.toUTCString();
/*Line 19 - 'AtomBindingHelper.js' */                    } else {
/*Line 20 - 'AtomBindingHelper.js' */                        retObj[objInd] = this.getClone(val);
/*Line 21 - 'AtomBindingHelper.js' */                    }
/*Line 22 - 'AtomBindingHelper.js' */                } else if (type == 'string') {
/*Line 23 - 'AtomBindingHelper.js' */                    retObj[objInd] = val;
/*Line 24 - 'AtomBindingHelper.js' */                } else if (type == 'number') {
/*Line 25 - 'AtomBindingHelper.js' */                    retObj[objInd] = val;
/*Line 26 - 'AtomBindingHelper.js' */                } else if (type == 'boolean') {
/*Line 27 - 'AtomBindingHelper.js' */                    ((val == true) ? retObj[objInd] = true : retObj[objInd] = false);
/*Line 28 - 'AtomBindingHelper.js' */                } else if (type == 'date') {
/*Line 29 - 'AtomBindingHelper.js' */                    retObj[objInd] = val.getTime();
/*Line 30 - 'AtomBindingHelper.js' */                }
/*Line 31 - 'AtomBindingHelper.js' */            }
/*Line 32 - 'AtomBindingHelper.js' */        }
/*Line 33 - 'AtomBindingHelper.js' */        return retObj;
/*Line 34 - 'AtomBindingHelper.js' */    },
/*Line 35 - 'AtomBindingHelper.js' */    setValue: function (target, key, value) {
/*Line 36 - 'AtomBindingHelper.js' */        if (target == null && value == undefined)
/*Line 37 - 'AtomBindingHelper.js' */            return;
/*Line 38 - 'AtomBindingHelper.js' */        var oldValue = this.getValue(target, key);
/*Line 39 - 'AtomBindingHelper.js' */        if (oldValue === value)
/*Line 40 - 'AtomBindingHelper.js' */            return;
/*Line 41 - 'AtomBindingHelper.js' */        var f = target["set_" + key];
/*Line 42 - 'AtomBindingHelper.js' */        if (f == null)
/*Line 43 - 'AtomBindingHelper.js' */            target[key] = value;
/*Line 44 - 'AtomBindingHelper.js' */        else
/*Line 45 - 'AtomBindingHelper.js' */            f.apply(target, [value]);
/*Line 46 - 'AtomBindingHelper.js' */        this.refreshValue(target, key, oldValue, value);
/*Line 47 - 'AtomBindingHelper.js' */    },
/*Line 48 - 'AtomBindingHelper.js' */    refreshValue: function (target, key) {
/*Line 49 - 'AtomBindingHelper.js' */        var handlers = this.get_WatchHandler(target, key);
/*Line 50 - 'AtomBindingHelper.js' */        if (handlers == undefined || handlers == null)
/*Line 51 - 'AtomBindingHelper.js' */            return;
/*Line 52 - 'AtomBindingHelper.js' */        var ae = new AtomEnumerator(handlers);
/*Line 53 - 'AtomBindingHelper.js' */        while (ae.next()) {
/*Line 54 - 'AtomBindingHelper.js' */            var item = ae.current();
/*Line 55 - 'AtomBindingHelper.js' */            item(target, key);
/*Line 56 - 'AtomBindingHelper.js' */        }
/*Line 57 - 'AtomBindingHelper.js' */    },
/*Line 58 - 'AtomBindingHelper.js' */    getValue: function (target, key) {
/*Line 59 - 'AtomBindingHelper.js' */        if (target == null)
/*Line 60 - 'AtomBindingHelper.js' */            return null;
/*Line 61 - 'AtomBindingHelper.js' */        var f = target["get_" + key];
/*Line 62 - 'AtomBindingHelper.js' */        if (f == null)
/*Line 63 - 'AtomBindingHelper.js' */            return target[key];
/*Line 64 - 'AtomBindingHelper.js' */        return f.apply(target);
/*Line 65 - 'AtomBindingHelper.js' */    },
/*Line 66 - 'AtomBindingHelper.js' */    add_WatchHandler: function (target, key, handler) {
/*Line 67 - 'AtomBindingHelper.js' */        if (target == null)
/*Line 68 - 'AtomBindingHelper.js' */            return;
/*Line 69 - 'AtomBindingHelper.js' */        var handlers = this.get_WatchHandler(target, key);
/*Line 70 - 'AtomBindingHelper.js' */        handlers.push(handler);
/*Line 71 - 'AtomBindingHelper.js' */    },
/*Line 72 - 'AtomBindingHelper.js' */    get_WatchHandler: function (target, key) {
/*Line 73 - 'AtomBindingHelper.js' */        if (target == null)
/*Line 74 - 'AtomBindingHelper.js' */            return null;
/*Line 75 - 'AtomBindingHelper.js' */        var handlers = target["_$_handlers"];
/*Line 76 - 'AtomBindingHelper.js' */        if (!handlers) {
/*Line 77 - 'AtomBindingHelper.js' */            handlers = {};
/*Line 78 - 'AtomBindingHelper.js' */            target["_$_handlers"] = handlers;
/*Line 79 - 'AtomBindingHelper.js' */        }
/*Line 80 - 'AtomBindingHelper.js' */        var handlersForKey = handlers[key];
/*Line 81 - 'AtomBindingHelper.js' */        if (handlersForKey == undefined || handlersForKey == null) {
/*Line 82 - 'AtomBindingHelper.js' */            handlersForKey = [];
/*Line 83 - 'AtomBindingHelper.js' */            handlers[key] = handlersForKey;
/*Line 84 - 'AtomBindingHelper.js' */        }
/*Line 85 - 'AtomBindingHelper.js' */        return handlersForKey;
/*Line 86 - 'AtomBindingHelper.js' */    },
/*Line 87 - 'AtomBindingHelper.js' */    remove_WatchHandler: function (target, key, handler) {
/*Line 88 - 'AtomBindingHelper.js' */        if (target == null)
/*Line 89 - 'AtomBindingHelper.js' */            return;
/*Line 90 - 'AtomBindingHelper.js' */        if (target.handlers == undefined || target.handlers == null)
/*Line 91 - 'AtomBindingHelper.js' */            return;
/*Line 92 - 'AtomBindingHelper.js' */        var handlersForKey = target.handlers[key];
/*Line 93 - 'AtomBindingHelper.js' */        if (handlersForKey == undefined || handlersForKey == null)
/*Line 94 - 'AtomBindingHelper.js' */            return;
/*Line 95 - 'AtomBindingHelper.js' */        var ae = new AtomEnumerator(handlersForKey);
/*Line 96 - 'AtomBindingHelper.js' */        while (ae.next()) {
/*Line 97 - 'AtomBindingHelper.js' */            if (ae.current() == handler) {
/*Line 98 - 'AtomBindingHelper.js' */                handlersForKey.splice(ae.currentIndex(), 1);
/*Line 99 - 'AtomBindingHelper.js' */                return;
/*Line 100 - 'AtomBindingHelper.js' */            }
/*Line 101 - 'AtomBindingHelper.js' */        }
/*Line 102 - 'AtomBindingHelper.js' */    },

/*Line 104 - 'AtomBindingHelper.js' */    invokeItemsEvent: function (target, mode, index, item) {
/*Line 105 - 'AtomBindingHelper.js' */        var key = "_items";
/*Line 106 - 'AtomBindingHelper.js' */        var handlers = this.get_WatchHandler(target, key);
/*Line 107 - 'AtomBindingHelper.js' */        if (handlers == undefined || handlers == null)
/*Line 108 - 'AtomBindingHelper.js' */            return;
/*Line 109 - 'AtomBindingHelper.js' */        var ae = new AtomEnumerator(handlers);
/*Line 110 - 'AtomBindingHelper.js' */        while (ae.next()) {
/*Line 111 - 'AtomBindingHelper.js' */            var obj = ae.current();
/*Line 112 - 'AtomBindingHelper.js' */            obj(mode, index, item);
/*Line 113 - 'AtomBindingHelper.js' */        }
/*Line 114 - 'AtomBindingHelper.js' */    },
/*Line 115 - 'AtomBindingHelper.js' */    clear: function (ary) {
/*Line 116 - 'AtomBindingHelper.js' */        ary.length = 0;
/*Line 117 - 'AtomBindingHelper.js' */        this.invokeItemsEvent(ary, "refresh", 0, null);
/*Line 118 - 'AtomBindingHelper.js' */    },
/*Line 119 - 'AtomBindingHelper.js' */    addItem: function (ary, item) {
/*Line 120 - 'AtomBindingHelper.js' */        var l = ary.length;
/*Line 121 - 'AtomBindingHelper.js' */        ary.push(item);
/*Line 122 - 'AtomBindingHelper.js' */        this.invokeItemsEvent(ary, "add", l, item);
/*Line 123 - 'AtomBindingHelper.js' */    },
/*Line 124 - 'AtomBindingHelper.js' */    addItems: function (ary, items) {
/*Line 125 - 'AtomBindingHelper.js' */        var ae = new AtomEnumerator(items);
/*Line 126 - 'AtomBindingHelper.js' */        while (ae.next()) {
/*Line 127 - 'AtomBindingHelper.js' */            this.addItem(ary, ae.current());
/*Line 128 - 'AtomBindingHelper.js' */        }
/*Line 129 - 'AtomBindingHelper.js' */    },
/*Line 130 - 'AtomBindingHelper.js' */    removeItem: function (ary, item) {
/*Line 131 - 'AtomBindingHelper.js' */        var i = ary.indexOf(item);
/*Line 132 - 'AtomBindingHelper.js' */        if (i == -1)
/*Line 133 - 'AtomBindingHelper.js' */            return;
/*Line 134 - 'AtomBindingHelper.js' */        ary.splice(i, 1);
/*Line 135 - 'AtomBindingHelper.js' */        this.invokeItemsEvent(ary, "remove", i, item);
/*Line 136 - 'AtomBindingHelper.js' */    },
/*Line 137 - 'AtomBindingHelper.js' */    refreshItems: function (ary) {
/*Line 138 - 'AtomBindingHelper.js' */        this.invokeItemsEvent(ary, "refresh", -1, null);
/*Line 139 - 'AtomBindingHelper.js' */    },
/*Line 140 - 'AtomBindingHelper.js' */    add_CollectionChanged: function (target, handler) {
/*Line 141 - 'AtomBindingHelper.js' */        if (target == null)
/*Line 142 - 'AtomBindingHelper.js' */            return;
/*Line 143 - 'AtomBindingHelper.js' */        var key = "_items";
/*Line 144 - 'AtomBindingHelper.js' */        var handlers = this.get_WatchHandler(target, key);
/*Line 145 - 'AtomBindingHelper.js' */        handlers.push(handler);
/*Line 146 - 'AtomBindingHelper.js' */    },
/*Line 147 - 'AtomBindingHelper.js' */    remove_CollectionChanged: function (target, handler) {
/*Line 148 - 'AtomBindingHelper.js' */        if (target == null)
/*Line 149 - 'AtomBindingHelper.js' */            return;
/*Line 150 - 'AtomBindingHelper.js' */        if (target.handlers == undefined || target.handlers == null)
/*Line 151 - 'AtomBindingHelper.js' */            return;
/*Line 152 - 'AtomBindingHelper.js' */        var key = "_items";
/*Line 153 - 'AtomBindingHelper.js' */        var handlersForKey = target.handlers[key];
/*Line 154 - 'AtomBindingHelper.js' */        if (handlersForKey == undefined || handlersForKey == null)
/*Line 155 - 'AtomBindingHelper.js' */            return;
/*Line 156 - 'AtomBindingHelper.js' */        var ae = new AtomEnumerator(handlersForKey);
/*Line 157 - 'AtomBindingHelper.js' */        while (ae.next()) {
/*Line 158 - 'AtomBindingHelper.js' */            if (ae.current() == handler) {
/*Line 159 - 'AtomBindingHelper.js' */                handlersForKey.splice(ae.currentIndex(), 1);
/*Line 160 - 'AtomBindingHelper.js' */                return;
/*Line 161 - 'AtomBindingHelper.js' */            }
/*Line 162 - 'AtomBindingHelper.js' */        }
/*Line 163 - 'AtomBindingHelper.js' */    },
/*Line 164 - 'AtomBindingHelper.js' */    setError: function (target, key, message) {
/*Line 165 - 'AtomBindingHelper.js' */        var errors = this.getValue(target, "__errors");
/*Line 166 - 'AtomBindingHelper.js' */        if (!errors) {
/*Line 167 - 'AtomBindingHelper.js' */            this.setValue(target, "__errors", {});
/*Line 168 - 'AtomBindingHelper.js' */        }
/*Line 169 - 'AtomBindingHelper.js' */        AtomBinder.setValue(errors, key, message);
/*Line 170 - 'AtomBindingHelper.js' */    }

/*Line 172 - 'AtomBindingHelper.js' */};

/*Line 174 - 'AtomBindingHelper.js' *///$setValue = AtomBinder.setValue;
/*Line 175 - 'AtomBindingHelper.js' *///$getValue = AtomBinder.getValue;


/*Line 178 - 'AtomBindingHelper.js' *///Object.prototype.setValue = function (key, value) {
/*Line 179 - 'AtomBindingHelper.js' *///    
/*Line 180 - 'AtomBindingHelper.js' *///    AtomBinder.setValue(this, key, value);
/*Line 181 - 'AtomBindingHelper.js' *///};

/*Line 183 - 'AtomBindingHelper.js' *///Object.prototype.getValue = function (key) {
/*Line 184 - 'AtomBindingHelper.js' *///    return AtomBinder.getValue(this, key);
/*Line 185 - 'AtomBindingHelper.js' *///};

/*Line 187 - 'AtomBindingHelper.js' *///Object.prototype.add_WatchHandler = function(key,handler){
/*Line 188 - 'AtomBindingHelper.js' *///    AtomBinder.add_WatchHandler(this,key,handler);
/*Line 189 - 'AtomBindingHelper.js' *///};

/*Line 191 - 'AtomBindingHelper.js' *///Object.prototype.remove_WatchHandler = function(key,handler){
/*Line 192 - 'AtomBindingHelper.js' *///    AtomBinder.remove_WatchHandler(this,key,handler);
/*Line 193 - 'AtomBindingHelper.js' *///};

/*Line 195 - 'AtomBindingHelper.js' *///Array.prototype.add = function (item) {
/*Line 196 - 'AtomBindingHelper.js' *///    AtomBinder.addItem(this, item);
/*Line 197 - 'AtomBindingHelper.js' *///};

/*Line 199 - 'AtomBindingHelper.js' *///Array.prototype.remove = function (item) {
/*Line 200 - 'AtomBindingHelper.js' *///    AtomBinder.removeItem(this, item);
/*Line 201 - 'AtomBindingHelper.js' *///};

/*Line 203 - 'AtomBindingHelper.js' *///Array.prototype.add_CollectionHandler= function(handler){
/*Line 204 - 'AtomBindingHelper.js' *///    AtomBinder.add_CollectionHandler(this,handler);
/*Line 205 - 'AtomBindingHelper.js' *///};

/*Line 207 - 'AtomBindingHelper.js' *///Array.prototype.remove_CollectionHandler= function(handler){
/*Line 208 - 'AtomBindingHelper.js' *///    AtomBinder.remove_CollectionHandler(this,handler);
/*Line 209 - 'AtomBindingHelper.js' *///};

/*Line 0 - 'AtomComponent.js' */
/*Line 1 - 'AtomComponent.js' */

/*Line 3 - 'AtomComponent.js' */NeuroSpeech.WebAtoms.AtomComponent = function () {
/*Line 4 - 'AtomComponent.js' */    this._eventHandlers = [];
/*Line 5 - 'AtomComponent.js' */};

/*Line 7 - 'AtomComponent.js' */NeuroSpeech.WebAtoms.AtomComponent.prototype = {

/*Line 9 - 'AtomComponent.js' */    bindEvent: function (element, name, methodName, key) {
/*Line 10 - 'AtomComponent.js' */        if (element == null)
/*Line 11 - 'AtomComponent.js' */            return;
/*Line 12 - 'AtomComponent.js' */        var method = AtomUI.createDelegate(this, methodName);
/*Line 13 - 'AtomComponent.js' */        var be = {
/*Line 14 - 'AtomComponent.js' */            element: element,
/*Line 15 - 'AtomComponent.js' */            name: name,
/*Line 16 - 'AtomComponent.js' */            methodName: methodName,
/*Line 17 - 'AtomComponent.js' */            handler: method
/*Line 18 - 'AtomComponent.js' */        };
/*Line 19 - 'AtomComponent.js' */        if (key) {
/*Line 20 - 'AtomComponent.js' */            be.key = key;
/*Line 21 - 'AtomComponent.js' */        }
/*Line 22 - 'AtomComponent.js' */        if (AtomUI.isNode(element)) {
/*Line 23 - 'AtomComponent.js' */            $(element).bind(name, null, method);
/*Line 24 - 'AtomComponent.js' */        } else {
/*Line 25 - 'AtomComponent.js' */            var f = element["add_" + name];
/*Line 26 - 'AtomComponent.js' */            if (f == null) {
/*Line 27 - 'AtomComponent.js' */                // try atom binder...
/*Line 28 - 'AtomComponent.js' */                f = AtomBinder["add_" + name];
/*Line 29 - 'AtomComponent.js' */                if (key) {
/*Line 30 - 'AtomComponent.js' */                    f.apply(AtomBinder, [element, key, method]);
/*Line 31 - 'AtomComponent.js' */                }
/*Line 32 - 'AtomComponent.js' */                else {
/*Line 33 - 'AtomComponent.js' */                    f.apply(AtomBinder, [element, method]);
/*Line 34 - 'AtomComponent.js' */                }
/*Line 35 - 'AtomComponent.js' */            } else {
/*Line 36 - 'AtomComponent.js' */                f.apply(element, [method]);
/*Line 37 - 'AtomComponent.js' */            }
/*Line 38 - 'AtomComponent.js' */        }
/*Line 39 - 'AtomComponent.js' */        this._eventHandlers.push(be);
/*Line 40 - 'AtomComponent.js' */    },

/*Line 42 - 'AtomComponent.js' */    unbindEvent: function (element, name, methodName, key) {
/*Line 43 - 'AtomComponent.js' */        var ae = new AtomEnumerator(this._eventHandlers);
/*Line 44 - 'AtomComponent.js' */        var removed = [];
/*Line 45 - 'AtomComponent.js' */        while (ae.next()) {
/*Line 46 - 'AtomComponent.js' */            var be = ae.current();
/*Line 47 - 'AtomComponent.js' */            if (element && element !== be.element)
/*Line 48 - 'AtomComponent.js' */                continue;
/*Line 49 - 'AtomComponent.js' */            if (name && name !== be.name)
/*Line 50 - 'AtomComponent.js' */                continue;
/*Line 51 - 'AtomComponent.js' */            if (methodName && methodName !== be.methodName)
/*Line 52 - 'AtomComponent.js' */                continue;
/*Line 53 - 'AtomComponent.js' */            if (key && key !== be.key)
/*Line 54 - 'AtomComponent.js' */                continue;
/*Line 55 - 'AtomComponent.js' */            if (AtomUI.isNode(be.element)) {
/*Line 56 - 'AtomComponent.js' */                $(be.element).unbind(be.name, be.handler);
/*Line 57 - 'AtomComponent.js' */            } else {
/*Line 58 - 'AtomComponent.js' */                var f = be.element["remove_" + be.name];
/*Line 59 - 'AtomComponent.js' */                if (f == null) {
/*Line 60 - 'AtomComponent.js' */                    f = AtomBinder["remove_" + be.name];
/*Line 61 - 'AtomComponent.js' */                    if (key) {
/*Line 62 - 'AtomComponent.js' */                        f.apply(AtomBinder, [be.element, be.handler, be.key]);
/*Line 63 - 'AtomComponent.js' */                    }
/*Line 64 - 'AtomComponent.js' */                    else {
/*Line 65 - 'AtomComponent.js' */                        f.apply(AtomBinder, [be.element, be.handler]);
/*Line 66 - 'AtomComponent.js' */                    }
/*Line 67 - 'AtomComponent.js' */                } else {
/*Line 68 - 'AtomComponent.js' */                    f.apply(be.element, [be.handler]);
/*Line 69 - 'AtomComponent.js' */                }
/*Line 70 - 'AtomComponent.js' */            }
/*Line 71 - 'AtomComponent.js' */            removed.push(be);
/*Line 72 - 'AtomComponent.js' */        }

/*Line 74 - 'AtomComponent.js' */        ae = new AtomEnumerator(removed);
/*Line 75 - 'AtomComponent.js' */        while (ae.next()) {
/*Line 76 - 'AtomComponent.js' */            var be = ae.current();
/*Line 77 - 'AtomComponent.js' */            AtomArray.remove(this._eventHandlers, be);
/*Line 78 - 'AtomComponent.js' */        }
/*Line 79 - 'AtomComponent.js' */    },


/*Line 82 - 'AtomComponent.js' */    initialize: function () {
/*Line 83 - 'AtomComponent.js' */    },
/*Line 84 - 'AtomComponent.js' */    dispose: function () {
/*Line 85 - 'AtomComponent.js' */        // remove all event handlers...
/*Line 86 - 'AtomComponent.js' */        this.unbindEvent(null, null, null);

/*Line 88 - 'AtomComponent.js' */        // also remove __delegates..
/*Line 89 - 'AtomComponent.js' */        if (this.__delegates)
/*Line 90 - 'AtomComponent.js' */            this.__delegates = null;
/*Line 91 - 'AtomComponent.js' */    }
/*Line 92 - 'AtomComponent.js' */};

/*Line 94 - 'AtomComponent.js' */NeuroSpeech.WebAtoms.AtomComponent.registerClass("NeuroSpeech.WebAtoms.AtomComponent");
/*Line 0 - 'AtomBinding.js' */
/*Line 1 - 'AtomBinding.js' */


/*Line 4 - 'AtomBinding.js' */NeuroSpeech.WebAtoms.AtomBinding = function (control, element, key, path, twoWays, jq, valueFunction, urlFunction) {
/*Line 5 - 'AtomBinding.js' */    NeuroSpeech.WebAtoms.AtomBinding.initializeBase(this);
/*Line 6 - 'AtomBinding.js' */    this.element = element;
/*Line 7 - 'AtomBinding.js' */    this.control = control;
/*Line 8 - 'AtomBinding.js' */    this.valueFunction = valueFunction;
/*Line 9 - 'AtomBinding.js' */    this.urlFunction = urlFunction;
/*Line 10 - 'AtomBinding.js' */    this.key = key;

/*Line 12 - 'AtomBinding.js' */    if (path && path.constructor != String) {
/*Line 13 - 'AtomBinding.js' */        this.pathList = [];
/*Line 14 - 'AtomBinding.js' */        this.path = null;

/*Line 16 - 'AtomBinding.js' */        var ae = new AtomEnumerator(path);
/*Line 17 - 'AtomBinding.js' */        while (ae.next()) {
/*Line 18 - 'AtomBinding.js' */            var pe = new AtomEnumerator(ae.current().split("."));
/*Line 19 - 'AtomBinding.js' */            var p = [];
/*Line 20 - 'AtomBinding.js' */            while (pe.next()) {
/*Line 21 - 'AtomBinding.js' */                p.push({ path: pe.current(), value: null });
/*Line 22 - 'AtomBinding.js' */            }
/*Line 23 - 'AtomBinding.js' */            this.pathList.push(p);
/*Line 24 - 'AtomBinding.js' */        }

/*Line 26 - 'AtomBinding.js' */    }else {
/*Line 27 - 'AtomBinding.js' */        var ae = new AtomEnumerator(path.split("."));
/*Line 28 - 'AtomBinding.js' */        this.path = [];
/*Line 29 - 'AtomBinding.js' */        while (ae.next()) {
/*Line 30 - 'AtomBinding.js' */            this.path.push({ path: ae.current(), value: null });
/*Line 31 - 'AtomBinding.js' */        }
/*Line 32 - 'AtomBinding.js' */    }
/*Line 33 - 'AtomBinding.js' */    this.twoWays = twoWays;
/*Line 34 - 'AtomBinding.js' */    this.jq = jq;
/*Line 35 - 'AtomBinding.js' */    this._isUpdating = false;
/*Line 36 - 'AtomBinding.js' */};

/*Line 38 - 'AtomBinding.js' */NeuroSpeech.WebAtoms.AtomBinding.prototype = {
/*Line 39 - 'AtomBinding.js' */    onControlPropertyChanged: function (sender, key) {
/*Line 40 - 'AtomBinding.js' */        // update target....
/*Line 41 - 'AtomBinding.js' */        // most like end of path...
/*Line 42 - 'AtomBinding.js' */        if (this.path == null || this.path.length == 0)
/*Line 43 - 'AtomBinding.js' */            return;
/*Line 44 - 'AtomBinding.js' */        var ae = new AtomEnumerator(this.path);
/*Line 45 - 'AtomBinding.js' */        var obj = this.control;
/*Line 46 - 'AtomBinding.js' */        var objKey = null;
/*Line 47 - 'AtomBinding.js' */        while (ae.next()) {
/*Line 48 - 'AtomBinding.js' */            objKey = ae.current();
/*Line 49 - 'AtomBinding.js' */            objKey.value = obj;
/*Line 50 - 'AtomBinding.js' */            if (!obj)
/*Line 51 - 'AtomBinding.js' */                return;
/*Line 52 - 'AtomBinding.js' */            if (!ae.isLast())
/*Line 53 - 'AtomBinding.js' */                obj = AtomBinder.getValue(obj, objKey.path);
/*Line 54 - 'AtomBinding.js' */        }
/*Line 55 - 'AtomBinding.js' */        var value = null;
/*Line 56 - 'AtomBinding.js' */        if (this.jq) {
/*Line 57 - 'AtomBinding.js' */            value = $(this.element).val();
/*Line 58 - 'AtomBinding.js' */        } else {
/*Line 59 - 'AtomBinding.js' */            value = AtomBinder.getValue(this.control, this.key);
/*Line 60 - 'AtomBinding.js' */        }
/*Line 61 - 'AtomBinding.js' */        AtomBinder.setValue(obj, objKey.path, value);
/*Line 62 - 'AtomBinding.js' */    },
/*Line 63 - 'AtomBinding.js' */    onDataChanged: function (sender, key) {
/*Line 64 - 'AtomBinding.js' */        if (this._isUpdating)
/*Line 65 - 'AtomBinding.js' */            return;

/*Line 67 - 'AtomBinding.js' */        // called by jquery while posting an ajax request...
/*Line 68 - 'AtomBinding.js' */        if (arguments === undefined || arguments.length == 0)
/*Line 69 - 'AtomBinding.js' */            return;

/*Line 71 - 'AtomBinding.js' */        var ae;
/*Line 72 - 'AtomBinding.js' */        var target = this.control;
/*Line 73 - 'AtomBinding.js' */        if (this.pathList) {
/*Line 74 - 'AtomBinding.js' */            var newTarget = [];
/*Line 75 - 'AtomBinding.js' */            ae = new AtomEnumerator(this.pathList);
/*Line 76 - 'AtomBinding.js' */            while (ae.next()) {
/*Line 77 - 'AtomBinding.js' */                newTarget.push( this.evaluate(target,ae.current()));
/*Line 78 - 'AtomBinding.js' */            }
/*Line 79 - 'AtomBinding.js' */            ae = new AtomEnumerator(newTarget);
/*Line 80 - 'AtomBinding.js' */            while (ae.next()) {
/*Line 81 - 'AtomBinding.js' */                if (ae.current() == undefined)
/*Line 82 - 'AtomBinding.js' */                    return;
/*Line 83 - 'AtomBinding.js' */            }
/*Line 84 - 'AtomBinding.js' */            this.setValue(newTarget);
/*Line 85 - 'AtomBinding.js' */        }else {
/*Line 86 - 'AtomBinding.js' */            var path = this.path;
/*Line 87 - 'AtomBinding.js' */            var newTarget = this.evaluate(target, path);
/*Line 88 - 'AtomBinding.js' */            if(newTarget !== undefined)
/*Line 89 - 'AtomBinding.js' */                this.setValue(newTarget);
/*Line 90 - 'AtomBinding.js' */        }
/*Line 91 - 'AtomBinding.js' */    },

/*Line 93 - 'AtomBinding.js' */    evaluate: function (target, path) {
/*Line 94 - 'AtomBinding.js' */        var newTarget = null;
/*Line 95 - 'AtomBinding.js' */        var property = null;
/*Line 96 - 'AtomBinding.js' */        var ae = new AtomEnumerator(path);

/*Line 98 - 'AtomBinding.js' */        // first remove old handlers...
/*Line 99 - 'AtomBinding.js' */        var remove = false;
/*Line 100 - 'AtomBinding.js' */        while (target && ae.next()) {
/*Line 101 - 'AtomBinding.js' */            property = ae.current();
/*Line 102 - 'AtomBinding.js' */            newTarget = AtomBinder.getValue(target, property.path);
/*Line 103 - 'AtomBinding.js' */            if (!property.value){
/*Line 104 - 'AtomBinding.js' */                this.bindEvent(target, "WatchHandler", "onDataChanged", property.path);
/*Line 105 - 'AtomBinding.js' */            }else if(property.value != target){
/*Line 106 - 'AtomBinding.js' */                this.unbindEvent(property.value, "WatchHandler", "onDataChanged", property.path);
/*Line 107 - 'AtomBinding.js' */                this.bindEvent(target, "WatchHandler", "onDataChanged", property.path);
/*Line 108 - 'AtomBinding.js' */            }
/*Line 109 - 'AtomBinding.js' */            property.value = target;
/*Line 110 - 'AtomBinding.js' */            target = newTarget;
/*Line 111 - 'AtomBinding.js' */        }
/*Line 112 - 'AtomBinding.js' */        return newTarget;
/*Line 113 - 'AtomBinding.js' */    },

/*Line 115 - 'AtomBinding.js' */    onControlChanged: function () {
/*Line 116 - 'AtomBinding.js' */        this.onControlPropertyChanged(null, null);
/*Line 117 - 'AtomBinding.js' */    },
/*Line 118 - 'AtomBinding.js' */    setup: function () {
/*Line 119 - 'AtomBinding.js' */        if (this.twoWays) {
/*Line 120 - 'AtomBinding.js' */            if (this.jq) {
/*Line 121 - 'AtomBinding.js' */                this.bindEvent(this.element, "change", "onControlChanged");
/*Line 122 - 'AtomBinding.js' */            } else {
/*Line 123 - 'AtomBinding.js' */                this.bindEvent(this.control, "WatchHandler", "onControlPropertyChanged", this.key);
/*Line 124 - 'AtomBinding.js' */            }
/*Line 125 - 'AtomBinding.js' */        }

/*Line 127 - 'AtomBinding.js' */        this.onDataChanged(this, null);

/*Line 129 - 'AtomBinding.js' */    },

/*Line 131 - 'AtomBinding.js' */    setValue: function (value) {

/*Line 133 - 'AtomBinding.js' */        if (!this.pathList && (this.valueFunction || this.urlFunction)) {
/*Line 134 - 'AtomBinding.js' */            value = [value];
/*Line 135 - 'AtomBinding.js' */        }

/*Line 137 - 'AtomBinding.js' */        if (this.valueFunction) {
/*Line 138 - 'AtomBinding.js' */            value = this.valueFunction.apply(this,value);
/*Line 139 - 'AtomBinding.js' */        }

/*Line 141 - 'AtomBinding.js' */        if (this.urlFunction) {
/*Line 142 - 'AtomBinding.js' */            if (value) {
/*Line 143 - 'AtomBinding.js' */                value = this.urlFunction.apply(this,value);
/*Line 144 - 'AtomBinding.js' */                this.control.loadProperty(this.key, value);
/*Line 145 - 'AtomBinding.js' */            }
/*Line 146 - 'AtomBinding.js' */            return;
/*Line 147 - 'AtomBinding.js' */        }

/*Line 149 - 'AtomBinding.js' */        this._isUpdating = true;
/*Line 150 - 'AtomBinding.js' */        // finally set value...
/*Line 151 - 'AtomBinding.js' */        if (this.jq) {
/*Line 152 - 'AtomBinding.js' */            switch (this.key) {
/*Line 153 - 'AtomBinding.js' */                case "isVisible":
/*Line 154 - 'AtomBinding.js' */                    if (value) {
/*Line 155 - 'AtomBinding.js' */                        $(this.element).show();
/*Line 156 - 'AtomBinding.js' */                    } else {
/*Line 157 - 'AtomBinding.js' */                        $(this.element).hide();
/*Line 158 - 'AtomBinding.js' */                    }
/*Line 159 - 'AtomBinding.js' */                    break;
/*Line 160 - 'AtomBinding.js' */                case "isEnabled":
/*Line 161 - 'AtomBinding.js' */                    if (value) {
/*Line 162 - 'AtomBinding.js' */                        $(this.element).removeAttr("disabled");
/*Line 163 - 'AtomBinding.js' */                    } else {
/*Line 164 - 'AtomBinding.js' */                        $(this.element).attr("disabled", "disabled");
/*Line 165 - 'AtomBinding.js' */                    }
/*Line 166 - 'AtomBinding.js' */                    break;
/*Line 167 - 'AtomBinding.js' */                case "value":
/*Line 168 - 'AtomBinding.js' */                    $(this.element).val(value);
/*Line 169 - 'AtomBinding.js' */                    break;
/*Line 170 - 'AtomBinding.js' */                case "text":
/*Line 171 - 'AtomBinding.js' */                    $(this.element).text(value);
/*Line 172 - 'AtomBinding.js' */                    break;
/*Line 173 - 'AtomBinding.js' */                case "src":
/*Line 174 - 'AtomBinding.js' */                    AtomBinder.setValue(this.element, this.key, value);
/*Line 175 - 'AtomBinding.js' */                    break;
/*Line 176 - 'AtomBinding.js' */                default:
/*Line 177 - 'AtomBinding.js' */                    AtomBinder.setValue(this.element, this.key, value);
/*Line 178 - 'AtomBinding.js' */                    break;
/*Line 179 - 'AtomBinding.js' */            }
/*Line 180 - 'AtomBinding.js' */        } else {
/*Line 181 - 'AtomBinding.js' */            AtomBinder.setValue(this.control, this.key, value);
/*Line 182 - 'AtomBinding.js' */        }
/*Line 183 - 'AtomBinding.js' */        this._isUpdating = false;
/*Line 184 - 'AtomBinding.js' */    }
/*Line 185 - 'AtomBinding.js' */};
/*Line 186 - 'AtomBinding.js' */NeuroSpeech.WebAtoms.AtomBinding.registerClass("NeuroSpeech.WebAtoms.AtomBinding", NeuroSpeech.WebAtoms.AtomComponent);

/*Line 0 - 'AtomDispatcher.js' */

/*Line 2 - 'AtomDispatcher.js' */var allControls = {
/*Line 3 - 'AtomDispatcher.js' */};

/*Line 5 - 'AtomDispatcher.js' */NeuroSpeech.WebAtoms.AtomDispatcher = function () {
/*Line 6 - 'AtomDispatcher.js' */    this._paused = false;
/*Line 7 - 'AtomDispatcher.js' */    this.queue = [];
/*Line 8 - 'AtomDispatcher.js' */    this.onTimeout = function () {
/*Line 9 - 'AtomDispatcher.js' */        if (this._paused)
/*Line 10 - 'AtomDispatcher.js' */            return;
/*Line 11 - 'AtomDispatcher.js' */        if (this.queue.length == 0) {
/*Line 12 - 'AtomDispatcher.js' */            var app = $("#application")[0];
/*Line 13 - 'AtomDispatcher.js' */            if (app.style.visibility == "hidden" || $(app).css("visibility")=="hidden") {
/*Line 14 - 'AtomDispatcher.js' */                app.style.visibility = "visible";
/*Line 15 - 'AtomDispatcher.js' */            }
/*Line 16 - 'AtomDispatcher.js' */            return;
/*Line 17 - 'AtomDispatcher.js' */        }
/*Line 18 - 'AtomDispatcher.js' */        var item = this.queue.shift();
/*Line 19 - 'AtomDispatcher.js' */        item();
/*Line 20 - 'AtomDispatcher.js' */        delete item;
/*Line 21 - 'AtomDispatcher.js' */        window.setTimeout(this._onTimeout, 1);
/*Line 22 - 'AtomDispatcher.js' */    };
/*Line 23 - 'AtomDispatcher.js' */    this._onTimeout = Function.createDelegate(this, this.onTimeout);
/*Line 24 - 'AtomDispatcher.js' */};

/*Line 26 - 'AtomDispatcher.js' */NeuroSpeech.WebAtoms.AtomDispatcher.prototype = {
/*Line 27 - 'AtomDispatcher.js' */    pause: function () {
/*Line 28 - 'AtomDispatcher.js' */        this._paused = true;
/*Line 29 - 'AtomDispatcher.js' */    },
/*Line 30 - 'AtomDispatcher.js' */    start: function () {
/*Line 31 - 'AtomDispatcher.js' */        this._paused = false;
/*Line 32 - 'AtomDispatcher.js' */        window.setTimeout(this._onTimeout, 1);
/*Line 33 - 'AtomDispatcher.js' */    },
/*Line 34 - 'AtomDispatcher.js' */    callLater: function (fn) {
/*Line 35 - 'AtomDispatcher.js' */        this.queue.push(fn);
/*Line 36 - 'AtomDispatcher.js' */        if (!this._paused)
/*Line 37 - 'AtomDispatcher.js' */            this.start();
/*Line 38 - 'AtomDispatcher.js' */    },
/*Line 39 - 'AtomDispatcher.js' */    setupControls: function () {
/*Line 40 - 'AtomDispatcher.js' */        $('[atom-type=AtomApplication]').each(
/*Line 41 - 'AtomDispatcher.js' */				function () {
/*Line 42 - 'AtomDispatcher.js' */				    var element = this;
/*Line 43 - 'AtomDispatcher.js' */				    if (this.atomControl != undefined && this.atomControl != null)
/*Line 44 - 'AtomDispatcher.js' */				        return;
/*Line 45 - 'AtomDispatcher.js' */				    var ctrl = AtomUI.createControl(element);
/*Line 46 - 'AtomDispatcher.js' */				    ctrl.initialize();
/*Line 47 - 'AtomDispatcher.js' */                });

/*Line 49 - 'AtomDispatcher.js' */    }
/*Line 50 - 'AtomDispatcher.js' */};

/*Line 52 - 'AtomDispatcher.js' */NeuroSpeech.WebAtoms.AtomDispatcher.registerClass("NeuroSpeech.WebAtoms.AtomDispatcher");

/*Line 54 - 'AtomDispatcher.js' */NeuroSpeech.WebAtoms.dispatcher = new NeuroSpeech.WebAtoms.AtomDispatcher();

/*Line 0 - 'AtomControl.js' */
/*Line 1 - 'AtomControl.js' */
/*Line 2 - 'AtomControl.js' */
/*Line 3 - 'AtomControl.js' */


/*Line 6 - 'AtomControl.js' */NeuroSpeech.WebAtoms.UndefinedData = { type: "Undefined" };

/*Line 8 - 'AtomControl.js' */NeuroSpeech.WebAtoms.CachedData = {

/*Line 10 - 'AtomControl.js' */    getUrl: function (url) {


/*Line 13 - 'AtomControl.js' */        if (url) {
/*Line 14 - 'AtomControl.js' */            if (AtomUI.startsWith(url, "http://") || AtomUI.startsWith(url, "https://")) {
/*Line 15 - 'AtomControl.js' */                return url;
/*Line 16 - 'AtomControl.js' */            }
/*Line 17 - 'AtomControl.js' */            if (AtomUI.startsWith(url, "/")) {
/*Line 18 - 'AtomControl.js' */                return url;
/*Line 19 - 'AtomControl.js' */            }
/*Line 20 - 'AtomControl.js' */            if (AtomUI.startsWith(url, ".")) {
/*Line 21 - 'AtomControl.js' */                url = url.substr(1);
/*Line 22 - 'AtomControl.js' */                if (AtomUI.endsWith(location.href, "/") && AtomUI.startsWith(url, "/")) {
/*Line 23 - 'AtomControl.js' */                    url = url.substr(1);
/*Line 24 - 'AtomControl.js' */                }
/*Line 25 - 'AtomControl.js' */                return location.href + url;
/*Line 26 - 'AtomControl.js' */            }
/*Line 27 - 'AtomControl.js' */            return location.href + url;
/*Line 28 - 'AtomControl.js' */        } else {
/*Line 29 - 'AtomControl.js' */            return location.href;
/*Line 30 - 'AtomControl.js' */        }
/*Line 31 - 'AtomControl.js' */    },

/*Line 33 - 'AtomControl.js' */    cachedItems: {
/*Line 34 - 'AtomControl.js' */    },

/*Line 36 - 'AtomControl.js' */    loadItems: function (url, f) {
/*Line 37 - 'AtomControl.js' */        url = this.getUrl(url);
/*Line 38 - 'AtomControl.js' */        var ci = this.cachedItems[url];
/*Line 39 - 'AtomControl.js' */        if (ci) {
/*Line 40 - 'AtomControl.js' */            if (ci.result) {
/*Line 41 - 'AtomControl.js' */                f(ci.result);
/*Line 42 - 'AtomControl.js' */            } else {
/*Line 43 - 'AtomControl.js' */                ci.onLoad.push(f);
/*Line 44 - 'AtomControl.js' */            }
/*Line 45 - 'AtomControl.js' */            return;
/*Line 46 - 'AtomControl.js' */        } else {
/*Line 47 - 'AtomControl.js' */            ci = { url: url, onLoad: [f] };
/*Line 48 - 'AtomControl.js' */            this.cachedItems[url] = ci;
/*Line 49 - 'AtomControl.js' */        }

/*Line 51 - 'AtomControl.js' */        $.ajax(url, {
/*Line 52 - 'AtomControl.js' */            url: url,
/*Line 53 - 'AtomControl.js' */            method: "GET",
/*Line 54 - 'AtomControl.js' */            success: function (r) {
/*Line 55 - 'AtomControl.js' */                ci.result = r;
/*Line 56 - 'AtomControl.js' */                var ae = new AtomEnumerator(ci.onLoad);
/*Line 57 - 'AtomControl.js' */                while (ae.next()) {
/*Line 58 - 'AtomControl.js' */                    ae.current()(r);
/*Line 59 - 'AtomControl.js' */                }
/*Line 60 - 'AtomControl.js' */                ci.onLoad.length = 0;
/*Line 61 - 'AtomControl.js' */            }
/*Line 62 - 'AtomControl.js' */        });

/*Line 64 - 'AtomControl.js' */    }


/*Line 67 - 'AtomControl.js' */};


/*Line 70 - 'AtomControl.js' */NeuroSpeech.WebAtoms.AtomControl = function (element) {
/*Line 71 - 'AtomControl.js' */    NeuroSpeech.WebAtoms.AtomControl.initializeBase(this, [element]);
/*Line 72 - 'AtomControl.js' */    element.atomControl = this;
/*Line 73 - 'AtomControl.js' */    this._element = element;
/*Line 74 - 'AtomControl.js' */    this._events = new NeuroSpeech.WebAtoms.AtomEvents();
/*Line 75 - 'AtomControl.js' */    this.dispatcher = NeuroSpeech.WebAtoms.dispatcher;
/*Line 76 - 'AtomControl.js' */    this._data = NeuroSpeech.WebAtoms.UndefinedData;
/*Line 77 - 'AtomControl.js' */    this.bindings = [];
/*Line 78 - 'AtomControl.js' */    this._isVisible = true;
/*Line 79 - 'AtomControl.js' */    this._layout = null;
/*Line 80 - 'AtomControl.js' */};

/*Line 82 - 'AtomControl.js' */NeuroSpeech.WebAtoms.AtomControl.prototype = {

/*Line 84 - 'AtomControl.js' */    get_scope: function () {
/*Line 85 - 'AtomControl.js' */        if (this._scope === undefined) {
/*Line 86 - 'AtomControl.js' */            var ap = this.get_atomParent(this._element.parentNode);
/*Line 87 - 'AtomControl.js' */            if (ap)
/*Line 88 - 'AtomControl.js' */                return ap.get_scope();
/*Line 89 - 'AtomControl.js' */        }
/*Line 90 - 'AtomControl.js' */        return this._scope;
/*Line 91 - 'AtomControl.js' */    },
/*Line 92 - 'AtomControl.js' */    set_scope: function (v) {
/*Line 93 - 'AtomControl.js' */        this._scope = v;
/*Line 94 - 'AtomControl.js' */    },

/*Line 96 - 'AtomControl.js' */    get_layout: function () {
/*Line 97 - 'AtomControl.js' */        return this._layout;
/*Line 98 - 'AtomControl.js' */    },
/*Line 99 - 'AtomControl.js' */    set_layout: function (l) {
/*Line 100 - 'AtomControl.js' */        this._layout = l;
/*Line 101 - 'AtomControl.js' */    },

/*Line 103 - 'AtomControl.js' */    getUrl: function (url) {
/*Line 104 - 'AtomControl.js' */        if (url) {
/*Line 105 - 'AtomControl.js' */            if (AtomUI.startsWith(url, "http://") || AtomUI.startsWith(url, "https://")) {
/*Line 106 - 'AtomControl.js' */                return url;
/*Line 107 - 'AtomControl.js' */            }
/*Line 108 - 'AtomControl.js' */            if (AtomUI.startsWith(url, "/")) {
/*Line 109 - 'AtomControl.js' */                return url;
/*Line 110 - 'AtomControl.js' */            }
/*Line 111 - 'AtomControl.js' */            if (AtomUI.startsWith(url, ".")) {
/*Line 112 - 'AtomControl.js' */                url = url.substr(1);
/*Line 113 - 'AtomControl.js' */                if (AtomUI.endsWith(location.href, "/") && AtomUI.startsWith(url, "/")) {
/*Line 114 - 'AtomControl.js' */                    url = url.substr(1);
/*Line 115 - 'AtomControl.js' */                }
/*Line 116 - 'AtomControl.js' */                return location.href + url;
/*Line 117 - 'AtomControl.js' */            }
/*Line 118 - 'AtomControl.js' */            return location.href + url;
/*Line 119 - 'AtomControl.js' */        } else {
/*Line 120 - 'AtomControl.js' */            return location.href;
/*Line 121 - 'AtomControl.js' */        }
/*Line 122 - 'AtomControl.js' */    },

/*Line 124 - 'AtomControl.js' */    loadComplete: function (result, property, path) {
/*Line 125 - 'AtomControl.js' */        if (path)
/*Line 126 - 'AtomControl.js' */            result = result[path];
/*Line 127 - 'AtomControl.js' */        AtomBinder.setValue(this, property, result);
/*Line 128 - 'AtomControl.js' */    },
/*Line 129 - 'AtomControl.js' */    loadProperty: function (property, url, method, path) {
/*Line 130 - 'AtomControl.js' */        if (!url)
/*Line 131 - 'AtomControl.js' */            return;
/*Line 132 - 'AtomControl.js' */        var control = this;
/*Line 133 - 'AtomControl.js' */        var    success= function (result) {
/*Line 134 - 'AtomControl.js' */            control.loadComplete(result, property, path);
/*Line 135 - 'AtomControl.js' */        };
/*Line 136 - 'AtomControl.js' */        this.invokeAjax(url, method, null, success);
/*Line 137 - 'AtomControl.js' */    },

/*Line 139 - 'AtomControl.js' */    onAjaxError: function (jqXHR, textStatus, errorThrown) {
/*Line 140 - 'AtomControl.js' */        var res = jqXHR.responseText;
/*Line 141 - 'AtomControl.js' */        if (!res || errorThrown != "Internal Server Error")
/*Line 142 - 'AtomControl.js' */            res = errorThrown;
/*Line 143 - 'AtomControl.js' */        alert(res);
/*Line 144 - 'AtomControl.js' */    },

/*Line 146 - 'AtomControl.js' */    onAjaxSuccess: function (data) {
/*Line 147 - 'AtomControl.js' */    },

/*Line 149 - 'AtomControl.js' */    invokeAjax: function (url, method, data, success, error) {
/*Line 150 - 'AtomControl.js' */        if (!method)
/*Line 151 - 'AtomControl.js' */            method = "GET";
/*Line 152 - 'AtomControl.js' */        var ajaxUrl = this.getUrl(url);
/*Line 153 - 'AtomControl.js' */        if (!success) {
/*Line 154 - 'AtomControl.js' */            var caller = this;
/*Line 155 - 'AtomControl.js' */            success = function (d) {
/*Line 156 - 'AtomControl.js' */                caller.onAjaxSuccess(d);
/*Line 157 - 'AtomControl.js' */            };
/*Line 158 - 'AtomControl.js' */        }
/*Line 159 - 'AtomControl.js' */        if (!error) {
/*Line 160 - 'AtomControl.js' */            var caller2 = this;
/*Line 161 - 'AtomControl.js' */            error = function (jqXHR, textStatus, errorThrown) {
/*Line 162 - 'AtomControl.js' */                caller2.onAjaxError(jqXHR, textStatus, errorThrown);
/*Line 163 - 'AtomControl.js' */            };
/*Line 164 - 'AtomControl.js' */        }

/*Line 166 - 'AtomControl.js' */        if (data) {
/*Line 167 - 'AtomControl.js' */            data = { formModel: JSON.stringify(data) };
/*Line 168 - 'AtomControl.js' */        }

/*Line 170 - 'AtomControl.js' */        $.ajax(
/*Line 171 - 'AtomControl.js' */            ajaxUrl,{
/*Line 172 - 'AtomControl.js' */                type: method,
/*Line 173 - 'AtomControl.js' */                data:data,
/*Line 174 - 'AtomControl.js' */                success: success,
/*Line 175 - 'AtomControl.js' */                error: error
/*Line 176 - 'AtomControl.js' */            });
/*Line 177 - 'AtomControl.js' */        },

/*Line 179 - 'AtomControl.js' */    invokeAction: function (action) {
/*Line 180 - 'AtomControl.js' */        if (action) {
/*Line 181 - 'AtomControl.js' */            if (action.constructor == String) {
/*Line 182 - 'AtomControl.js' */                location.href = action;
/*Line 183 - 'AtomControl.js' */            }
/*Line 184 - 'AtomControl.js' */            else {

/*Line 186 - 'AtomControl.js' */                var f = action;

/*Line 188 - 'AtomControl.js' */                // is it atomControl?
/*Line 189 - 'AtomControl.js' */                if (f.atomControl) {
/*Line 190 - 'AtomControl.js' */                    f = f.atomControl;
/*Line 191 - 'AtomControl.js' */                    if (f.refresh) {
/*Line 192 - 'AtomControl.js' */                        f.refresh();
/*Line 193 - 'AtomControl.js' */                    }else {
/*Line 194 - 'AtomControl.js' */                        alert("no default action defined");
/*Line 195 - 'AtomControl.js' */                    }
/*Line 196 - 'AtomControl.js' */                }else {
/*Line 197 - 'AtomControl.js' */                    if (f._element) {
/*Line 198 - 'AtomControl.js' */                        f.refresh();
/*Line 199 - 'AtomControl.js' */                    }else {
/*Line 200 - 'AtomControl.js' */                        // invoke method...
/*Line 201 - 'AtomControl.js' */                        f();
/*Line 202 - 'AtomControl.js' */                    }
/*Line 203 - 'AtomControl.js' */                }
/*Line 204 - 'AtomControl.js' */            }
/*Line 205 - 'AtomControl.js' */        }
/*Line 206 - 'AtomControl.js' */    },

/*Line 208 - 'AtomControl.js' */    refresh: function () {
/*Line 209 - 'AtomControl.js' */        // invoke some default action...!!!
/*Line 210 - 'AtomControl.js' */    },

/*Line 212 - 'AtomControl.js' */    get_isVisible: function () {
/*Line 213 - 'AtomControl.js' */        return this._isVisible;
/*Line 214 - 'AtomControl.js' */    },
/*Line 215 - 'AtomControl.js' */    set_isVisible: function (v) {
/*Line 216 - 'AtomControl.js' */        var element = this.get_element();
/*Line 217 - 'AtomControl.js' */        this._isVisible = v;
/*Line 218 - 'AtomControl.js' */        if (!this._isVisible) {
/*Line 219 - 'AtomControl.js' */            $(element).hide();
/*Line 220 - 'AtomControl.js' */        } else {
/*Line 221 - 'AtomControl.js' */            $(element).show();
/*Line 222 - 'AtomControl.js' */        }
/*Line 223 - 'AtomControl.js' */    },

/*Line 225 - 'AtomControl.js' */    get_isEnabled: function () {
/*Line 226 - 'AtomControl.js' */        return this._isEnabled;
/*Line 227 - 'AtomControl.js' */    },
/*Line 228 - 'AtomControl.js' */    set_isEnabled: function (v) {
/*Line 229 - 'AtomControl.js' */        var element = this.get_element();
/*Line 230 - 'AtomControl.js' */        this._isEnabled = v;
/*Line 231 - 'AtomControl.js' */        if (this._isEnabled) {
/*Line 232 - 'AtomControl.js' */            $(element).attr("disabled", "disabled");
/*Line 233 - 'AtomControl.js' */        } else {
/*Line 234 - 'AtomControl.js' */            $(element).removeAttr("disabled");
/*Line 235 - 'AtomControl.js' */        }
/*Line 236 - 'AtomControl.js' */    },

/*Line 238 - 'AtomControl.js' */    get_events: function () {
/*Line 239 - 'AtomControl.js' */        return this._events;
/*Line 240 - 'AtomControl.js' */    },
/*Line 241 - 'AtomControl.js' */    get_element: function () {
/*Line 242 - 'AtomControl.js' */        return this._element;
/*Line 243 - 'AtomControl.js' */    },

/*Line 245 - 'AtomControl.js' */    get_children: function () {
/*Line 246 - 'AtomControl.js' */        return $(this._element).children();
/*Line 247 - 'AtomControl.js' */    },
/*Line 248 - 'AtomControl.js' */    getChildAt: function (index) {
/*Line 249 - 'AtomControl.js' */        return $(this._element).children()[index];
/*Line 250 - 'AtomControl.js' */    },
/*Line 251 - 'AtomControl.js' */    clearBinding: function (element, key) {
/*Line 252 - 'AtomControl.js' */        var ae = new AtomEnumerator(this.bindings);
/*Line 253 - 'AtomControl.js' */        var item;
/*Line 254 - 'AtomControl.js' */        while (ae.next()) {
/*Line 255 - 'AtomControl.js' */            item = ae.current();
/*Line 256 - 'AtomControl.js' */            if (item.element == element && item.key == key) {
/*Line 257 - 'AtomControl.js' */                this.bindings.splice(ae.currentIndex(), 1);
/*Line 258 - 'AtomControl.js' */                item.dispose();
/*Line 259 - 'AtomControl.js' */                delete item;
/*Line 260 - 'AtomControl.js' */                return;
/*Line 261 - 'AtomControl.js' */            }
/*Line 262 - 'AtomControl.js' */        }
/*Line 263 - 'AtomControl.js' */    },
/*Line 264 - 'AtomControl.js' */    addBinding: function (target, element, key, path, twoWays, jq, valueFunction, urlFunction) {
/*Line 265 - 'AtomControl.js' */        this.clearBinding(element, key);
/*Line 266 - 'AtomControl.js' */        var ab = new NeuroSpeech.WebAtoms.AtomBinding(target, element, key, path, twoWays, jq, valueFunction, urlFunction);
/*Line 267 - 'AtomControl.js' */        this.bindings.push(ab);
/*Line 268 - 'AtomControl.js' */        ab.setup();
/*Line 269 - 'AtomControl.js' */    },

/*Line 271 - 'AtomControl.js' */    get_atomParent: function (element) {
/*Line 272 - 'AtomControl.js' */        if (element == null)
/*Line 273 - 'AtomControl.js' */            return null;
/*Line 274 - 'AtomControl.js' */        if (element.atomControl != undefined && element.atomControl != null) {
/*Line 275 - 'AtomControl.js' */            return element.atomControl;
/*Line 276 - 'AtomControl.js' */        }
/*Line 277 - 'AtomControl.js' */        if (element === document || element === window)
/*Line 278 - 'AtomControl.js' */            return null;
/*Line 279 - 'AtomControl.js' */        return this.get_atomParent(element.parentNode);
/*Line 280 - 'AtomControl.js' */    },

/*Line 282 - 'AtomControl.js' */    get_data: function () {
/*Line 283 - 'AtomControl.js' */        if (this._data === NeuroSpeech.WebAtoms.UndefinedData) {
/*Line 284 - 'AtomControl.js' */            // get parent...
/*Line 285 - 'AtomControl.js' */            var ap = this.get_atomParent(this._element.parentNode);
/*Line 286 - 'AtomControl.js' */            if(ap)
/*Line 287 - 'AtomControl.js' */                return ap.get_data();
/*Line 288 - 'AtomControl.js' */        }
/*Line 289 - 'AtomControl.js' */        return this._data;
/*Line 290 - 'AtomControl.js' */    },
/*Line 291 - 'AtomControl.js' */    set_data: function (d) {
/*Line 292 - 'AtomControl.js' */        this._data = d;
/*Line 293 - 'AtomControl.js' */        // update child references...
/*Line 294 - 'AtomControl.js' */        this.updateChildBindings(this._element);
/*Line 295 - 'AtomControl.js' */    },

/*Line 297 - 'AtomControl.js' */    updateChildBindings: function (element) {
/*Line 298 - 'AtomControl.js' */        var ae = new AtomEnumerator($(element).children());
/*Line 299 - 'AtomControl.js' */        while (ae.next()) {
/*Line 300 - 'AtomControl.js' */            var child = ae.current();
/*Line 301 - 'AtomControl.js' */            if (AtomUI.isTemplate(child))
/*Line 302 - 'AtomControl.js' */                continue;
/*Line 303 - 'AtomControl.js' */            if (child.atomControl && child.atomControl._created) {
/*Line 304 - 'AtomControl.js' */                var ctrl = child.atomControl;
/*Line 305 - 'AtomControl.js' */                if (ctrl._data !== NeuroSpeech.WebAtoms.UndefinedData)
/*Line 306 - 'AtomControl.js' */                    continue;
/*Line 307 - 'AtomControl.js' */                AtomBinder.refreshValue(ctrl, "data");
/*Line 308 - 'AtomControl.js' */            }
/*Line 309 - 'AtomControl.js' */            this.updateChildBindings(child);
/*Line 310 - 'AtomControl.js' */        }
/*Line 311 - 'AtomControl.js' */    },

/*Line 313 - 'AtomControl.js' */    initializeProperties: function () {
/*Line 314 - 'AtomControl.js' */        // initialize properties...
/*Line 315 - 'AtomControl.js' */        var element = this.get_element();

/*Line 317 - 'AtomControl.js' */        var obj;
/*Line 318 - 'AtomControl.js' */        var key;
/*Line 319 - 'AtomControl.js' */        var value;
/*Line 320 - 'AtomControl.js' */        var fn;

/*Line 322 - 'AtomControl.js' */        var attrib = $(element).attr("atom-properties");
/*Line 323 - 'AtomControl.js' */        if (attrib != undefined && attrib != null) {
/*Line 324 - 'AtomControl.js' */            obj = eval("(" + attrib + ")");
/*Line 325 - 'AtomControl.js' */            for (key in obj) {
/*Line 326 - 'AtomControl.js' */                value = obj[key];
/*Line 327 - 'AtomControl.js' */                this.setValue(key, value, false, element);
/*Line 328 - 'AtomControl.js' */            }
/*Line 329 - 'AtomControl.js' */        }

/*Line 331 - 'AtomControl.js' */        attrib = $(element).attr("atom-events");
/*Line 332 - 'AtomControl.js' */        if (attrib != undefined && attrib != null) {
/*Line 333 - 'AtomControl.js' */            obj = eval("(" + attrib + ")");
/*Line 334 - 'AtomControl.js' */            for (key in obj) {
/*Line 335 - 'AtomControl.js' */                value = obj[key];
/*Line 336 - 'AtomControl.js' */                fn = this["add_" + key];
/*Line 337 - 'AtomControl.js' */                fn.apply(this, [value]);
/*Line 338 - 'AtomControl.js' */            }
/*Line 339 - 'AtomControl.js' */        }


/*Line 342 - 'AtomControl.js' */        this.setProperties(element);
/*Line 343 - 'AtomControl.js' */        //this.createChildren();
/*Line 344 - 'AtomControl.js' */        this.onCreationComplete();
/*Line 345 - 'AtomControl.js' */        this._created = true;
/*Line 346 - 'AtomControl.js' */        this.onLoaded();
/*Line 347 - 'AtomControl.js' */    },

/*Line 349 - 'AtomControl.js' */    createChildren: function () {
/*Line 350 - 'AtomControl.js' */        this.onCreateChildren(this._element);
/*Line 351 - 'AtomControl.js' */    },

/*Line 353 - 'AtomControl.js' */    onCreateChildren: function (element) {
/*Line 354 - 'AtomControl.js' */        var ae = new AtomEnumerator($(element).children());
/*Line 355 - 'AtomControl.js' */        var child;
/*Line 356 - 'AtomControl.js' */        while (ae.next()) {
/*Line 357 - 'AtomControl.js' */            child = ae.current();
/*Line 358 - 'AtomControl.js' */            if (AtomUI.isTemplate(child))
/*Line 359 - 'AtomControl.js' */                continue;
/*Line 360 - 'AtomControl.js' */            if (AtomUI.isControl(child)) {
/*Line 361 - 'AtomControl.js' */                AtomUI.createControl(child);
/*Line 362 - 'AtomControl.js' */            }else {
/*Line 363 - 'AtomControl.js' */                this.onCreateChildren(child);
/*Line 364 - 'AtomControl.js' */            }
/*Line 365 - 'AtomControl.js' */        }
/*Line 366 - 'AtomControl.js' */    },

/*Line 368 - 'AtomControl.js' */    onLoaded: function () {
/*Line 369 - 'AtomControl.js' */    },

/*Line 371 - 'AtomControl.js' */    onUpdateUI: function () {
/*Line 372 - 'AtomControl.js' */        if (this._layout) {
/*Line 373 - 'AtomControl.js' */            this._layout.doLayout(this._element);
/*Line 374 - 'AtomControl.js' */        }else {
/*Line 375 - 'AtomControl.js' */            this.updateChildUI($(this.get_element()).children());
/*Line 376 - 'AtomControl.js' */        }
/*Line 377 - 'AtomControl.js' */    },

/*Line 379 - 'AtomControl.js' */    updateUI: function () {
/*Line 380 - 'AtomControl.js' */        var ctrl = this;
/*Line 381 - 'AtomControl.js' */        this.dispatcher.callLater(function () {
/*Line 382 - 'AtomControl.js' */            ctrl.onUpdateUI();
/*Line 383 - 'AtomControl.js' */            AtomUI.updateCss(ctrl._element);
/*Line 384 - 'AtomControl.js' */        });
/*Line 385 - 'AtomControl.js' */    },

/*Line 387 - 'AtomControl.js' */    updateChildUI: function (childArray) {
/*Line 388 - 'AtomControl.js' */        var ae = new AtomEnumerator(childArray);
/*Line 389 - 'AtomControl.js' */        while (ae.next()) {
/*Line 390 - 'AtomControl.js' */            var child = ae.current();
/*Line 391 - 'AtomControl.js' */            if (child.atomControl) {
/*Line 392 - 'AtomControl.js' */                child.atomControl.updateUI();
/*Line 393 - 'AtomControl.js' */                continue;
/*Line 394 - 'AtomControl.js' */            }
/*Line 395 - 'AtomControl.js' */            AtomUI.updateCss(child);
/*Line 396 - 'AtomControl.js' */            this.updateChildUI($(child).children());
/*Line 397 - 'AtomControl.js' */        }
/*Line 398 - 'AtomControl.js' */    },

/*Line 400 - 'AtomControl.js' */    onCreationComplete: function () {
/*Line 401 - 'AtomControl.js' */        this.updateUI();
/*Line 402 - 'AtomControl.js' */    },

/*Line 404 - 'AtomControl.js' */    convertToPropertyName: function (key) {
/*Line 405 - 'AtomControl.js' */        var items = key.split("-");
/*Line 406 - 'AtomControl.js' */        var e = new AtomEnumerator(items);
/*Line 407 - 'AtomControl.js' */        while (e.next()) {
/*Line 408 - 'AtomControl.js' */            var text = e.current();
/*Line 409 - 'AtomControl.js' */            if (e.isFirst()) {
/*Line 410 - 'AtomControl.js' */                key = text;
/*Line 411 - 'AtomControl.js' */            } else {
/*Line 412 - 'AtomControl.js' */                key += text.substr(0, 1).toUpperCase() + text.substr(1);
/*Line 413 - 'AtomControl.js' */            }
/*Line 414 - 'AtomControl.js' */        }
/*Line 415 - 'AtomControl.js' */        return key;
/*Line 416 - 'AtomControl.js' */    },

/*Line 418 - 'AtomControl.js' */    setProperties: function (element) {
/*Line 419 - 'AtomControl.js' */        var obj;
/*Line 420 - 'AtomControl.js' */        var key;
/*Line 421 - 'AtomControl.js' */        var value;
/*Line 422 - 'AtomControl.js' */        var fn;
/*Line 423 - 'AtomControl.js' */        var at;

/*Line 425 - 'AtomControl.js' */        var attr = element.attributes;
/*Line 426 - 'AtomControl.js' */        var ae = new AtomEnumerator(attr);
/*Line 427 - 'AtomControl.js' */        while (ae.next()) {
/*Line 428 - 'AtomControl.js' */            at = ae.current();
/*Line 429 - 'AtomControl.js' */            key = at.nodeName;
/*Line 430 - 'AtomControl.js' */            value = at.nodeValue;
/*Line 431 - 'AtomControl.js' */            if (key.indexOf("atom-") != 0)
/*Line 432 - 'AtomControl.js' */                continue;
/*Line 433 - 'AtomControl.js' */            if (key == "atom-properties" || key == "atom-events")
/*Line 434 - 'AtomControl.js' */                continue;
/*Line 435 - 'AtomControl.js' */            key = key.substr(5);
/*Line 436 - 'AtomControl.js' */            // rename key...
/*Line 437 - 'AtomControl.js' */            key = this.convertToPropertyName(key);
/*Line 438 - 'AtomControl.js' */            this.setValue(key, value, true, element);
/*Line 439 - 'AtomControl.js' */        }

/*Line 441 - 'AtomControl.js' */        var child = new AtomEnumerator($(element).children());
/*Line 442 - 'AtomControl.js' */        while (child.next()) {
/*Line 443 - 'AtomControl.js' */            var childItem = child.current();
/*Line 444 - 'AtomControl.js' */            if (childItem.nodeName == "TEMPLATE")
/*Line 445 - 'AtomControl.js' */                continue;
/*Line 446 - 'AtomControl.js' */            at = $(childItem).attr("atom-type");
/*Line 447 - 'AtomControl.js' */            if (at != undefined && at != null)
/*Line 448 - 'AtomControl.js' */                continue;
/*Line 449 - 'AtomControl.js' */            this.setProperties(childItem);
/*Line 450 - 'AtomControl.js' */        }

/*Line 452 - 'AtomControl.js' */    },

/*Line 454 - 'AtomControl.js' */    getBindingExpression: function(txt){
/*Line 455 - 'AtomControl.js' */        var regex = /(?:window|scope|data)(?:.[a-zA-Z_][a-zA-Z_0-9]*)*/gi;

/*Line 457 - 'AtomControl.js' */        var path = [];
/*Line 458 - 'AtomControl.js' */        var vars = [];

/*Line 460 - 'AtomControl.js' */        var ms = txt.replace(regex,
/*Line 461 - 'AtomControl.js' */            function (match) {
/*Line 462 - 'AtomControl.js' */                var nv = "v" + (path.length + 1);
/*Line 463 - 'AtomControl.js' */                path.push(match);
/*Line 464 - 'AtomControl.js' */                vars.push(nv);
/*Line 465 - 'AtomControl.js' */                return nv;
/*Line 466 - 'AtomControl.js' */            }
/*Line 467 - 'AtomControl.js' */            );


/*Line 470 - 'AtomControl.js' */        var method = "(function(" + vars.join(",") + ") { return " + ms + "; })";

/*Line 472 - 'AtomControl.js' */        method = eval(method);

/*Line 474 - 'AtomControl.js' */        return { length: vars.length, method: method, path:path, original: ms };

/*Line 476 - 'AtomControl.js' */    },

/*Line 478 - 'AtomControl.js' */    setValue: function (key, value, bind, element) {
/*Line 479 - 'AtomControl.js' */        if (value && value.constructor == String) {
/*Line 480 - 'AtomControl.js' */            if (value.indexOf("@@") == 0 || value.indexOf("##") == 0 || value.indexOf("[[") == 0) {
/*Line 481 - 'AtomControl.js' */                value = value.substr(1);
/*Line 482 - 'AtomControl.js' */            } else {
/*Line 483 - 'AtomControl.js' */                if (bind) {
/*Line 484 - 'AtomControl.js' */                    if (value.indexOf("{") == 0) {
/*Line 485 - 'AtomControl.js' */                        // get binding...
/*Line 486 - 'AtomControl.js' */                        value = eval("(" + value + ")");
/*Line 487 - 'AtomControl.js' */                        //this.addBinding(this, element, key, value.path, false, false, value.valueFunction, value.urlFunction);
/*Line 488 - 'AtomControl.js' */                        this.bind(element, key, value.path, false, value.valueFunction, value.urlFunction);
/*Line 489 - 'AtomControl.js' */                        return;
/*Line 490 - 'AtomControl.js' */                    }
/*Line 491 - 'AtomControl.js' */                    if (value.indexOf("@[") == 0) {
/*Line 492 - 'AtomControl.js' */                        value = value.substr(0, value.length - 1);
/*Line 493 - 'AtomControl.js' */                        value = value.substr(2);
/*Line 494 - 'AtomControl.js' */                        this.bind(element, key, value, true);
/*Line 495 - 'AtomControl.js' */                        return;
/*Line 496 - 'AtomControl.js' */                    }
/*Line 497 - 'AtomControl.js' */                    if (value.indexOf("@URL[") == 0) {
/*Line 498 - 'AtomControl.js' */                        value = value.substr(0, value.length - 1);
/*Line 499 - 'AtomControl.js' */                        value = value.substr(5);
/*Line 500 - 'AtomControl.js' */                        var be = this.getBindingExpression(value);
/*Line 501 - 'AtomControl.js' */                        if (be.length == 0) {
/*Line 502 - 'AtomControl.js' */                            // remove single quotes...
/*Line 503 - 'AtomControl.js' */                            value = value.substr(0, value.length - 1);
/*Line 504 - 'AtomControl.js' */                            value = value.substr(1);
/*Line 505 - 'AtomControl.js' */                            this.loadProperty(key, value);
/*Line 506 - 'AtomControl.js' */                        }else {
/*Line 507 - 'AtomControl.js' */                            this.bind(element, key, be.path, false, null, be.method);
/*Line 508 - 'AtomControl.js' */                        }
/*Line 509 - 'AtomControl.js' */                        return;
/*Line 510 - 'AtomControl.js' */                    }
/*Line 511 - 'AtomControl.js' */                    if (value.indexOf("[") == 0) {
/*Line 512 - 'AtomControl.js' */                        value = value.substr(0, value.length - 1);
/*Line 513 - 'AtomControl.js' */                        value = value.substr(1);

/*Line 515 - 'AtomControl.js' */                        var be = this.getBindingExpression(value);
/*Line 516 - 'AtomControl.js' */                        if (be.length == 1 && be.path[0]==be.original) {
/*Line 517 - 'AtomControl.js' */                            this.bind(element, key, value, false);
/*Line 518 - 'AtomControl.js' */                        }
/*Line 519 - 'AtomControl.js' */                        else {
/*Line 520 - 'AtomControl.js' */                            this.bind(element, key, be.path, false, be.method);
/*Line 521 - 'AtomControl.js' */                        }
/*Line 522 - 'AtomControl.js' */                        return;
/*Line 523 - 'AtomControl.js' */                    }
/*Line 524 - 'AtomControl.js' */                }
/*Line 525 - 'AtomControl.js' */                if (value.indexOf("#") == 0) {
/*Line 526 - 'AtomControl.js' */                    value = $(value)[0];
/*Line 527 - 'AtomControl.js' */                    if (value != undefined && value != null)
/*Line 528 - 'AtomControl.js' */                        value = value.atomControl;
/*Line 529 - 'AtomControl.js' */                }
/*Line 530 - 'AtomControl.js' */            }
/*Line 531 - 'AtomControl.js' */        }

/*Line 533 - 'AtomControl.js' */        var fn = this["set_" + key];
/*Line 534 - 'AtomControl.js' */        if (fn != null) {
/*Line 535 - 'AtomControl.js' */            fn.apply(this, [value]);
/*Line 536 - 'AtomControl.js' */            return;
/*Line 537 - 'AtomControl.js' */        }
/*Line 538 - 'AtomControl.js' */        if (key == "text") {
/*Line 539 - 'AtomControl.js' */            $(element).text(value);
/*Line 540 - 'AtomControl.js' */        }
/*Line 541 - 'AtomControl.js' */    },

/*Line 543 - 'AtomControl.js' */    bind: function (element, key, value, twoWays,vf,uf) {

/*Line 545 - 'AtomControl.js' */        if (value == null) {
/*Line 546 - 'AtomControl.js' */            // remove existing binding...
/*Line 547 - 'AtomControl.js' */            this.clearBinding(element, key);
/*Line 548 - 'AtomControl.js' */            return;
/*Line 549 - 'AtomControl.js' */        }

/*Line 551 - 'AtomControl.js' */        var valueExp = "(function(data){ return " + value + ";})";

/*Line 553 - 'AtomControl.js' */        var target = this;
/*Line 554 - 'AtomControl.js' */        if (value && value.constructor==String && value.indexOf("window.") == 0) {
/*Line 555 - 'AtomControl.js' */            target = window;
/*Line 556 - 'AtomControl.js' */        }

/*Line 558 - 'AtomControl.js' */        var thisElement = this.get_element();

/*Line 560 - 'AtomControl.js' */        var jq = thisElement != element;

/*Line 562 - 'AtomControl.js' */        if (!jq) {
/*Line 563 - 'AtomControl.js' */            var f = this["get_" + key];
/*Line 564 - 'AtomControl.js' */            if (f == undefined || f == null) {
/*Line 565 - 'AtomControl.js' */                jq = true;
/*Line 566 - 'AtomControl.js' */            }
/*Line 567 - 'AtomControl.js' */        }

/*Line 569 - 'AtomControl.js' */        switch (key) {
/*Line 570 - 'AtomControl.js' */            case "value":
/*Line 571 - 'AtomControl.js' */                this.addBinding(target, element, "value", value, twoWays, jq,vf,uf);
/*Line 572 - 'AtomControl.js' */                break;
/*Line 573 - 'AtomControl.js' */            case "text":
/*Line 574 - 'AtomControl.js' */                this.addBinding(target, element, "text", value, false, true,vf,uf);
/*Line 575 - 'AtomControl.js' */                break;
/*Line 576 - 'AtomControl.js' */            default:
/*Line 577 - 'AtomControl.js' */                this.addBinding(target, element, key, value, twoWays, jq,vf,uf);
/*Line 578 - 'AtomControl.js' */                break;
/*Line 579 - 'AtomControl.js' */        }

/*Line 581 - 'AtomControl.js' */    },

/*Line 583 - 'AtomControl.js' */    initialize: function () {
/*Line 584 - 'AtomControl.js' */        NeuroSpeech.WebAtoms.AtomControl.callBaseMethod(this, "initialize");

/*Line 586 - 'AtomControl.js' */        var fn = Function.createDelegate(this, this.initializeProperties);
/*Line 587 - 'AtomControl.js' */        NeuroSpeech.WebAtoms.dispatcher.callLater(fn);

/*Line 589 - 'AtomControl.js' */        // initialize every children..
/*Line 590 - 'AtomControl.js' */        this.initializeChildren(this._element);

/*Line 592 - 'AtomControl.js' */    },


/*Line 595 - 'AtomControl.js' */    dispose: function () {
/*Line 596 - 'AtomControl.js' */        var ae = this.bindings.enumerator();
/*Line 597 - 'AtomControl.js' */        while (ae.next()) {
/*Line 598 - 'AtomControl.js' */            var b = ae.current();
/*Line 599 - 'AtomControl.js' */            b.dispose();
/*Line 600 - 'AtomControl.js' */        }
/*Line 601 - 'AtomControl.js' */        this.bindings.length = 0;
/*Line 602 - 'AtomControl.js' */        NeuroSpeech.WebAtoms.AtomControl.callBaseMethod(this, "dispose");
/*Line 603 - 'AtomControl.js' */    },

/*Line 605 - 'AtomControl.js' */    initializeChildren: function (e) {
/*Line 606 - 'AtomControl.js' */        var ae = new AtomEnumerator($(e).children());
/*Line 607 - 'AtomControl.js' */        var item;
/*Line 608 - 'AtomControl.js' */        var ctrl;
/*Line 609 - 'AtomControl.js' */        while (ae.next()) {
/*Line 610 - 'AtomControl.js' */            item = ae.current();
/*Line 611 - 'AtomControl.js' */            ctrl = item.atomControl;
/*Line 612 - 'AtomControl.js' */            if (ctrl) {
/*Line 613 - 'AtomControl.js' */                ctrl.initialize();
/*Line 614 - 'AtomControl.js' */            }else {
/*Line 615 - 'AtomControl.js' */                if(!AtomUI.isTemplate(item))
/*Line 616 - 'AtomControl.js' */                    this.initializeChildren(item);
/*Line 617 - 'AtomControl.js' */            }
/*Line 618 - 'AtomControl.js' */        }
/*Line 619 - 'AtomControl.js' */    }
/*Line 620 - 'AtomControl.js' */    };

/*Line 622 - 'AtomControl.js' */NeuroSpeech.WebAtoms.AtomControl.registerClass("NeuroSpeech.WebAtoms.AtomControl", NeuroSpeech.WebAtoms.AtomComponent);


/*Line 0 - 'AtomItemsControl.js' */

/*Line 2 - 'AtomItemsControl.js' */NeuroSpeech.WebAtoms.AtomItemsControl = function (element) {
/*Line 3 - 'AtomItemsControl.js' */    NeuroSpeech.WebAtoms.AtomItemsControl.initializeBase(this, [element]);
/*Line 4 - 'AtomItemsControl.js' */    this._items = null;
/*Line 5 - 'AtomItemsControl.js' */    this._template = null;
/*Line 6 - 'AtomItemsControl.js' */    this._collectionChanged = null;

/*Line 8 - 'AtomItemsControl.js' */    this.selectedIndex = -1;

/*Line 10 - 'AtomItemsControl.js' */    this._selectedItems = [];
/*Line 11 - 'AtomItemsControl.js' */    this._selectedElements = [];
/*Line 12 - 'AtomItemsControl.js' */    this._selectedIndexSet = false;
/*Line 13 - 'AtomItemsControl.js' */    this._allowMultipleSelection = false;
/*Line 14 - 'AtomItemsControl.js' */    this._filter = null;
/*Line 15 - 'AtomItemsControl.js' */    this._valuePath = null;
/*Line 16 - 'AtomItemsControl.js' */    this._onUIChanged = false;

/*Line 18 - 'AtomItemsControl.js' */};

/*Line 20 - 'AtomItemsControl.js' */NeuroSpeech.WebAtoms.AtomItemsControl.prototype = {

/*Line 22 - 'AtomItemsControl.js' */    refresh: function () {
/*Line 23 - 'AtomItemsControl.js' */        // load items ...
/*Line 24 - 'AtomItemsControl.js' */        var ae = new AtomEnumerator(this.bindings);
/*Line 25 - 'AtomItemsControl.js' */        var item;
/*Line 26 - 'AtomItemsControl.js' */        while (ae.next()) {
/*Line 27 - 'AtomItemsControl.js' */            item = ae.current();
/*Line 28 - 'AtomItemsControl.js' */            if (item.key == "items") {
/*Line 29 - 'AtomItemsControl.js' */                // refresh..
/*Line 30 - 'AtomItemsControl.js' */                item.onDataChanged(this, null);
/*Line 31 - 'AtomItemsControl.js' */                return;
/*Line 32 - 'AtomItemsControl.js' */            }
/*Line 33 - 'AtomItemsControl.js' */        }

/*Line 35 - 'AtomItemsControl.js' */        // otherwise just reset the url value..
/*Line 36 - 'AtomItemsControl.js' */    },

/*Line 38 - 'AtomItemsControl.js' */    get_labelPath: function () {
/*Line 39 - 'AtomItemsControl.js' */        return this._labelPath;
/*Line 40 - 'AtomItemsControl.js' */    },
/*Line 41 - 'AtomItemsControl.js' */    set_labelPath: function (l) {
/*Line 42 - 'AtomItemsControl.js' */        this._labelPath = l;
/*Line 43 - 'AtomItemsControl.js' */    },

/*Line 45 - 'AtomItemsControl.js' */    get_valuePath: function () {
/*Line 46 - 'AtomItemsControl.js' */        return this._valuePath;
/*Line 47 - 'AtomItemsControl.js' */    },
/*Line 48 - 'AtomItemsControl.js' */    set_valuePath: function (vp) {
/*Line 49 - 'AtomItemsControl.js' */        this._valuePath = vp;
/*Line 50 - 'AtomItemsControl.js' */    },

/*Line 52 - 'AtomItemsControl.js' */    get_valueSeparator: function () {
/*Line 53 - 'AtomItemsControl.js' */        return this._valueSeparator;
/*Line 54 - 'AtomItemsControl.js' */    },
/*Line 55 - 'AtomItemsControl.js' */    set_valueSeparator: function (v) {
/*Line 56 - 'AtomItemsControl.js' */        this._valueSeparator = v;
/*Line 57 - 'AtomItemsControl.js' */    },

/*Line 59 - 'AtomItemsControl.js' */    get_value: function () {

/*Line 61 - 'AtomItemsControl.js' */        if (this._allowMultipleSelection) {
/*Line 62 - 'AtomItemsControl.js' */            var items = this._selectedItems;
/*Line 63 - 'AtomItemsControl.js' */            if (items.length == 0) {
/*Line 64 - 'AtomItemsControl.js' */                if (this._value != undefined)
/*Line 65 - 'AtomItemsControl.js' */                    return this._value;
/*Line 66 - 'AtomItemsControl.js' */                return null;
/*Line 67 - 'AtomItemsControl.js' */            }
/*Line 68 - 'AtomItemsControl.js' */            items = AtomArray.getValues(items, this._valuePath);
/*Line 69 - 'AtomItemsControl.js' */            if (this._valueSeparator)
/*Line 70 - 'AtomItemsControl.js' */                items = items.join(this._valueSeparator);
/*Line 71 - 'AtomItemsControl.js' */            return items;
/*Line 72 - 'AtomItemsControl.js' */        }

/*Line 74 - 'AtomItemsControl.js' */        var s = this.get_selectedItem();
/*Line 75 - 'AtomItemsControl.js' */        if (!s) {
/*Line 76 - 'AtomItemsControl.js' */            if (this._value != undefined)
/*Line 77 - 'AtomItemsControl.js' */                return this._value;
/*Line 78 - 'AtomItemsControl.js' */            return null;
/*Line 79 - 'AtomItemsControl.js' */        }
/*Line 80 - 'AtomItemsControl.js' */        if (this._valuePath) {
/*Line 81 - 'AtomItemsControl.js' */            s = s[this._valuePath];
/*Line 82 - 'AtomItemsControl.js' */        }
/*Line 83 - 'AtomItemsControl.js' */        return s;
/*Line 84 - 'AtomItemsControl.js' */    },
/*Line 85 - 'AtomItemsControl.js' */    set_value: function (v) {
/*Line 86 - 'AtomItemsControl.js' */        this._value = v;
/*Line 87 - 'AtomItemsControl.js' */        if (v==undefined || v==null) {
/*Line 88 - 'AtomItemsControl.js' */            // reset...
/*Line 89 - 'AtomItemsControl.js' */            AtomBinder.clear(this._selectedItems);
/*Line 90 - 'AtomItemsControl.js' */            return;
/*Line 91 - 'AtomItemsControl.js' */        }
/*Line 92 - 'AtomItemsControl.js' */        var dataItems = this.get_dataItems();
/*Line 93 - 'AtomItemsControl.js' */        if (this._allowMultipleSelection && this._valueSeparator) {
/*Line 94 - 'AtomItemsControl.js' */            v = AtomArray.split(v,this._valueSeparator);
/*Line 95 - 'AtomItemsControl.js' */        } else {
/*Line 96 - 'AtomItemsControl.js' */            v = [v];
/*Line 97 - 'AtomItemsControl.js' */        }
/*Line 98 - 'AtomItemsControl.js' */        var items = AtomArray.intersect(dataItems, this._valuePath, v);
/*Line 99 - 'AtomItemsControl.js' */        if (this._allowMultipleSelection) {
/*Line 100 - 'AtomItemsControl.js' */            AtomBinder.addItems(this._selectedItems, items);
/*Line 101 - 'AtomItemsControl.js' */        } else {
/*Line 102 - 'AtomItemsControl.js' */            AtomBinder.clear(this._selectedItems);
/*Line 103 - 'AtomItemsControl.js' */            AtomBinder.addItem(this._selectedItems, items[0]);
/*Line 104 - 'AtomItemsControl.js' */        }
/*Line 105 - 'AtomItemsControl.js' */    },

/*Line 107 - 'AtomItemsControl.js' */    get_filter: function () {
/*Line 108 - 'AtomItemsControl.js' */        return this._filter;
/*Line 109 - 'AtomItemsControl.js' */    },
/*Line 110 - 'AtomItemsControl.js' */    set_filter: function (f) {
/*Line 111 - 'AtomItemsControl.js' */        this._filter = f;
/*Line 112 - 'AtomItemsControl.js' */        this.applyFilter();
/*Line 113 - 'AtomItemsControl.js' */    },

/*Line 115 - 'AtomItemsControl.js' */    applyFilter: function () {
/*Line 116 - 'AtomItemsControl.js' */        var f = this._filter;
/*Line 117 - 'AtomItemsControl.js' */        if (f == undefined || f == null) {
/*Line 118 - 'AtomItemsControl.js' */            return;
/*Line 119 - 'AtomItemsControl.js' */        }

/*Line 121 - 'AtomItemsControl.js' */        var ae = new AtomEnumerator(this.get_element().children);
/*Line 122 - 'AtomItemsControl.js' */        while (ae.next()) {
/*Line 123 - 'AtomItemsControl.js' */            var child = ae.current();
/*Line 124 - 'AtomItemsControl.js' */            var dataItem = child;
/*Line 125 - 'AtomItemsControl.js' */            if (this.hasItems()) {
/*Line 126 - 'AtomItemsControl.js' */                dataItem = child.atomControl.get_data();
/*Line 127 - 'AtomItemsControl.js' */            }
/*Line 128 - 'AtomItemsControl.js' */            if (f(dataItem)) {
/*Line 129 - 'AtomItemsControl.js' */                child.style.display = "block";
/*Line 130 - 'AtomItemsControl.js' */            } else {
/*Line 131 - 'AtomItemsControl.js' */                child.style.display = "none";
/*Line 132 - 'AtomItemsControl.js' */            }
/*Line 133 - 'AtomItemsControl.js' */            //child.style.visibility = f(dataItem) ? "inherit" : "hidden";
/*Line 134 - 'AtomItemsControl.js' */        }
/*Line 135 - 'AtomItemsControl.js' */    },

/*Line 137 - 'AtomItemsControl.js' */    isSelected: function (item) {
/*Line 138 - 'AtomItemsControl.js' */        var se = new AtomEnumerator(this._selectedItems);
/*Line 139 - 'AtomItemsControl.js' */        var sitem = null;
/*Line 140 - 'AtomItemsControl.js' */        while (se.next()) {
/*Line 141 - 'AtomItemsControl.js' */            sitem = se.current();
/*Line 142 - 'AtomItemsControl.js' */            if (sitem == item) {
/*Line 143 - 'AtomItemsControl.js' */                return true;
/*Line 144 - 'AtomItemsControl.js' */            }
/*Line 145 - 'AtomItemsControl.js' */        }
/*Line 146 - 'AtomItemsControl.js' */        return false;
/*Line 147 - 'AtomItemsControl.js' */    },

/*Line 149 - 'AtomItemsControl.js' */    get_dataItems: function () {
/*Line 150 - 'AtomItemsControl.js' */        if (this.hasItems())
/*Line 151 - 'AtomItemsControl.js' */            return this.get_items();
/*Line 152 - 'AtomItemsControl.js' */        return $(this._element).children();
/*Line 153 - 'AtomItemsControl.js' */    },

/*Line 155 - 'AtomItemsControl.js' */    getIndexOfDataItem: function (item) {
/*Line 156 - 'AtomItemsControl.js' */        if (item == null)
/*Line 157 - 'AtomItemsControl.js' */            return -1;
/*Line 158 - 'AtomItemsControl.js' */        var array = this.get_dataItems();
/*Line 159 - 'AtomItemsControl.js' */        var ae = new AtomEnumerator(array);
/*Line 160 - 'AtomItemsControl.js' */        while (ae.next()) {
/*Line 161 - 'AtomItemsControl.js' */            if (ae.current() == item)
/*Line 162 - 'AtomItemsControl.js' */                return ae.currentIndex();
/*Line 163 - 'AtomItemsControl.js' */        }
/*Line 164 - 'AtomItemsControl.js' */        return -1;
/*Line 165 - 'AtomItemsControl.js' */    },
/*Line 166 - 'AtomItemsControl.js' */    getDataItemAtIndex: function (index) {
/*Line 167 - 'AtomItemsControl.js' */        if (index == -1)
/*Line 168 - 'AtomItemsControl.js' */            return null;
/*Line 169 - 'AtomItemsControl.js' */        return this.get_dataItems()[index];
/*Line 170 - 'AtomItemsControl.js' */    },

/*Line 172 - 'AtomItemsControl.js' */    get_selectedChild: function () {
/*Line 173 - 'AtomItemsControl.js' */        var item = this.get_selectedItem();
/*Line 174 - 'AtomItemsControl.js' */        if (!this.hasItems())
/*Line 175 - 'AtomItemsControl.js' */            return item;
/*Line 176 - 'AtomItemsControl.js' */        var ce = new AtomEnumerator($(this._element).children());
/*Line 177 - 'AtomItemsControl.js' */        while (ce.next()) {
/*Line 178 - 'AtomItemsControl.js' */            var child = ce.current();
/*Line 179 - 'AtomItemsControl.js' */            if (child.atomControl.get_data() == item)
/*Line 180 - 'AtomItemsControl.js' */                return child;
/*Line 181 - 'AtomItemsControl.js' */        }
/*Line 182 - 'AtomItemsControl.js' */        return null;
/*Line 183 - 'AtomItemsControl.js' */    },

/*Line 185 - 'AtomItemsControl.js' */    get_allowMultipleSelection: function () {
/*Line 186 - 'AtomItemsControl.js' */        return this._allowMultipleSelection;
/*Line 187 - 'AtomItemsControl.js' */    },
/*Line 188 - 'AtomItemsControl.js' */    set_allowMultipleSelection: function (b) {
/*Line 189 - 'AtomItemsControl.js' */        this._allowMultipleSelection = b;
/*Line 190 - 'AtomItemsControl.js' */    },

/*Line 192 - 'AtomItemsControl.js' */    get_allowSelectFirst: function () {
/*Line 193 - 'AtomItemsControl.js' */        return this._allowSelectFirst;
/*Line 194 - 'AtomItemsControl.js' */    },
/*Line 195 - 'AtomItemsControl.js' */    set_allowSelectFirst: function (b) {
/*Line 196 - 'AtomItemsControl.js' */        this._allowSelectFirst = b;
/*Line 197 - 'AtomItemsControl.js' */    },

/*Line 199 - 'AtomItemsControl.js' */    get_selectedItem: function () {
/*Line 200 - 'AtomItemsControl.js' */        if (this._selectedItems.length > 0)
/*Line 201 - 'AtomItemsControl.js' */            return this._selectedItems[0];
/*Line 202 - 'AtomItemsControl.js' */        return null;
/*Line 203 - 'AtomItemsControl.js' */    },
/*Line 204 - 'AtomItemsControl.js' */    set_selectedItem: function (value) {
/*Line 205 - 'AtomItemsControl.js' */        AtomBinder.clear(this._selectedItems);
/*Line 206 - 'AtomItemsControl.js' */        AtomBinder.addItem(this._selectedItems, value);
/*Line 207 - 'AtomItemsControl.js' */    },

/*Line 209 - 'AtomItemsControl.js' */    get_selectedItems: function () {
/*Line 210 - 'AtomItemsControl.js' */        return this._selectedItems;
/*Line 211 - 'AtomItemsControl.js' */    },
/*Line 212 - 'AtomItemsControl.js' */    set_selectedItems: function () {
/*Line 213 - 'AtomItemsControl.js' */        // watching !!!
/*Line 214 - 'AtomItemsControl.js' */        // updating !!!
/*Line 215 - 'AtomItemsControl.js' */        throw new Error("Not yet implemented");
/*Line 216 - 'AtomItemsControl.js' */    },

/*Line 218 - 'AtomItemsControl.js' */    add_selectionChanged: function (handler) {
/*Line 219 - 'AtomItemsControl.js' */        this.get_events().addHandler("selectionChanged", handler);
/*Line 220 - 'AtomItemsControl.js' */    },
/*Line 221 - 'AtomItemsControl.js' */    remove_selectionChanged: function (handler) {
/*Line 222 - 'AtomItemsControl.js' */        this.get_events().removeHandler("selectionChanged", handler);
/*Line 223 - 'AtomItemsControl.js' */    },
/*Line 224 - 'AtomItemsControl.js' */    get_selectedIndex: function () {
/*Line 225 - 'AtomItemsControl.js' */        var item = this.get_selectedItem();
/*Line 226 - 'AtomItemsControl.js' */        return this.getIndexOfDataItem(item);
/*Line 227 - 'AtomItemsControl.js' */    },
/*Line 228 - 'AtomItemsControl.js' */    set_selectedIndex: function (value) {
/*Line 229 - 'AtomItemsControl.js' */        AtomBinder.setValue(this, "selectedItem", this.getDataItemAtIndex(value));
/*Line 230 - 'AtomItemsControl.js' */    },

/*Line 232 - 'AtomItemsControl.js' */    onCreationComplete: function () {
/*Line 233 - 'AtomItemsControl.js' */        var element = this.get_element();
/*Line 234 - 'AtomItemsControl.js' */        var dataItems = this.get_dataItems();
/*Line 235 - 'AtomItemsControl.js' */        if (this._allowSelectFirst && dataItems.length > 0) {
/*Line 236 - 'AtomItemsControl.js' */            AtomBinder.setValue(this, "selectedItem", dataItems[0]);
/*Line 237 - 'AtomItemsControl.js' */        }
/*Line 238 - 'AtomItemsControl.js' */        this.updateUI();
/*Line 239 - 'AtomItemsControl.js' */    },

/*Line 241 - 'AtomItemsControl.js' */    updateChildSelections: function (type, index, item) {

/*Line 243 - 'AtomItemsControl.js' */    },

/*Line 245 - 'AtomItemsControl.js' */    onSelectedItemsChanged: function (type, index, item) {
/*Line 246 - 'AtomItemsControl.js' */        if (!this._onUIChanged) {
/*Line 247 - 'AtomItemsControl.js' */            this.updateChildSelections(type, index, item);
/*Line 248 - 'AtomItemsControl.js' */        }
/*Line 249 - 'AtomItemsControl.js' */        AtomBinder.refreshValue(this, "value");
/*Line 250 - 'AtomItemsControl.js' */        AtomBinder.refreshValue(this, "selectedItem");
/*Line 251 - 'AtomItemsControl.js' */        AtomBinder.refreshValue(this, "selectedItems");
/*Line 252 - 'AtomItemsControl.js' */        AtomBinder.refreshValue(this, "selectedIndex");
/*Line 253 - 'AtomItemsControl.js' */        this.get_events().raise("selectionChanged", [this, Sys.EventArgs.Empty]);
/*Line 254 - 'AtomItemsControl.js' */        this.updateUI();
/*Line 255 - 'AtomItemsControl.js' */    },


/*Line 258 - 'AtomItemsControl.js' */    hasItems: function () {
/*Line 259 - 'AtomItemsControl.js' */        return this._items != undefined && this._items != null;
/*Line 260 - 'AtomItemsControl.js' */    },

/*Line 262 - 'AtomItemsControl.js' */    get_items: function () {
/*Line 263 - 'AtomItemsControl.js' */        return this._items;
/*Line 264 - 'AtomItemsControl.js' */    },
/*Line 265 - 'AtomItemsControl.js' */    set_items: function (v) {
/*Line 266 - 'AtomItemsControl.js' */        if (this._items) {
/*Line 267 - 'AtomItemsControl.js' */            this.unbindEvent(this._items, "CollectionChanged", "onCollectionChangedInternal");
/*Line 268 - 'AtomItemsControl.js' */        }
/*Line 269 - 'AtomItemsControl.js' */        this._items = v;

/*Line 271 - 'AtomItemsControl.js' */        // try starting observing....
/*Line 272 - 'AtomItemsControl.js' */        if (v != null && this._created) {
/*Line 273 - 'AtomItemsControl.js' */            this.bindEvent(this._items, "CollectionChanged", "onCollectionChangedInternal");
/*Line 274 - 'AtomItemsControl.js' */            this.onCollectionChangedInternal("refresh", -1, null);
/*Line 275 - 'AtomItemsControl.js' */        }
/*Line 276 - 'AtomItemsControl.js' */    },

/*Line 278 - 'AtomItemsControl.js' */    onCollectionChangedInternal: function (mode, index, item) {
/*Line 279 - 'AtomItemsControl.js' */        var value = this.get_value();

/*Line 281 - 'AtomItemsControl.js' */        if(this.hasItems())
/*Line 282 - 'AtomItemsControl.js' */            this.onCollectionChanged(mode, index, item);

/*Line 284 - 'AtomItemsControl.js' */        // update selections !!!
/*Line 285 - 'AtomItemsControl.js' */        if (value != null) {
/*Line 286 - 'AtomItemsControl.js' */            this.set_value(value);
/*Line 287 - 'AtomItemsControl.js' */        }else {
/*Line 288 - 'AtomItemsControl.js' */            this.selectDefault();
/*Line 289 - 'AtomItemsControl.js' */        }
/*Line 290 - 'AtomItemsControl.js' */    },

/*Line 292 - 'AtomItemsControl.js' */    selectDefault: function () {
/*Line 293 - 'AtomItemsControl.js' */        if (this._allowSelectFirst) {
/*Line 294 - 'AtomItemsControl.js' */            if (this.get_dataItems().length > 0)
/*Line 295 - 'AtomItemsControl.js' */                this.set_selectedIndex(0);
/*Line 296 - 'AtomItemsControl.js' */        }
/*Line 297 - 'AtomItemsControl.js' */    },

/*Line 299 - 'AtomItemsControl.js' */    onCollectionChanged: function (mode, index, item) {
/*Line 300 - 'AtomItemsControl.js' */        // just reset for now...
/*Line 301 - 'AtomItemsControl.js' */        var element = this.get_element();

/*Line 303 - 'AtomItemsControl.js' */        var dataItems = this.get_dataItems();
/*Line 304 - 'AtomItemsControl.js' */        var children = $(element).children();

/*Line 306 - 'AtomItemsControl.js' */        if (mode == "refresh" && dataItems.length == children.length) {
/*Line 307 - 'AtomItemsControl.js' */            // just reset the data...

/*Line 309 - 'AtomItemsControl.js' */            var ce = new AtomEnumerator(children);
/*Line 310 - 'AtomItemsControl.js' */            while (ce.next()) {
/*Line 311 - 'AtomItemsControl.js' */                var childItem = ce.current();
/*Line 312 - 'AtomItemsControl.js' */                childItem = childItem.atomControl;
/*Line 313 - 'AtomItemsControl.js' */                AtomBinder.setValue(childItem, "data", dataItems[ce.currentIndex()]);
/*Line 314 - 'AtomItemsControl.js' */            }
/*Line 315 - 'AtomItemsControl.js' */            this.applyFilter();
/*Line 316 - 'AtomItemsControl.js' */            this.updateUI();
/*Line 317 - 'AtomItemsControl.js' */            return;
/*Line 318 - 'AtomItemsControl.js' */        }

/*Line 320 - 'AtomItemsControl.js' */        AtomUI.removeAllChildren(element);
/*Line 321 - 'AtomItemsControl.js' */        //this._dataElements.length = 0;
/*Line 322 - 'AtomItemsControl.js' */        // rebuild from template...

/*Line 324 - 'AtomItemsControl.js' */        NeuroSpeech.WebAtoms.dispatcher.pause();

/*Line 326 - 'AtomItemsControl.js' */        // implement stock...

/*Line 328 - 'AtomItemsControl.js' */        var ae = new AtomEnumerator(this._items);
/*Line 329 - 'AtomItemsControl.js' */        while (ae.next()) {
/*Line 330 - 'AtomItemsControl.js' */            var data = ae.current();
/*Line 331 - 'AtomItemsControl.js' */            var elementChild = this.createChildElement(element, data, ae);
/*Line 332 - 'AtomItemsControl.js' */            //this.createChildControls(elementChild);
/*Line 333 - 'AtomItemsControl.js' */        }

/*Line 335 - 'AtomItemsControl.js' */        var caller = this;

/*Line 337 - 'AtomItemsControl.js' */        NeuroSpeech.WebAtoms.dispatcher.callLater(function () {
/*Line 338 - 'AtomItemsControl.js' */            caller.applyFilter();
/*Line 339 - 'AtomItemsControl.js' */            if (caller._element.parentNode && caller._element.parentNode.atomControl && caller._element.parentNode.atomControl instanceof NeuroSpeech.WebAtoms.AtomFormField) {
/*Line 340 - 'AtomItemsControl.js' */                caller._element.parentNode.atomControl.updateUI();
/*Line 341 - 'AtomItemsControl.js' */            } else {
/*Line 342 - 'AtomItemsControl.js' */                caller.updateUI();
/*Line 343 - 'AtomItemsControl.js' */            }
/*Line 344 - 'AtomItemsControl.js' */        });


/*Line 347 - 'AtomItemsControl.js' */        NeuroSpeech.WebAtoms.dispatcher.start();


/*Line 350 - 'AtomItemsControl.js' */    },

/*Line 352 - 'AtomItemsControl.js' */    createChildElement: function (parentElement, data, ae) {
/*Line 353 - 'AtomItemsControl.js' */        //if (!this._template)
/*Line 354 - 'AtomItemsControl.js' */        //    return null;
/*Line 355 - 'AtomItemsControl.js' */        var child = document.createElement("div");
/*Line 356 - 'AtomItemsControl.js' */        child.innerHTML = this._template;

/*Line 358 - 'AtomItemsControl.js' */        var elementChild = $(child.children).filter("*")[0];
/*Line 359 - 'AtomItemsControl.js' */        child.removeChild(elementChild);

/*Line 361 - 'AtomItemsControl.js' */        parentElement.appendChild(elementChild);

/*Line 363 - 'AtomItemsControl.js' */        var childType = NeuroSpeech.WebAtoms.AtomControl;
/*Line 364 - 'AtomItemsControl.js' */        var scope = { parentScope: this.get_scope() };
/*Line 365 - 'AtomItemsControl.js' */        if (ae) {
/*Line 366 - 'AtomItemsControl.js' */            scope.item_isFirst = ae.isFirst();
/*Line 367 - 'AtomItemsControl.js' */            scope.item_isLast = ae.isLast();
/*Line 368 - 'AtomItemsControl.js' */            scope.item_index = ae.currentIndex();
/*Line 369 - 'AtomItemsControl.js' */        }
/*Line 370 - 'AtomItemsControl.js' */        var ac = AtomUI.createControl(elementChild, NeuroSpeech.WebAtoms.AtomControl, data, scope);
/*Line 371 - 'AtomItemsControl.js' */        return elementChild;
/*Line 372 - 'AtomItemsControl.js' */    },

/*Line 374 - 'AtomItemsControl.js' */    onCreationComplete: function () {
/*Line 375 - 'AtomItemsControl.js' */        this.onCollectionChangedInternal("refresh", -1, null);
/*Line 376 - 'AtomItemsControl.js' */    },

/*Line 378 - 'AtomItemsControl.js' */    //dispose: function () {

/*Line 380 - 'AtomItemsControl.js' */    //    NeuroSpeech.WebAtoms.AtomItemsControl.callBaseMethod(this, 'dispose');
/*Line 381 - 'AtomItemsControl.js' */    //},

/*Line 383 - 'AtomItemsControl.js' */    initialize: function () {

/*Line 385 - 'AtomItemsControl.js' */        var element = this.get_element();

/*Line 387 - 'AtomItemsControl.js' */        this.bindEvent(this._selectedItems, "CollectionChanged", "onSelectedItemsChanged");

/*Line 389 - 'AtomItemsControl.js' */        var caller = this;

/*Line 391 - 'AtomItemsControl.js' */        var ae = new AtomEnumerator($(element).children());
/*Line 392 - 'AtomItemsControl.js' */        if(ae.next() && ae.isLast() && ae.isFirst()) {
/*Line 393 - 'AtomItemsControl.js' */            var t = ae.current();
/*Line 394 - 'AtomItemsControl.js' */            if (AtomUI.isTemplate(t)) {
/*Line 395 - 'AtomItemsControl.js' */                this._template = t.innerHTML;
/*Line 396 - 'AtomItemsControl.js' */                if (this._template == null || this._template == "")
/*Line 397 - 'AtomItemsControl.js' */                    throw new Error("How come we have no template?");
/*Line 398 - 'AtomItemsControl.js' */                //AtomUI.removeAllChildren(element);
/*Line 399 - 'AtomItemsControl.js' */                element.removeChild(t);
/*Line 400 - 'AtomItemsControl.js' */            }
/*Line 401 - 'AtomItemsControl.js' */        }


/*Line 404 - 'AtomItemsControl.js' */        NeuroSpeech.WebAtoms.AtomItemsControl.callBaseMethod(this, "initialize");
/*Line 405 - 'AtomItemsControl.js' */    }

/*Line 407 - 'AtomItemsControl.js' */};

/*Line 409 - 'AtomItemsControl.js' */NeuroSpeech.WebAtoms.AtomItemsControl.registerClass("NeuroSpeech.WebAtoms.AtomItemsControl", NeuroSpeech.WebAtoms.AtomControl);

/*Line 0 - 'AtomListBox.js' */


/*Line 3 - 'AtomListBox.js' */NeuroSpeech.WebAtoms.AtomListBox = function (element) {
/*Line 4 - 'AtomListBox.js' */    NeuroSpeech.WebAtoms.AtomListBox.initializeBase(this, [element]);
/*Line 5 - 'AtomListBox.js' */}

/*Line 7 - 'AtomListBox.js' */NeuroSpeech.WebAtoms.AtomListBox.prototype = {

/*Line 9 - 'AtomListBox.js' */    onClick: function (event) {
/*Line 10 - 'AtomListBox.js' */        var target = event.target;
/*Line 11 - 'AtomListBox.js' */        var element = this.get_element();
/*Line 12 - 'AtomListBox.js' */        var childElement = target;
/*Line 13 - 'AtomListBox.js' */        while (childElement.parentNode != null && childElement.parentNode != element)
/*Line 14 - 'AtomListBox.js' */            childElement = childElement.parentNode;
/*Line 15 - 'AtomListBox.js' */        if (childElement == document)
/*Line 16 - 'AtomListBox.js' */            return;
/*Line 17 - 'AtomListBox.js' */        var dataItem = childElement;
/*Line 18 - 'AtomListBox.js' */        if (this.hasItems()) {
/*Line 19 - 'AtomListBox.js' */            dataItem = childElement.atomControl.get_data();
/*Line 20 - 'AtomListBox.js' */        }

/*Line 22 - 'AtomListBox.js' */        var oldSelectedItem = this.get_selectedItem();
/*Line 23 - 'AtomListBox.js' */        if (oldSelectedItem == dataItem)
/*Line 24 - 'AtomListBox.js' */            return;


/*Line 27 - 'AtomListBox.js' */        this._onUIChanged = true;
/*Line 28 - 'AtomListBox.js' */        while (!this._allowMultipleSelection && this._selectedItems.length > 0) {
/*Line 29 - 'AtomListBox.js' */            AtomBinder.removeItem(this._selectedItems, this._selectedItems[0]);
/*Line 30 - 'AtomListBox.js' */        }
/*Line 31 - 'AtomListBox.js' */        if (this._allowMultipleSelection && AtomUI.contains(this._selectedItems, dataItem)) {
/*Line 32 - 'AtomListBox.js' */            AtomBinder.removeItem(this._selectedItems, dataItem);
/*Line 33 - 'AtomListBox.js' */        } else {
/*Line 34 - 'AtomListBox.js' */            AtomBinder.addItem(this._selectedItems, dataItem);
/*Line 35 - 'AtomListBox.js' */        }
/*Line 36 - 'AtomListBox.js' */        this._onUIChanged = false;

/*Line 38 - 'AtomListBox.js' */    },

/*Line 40 - 'AtomListBox.js' */    onUpdateUI: function () {
/*Line 41 - 'AtomListBox.js' */        var element = this.get_element();
/*Line 42 - 'AtomListBox.js' */        var ae = new AtomEnumerator($(element).children());
/*Line 43 - 'AtomListBox.js' */        while (ae.next()) {
/*Line 44 - 'AtomListBox.js' */            var i = ae.currentIndex();
/*Line 45 - 'AtomListBox.js' */            var item = ae.current();
/*Line 46 - 'AtomListBox.js' */            var dataItem = item;
/*Line 47 - 'AtomListBox.js' */            if (this.hasItems()) {
/*Line 48 - 'AtomListBox.js' */                dataItem = this.getDataItemAtIndex(i);
/*Line 49 - 'AtomListBox.js' */            }
/*Line 50 - 'AtomListBox.js' */            if (this.isSelected(dataItem)) {
/*Line 51 - 'AtomListBox.js' */                $(item).addClass("atom-selected");
/*Line 52 - 'AtomListBox.js' */            } else {
/*Line 53 - 'AtomListBox.js' */                $(item).removeClass("atom-selected");
/*Line 54 - 'AtomListBox.js' */            }
/*Line 55 - 'AtomListBox.js' */            AtomUI.setUI(item, "AtomListItem");
/*Line 56 - 'AtomListBox.js' */        }
/*Line 57 - 'AtomListBox.js' */        AtomUI.setUI(element, "AtomListBox", "atom-list-box");
/*Line 58 - 'AtomListBox.js' */    },

/*Line 60 - 'AtomListBox.js' */    dispose: function () {
/*Line 61 - 'AtomListBox.js' */        NeuroSpeech.WebAtoms.AtomListBox.callBaseMethod(this, "dispose");
/*Line 62 - 'AtomListBox.js' */    },

/*Line 64 - 'AtomListBox.js' */    initialize: function () {
/*Line 65 - 'AtomListBox.js' */        var element = this.get_element();
/*Line 66 - 'AtomListBox.js' */        this.bindEvent(element, "click", "onClick");
/*Line 67 - 'AtomListBox.js' */        NeuroSpeech.WebAtoms.AtomListBox.callBaseMethod(this, "initialize");
/*Line 68 - 'AtomListBox.js' */    }


/*Line 71 - 'AtomListBox.js' */};

/*Line 73 - 'AtomListBox.js' */NeuroSpeech.WebAtoms.AtomListBox.registerClass("NeuroSpeech.WebAtoms.AtomListBox", NeuroSpeech.WebAtoms.AtomItemsControl);
/*Line 0 - 'AtomButton.js' */


/*Line 3 - 'AtomButton.js' */NeuroSpeech.WebAtoms.AtomButton = function (element) {
/*Line 4 - 'AtomButton.js' */    NeuroSpeech.WebAtoms.AtomButton.initializeBase(this, [element]);
/*Line 5 - 'AtomButton.js' */};

/*Line 7 - 'AtomButton.js' */NeuroSpeech.WebAtoms.AtomButton.prototype = {
/*Line 8 - 'AtomButton.js' */    add_click: function (handler) {
/*Line 9 - 'AtomButton.js' */        this.get_events().addHandler("click", handler);
/*Line 10 - 'AtomButton.js' */    },
/*Line 11 - 'AtomButton.js' */    remove_click: function (handler) {
/*Line 12 - 'AtomButton.js' */        this.get_events().removeHandler("click", handler);
/*Line 13 - 'AtomButton.js' */    },

/*Line 15 - 'AtomButton.js' */    onUpdateUI: function () {
/*Line 16 - 'AtomButton.js' */        var element = this.get_element();
/*Line 17 - 'AtomButton.js' */        var uiType = $(element).attr("atom-style");
/*Line 18 - 'AtomButton.js' */        if (uiType == null || uiType == undefined)
/*Line 19 - 'AtomButton.js' */            AtomUI.setUI(element, "AtomButton", "atom-button");
/*Line 20 - 'AtomButton.js' */    },

/*Line 22 - 'AtomButton.js' */    onClickHandler: function () {
/*Line 23 - 'AtomButton.js' */        this.get_events().raise("click", [this, Sys.EventArgs.Empty]);
/*Line 24 - 'AtomButton.js' */    },

/*Line 26 - 'AtomButton.js' */    initialize: function () {

/*Line 28 - 'AtomButton.js' */        var element = this.get_element();
/*Line 29 - 'AtomButton.js' */        this.updateUI();

/*Line 31 - 'AtomButton.js' */        this.bindEvent(element, "click", "onClickHandler");

/*Line 33 - 'AtomButton.js' */        NeuroSpeech.WebAtoms.AtomButton.callBaseMethod(this, "initialize");
/*Line 34 - 'AtomButton.js' */    }
/*Line 35 - 'AtomButton.js' */};

/*Line 37 - 'AtomButton.js' */NeuroSpeech.WebAtoms.AtomButton.registerClass("NeuroSpeech.WebAtoms.AtomButton", NeuroSpeech.WebAtoms.AtomControl);
/*Line 0 - 'AtomCheckBoxList.js' */

/*Line 2 - 'AtomCheckBoxList.js' */NeuroSpeech.WebAtoms.AtomCheckBoxList = function (element) {
/*Line 3 - 'AtomCheckBoxList.js' */    NeuroSpeech.WebAtoms.AtomCheckBoxList.initializeBase(this, [element]);
/*Line 4 - 'AtomCheckBoxList.js' */    this._allowMultipleSelection = true;
/*Line 5 - 'AtomCheckBoxList.js' */    this._valueSeparator = ",";
/*Line 6 - 'AtomCheckBoxList.js' */    this._dataElements = [];
/*Line 7 - 'AtomCheckBoxList.js' */};

/*Line 9 - 'AtomCheckBoxList.js' */NeuroSpeech.WebAtoms.AtomCheckBoxList.prototype = {

/*Line 11 - 'AtomCheckBoxList.js' */    updateChildSelections: function () {
/*Line 12 - 'AtomCheckBoxList.js' */        var dataItems = this.get_dataItems();
/*Line 13 - 'AtomCheckBoxList.js' */        var ae = new AtomEnumerator(dataItems);
/*Line 14 - 'AtomCheckBoxList.js' */        var children = this._dataElements;
/*Line 15 - 'AtomCheckBoxList.js' */        while (ae.next()) {
/*Line 16 - 'AtomCheckBoxList.js' */            var dataItem = ae.current();
/*Line 17 - 'AtomCheckBoxList.js' */            var item = children[ae.currentIndex()];
/*Line 18 - 'AtomCheckBoxList.js' */            if (this.isSelected(dataItem)) {
/*Line 19 - 'AtomCheckBoxList.js' */                $(item).attr("checked", "true");
/*Line 20 - 'AtomCheckBoxList.js' */            } else {
/*Line 21 - 'AtomCheckBoxList.js' */                $(item).removeAttr("checked");
/*Line 22 - 'AtomCheckBoxList.js' */            }
/*Line 23 - 'AtomCheckBoxList.js' */        }
/*Line 24 - 'AtomCheckBoxList.js' */    },


/*Line 27 - 'AtomCheckBoxList.js' */    onDataChange: function (event) {
/*Line 28 - 'AtomCheckBoxList.js' */        this._onUIChanged = true;

/*Line 30 - 'AtomCheckBoxList.js' */        var item = event.target;
/*Line 31 - 'AtomCheckBoxList.js' */        var dataItem = item;
/*Line 32 - 'AtomCheckBoxList.js' */        if (this.hasItems())
/*Line 33 - 'AtomCheckBoxList.js' */            dataItem = $(item).data("atom-data-item");
/*Line 34 - 'AtomCheckBoxList.js' */        var checked = $(item).attr("checked");

/*Line 36 - 'AtomCheckBoxList.js' */        if (this.isSelected(dataItem)) {
/*Line 37 - 'AtomCheckBoxList.js' */            if (!checked) {
/*Line 38 - 'AtomCheckBoxList.js' */                AtomBinder.removeItem(this._selectedItems, dataItem);
/*Line 39 - 'AtomCheckBoxList.js' */            }
/*Line 40 - 'AtomCheckBoxList.js' */        }
/*Line 41 - 'AtomCheckBoxList.js' */        else {
/*Line 42 - 'AtomCheckBoxList.js' */            if (checked) {
/*Line 43 - 'AtomCheckBoxList.js' */                AtomBinder.addItem(this._selectedItems, dataItem);
/*Line 44 - 'AtomCheckBoxList.js' */            }
/*Line 45 - 'AtomCheckBoxList.js' */        }

/*Line 47 - 'AtomCheckBoxList.js' */        this._onUIChanged = false;
/*Line 48 - 'AtomCheckBoxList.js' */    },

/*Line 50 - 'AtomCheckBoxList.js' */    createChildElement: function (parentElement, data) {
/*Line 51 - 'AtomCheckBoxList.js' */        var span = document.createElement("SPAN");
/*Line 52 - 'AtomCheckBoxList.js' */        var cb = document.createElement("INPUT");
/*Line 53 - 'AtomCheckBoxList.js' */        $(cb).attr("type", "checkbox");
/*Line 54 - 'AtomCheckBoxList.js' */        var lp = this.get_labelPath();
/*Line 55 - 'AtomCheckBoxList.js' */        var vp = this.get_valuePath();
/*Line 56 - 'AtomCheckBoxList.js' */        l = data;
/*Line 57 - 'AtomCheckBoxList.js' */        v = data;
/*Line 58 - 'AtomCheckBoxList.js' */        if (lp)
/*Line 59 - 'AtomCheckBoxList.js' */            l = data[lp];
/*Line 60 - 'AtomCheckBoxList.js' */        if (vp)
/*Line 61 - 'AtomCheckBoxList.js' */            v = data[vp];
/*Line 62 - 'AtomCheckBoxList.js' */        $(cb).data("atom-data-item", data);
/*Line 63 - 'AtomCheckBoxList.js' */        $(cb).data("atom-data", v);
/*Line 64 - 'AtomCheckBoxList.js' */        $(cb).val(l);
/*Line 65 - 'AtomCheckBoxList.js' */        span.appendChild(cb);
/*Line 66 - 'AtomCheckBoxList.js' */        var txt = document.createTextNode(l);
/*Line 67 - 'AtomCheckBoxList.js' */        span.appendChild(txt);
/*Line 68 - 'AtomCheckBoxList.js' */        parentElement.appendChild(span);
/*Line 69 - 'AtomCheckBoxList.js' */        this.bindEvent(cb, "change", "onDataChange");

/*Line 71 - 'AtomCheckBoxList.js' */        this._dataElements.push(cb);

/*Line 73 - 'AtomCheckBoxList.js' */        return cb;
/*Line 74 - 'AtomCheckBoxList.js' */    }

/*Line 76 - 'AtomCheckBoxList.js' */};

/*Line 78 - 'AtomCheckBoxList.js' */NeuroSpeech.WebAtoms.AtomCheckBoxList.registerClass("NeuroSpeech.WebAtoms.AtomCheckBoxList", NeuroSpeech.WebAtoms.AtomItemsControl);
/*Line 0 - 'AtomComboBox.js' */
/*Line 1 - 'AtomComboBox.js' */


/*Line 4 - 'AtomComboBox.js' */NeuroSpeech.WebAtoms.AtomComboBox = function (element) {
/*Line 5 - 'AtomComboBox.js' */    NeuroSpeech.WebAtoms.AtomComboBox.initializeBase(this, [element]);
/*Line 6 - 'AtomComboBox.js' */};

/*Line 8 - 'AtomComboBox.js' */NeuroSpeech.WebAtoms.AtomComboBox.prototype = {

/*Line 10 - 'AtomComboBox.js' */    onSelectionChanged: function () {
/*Line 11 - 'AtomComboBox.js' */        this._onUIChanged = true;
/*Line 12 - 'AtomComboBox.js' */        var element = this.get_element();
/*Line 13 - 'AtomComboBox.js' */        this.set_selectedIndex(element.selectedIndex);
/*Line 14 - 'AtomComboBox.js' */        this._onUIChanged = false;
/*Line 15 - 'AtomComboBox.js' */    },

/*Line 17 - 'AtomComboBox.js' */    updateChildSelections: function () {
/*Line 18 - 'AtomComboBox.js' */        var element = this._element;
/*Line 19 - 'AtomComboBox.js' */        element.selectedIndex = this.get_selectedIndex();
/*Line 20 - 'AtomComboBox.js' */    },

/*Line 22 - 'AtomComboBox.js' */    onCollectionChanged: function (mode, index, item) {
/*Line 23 - 'AtomComboBox.js' */        var element = this.get_element();
/*Line 24 - 'AtomComboBox.js' */        var dataItems = this.get_dataItems();
/*Line 25 - 'AtomComboBox.js' */        element.options.length = dataItems.length;
/*Line 26 - 'AtomComboBox.js' */        var ae = new AtomEnumerator(dataItems);

/*Line 28 - 'AtomComboBox.js' */        var lp = this._labelPath;
/*Line 29 - 'AtomComboBox.js' */        var vp = this._valuePath;
/*Line 30 - 'AtomComboBox.js' */        var label = null;
/*Line 31 - 'AtomComboBox.js' */        var value = null;
/*Line 32 - 'AtomComboBox.js' */        var selectedValue = this.get_value();
/*Line 33 - 'AtomComboBox.js' */        while (ae.next()) {
/*Line 34 - 'AtomComboBox.js' */            var data = ae.current();
/*Line 35 - 'AtomComboBox.js' */            label = data;
/*Line 36 - 'AtomComboBox.js' */            value = data;
/*Line 37 - 'AtomComboBox.js' */            if (lp)
/*Line 38 - 'AtomComboBox.js' */                label = label[lp];
/*Line 39 - 'AtomComboBox.js' */            if (vp)
/*Line 40 - 'AtomComboBox.js' */                value = value[vp];

/*Line 42 - 'AtomComboBox.js' */            element.options[ae.currentIndex()] = new Option(label, value, false, value == selectedValue);
/*Line 43 - 'AtomComboBox.js' */        }
/*Line 44 - 'AtomComboBox.js' */        this.setDefaultValue();
/*Line 45 - 'AtomComboBox.js' */    },

/*Line 47 - 'AtomComboBox.js' */    setDefaultValue: function () {
/*Line 48 - 'AtomComboBox.js' */        if (this._value)
/*Line 49 - 'AtomComboBox.js' */            return;
/*Line 50 - 'AtomComboBox.js' */        if (this.get_selectedItem())
/*Line 51 - 'AtomComboBox.js' */            return;
/*Line 52 - 'AtomComboBox.js' */        this.onSelectionChanged();
/*Line 53 - 'AtomComboBox.js' */    },

/*Line 55 - 'AtomComboBox.js' */    onCreationComplete: function () {
/*Line 56 - 'AtomComboBox.js' */        NeuroSpeech.WebAtoms.AtomComboBox.callBaseMethod(this, "onCreationComplete");
/*Line 57 - 'AtomComboBox.js' */        this.setDefaultValue();
/*Line 58 - 'AtomComboBox.js' */    },

/*Line 60 - 'AtomComboBox.js' */    initialize: function () {

/*Line 62 - 'AtomComboBox.js' */        var element = this.get_element();
/*Line 63 - 'AtomComboBox.js' */        this.bindEvent(element, "change", "onSelectionChanged");
/*Line 64 - 'AtomComboBox.js' */        NeuroSpeech.WebAtoms.AtomComboBox.callBaseMethod(this, "initialize");
/*Line 65 - 'AtomComboBox.js' */    }
/*Line 66 - 'AtomComboBox.js' */};

/*Line 68 - 'AtomComboBox.js' */NeuroSpeech.WebAtoms.AtomComboBox.registerClass("NeuroSpeech.WebAtoms.AtomComboBox", NeuroSpeech.WebAtoms.AtomItemsControl);

/*Line 0 - 'AtomDockPanel.js' */


/*Line 3 - 'AtomDockPanel.js' */NeuroSpeech.WebAtoms.AtomDockPanel = function (element) {
/*Line 4 - 'AtomDockPanel.js' */    NeuroSpeech.WebAtoms.AtomDockPanel.initializeBase(this, [element]);

/*Line 6 - 'AtomDockPanel.js' */    this._resizeOnChildResized = false;
/*Line 7 - 'AtomDockPanel.js' */};

/*Line 9 - 'AtomDockPanel.js' */NeuroSpeech.WebAtoms.AtomDockPanel.prototype = {

/*Line 11 - 'AtomDockPanel.js' */    resizeChild: function (item) {
/*Line 12 - 'AtomDockPanel.js' */        if (item.atomControl) {
/*Line 13 - 'AtomDockPanel.js' */            item.atomControl.updateUI();
/*Line 14 - 'AtomDockPanel.js' */        }
/*Line 15 - 'AtomDockPanel.js' */        else {
/*Line 16 - 'AtomDockPanel.js' */            AtomUI.updateCss(item);
/*Line 17 - 'AtomDockPanel.js' */        }
/*Line 18 - 'AtomDockPanel.js' */    },

/*Line 20 - 'AtomDockPanel.js' */    calculateSize: function () {
/*Line 21 - 'AtomDockPanel.js' */        var element = this.get_element();

/*Line 23 - 'AtomDockPanel.js' */        var size;

/*Line 25 - 'AtomDockPanel.js' */        if (AtomBrowser.isIE && AtomBrowser.majorVersion < 10) {
/*Line 26 - 'AtomDockPanel.js' */            size = { width: element.offsetWidth, height: element.offsetHeight };
/*Line 27 - 'AtomDockPanel.js' */        }else {

/*Line 29 - 'AtomDockPanel.js' */            var s = AtomUI.getComputedStyle(element);

/*Line 31 - 'AtomDockPanel.js' */            size = { width: AtomUI.parseStyleNumber(s.width), height: AtomUI.parseStyleNumber(s.height) };
/*Line 32 - 'AtomDockPanel.js' */        }

/*Line 34 - 'AtomDockPanel.js' */        if (!this._resizeOnChildResized) 
/*Line 35 - 'AtomDockPanel.js' */            return size;

/*Line 37 - 'AtomDockPanel.js' */        var desiredHeight = 0;
        
/*Line 39 - 'AtomDockPanel.js' */        var ae = new AtomEnumerator($(element).children());
/*Line 40 - 'AtomDockPanel.js' */        while (ae.next()) {
/*Line 41 - 'AtomDockPanel.js' */            var child = ae.current();
/*Line 42 - 'AtomDockPanel.js' */            var dock = $(child).attr("atom-dock");
/*Line 43 - 'AtomDockPanel.js' */            switch (dock) {
/*Line 44 - 'AtomDockPanel.js' */                case "Bottom":
/*Line 45 - 'AtomDockPanel.js' */                case "Fill":
/*Line 46 - 'AtomDockPanel.js' */                case "Top":
/*Line 47 - 'AtomDockPanel.js' */                    var h;
/*Line 48 - 'AtomDockPanel.js' */                    if (AtomBrowser.isIE && AtomBrowser.majorVersion<10) {
/*Line 49 - 'AtomDockPanel.js' */                        h = child.offsetHeight;
/*Line 50 - 'AtomDockPanel.js' */                    } else {
/*Line 51 - 'AtomDockPanel.js' */                        //h = AtomUI.getItemRect(child).height;
/*Line 52 - 'AtomDockPanel.js' */                        h = $(child).outerHeight(true);
/*Line 53 - 'AtomDockPanel.js' */                    }
/*Line 54 - 'AtomDockPanel.js' */                    desiredHeight += h;
/*Line 55 - 'AtomDockPanel.js' */                    break;
/*Line 56 - 'AtomDockPanel.js' */            }
/*Line 57 - 'AtomDockPanel.js' */        }

/*Line 59 - 'AtomDockPanel.js' */        if (size.height < desiredHeight) {
/*Line 60 - 'AtomDockPanel.js' */            size.height = desiredHeight;
/*Line 61 - 'AtomDockPanel.js' */            $(element).height(size.height);
/*Line 62 - 'AtomDockPanel.js' */        }

/*Line 64 - 'AtomDockPanel.js' */        return size;
/*Line 65 - 'AtomDockPanel.js' */    },

/*Line 67 - 'AtomDockPanel.js' */    onUpdateUI: function () {


/*Line 70 - 'AtomDockPanel.js' */        var element = this.get_element();


/*Line 73 - 'AtomDockPanel.js' */        var i;
/*Line 74 - 'AtomDockPanel.js' */        var left = 0;
/*Line 75 - 'AtomDockPanel.js' */        var top = 0;

/*Line 77 - 'AtomDockPanel.js' */        var s = this.calculateSize();

/*Line 79 - 'AtomDockPanel.js' */        // is parent of this is body??
/*Line 80 - 'AtomDockPanel.js' */        var height = s.height;
/*Line 81 - 'AtomDockPanel.js' */        var width = s.width;

/*Line 83 - 'AtomDockPanel.js' */        var children = [];
/*Line 84 - 'AtomDockPanel.js' */        var en;
/*Line 85 - 'AtomDockPanel.js' */        var item;

/*Line 87 - 'AtomDockPanel.js' */        var itemRect;
/*Line 88 - 'AtomDockPanel.js' */        var clientRect;

/*Line 90 - 'AtomDockPanel.js' */        var itemHeight;
/*Line 91 - 'AtomDockPanel.js' */        var itemWidth;

/*Line 93 - 'AtomDockPanel.js' */        en = new AtomEnumerator($(element).children("[atom-dock='Top']"));
/*Line 94 - 'AtomDockPanel.js' */        while (en.next()) {
/*Line 95 - 'AtomDockPanel.js' */            item = en.current();
/*Line 96 - 'AtomDockPanel.js' */            $(item).addClass("atom-position-absolute");

/*Line 98 - 'AtomDockPanel.js' */            //$(item).width(width);
/*Line 99 - 'AtomDockPanel.js' */            //item.style.top = top + "px";
/*Line 100 - 'AtomDockPanel.js' */            //item.style.left = left + "px";

/*Line 102 - 'AtomDockPanel.js' */            itemHeight = $(item).outerHeight(true);

/*Line 104 - 'AtomDockPanel.js' */            AtomUI.setItemRect(item, { top: top, left: left, width: width });

/*Line 106 - 'AtomDockPanel.js' */            top += itemHeight;
/*Line 107 - 'AtomDockPanel.js' */            height -= itemHeight;

/*Line 109 - 'AtomDockPanel.js' */            this.resizeChild(item);
/*Line 110 - 'AtomDockPanel.js' */        }

/*Line 112 - 'AtomDockPanel.js' */        en = new AtomEnumerator($(element).children("[atom-dock='Bottom']"));
/*Line 113 - 'AtomDockPanel.js' */        while (en.next()) {
/*Line 114 - 'AtomDockPanel.js' */            item = en.current();
/*Line 115 - 'AtomDockPanel.js' */            $(item).addClass("atom-position-absolute");

/*Line 117 - 'AtomDockPanel.js' */            itemHeight = $(item).outerHeight(true);

/*Line 119 - 'AtomDockPanel.js' */            height -= itemHeight;
/*Line 120 - 'AtomDockPanel.js' */            //item.style.top = (top + height) + "px";

/*Line 122 - 'AtomDockPanel.js' */            AtomUI.setItemRect(item, { top: (top + height), width: width });

/*Line 124 - 'AtomDockPanel.js' */            //$(item).width(width);

/*Line 126 - 'AtomDockPanel.js' */            this.resizeChild(item);
/*Line 127 - 'AtomDockPanel.js' */        }

/*Line 129 - 'AtomDockPanel.js' */        en = new AtomEnumerator($(element).children("[atom-dock='Left']"));
/*Line 130 - 'AtomDockPanel.js' */        while (en.next()) {
/*Line 131 - 'AtomDockPanel.js' */            item = en.current();
/*Line 132 - 'AtomDockPanel.js' */            $(item).addClass("atom-position-absolute");


/*Line 135 - 'AtomDockPanel.js' */            //item.style.top = top + "px";
/*Line 136 - 'AtomDockPanel.js' */            //item.style.left = left + "px";
/*Line 137 - 'AtomDockPanel.js' */            var itemWidth = $(item).outerWidth(true);
/*Line 138 - 'AtomDockPanel.js' */            width -= itemWidth;
/*Line 139 - 'AtomDockPanel.js' */            //$(item).height(height);

/*Line 141 - 'AtomDockPanel.js' */            AtomUI.setItemRect(item, { top: top, left: left, height: height });
/*Line 142 - 'AtomDockPanel.js' */            left += itemWidth;

/*Line 144 - 'AtomDockPanel.js' */            this.resizeChild(item);
/*Line 145 - 'AtomDockPanel.js' */        }

/*Line 147 - 'AtomDockPanel.js' */        en = new AtomEnumerator($(element).children("[atom-dock='Right']"));
/*Line 148 - 'AtomDockPanel.js' */        while (en.next()) {
/*Line 149 - 'AtomDockPanel.js' */            item = en.current();
/*Line 150 - 'AtomDockPanel.js' */            $(item).addClass("atom-position-absolute");

/*Line 152 - 'AtomDockPanel.js' */            //item.style.top = top + "px";
/*Line 153 - 'AtomDockPanel.js' */            if (item.style.display != "none")
/*Line 154 - 'AtomDockPanel.js' */                width -= $(item).outerWidth(true);
/*Line 155 - 'AtomDockPanel.js' */            //item.style.left = (width + left) + "px";
/*Line 156 - 'AtomDockPanel.js' */            //$(item).height(height);

/*Line 158 - 'AtomDockPanel.js' */            AtomUI.setItemRect(item, { left: (width + left), top: top, height: height });

/*Line 160 - 'AtomDockPanel.js' */            this.resizeChild(item);
/*Line 161 - 'AtomDockPanel.js' */        }

/*Line 163 - 'AtomDockPanel.js' */        en = new AtomEnumerator($(element).children("[atom-dock='Fill']"));
/*Line 164 - 'AtomDockPanel.js' */        while (en.next()) {
/*Line 165 - 'AtomDockPanel.js' */            item = en.current();

/*Line 167 - 'AtomDockPanel.js' */            $(item).addClass("atom-position-absolute");

/*Line 169 - 'AtomDockPanel.js' */            //itemWidth = AtomUI.getItemRect(item).width;
/*Line 170 - 'AtomDockPanel.js' */            itemWidth = $(item).css("max-width");
/*Line 171 - 'AtomDockPanel.js' */            if (itemWidth) {
/*Line 172 - 'AtomDockPanel.js' */                itemWidth = AtomUI.parseStyleNumber(itemWidth);
/*Line 173 - 'AtomDockPanel.js' */                if (itemWidth > 0) {
/*Line 174 - 'AtomDockPanel.js' */                    width = itemWidth;
/*Line 175 - 'AtomDockPanel.js' */                }
/*Line 176 - 'AtomDockPanel.js' */            }

/*Line 178 - 'AtomDockPanel.js' */            AtomUI.setItemRect(item, { left: left, top: top, width: width, height: height });

/*Line 180 - 'AtomDockPanel.js' */            this.resizeChild(item);
/*Line 181 - 'AtomDockPanel.js' */        }

/*Line 183 - 'AtomDockPanel.js' */    },

/*Line 185 - 'AtomDockPanel.js' */    initialize: function () {
/*Line 186 - 'AtomDockPanel.js' */        var element = this.get_element();

/*Line 188 - 'AtomDockPanel.js' */        element.style.overflow = "hidden";
/*Line 189 - 'AtomDockPanel.js' */        NeuroSpeech.WebAtoms.AtomDockPanel.callBaseMethod(this, "initialize");
/*Line 190 - 'AtomDockPanel.js' */    }

/*Line 192 - 'AtomDockPanel.js' */};

/*Line 194 - 'AtomDockPanel.js' */NeuroSpeech.WebAtoms.AtomDockPanel.registerClass("NeuroSpeech.WebAtoms.AtomDockPanel", NeuroSpeech.WebAtoms.AtomControl);

/*Line 0 - 'AtomPostButton.js' */

/*Line 2 - 'AtomPostButton.js' */NeuroSpeech.WebAtoms.AtomPostButton = function (element) {
/*Line 3 - 'AtomPostButton.js' */    NeuroSpeech.WebAtoms.AtomPostButton.initializeBase(this, [element]);
/*Line 4 - 'AtomPostButton.js' */};

/*Line 6 - 'AtomPostButton.js' */NeuroSpeech.WebAtoms.AtomPostButton.prototype = {
/*Line 7 - 'AtomPostButton.js' */    get_postUrl: function () {
/*Line 8 - 'AtomPostButton.js' */        return this._postUrl;
/*Line 9 - 'AtomPostButton.js' */    },
/*Line 10 - 'AtomPostButton.js' */    set_postUrl: function (v) {
/*Line 11 - 'AtomPostButton.js' */        this._postUrl = v;
/*Line 12 - 'AtomPostButton.js' */    },

/*Line 14 - 'AtomPostButton.js' */    get_next: function () {
/*Line 15 - 'AtomPostButton.js' */        return this._next;
/*Line 16 - 'AtomPostButton.js' */    },
/*Line 17 - 'AtomPostButton.js' */    set_next: function (v) {
/*Line 18 - 'AtomPostButton.js' */        this._next = v;
/*Line 19 - 'AtomPostButton.js' */    },

/*Line 21 - 'AtomPostButton.js' */    get_confirm: function () {
/*Line 22 - 'AtomPostButton.js' */        return this._confirm;
/*Line 23 - 'AtomPostButton.js' */    },
/*Line 24 - 'AtomPostButton.js' */    set_confirm: function (v) {
/*Line 25 - 'AtomPostButton.js' */        this._confirm = v;
/*Line 26 - 'AtomPostButton.js' */    },
/*Line 27 - 'AtomPostButton.js' */    get_confirmMessage: function () {
/*Line 28 - 'AtomPostButton.js' */        return this._confirmMessage;
/*Line 29 - 'AtomPostButton.js' */    },
/*Line 30 - 'AtomPostButton.js' */    set_confirmMessage: function (v) {
/*Line 31 - 'AtomPostButton.js' */        this._confirmMessage = v;
/*Line 32 - 'AtomPostButton.js' */    },

/*Line 34 - 'AtomPostButton.js' */    onClick: function () {
        
/*Line 36 - 'AtomPostButton.js' */        if (this._confirm) {
/*Line 37 - 'AtomPostButton.js' */            if (!confirm(this._confirmMessage))
/*Line 38 - 'AtomPostButton.js' */                return;
/*Line 39 - 'AtomPostButton.js' */        }

/*Line 41 - 'AtomPostButton.js' */        var data = this.get_data();

/*Line 43 - 'AtomPostButton.js' */        if(data===null || data===undefined)
/*Line 44 - 'AtomPostButton.js' */            return;

/*Line 46 - 'AtomPostButton.js' */        data = AtomBinder.getClone(data);

/*Line 48 - 'AtomPostButton.js' */        var caller = this;
/*Line 49 - 'AtomPostButton.js' */        var invokeNext = function () {
/*Line 50 - 'AtomPostButton.js' */            caller.invokeAction(caller._next);
/*Line 51 - 'AtomPostButton.js' */        };

/*Line 53 - 'AtomPostButton.js' */        this.invokeAjax(this._postUrl, "POST", data, invokeNext);

/*Line 55 - 'AtomPostButton.js' */    },

/*Line 57 - 'AtomPostButton.js' */    initialize: function () {
/*Line 58 - 'AtomPostButton.js' */        NeuroSpeech.WebAtoms.AtomPostButton.callBaseMethod(this, "initialize");

/*Line 60 - 'AtomPostButton.js' */        this.bindEvent(this._element, "click", "onClick");
/*Line 61 - 'AtomPostButton.js' */    }
/*Line 62 - 'AtomPostButton.js' */};

/*Line 64 - 'AtomPostButton.js' */NeuroSpeech.WebAtoms.AtomPostButton.registerClass("NeuroSpeech.WebAtoms.AtomPostButton", NeuroSpeech.WebAtoms.AtomControl);
/*Line 0 - 'AtomRichControl.js' */

/*Line 2 - 'AtomRichControl.js' */NeuroSpeech.WebAtoms.AtomRichControl = function (element) {
/*Line 3 - 'AtomRichControl.js' */    NeuroSpeech.WebAtoms.AtomRichControl.initializeBase(this, [element]);

/*Line 5 - 'AtomRichControl.js' */    this._flashPlayerFile = "";

/*Line 7 - 'AtomRichControl.js' */    this._useFlash = false;
/*Line 8 - 'AtomRichControl.js' */};

/*Line 10 - 'AtomRichControl.js' */NeuroSpeech.WebAtoms.AtomRichControl.prototype = {

/*Line 12 - 'AtomRichControl.js' */    get_player: function () {
/*Line 13 - 'AtomRichControl.js' */        var appName = this._fpID;
/*Line 14 - 'AtomRichControl.js' */        if (navigator.appName.indexOf("Microsoft") != -1) {
/*Line 15 - 'AtomRichControl.js' */            return window[appName];
/*Line 16 - 'AtomRichControl.js' */        } else {
/*Line 17 - 'AtomRichControl.js' */            return document[appName];
/*Line 18 - 'AtomRichControl.js' */        }
/*Line 19 - 'AtomRichControl.js' */    },
/*Line 20 - 'AtomRichControl.js' */    isFlashSupported: function () {
/*Line 21 - 'AtomRichControl.js' */        return true;
/*Line 22 - 'AtomRichControl.js' */    },
/*Line 23 - 'AtomRichControl.js' */    createPlayer: function (url, p) {
/*Line 24 - 'AtomRichControl.js' */        var element = this.get_element();


/*Line 27 - 'AtomRichControl.js' */        var childDiv = document.createElement("div");
/*Line 28 - 'AtomRichControl.js' */        childDiv.id = this._divID;

/*Line 30 - 'AtomRichControl.js' */        $(element).append(childDiv);

/*Line 32 - 'AtomRichControl.js' */        this._fpID = this._divID + "_Flash";
/*Line 33 - 'AtomRichControl.js' */        createFlashPlayer(element.id, this._divID, this._fpID,url,p);
/*Line 34 - 'AtomRichControl.js' */        this._isFlash = true;
/*Line 35 - 'AtomRichControl.js' */    },

/*Line 37 - 'AtomRichControl.js' */    initialize: function () {
/*Line 38 - 'AtomRichControl.js' */        NeuroSpeech.WebAtoms.AtomRichControl.callBaseMethod(this, "initialize");

/*Line 40 - 'AtomRichControl.js' */        var element = this.get_element();
/*Line 41 - 'AtomRichControl.js' */        if (element.id == undefined || element.id == null || element.id == "") {
/*Line 42 - 'AtomRichControl.js' */            element.id = "__uniqueID" + AtomUI.getNewIndex();
/*Line 43 - 'AtomRichControl.js' */            allControls[element.id] = this;
/*Line 44 - 'AtomRichControl.js' */        }

/*Line 46 - 'AtomRichControl.js' */        this._divID = element.id + "_Player";

/*Line 48 - 'AtomRichControl.js' */    }
/*Line 49 - 'AtomRichControl.js' */};

/*Line 51 - 'AtomRichControl.js' */NeuroSpeech.WebAtoms.AtomRichControl.registerClass("NeuroSpeech.WebAtoms.AtomRichControl", NeuroSpeech.WebAtoms.AtomControl);
/*Line 0 - 'AtomToggleButtonBar.js' */



/*Line 4 - 'AtomToggleButtonBar.js' */NeuroSpeech.WebAtoms.AtomToggleButtonBar = function (element) {
/*Line 5 - 'AtomToggleButtonBar.js' */    NeuroSpeech.WebAtoms.AtomToggleButtonBar.initializeBase(this, [element]);
/*Line 6 - 'AtomToggleButtonBar.js' */    this._allowSelectFirst = true;
/*Line 7 - 'AtomToggleButtonBar.js' */    this._allowMultipleSelection = false;
/*Line 8 - 'AtomToggleButtonBar.js' */};

/*Line 10 - 'AtomToggleButtonBar.js' */NeuroSpeech.WebAtoms.AtomToggleButtonBar.prototype = {
/*Line 11 - 'AtomToggleButtonBar.js' *///    initialize: function () {

/*Line 13 - 'AtomToggleButtonBar.js' *///        var element = this.get_element();
/*Line 14 - 'AtomToggleButtonBar.js' *///        NeuroSpeech.WebAtoms.AtomToggleButtonBar.callBaseMethod(this, "initialize");
/*Line 15 - 'AtomToggleButtonBar.js' *///    },

/*Line 17 - 'AtomToggleButtonBar.js' */    onUpdateUI: function () {
/*Line 18 - 'AtomToggleButtonBar.js' */        var element = this.get_element();
/*Line 19 - 'AtomToggleButtonBar.js' */        var ae = new AtomEnumerator($(element).children());
/*Line 20 - 'AtomToggleButtonBar.js' */        while (ae.next()) {
/*Line 21 - 'AtomToggleButtonBar.js' */            var i = ae.currentIndex();
/*Line 22 - 'AtomToggleButtonBar.js' */            var item = ae.current();
/*Line 23 - 'AtomToggleButtonBar.js' */            var dataItem = item;
/*Line 24 - 'AtomToggleButtonBar.js' */            if (this.hasItems()) {
/*Line 25 - 'AtomToggleButtonBar.js' */                dataItem = this.getDataItemAtIndex(i);
/*Line 26 - 'AtomToggleButtonBar.js' */            }
/*Line 27 - 'AtomToggleButtonBar.js' */            if (this.isSelected(dataItem)) {
/*Line 28 - 'AtomToggleButtonBar.js' */                $(item).addClass("atom-selected");
/*Line 29 - 'AtomToggleButtonBar.js' */            } else {
/*Line 30 - 'AtomToggleButtonBar.js' */                $(item).removeClass("atom-selected");
/*Line 31 - 'AtomToggleButtonBar.js' */            }
/*Line 32 - 'AtomToggleButtonBar.js' */            if (ae.isFirst() && ae.isLast()) {
/*Line 33 - 'AtomToggleButtonBar.js' */                AtomUI.setUI(item, "AtomButton");
/*Line 34 - 'AtomToggleButtonBar.js' */            } else {
/*Line 35 - 'AtomToggleButtonBar.js' */                if (ae.isFirst()) {
/*Line 36 - 'AtomToggleButtonBar.js' */                    AtomUI.setUI(item, "AtomFirstButton");
/*Line 37 - 'AtomToggleButtonBar.js' */                } else if (ae.isLast()) {
/*Line 38 - 'AtomToggleButtonBar.js' */                    AtomUI.setUI(item, "AtomLastButton");
/*Line 39 - 'AtomToggleButtonBar.js' */                } else {
/*Line 40 - 'AtomToggleButtonBar.js' */                    AtomUI.setUI(item, "AtomMiddleButton");
/*Line 41 - 'AtomToggleButtonBar.js' */                }
/*Line 42 - 'AtomToggleButtonBar.js' */            }
/*Line 43 - 'AtomToggleButtonBar.js' */        }
/*Line 44 - 'AtomToggleButtonBar.js' */        $(element).addClass("atom-toggle-button-bar");
/*Line 45 - 'AtomToggleButtonBar.js' */    }

/*Line 47 - 'AtomToggleButtonBar.js' */};
/*Line 48 - 'AtomToggleButtonBar.js' */NeuroSpeech.WebAtoms.AtomToggleButtonBar.registerClass("NeuroSpeech.WebAtoms.AtomToggleButtonBar", NeuroSpeech.WebAtoms.AtomListBox);
/*Line 0 - 'AtomFormLayout.js' */


/*Line 3 - 'AtomFormLayout.js' */NeuroSpeech.WebAtoms.AtomFormLayout = function (element) {

/*Line 5 - 'AtomFormLayout.js' */    NeuroSpeech.WebAtoms.AtomFormLayout.initializeBase(this, [element]);
/*Line 6 - 'AtomFormLayout.js' */    this._useTable = true;
/*Line 7 - 'AtomFormLayout.js' */    this._fields = [];
/*Line 8 - 'AtomFormLayout.js' */    this._errorItems = [];
/*Line 9 - 'AtomFormLayout.js' */};

/*Line 11 - 'AtomFormLayout.js' */NeuroSpeech.WebAtoms.AtomFormLayout.prototype = {

/*Line 13 - 'AtomFormLayout.js' */    initialize: function () {
/*Line 14 - 'AtomFormLayout.js' */        NeuroSpeech.WebAtoms.AtomFormLayout.callBaseMethod(this, "initialize");

/*Line 16 - 'AtomFormLayout.js' */        // for all fields... , register for blur

/*Line 18 - 'AtomFormLayout.js' */        var ae = new AtomEnumerator(this._fields);
/*Line 19 - 'AtomFormLayout.js' */        var field = null;
/*Line 20 - 'AtomFormLayout.js' */        while (ae.next()) {
/*Line 21 - 'AtomFormLayout.js' */            field = ae.current();

/*Line 23 - 'AtomFormLayout.js' */            if ((/input|select/i).test(field.nodeName)) {
/*Line 24 - 'AtomFormLayout.js' */                this.bindEvent(field,"blur", "validateField");
/*Line 25 - 'AtomFormLayout.js' */            }
/*Line 26 - 'AtomFormLayout.js' */        }
/*Line 27 - 'AtomFormLayout.js' */    },

/*Line 29 - 'AtomFormLayout.js' */    isValid: function () {
/*Line 30 - 'AtomFormLayout.js' */        var element = this.get_element();
/*Line 31 - 'AtomFormLayout.js' */        var ae = new AtomEnumerator($(element).children());
/*Line 32 - 'AtomFormLayout.js' */        var formValid = true;
/*Line 33 - 'AtomFormLayout.js' */        while (ae.next()) {
/*Line 34 - 'AtomFormLayout.js' */            var field = ae.current();
/*Line 35 - 'AtomFormLayout.js' */            if (field.atomControl && field.atomControl instanceof NeuroSpeech.WebAtoms.AtomFormLayout) {
/*Line 36 - 'AtomFormLayout.js' */                if (!field.atomControl.isValid())
/*Line 37 - 'AtomFormLayout.js' */                    formValid = false;
/*Line 38 - 'AtomFormLayout.js' */            }else {
/*Line 39 - 'AtomFormLayout.js' */                if (!this.validate(field))
/*Line 40 - 'AtomFormLayout.js' */                    formValid = false;
/*Line 41 - 'AtomFormLayout.js' */            }
/*Line 42 - 'AtomFormLayout.js' */        }
/*Line 43 - 'AtomFormLayout.js' */        return formValid;
/*Line 44 - 'AtomFormLayout.js' */    },


/*Line 47 - 'AtomFormLayout.js' */    validateField: function (e) {
/*Line 48 - 'AtomFormLayout.js' */        var target = e.target;
/*Line 49 - 'AtomFormLayout.js' */        this.validate(target);
/*Line 50 - 'AtomFormLayout.js' */    },

/*Line 52 - 'AtomFormLayout.js' */    validate: function (e,ef) {

/*Line 54 - 'AtomFormLayout.js' */        if (!ef)
/*Line 55 - 'AtomFormLayout.js' */            ef = $(e).data("field-error");

/*Line 57 - 'AtomFormLayout.js' */        var ctrl = e.atomControl;
/*Line 58 - 'AtomFormLayout.js' */        var val = null;
/*Line 59 - 'AtomFormLayout.js' */        if (!ctrl) {

/*Line 61 - 'AtomFormLayout.js' */            if ((/input|select/i).test(e.nodeName)) {
/*Line 62 - 'AtomFormLayout.js' */                val = $(e).val();
/*Line 63 - 'AtomFormLayout.js' */            }else {
/*Line 64 - 'AtomFormLayout.js' */                // return for every children??
/*Line 65 - 'AtomFormLayout.js' */                var ae = new AtomEnumerator($(e).children());
/*Line 66 - 'AtomFormLayout.js' */                var isValid = true;
/*Line 67 - 'AtomFormLayout.js' */                while (ae.next()) {
/*Line 68 - 'AtomFormLayout.js' */                    if (!this.validate(ae.current(),ef)) {
/*Line 69 - 'AtomFormLayout.js' */                        isValid = false;
/*Line 70 - 'AtomFormLayout.js' */                    }
/*Line 71 - 'AtomFormLayout.js' */                }
/*Line 72 - 'AtomFormLayout.js' */                return isValid;
/*Line 73 - 'AtomFormLayout.js' */            }
/*Line 74 - 'AtomFormLayout.js' */        }else {
/*Line 75 - 'AtomFormLayout.js' */            val = AtomBinder.getValue(ctrl, "value");
/*Line 76 - 'AtomFormLayout.js' */        }



/*Line 80 - 'AtomFormLayout.js' */        var req = $(e).attr("atom-required");
/*Line 81 - 'AtomFormLayout.js' */        if (req && !val) {
/*Line 82 - 'AtomFormLayout.js' */            // error...
/*Line 83 - 'AtomFormLayout.js' */            $(ef).text("Required");
/*Line 84 - 'AtomFormLayout.js' */            $(e).addClass("atom-data-error");
/*Line 85 - 'AtomFormLayout.js' */            return false;
/*Line 86 - 'AtomFormLayout.js' */        }


/*Line 89 - 'AtomFormLayout.js' */        var re = $(e).attr("atom-regex");
/*Line 90 - 'AtomFormLayout.js' */        if (!re) {
/*Line 91 - 'AtomFormLayout.js' */            var dt = $(e).attr("atom-data-type");
/*Line 92 - 'AtomFormLayout.js' */            if (dt) {
/*Line 93 - 'AtomFormLayout.js' */                switch (dt) {
/*Line 94 - 'AtomFormLayout.js' */                    case "email":
/*Line 95 - 'AtomFormLayout.js' */                        re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
/*Line 96 - 'AtomFormLayout.js' */                        break;
/*Line 97 - 'AtomFormLayout.js' */                }
/*Line 98 - 'AtomFormLayout.js' */            }
/*Line 99 - 'AtomFormLayout.js' */        } else {
/*Line 100 - 'AtomFormLayout.js' */            re = eval("(" + re + ")");
/*Line 101 - 'AtomFormLayout.js' */        }

/*Line 103 - 'AtomFormLayout.js' */        if (re) {
/*Line 104 - 'AtomFormLayout.js' */            if (!re.test(val)) {
/*Line 105 - 'AtomFormLayout.js' */                $(ef).text("Invalid");
/*Line 106 - 'AtomFormLayout.js' */                $(e).addClass("atom-data-error");
/*Line 107 - 'AtomFormLayout.js' */                return false;
/*Line 108 - 'AtomFormLayout.js' */            }
/*Line 109 - 'AtomFormLayout.js' */        }

/*Line 111 - 'AtomFormLayout.js' */        $(ef).text("");
/*Line 112 - 'AtomFormLayout.js' */        $(e).removeClass("atom-data-error");
/*Line 113 - 'AtomFormLayout.js' */        return true;
/*Line 114 - 'AtomFormLayout.js' */    },

/*Line 116 - 'AtomFormLayout.js' */    prepareTable: function () {
/*Line 117 - 'AtomFormLayout.js' */        var element = this._element;
/*Line 118 - 'AtomFormLayout.js' */        $(element).addClass("atom-form");
/*Line 119 - 'AtomFormLayout.js' */        var ae = new AtomEnumerator($(element).children());

/*Line 121 - 'AtomFormLayout.js' */        // add table...
/*Line 122 - 'AtomFormLayout.js' */        var table = document.createElement("TABLE");
/*Line 123 - 'AtomFormLayout.js' */        var tbody = document.createElement("TBODY");

/*Line 125 - 'AtomFormLayout.js' */        AtomUI.removeAllChildren(element);

/*Line 127 - 'AtomFormLayout.js' */        table.appendChild(tbody);

/*Line 129 - 'AtomFormLayout.js' */        var child;
/*Line 130 - 'AtomFormLayout.js' */        var tr;
/*Line 131 - 'AtomFormLayout.js' */        var td;
/*Line 132 - 'AtomFormLayout.js' */        var text;
/*Line 133 - 'AtomFormLayout.js' */        while (ae.next()) {
/*Line 134 - 'AtomFormLayout.js' */            child = ae.current();
/*Line 135 - 'AtomFormLayout.js' */            this._fields.push(child);

/*Line 137 - 'AtomFormLayout.js' */            this.addRow(tbody, ["", null, $(child).attr("atom-title"), "",""]);
/*Line 138 - 'AtomFormLayout.js' */            var required = $(child).attr("atom-required");
/*Line 139 - 'AtomFormLayout.js' */            var req = null;
/*Line 140 - 'AtomFormLayout.js' */            if (required) {
/*Line 141 - 'AtomFormLayout.js' */                req = document.createElement("SPAN");
/*Line 142 - 'AtomFormLayout.js' */                req.style.color = "red";
/*Line 143 - 'AtomFormLayout.js' */                $(req).text("*");
/*Line 144 - 'AtomFormLayout.js' */            }

/*Line 146 - 'AtomFormLayout.js' */            var fieldError = document.createElement("SPAN");
/*Line 147 - 'AtomFormLayout.js' */            $(fieldError).addClass("atom-error-span");
/*Line 148 - 'AtomFormLayout.js' */            $(child).data("field-error", fieldError);

/*Line 150 - 'AtomFormLayout.js' */            this.addRow(tbody, [$(child).attr("atom-label"), req, child, "", fieldError]);

/*Line 152 - 'AtomFormLayout.js' */            //this.addRow(tbody, ["", null, fieldError, ""]);
/*Line 153 - 'AtomFormLayout.js' */            this.addRow(tbody, ["",null, $(child).attr("atom-description"), "",""]);


/*Line 156 - 'AtomFormLayout.js' */        }
/*Line 157 - 'AtomFormLayout.js' */        element.appendChild(table);

/*Line 159 - 'AtomFormLayout.js' */    },

/*Line 161 - 'AtomFormLayout.js' */    addRow: function (tbody, cells) {
/*Line 162 - 'AtomFormLayout.js' */        var tr = document.createElement("TR");
/*Line 163 - 'AtomFormLayout.js' */        var ae = new AtomEnumerator(cells);
/*Line 164 - 'AtomFormLayout.js' */        var item;
/*Line 165 - 'AtomFormLayout.js' */        var cell;
/*Line 166 - 'AtomFormLayout.js' */        var text;
/*Line 167 - 'AtomFormLayout.js' */        while (ae.next()) {
/*Line 168 - 'AtomFormLayout.js' */            item = ae.current();
/*Line 169 - 'AtomFormLayout.js' */            cell = document.createElement("TD");
/*Line 170 - 'AtomFormLayout.js' */            if (ae.isFirst()) {
/*Line 171 - 'AtomFormLayout.js' */                $(cell).attr("nowrap", "nowrap");
/*Line 172 - 'AtomFormLayout.js' */                $(cell).css("text-align", "right");
/*Line 173 - 'AtomFormLayout.js' */            }
/*Line 174 - 'AtomFormLayout.js' */            if (item) {
/*Line 175 - 'AtomFormLayout.js' */                if (item && AtomUI.isNode(item)) {
/*Line 176 - 'AtomFormLayout.js' */                    cell.appendChild(item);
/*Line 177 - 'AtomFormLayout.js' */                }else {
/*Line 178 - 'AtomFormLayout.js' */                    text = document.createElement("SPAN");
/*Line 179 - 'AtomFormLayout.js' */                    $(text).attr("atom-text", item);
/*Line 180 - 'AtomFormLayout.js' */                    cell.appendChild(text);
/*Line 181 - 'AtomFormLayout.js' */                }
/*Line 182 - 'AtomFormLayout.js' */            }
/*Line 183 - 'AtomFormLayout.js' */            tr.appendChild(cell);
/*Line 184 - 'AtomFormLayout.js' */        }
/*Line 185 - 'AtomFormLayout.js' */        tbody.appendChild(tr);
/*Line 186 - 'AtomFormLayout.js' */        return tr;
/*Line 187 - 'AtomFormLayout.js' */    },

/*Line 189 - 'AtomFormLayout.js' */    createChildren: function () {


/*Line 192 - 'AtomFormLayout.js' */        if (this._useTable) {
/*Line 193 - 'AtomFormLayout.js' */            // prepare table..
/*Line 194 - 'AtomFormLayout.js' */            this.prepareTable();
/*Line 195 - 'AtomFormLayout.js' */        }else {
/*Line 196 - 'AtomFormLayout.js' */            // create control of child...
/*Line 197 - 'AtomFormLayout.js' */            var element = this.get_element();
/*Line 198 - 'AtomFormLayout.js' */            var ae = new AtomEnumerator($(element).children());
/*Line 199 - 'AtomFormLayout.js' */            var child;

/*Line 201 - 'AtomFormLayout.js' */            var replacements = [];

/*Line 203 - 'AtomFormLayout.js' */            while (ae.next()) {
/*Line 204 - 'AtomFormLayout.js' */                child = ae.current();
/*Line 205 - 'AtomFormLayout.js' */                var at = $(child).attr("atom-type");
/*Line 206 - 'AtomFormLayout.js' */                if (at != undefined && at == "AtomFormField") {
/*Line 207 - 'AtomFormLayout.js' */                    continue;
/*Line 208 - 'AtomFormLayout.js' */                }

/*Line 210 - 'AtomFormLayout.js' */                var fieldElement = document.createElement("DIV");
/*Line 211 - 'AtomFormLayout.js' */                var field = new NeuroSpeech.WebAtoms.AtomFormField(fieldElement);
/*Line 212 - 'AtomFormLayout.js' */                replacements.push({ editor: child, field: fieldElement });
/*Line 213 - 'AtomFormLayout.js' */            }

/*Line 215 - 'AtomFormLayout.js' */            ae = new AtomEnumerator(replacements);
/*Line 216 - 'AtomFormLayout.js' */            while (ae.next()) {
/*Line 217 - 'AtomFormLayout.js' */                var item = ae.current();
/*Line 218 - 'AtomFormLayout.js' */                $(item.editor).replaceWith(item.field);
/*Line 219 - 'AtomFormLayout.js' */            }
/*Line 220 - 'AtomFormLayout.js' */            ae = new AtomEnumerator(replacements);
/*Line 221 - 'AtomFormLayout.js' */            while (ae.next()) {
/*Line 222 - 'AtomFormLayout.js' */                var item = ae.current();
/*Line 223 - 'AtomFormLayout.js' */                item.field.atomControl.setChild(item.editor);
/*Line 224 - 'AtomFormLayout.js' */                item.field.atomControl.initialize();
/*Line 225 - 'AtomFormLayout.js' */            }
/*Line 226 - 'AtomFormLayout.js' */        }
/*Line 227 - 'AtomFormLayout.js' */        NeuroSpeech.WebAtoms.AtomFormLayout.callBaseMethod(this, "createChildren");
/*Line 228 - 'AtomFormLayout.js' */    }
/*Line 229 - 'AtomFormLayout.js' */};

/*Line 231 - 'AtomFormLayout.js' */NeuroSpeech.WebAtoms.AtomFormLayout.registerClass("NeuroSpeech.WebAtoms.AtomFormLayout", NeuroSpeech.WebAtoms.AtomControl);
/*Line 0 - 'AtomLayout.js' */

/*Line 2 - 'AtomLayout.js' */NeuroSpeech.WebAtoms.AtomLayout = function () {
/*Line 3 - 'AtomLayout.js' */};

/*Line 5 - 'AtomLayout.js' */NeuroSpeech.WebAtoms.AtomLayout.prototype = {
/*Line 6 - 'AtomLayout.js' */    doLayout: function (element) {
        
/*Line 8 - 'AtomLayout.js' */    }
/*Line 9 - 'AtomLayout.js' */};
/*Line 10 - 'AtomLayout.js' */NeuroSpeech.WebAtoms.AtomLayout.registerClass("NeuroSpeech.WebAtoms.AtomLayout");


/*Line 0 - 'AtomPlayer.js' */


/*Line 3 - 'AtomPlayer.js' */function __flashPlayerReady(id) {
/*Line 4 - 'AtomPlayer.js' */    if (allControls.hasOwnProperty(id)) {
/*Line 5 - 'AtomPlayer.js' */        var ctrl = allControls[id];
/*Line 6 - 'AtomPlayer.js' */        if (ctrl.set_playerReady) { 
/*Line 7 - 'AtomPlayer.js' */            ctrl.set_playerReady(true);
/*Line 8 - 'AtomPlayer.js' */        }
/*Line 9 - 'AtomPlayer.js' */    }
/*Line 10 - 'AtomPlayer.js' */}

/*Line 12 - 'AtomPlayer.js' */NeuroSpeech.WebAtoms.AtomPlayer = function (element) {
/*Line 13 - 'AtomPlayer.js' */    NeuroSpeech.WebAtoms.AtomPlayer.initializeBase(this, [element]);
/*Line 14 - 'AtomPlayer.js' */    this._source = null;
/*Line 15 - 'AtomPlayer.js' */    this._onSourceIndexChanged = null;
/*Line 16 - 'AtomPlayer.js' */    this._url;
/*Line 17 - 'AtomPlayer.js' */};

/*Line 19 - 'AtomPlayer.js' */NeuroSpeech.WebAtoms.AtomPlayer.prototype = {
/*Line 20 - 'AtomPlayer.js' */    get_url: function () {
/*Line 21 - 'AtomPlayer.js' */        return this._url;
/*Line 22 - 'AtomPlayer.js' */    },
/*Line 23 - 'AtomPlayer.js' */    set_url: function (url) {
/*Line 24 - 'AtomPlayer.js' */        this._url = url;
/*Line 25 - 'AtomPlayer.js' */        if(url!=undefined && url!=null)
/*Line 26 - 'AtomPlayer.js' */            this.play(url);
/*Line 27 - 'AtomPlayer.js' */    },

/*Line 29 - 'AtomPlayer.js' */    onSourceIndexChanged: function (sender, args) {
/*Line 30 - 'AtomPlayer.js' */        var item = this._source.get_selectedItem();
/*Line 31 - 'AtomPlayer.js' */        if (item == null)
/*Line 32 - 'AtomPlayer.js' */            return;
/*Line 33 - 'AtomPlayer.js' */        var data = $(item).attr("atom-data");
/*Line 34 - 'AtomPlayer.js' */        this.play(data);
/*Line 35 - 'AtomPlayer.js' */    },

/*Line 37 - 'AtomPlayer.js' */    get_source: function () {
/*Line 38 - 'AtomPlayer.js' */        return this._source;
/*Line 39 - 'AtomPlayer.js' */    },
/*Line 40 - 'AtomPlayer.js' */    set_source: function (src) {

/*Line 42 - 'AtomPlayer.js' */        if (this._source) {
/*Line 43 - 'AtomPlayer.js' */            this._source.remove_selectionChanged(this._onSourceIndexChanged);
/*Line 44 - 'AtomPlayer.js' */        }
/*Line 45 - 'AtomPlayer.js' */        this._source = src;
/*Line 46 - 'AtomPlayer.js' */        if (this._source) {
/*Line 47 - 'AtomPlayer.js' */            this._source.add_selectionChanged(this._onSourceIndexChanged);
/*Line 48 - 'AtomPlayer.js' */            this.onSourceIndexChanged(this._source, null);
/*Line 49 - 'AtomPlayer.js' */        }
/*Line 50 - 'AtomPlayer.js' */    },

/*Line 52 - 'AtomPlayer.js' */    play: function (url) {
/*Line 53 - 'AtomPlayer.js' */    },
/*Line 54 - 'AtomPlayer.js' */    stop: function () {
/*Line 55 - 'AtomPlayer.js' */    },

/*Line 57 - 'AtomPlayer.js' */    initialize: function () {
/*Line 58 - 'AtomPlayer.js' */        this._onSourceIndexChanged = Function.createDelegate(this, this.onSourceIndexChanged);
/*Line 59 - 'AtomPlayer.js' */        NeuroSpeech.WebAtoms.AtomPlayer.callBaseMethod(this, "initialize");
/*Line 60 - 'AtomPlayer.js' */    }
/*Line 61 - 'AtomPlayer.js' */};

/*Line 63 - 'AtomPlayer.js' */NeuroSpeech.WebAtoms.AtomPlayer.registerClass("NeuroSpeech.WebAtoms.AtomPlayer", NeuroSpeech.WebAtoms.AtomControl);

/*Line 0 - 'AtomCheckBox.js' */

/*Line 2 - 'AtomCheckBox.js' */NeuroSpeech.WebAtoms.AtomCheckBox = function (element) {
/*Line 3 - 'AtomCheckBox.js' */    NeuroSpeech.WebAtoms.AtomCheckBox.initializeBase(this, [element]);
/*Line 4 - 'AtomCheckBox.js' */};

/*Line 6 - 'AtomCheckBox.js' */NeuroSpeech.WebAtoms.AtomCheckBox.prototype = {
/*Line 7 - 'AtomCheckBox.js' */    get_isChecked: function () {
/*Line 8 - 'AtomCheckBox.js' */        var element = this._element;
/*Line 9 - 'AtomCheckBox.js' */        var attr = $(element).attr("checked");
       
/*Line 11 - 'AtomCheckBox.js' */        if (attr)
/*Line 12 - 'AtomCheckBox.js' */            return true;
/*Line 13 - 'AtomCheckBox.js' */        return false;
/*Line 14 - 'AtomCheckBox.js' */    },
/*Line 15 - 'AtomCheckBox.js' */    set_isChecked: function (v) {
/*Line 16 - 'AtomCheckBox.js' */        var element = this._element;
/*Line 17 - 'AtomCheckBox.js' */        if (v) {
/*Line 18 - 'AtomCheckBox.js' */            $(element).attr("checked", "checked");
/*Line 19 - 'AtomCheckBox.js' */        } else {
/*Line 20 - 'AtomCheckBox.js' */            $(element).removeAttr("checked");
/*Line 21 - 'AtomCheckBox.js' */        }
/*Line 22 - 'AtomCheckBox.js' */    },

/*Line 24 - 'AtomCheckBox.js' */    onChange: function () {
/*Line 25 - 'AtomCheckBox.js' */        AtomBinder.refreshValue(this, "isChecked");
/*Line 26 - 'AtomCheckBox.js' */    },

/*Line 28 - 'AtomCheckBox.js' */    initialize: function () {
/*Line 29 - 'AtomCheckBox.js' */        this.bindEvent(this._element, "change", "onChange");
/*Line 30 - 'AtomCheckBox.js' */        NeuroSpeech.WebAtoms.AtomCheckBox.callBaseMethod(this, "initialize");
/*Line 31 - 'AtomCheckBox.js' */    }
/*Line 32 - 'AtomCheckBox.js' */};

/*Line 34 - 'AtomCheckBox.js' */NeuroSpeech.WebAtoms.AtomCheckBox.registerClass("NeuroSpeech.WebAtoms.AtomCheckBox", NeuroSpeech.WebAtoms.AtomControl);
/*Line 0 - 'AtomDataGrid.js' */

/*Line 2 - 'AtomDataGrid.js' */NeuroSpeech.WebAtoms.AtomDataGrid = function () {
/*Line 3 - 'AtomDataGrid.js' */};

/*Line 5 - 'AtomDataGrid.js' */NeuroSpeech.WebAtoms.AtomDataGrid.prototype = {
/*Line 6 - 'AtomDataGrid.js' */};

/*Line 8 - 'AtomDataGrid.js' */NeuroSpeech.WebAtoms.AtomDataGrid.registerClass("NeuroSpeech.WebAtoms.AtomDataGrid", NeuroSpeech.WebAtoms.AtomItemsControl);
/*Line 0 - 'AtomDataPager.js' */

/*Line 2 - 'AtomDataPager.js' */NeuroSpeech.WebAtoms.AtomDataPager = function (element) {
/*Line 3 - 'AtomDataPager.js' */    NeuroSpeech.WebAtoms.AtomDataPager.initializeBase(this, [element]);
/*Line 4 - 'AtomDataPager.js' */    this._itemsPath = "items";
/*Line 5 - 'AtomDataPager.js' */    this._totalPath = "total";
/*Line 6 - 'AtomDataPager.js' */    this._pageSize = 25;
/*Line 7 - 'AtomDataPager.js' */};

/*Line 9 - 'AtomDataPager.js' */// Add Page Size
/*Line 10 - 'AtomDataPager.js' */// Add Logic For Page Size and Items..

/*Line 12 - 'AtomDataPager.js' */NeuroSpeech.WebAtoms.AtomDataPager.prototype = {
/*Line 13 - 'AtomDataPager.js' */    preparePages: function (l,t) {
/*Line 14 - 'AtomDataPager.js' */        var count = Math.ceil(t / this._pageSize);
/*Line 15 - 'AtomDataPager.js' */        var ps = this._pageSize;
/*Line 16 - 'AtomDataPager.js' */        var pages = [];
/*Line 17 - 'AtomDataPager.js' */        var i;
/*Line 18 - 'AtomDataPager.js' */        for (i = 0; i < count; i++) {
/*Line 19 - 'AtomDataPager.js' */            pages.push({
/*Line 20 - 'AtomDataPager.js' */                index: i + 1,
/*Line 21 - 'AtomDataPager.js' */                start: i * ps,
/*Line 22 - 'AtomDataPager.js' */                stop: (i + 1) * ps,
/*Line 23 - 'AtomDataPager.js' */                value: i * ps,
/*Line 24 - 'AtomDataPager.js' */                label: (i*ps+1) + '-' + ((i+1)*ps-1)
/*Line 25 - 'AtomDataPager.js' */            });
/*Line 26 - 'AtomDataPager.js' */        }
/*Line 27 - 'AtomDataPager.js' */        AtomBinder.setValue(this, "pages", pages);
/*Line 28 - 'AtomDataPager.js' */    },

/*Line 30 - 'AtomDataPager.js' */    set_items: function (v) {
/*Line 31 - 'AtomDataPager.js' */        this._items = v;
/*Line 32 - 'AtomDataPager.js' */        if (v.length === undefined) {
/*Line 33 - 'AtomDataPager.js' */            AtomBinder.setValue(this, "total", v[this._totalPath]);
/*Line 34 - 'AtomDataPager.js' */            var val = v[this._itemsPath];
/*Line 35 - 'AtomDataPager.js' */            AtomBinder.setValue(this, "value", val);

/*Line 37 - 'AtomDataPager.js' */            // prepare pages...
/*Line 38 - 'AtomDataPager.js' */            this.preparePages(v.length, this._total);
/*Line 39 - 'AtomDataPager.js' */        }else {
/*Line 40 - 'AtomDataPager.js' */            AtomBinder.setValue(this, "value", v);
/*Line 41 - 'AtomDataPager.js' */        }
/*Line 42 - 'AtomDataPager.js' */    },
/*Line 43 - 'AtomDataPager.js' */    get_items: function () {
/*Line 44 - 'AtomDataPager.js' */        return this._items;
/*Line 45 - 'AtomDataPager.js' */    },
/*Line 46 - 'AtomDataPager.js' */    get_pageSize: function () {
/*Line 47 - 'AtomDataPager.js' */        return this._pageSize;
/*Line 48 - 'AtomDataPager.js' */    },
/*Line 49 - 'AtomDataPager.js' */    set_pageSize: function (v) {
/*Line 50 - 'AtomDataPager.js' */        this._pageSize = v;
/*Line 51 - 'AtomDataPager.js' */    },
/*Line 52 - 'AtomDataPager.js' */    get_pages: function () {
/*Line 53 - 'AtomDataPager.js' */        return this._pages;
/*Line 54 - 'AtomDataPager.js' */    },
/*Line 55 - 'AtomDataPager.js' */    set_pages: function (v) {
/*Line 56 - 'AtomDataPager.js' */        this._pages = v;
/*Line 57 - 'AtomDataPager.js' */    },
/*Line 58 - 'AtomDataPager.js' */    get_itemsPath: function () {
/*Line 59 - 'AtomDataPager.js' */        return this._itemsPath;
/*Line 60 - 'AtomDataPager.js' */    },
/*Line 61 - 'AtomDataPager.js' */    set_itemsPath: function (v) {
/*Line 62 - 'AtomDataPager.js' */        this._itemsPath = v;
/*Line 63 - 'AtomDataPager.js' */    },
/*Line 64 - 'AtomDataPager.js' */    get_total: function () {
/*Line 65 - 'AtomDataPager.js' */        return this._total;
/*Line 66 - 'AtomDataPager.js' */    },
/*Line 67 - 'AtomDataPager.js' */    set_total: function (v) {
/*Line 68 - 'AtomDataPager.js' */        this._total = v;
/*Line 69 - 'AtomDataPager.js' */    },
/*Line 70 - 'AtomDataPager.js' */    get_totalPath: function () {
/*Line 71 - 'AtomDataPager.js' */        return this._totalPath;
/*Line 72 - 'AtomDataPager.js' */    },
/*Line 73 - 'AtomDataPager.js' */    set_totalPath: function (v) {
/*Line 74 - 'AtomDataPager.js' */        this._totalPath = v;
/*Line 75 - 'AtomDataPager.js' */    }
/*Line 76 - 'AtomDataPager.js' */};

/*Line 78 - 'AtomDataPager.js' */NeuroSpeech.WebAtoms.AtomDataPager.registerClass("NeuroSpeech.WebAtoms.AtomDataPager", NeuroSpeech.WebAtoms.AtomControl);
/*Line 0 - 'AtomDateControl.js' */

/*Line 2 - 'AtomDateControl.js' */// Date Month Year

/*Line 4 - 'AtomDateControl.js' */NeuroSpeech.WebAtoms.AtomDateControl = function (element) {
/*Line 5 - 'AtomDateControl.js' */    NeuroSpeech.WebAtoms.AtomDateControl.initializeBase(this, [element]);
/*Line 6 - 'AtomDateControl.js' */    this._startYear = -1;
/*Line 7 - 'AtomDateControl.js' */    this._endYear = +10;
/*Line 8 - 'AtomDateControl.js' */    this._value = null;
    
/*Line 10 - 'AtomDateControl.js' */};

/*Line 12 - 'AtomDateControl.js' */NeuroSpeech.WebAtoms.AtomDateControl.prototype = {
/*Line 13 - 'AtomDateControl.js' */    resetYears: function () {
/*Line 14 - 'AtomDateControl.js' */        var years = this._year;
/*Line 15 - 'AtomDateControl.js' */        var dt = new Date();
/*Line 16 - 'AtomDateControl.js' */        var start = dt.getFullYear();
/*Line 17 - 'AtomDateControl.js' */        start += this._startYear;
/*Line 18 - 'AtomDateControl.js' */        var end = dt.getFullYear() + this._endYear;
/*Line 19 - 'AtomDateControl.js' */        var val = this._value;
/*Line 20 - 'AtomDateControl.js' */        if (!val)
/*Line 21 - 'AtomDateControl.js' */            val = dt;
/*Line 22 - 'AtomDateControl.js' */        years.options.length = 0;
/*Line 23 - 'AtomDateControl.js' */        var j = 1;
/*Line 24 - 'AtomDateControl.js' */        years.options[0] = new Option("SELECT", "", false, false);
/*Line 25 - 'AtomDateControl.js' */        for (var i = start; i <= end; i++) {
/*Line 26 - 'AtomDateControl.js' */            years.options[j] = new Option(i, i, false, false);
/*Line 27 - 'AtomDateControl.js' */            j++;
/*Line 28 - 'AtomDateControl.js' */        }
/*Line 29 - 'AtomDateControl.js' */    },
/*Line 30 - 'AtomDateControl.js' */    get_value: function () {
/*Line 31 - 'AtomDateControl.js' */        return this._value;
/*Line 32 - 'AtomDateControl.js' */    },
/*Line 33 - 'AtomDateControl.js' */    set_value: function (v) {
/*Line 34 - 'AtomDateControl.js' */        if (v && v.constructor == String) {
/*Line 35 - 'AtomDateControl.js' */            // date format??
/*Line 36 - 'AtomDateControl.js' */            v = new Date(parseInt(v.substr(6)));
/*Line 37 - 'AtomDateControl.js' */        }
/*Line 38 - 'AtomDateControl.js' */        this._value = v;
/*Line 39 - 'AtomDateControl.js' */        this.setDate();
/*Line 40 - 'AtomDateControl.js' */    },
/*Line 41 - 'AtomDateControl.js' */    setDate: function () {
/*Line 42 - 'AtomDateControl.js' */        if (!this._value)
/*Line 43 - 'AtomDateControl.js' */            return;
/*Line 44 - 'AtomDateControl.js' */        var dt = this._value;
/*Line 45 - 'AtomDateControl.js' */        var m = dt.getMonth() + 1;
/*Line 46 - 'AtomDateControl.js' */        var d = dt.getDate();
/*Line 47 - 'AtomDateControl.js' */        var y = dt.getFullYear();

/*Line 49 - 'AtomDateControl.js' */        this.setComboValue(this._month, m);
/*Line 50 - 'AtomDateControl.js' */        this.setComboValue(this._year, y);
/*Line 51 - 'AtomDateControl.js' */        this.setComboValue(this._date, d);

/*Line 53 - 'AtomDateControl.js' */    },

/*Line 55 - 'AtomDateControl.js' */    setComboValue: function (cb, v) {
/*Line 56 - 'AtomDateControl.js' */        var ae = new AtomEnumerator(cb.options);
/*Line 57 - 'AtomDateControl.js' */        while (ae.next()) {
/*Line 58 - 'AtomDateControl.js' */            if (ae.current().value == v) {
/*Line 59 - 'AtomDateControl.js' */                cb.selectedIndex = ae.currentIndex();
/*Line 60 - 'AtomDateControl.js' */                break;
/*Line 61 - 'AtomDateControl.js' */            }
/*Line 62 - 'AtomDateControl.js' */        }
/*Line 63 - 'AtomDateControl.js' */    },

/*Line 65 - 'AtomDateControl.js' */    get_startYear: function () {
/*Line 66 - 'AtomDateControl.js' */        return this._startYar;
/*Line 67 - 'AtomDateControl.js' */    },
/*Line 68 - 'AtomDateControl.js' */    set_startYear: function (v) {
/*Line 69 - 'AtomDateControl.js' */        this._startYear = v;
/*Line 70 - 'AtomDateControl.js' */        this.resetYears();
/*Line 71 - 'AtomDateControl.js' */    },
/*Line 72 - 'AtomDateControl.js' */    get_endYear: function () {
/*Line 73 - 'AtomDateControl.js' */        return this._endYear;
/*Line 74 - 'AtomDateControl.js' */    },
/*Line 75 - 'AtomDateControl.js' */    set_endYear: function (v) {
/*Line 76 - 'AtomDateControl.js' */        this._endYear = v;
/*Line 77 - 'AtomDateControl.js' */        this.resetYears();
/*Line 78 - 'AtomDateControl.js' */    },
/*Line 79 - 'AtomDateControl.js' */    onDataChange: function () {
/*Line 80 - 'AtomDateControl.js' */        var year = $(this._year).val();
/*Line 81 - 'AtomDateControl.js' */        var month = $(this._month).val();
/*Line 82 - 'AtomDateControl.js' */        var date = $(this._date).val();
/*Line 83 - 'AtomDateControl.js' */        try {
/*Line 84 - 'AtomDateControl.js' */            var dt = new Date(year, month - 1, date);
/*Line 85 - 'AtomDateControl.js' */            this._value = dt;
/*Line 86 - 'AtomDateControl.js' */        } catch (error) {
/*Line 87 - 'AtomDateControl.js' */            alert(error);
/*Line 88 - 'AtomDateControl.js' */        }
/*Line 89 - 'AtomDateControl.js' */        AtomBinder.refreshValue(this, "value");
/*Line 90 - 'AtomDateControl.js' */    },

/*Line 92 - 'AtomDateControl.js' */    setMonths: function (r) {
/*Line 93 - 'AtomDateControl.js' */        var options = this._month.options;
/*Line 94 - 'AtomDateControl.js' */        options.length = 0;
/*Line 95 - 'AtomDateControl.js' */        var ae = new AtomEnumerator(r);
/*Line 96 - 'AtomDateControl.js' */        options[0] = new Option("SELECT", "", false, false);
/*Line 97 - 'AtomDateControl.js' */        while (ae.next()) {
/*Line 98 - 'AtomDateControl.js' */            var item = ae.current();
/*Line 99 - 'AtomDateControl.js' */            options[ae.currentIndex() + 1] = new Option(item.ConfigName, item.ConfigValue, false, false);
/*Line 100 - 'AtomDateControl.js' */        }
/*Line 101 - 'AtomDateControl.js' */        this.setDate();
/*Line 102 - 'AtomDateControl.js' */        AtomBinder.refreshValue(this, "value");
/*Line 103 - 'AtomDateControl.js' */    },
/*Line 104 - 'AtomDateControl.js' */    initialize: function () {

/*Line 106 - 'AtomDateControl.js' */        var element = this._element;

/*Line 108 - 'AtomDateControl.js' */        this._date = document.createElement("SELECT");
/*Line 109 - 'AtomDateControl.js' */        this._month = document.createElement("SELECT");
/*Line 110 - 'AtomDateControl.js' */        this._year = document.createElement("SELECT");

/*Line 112 - 'AtomDateControl.js' */        element.style.height = "25px";

/*Line 114 - 'AtomDateControl.js' */        element.appendChild(this._date);
/*Line 115 - 'AtomDateControl.js' */        element.appendChild(this._month);
/*Line 116 - 'AtomDateControl.js' */        element.appendChild(this._year);

/*Line 118 - 'AtomDateControl.js' */        // add days...
/*Line 119 - 'AtomDateControl.js' */        var options = this._date.options;
/*Line 120 - 'AtomDateControl.js' */        var i;
/*Line 121 - 'AtomDateControl.js' */        options[0] = new Option("SELECT", "", false, false);
/*Line 122 - 'AtomDateControl.js' */        for (i = 1; i < 32; i++) {
/*Line 123 - 'AtomDateControl.js' */            options[i] = new Option(i, i, false, false);
/*Line 124 - 'AtomDateControl.js' */        }



/*Line 128 - 'AtomDateControl.js' */        this.resetYears();

/*Line 130 - 'AtomDateControl.js' */        this.bindEvent(this._date, "change", "onDataChange");
/*Line 131 - 'AtomDateControl.js' */        this.bindEvent(this._month, "change", "onDataChange");
/*Line 132 - 'AtomDateControl.js' */        this.bindEvent(this._year, "change", "onDataChange");

/*Line 134 - 'AtomDateControl.js' */        var dt = this;

/*Line 136 - 'AtomDateControl.js' */        NeuroSpeech.WebAtoms.CachedData.loadItems("/Config/Months", function (r) {
/*Line 137 - 'AtomDateControl.js' */            dt.setMonths(r);
/*Line 138 - 'AtomDateControl.js' */        });

/*Line 140 - 'AtomDateControl.js' */        NeuroSpeech.WebAtoms.AtomDateControl.callBaseMethod(this, "initialize");


/*Line 143 - 'AtomDateControl.js' */    }
/*Line 144 - 'AtomDateControl.js' */};

/*Line 146 - 'AtomDateControl.js' */NeuroSpeech.WebAtoms.AtomDateControl.registerClass("NeuroSpeech.WebAtoms.AtomDateControl", NeuroSpeech.WebAtoms.AtomControl);
/*Line 0 - 'AtomDeleteButton.js' */

/*Line 2 - 'AtomDeleteButton.js' */NeuroSpeech.WebAtoms.AtomDeleteButton = function (element) {
/*Line 3 - 'AtomDeleteButton.js' */    NeuroSpeech.WebAtoms.AtomDeleteButton.initializeBase(this, [element]);
/*Line 4 - 'AtomDeleteButton.js' */    this._confirm = true;
/*Line 5 - 'AtomDeleteButton.js' */    this._confirmMessage = "Are you sure you want to delete this item?";
/*Line 6 - 'AtomDeleteButton.js' */};

/*Line 8 - 'AtomDeleteButton.js' */NeuroSpeech.WebAtoms.AtomDeleteButton.registerClass("NeuroSpeech.WebAtoms.AtomDeleteButton", NeuroSpeech.WebAtoms.AtomPostButton);
/*Line 0 - 'AtomFileUploader.js' */

/*Line 2 - 'AtomFileUploader.js' */NeuroSpeech.WebAtoms.AtomFileUploader = function (element) {
/*Line 3 - 'AtomFileUploader.js' */    NeuroSpeech.WebAtoms.AtomFileUploader.initializeBase(this, [element]);
/*Line 4 - 'AtomFileUploader.js' */    this._url = null;
/*Line 5 - 'AtomFileUploader.js' */    this._filters = null;
/*Line 6 - 'AtomFileUploader.js' */    this._value = null;
/*Line 7 - 'AtomFileUploader.js' */    this._uploadOnUrlSet = false;
/*Line 8 - 'AtomFileUploader.js' */};

/*Line 10 - 'AtomFileUploader.js' */NeuroSpeech.WebAtoms.AtomFileUploader.prototype = {

/*Line 12 - 'AtomFileUploader.js' */    get_nextUploader: function () {
/*Line 13 - 'AtomFileUploader.js' */        return this._nextUploader;
/*Line 14 - 'AtomFileUploader.js' */    },
/*Line 15 - 'AtomFileUploader.js' */    set_nextUploader: function (v) {
/*Line 16 - 'AtomFileUploader.js' */        this._nextUploader = v;
/*Line 17 - 'AtomFileUploader.js' */    },

/*Line 19 - 'AtomFileUploader.js' */    get_value: function () {
/*Line 20 - 'AtomFileUploader.js' */        return this._value;
/*Line 21 - 'AtomFileUploader.js' */    },
/*Line 22 - 'AtomFileUploader.js' */    set_value: function (v) {
/*Line 23 - 'AtomFileUploader.js' */        this._value = v;
/*Line 24 - 'AtomFileUploader.js' */    },

/*Line 26 - 'AtomFileUploader.js' */    get_uploadOnUrlSet: function () {
/*Line 27 - 'AtomFileUploader.js' */        return this._uploadOnUrlSet;
/*Line 28 - 'AtomFileUploader.js' */    },
/*Line 29 - 'AtomFileUploader.js' */    set_uploadOnUrlSet: function (v) {
/*Line 30 - 'AtomFileUploader.js' */        this._uploadOnUrlSet = v;
/*Line 31 - 'AtomFileUploader.js' */    },

/*Line 33 - 'AtomFileUploader.js' */    get_url: function () {
/*Line 34 - 'AtomFileUploader.js' */        return this._url;
/*Line 35 - 'AtomFileUploader.js' */    },
/*Line 36 - 'AtomFileUploader.js' */    set_url: function (v) {
/*Line 37 - 'AtomFileUploader.js' */        this._url = v;
/*Line 38 - 'AtomFileUploader.js' */        if (!v)
/*Line 39 - 'AtomFileUploader.js' */            return;
/*Line 40 - 'AtomFileUploader.js' */        if (this._playerReady) {
/*Line 41 - 'AtomFileUploader.js' */            var fp = this.get_player();
/*Line 42 - 'AtomFileUploader.js' */            fp.setProperty("url", JSON.stringify(v));
/*Line 43 - 'AtomFileUploader.js' */            if (this._uploadOnUrlSet) {
/*Line 44 - 'AtomFileUploader.js' */                fp.invoke("upload");
/*Line 45 - 'AtomFileUploader.js' */            }
/*Line 46 - 'AtomFileUploader.js' */        }

/*Line 48 - 'AtomFileUploader.js' */    },

/*Line 50 - 'AtomFileUploader.js' */    get_filters: function () {
/*Line 51 - 'AtomFileUploader.js' */        return this._filters;
/*Line 52 - 'AtomFileUploader.js' */    },
/*Line 53 - 'AtomFileUploader.js' */    set_filters: function (v) {
/*Line 54 - 'AtomFileUploader.js' */        this._filters = v;
/*Line 55 - 'AtomFileUploader.js' */    },

/*Line 57 - 'AtomFileUploader.js' */    set_playerReady: function (v) {
/*Line 58 - 'AtomFileUploader.js' */        if (v) {
/*Line 59 - 'AtomFileUploader.js' */            this._playerReady = true;
/*Line 60 - 'AtomFileUploader.js' */            var fp = this.get_player();
/*Line 61 - 'AtomFileUploader.js' */            fp.setProperty("filters", JSON.stringify(this._filters));
/*Line 62 - 'AtomFileUploader.js' */            fp.setProperty("url", JSON.stringify(this._url));
/*Line 63 - 'AtomFileUploader.js' */            if (this._uploadOnUrlSet && this._url) {
/*Line 64 - 'AtomFileUploader.js' */                fp.invoke("upload", JSON.stringify(this._url));
/*Line 65 - 'AtomFileUploader.js' */            }
/*Line 66 - 'AtomFileUploader.js' */        }
/*Line 67 - 'AtomFileUploader.js' */    },

/*Line 69 - 'AtomFileUploader.js' */    isFlashSupported: function () {
/*Line 70 - 'AtomFileUploader.js' */        return AtomBrowser.supportsFlash && !AtomBrowser.supportsUpload;
/*Line 71 - 'AtomFileUploader.js' */    },

/*Line 73 - 'AtomFileUploader.js' */    onFileSelected: function () {
        
/*Line 75 - 'AtomFileUploader.js' */    },

/*Line 77 - 'AtomFileUploader.js' */    uploadFile: function () {
/*Line 78 - 'AtomFileUploader.js' */        if (this._isFlash) {
/*Line 79 - 'AtomFileUploader.js' */            var fp = this.get_player();
/*Line 80 - 'AtomFileUploader.js' */            fp.setProperty("url", JSON.stringify(this._url));
/*Line 81 - 'AtomFileUploader.js' */            fp.invoke("upload");
/*Line 82 - 'AtomFileUploader.js' */        }else {
/*Line 83 - 'AtomFileUploader.js' */            var input = this._input;
/*Line 84 - 'AtomFileUploader.js' */            input.style.display = "none";

/*Line 86 - 'AtomFileUploader.js' */            if (!this._progress) {
/*Line 87 - 'AtomFileUploader.js' */                this._progress = document.createElement("DIV");
/*Line 88 - 'AtomFileUploader.js' */                this._progress.style.backgroundColor = "Green";
/*Line 89 - 'AtomFileUploader.js' */                this._element.appendChild(this._progress);
/*Line 90 - 'AtomFileUploader.js' */            }
/*Line 91 - 'AtomFileUploader.js' */            var xhr = new XMLHttpRequest();
/*Line 92 - 'AtomFileUploader.js' */            this.bindEvent(xhr, "progress", "onProgress");
/*Line 93 - 'AtomFileUploader.js' */            this.bindEvent(xhr, "load", "onComplete");
/*Line 94 - 'AtomFileUploader.js' */            this.bindEvent(xhr, "error", "onError");
/*Line 95 - 'AtomFileUploader.js' */            this.bindEvent(xhr, "abort", "onError");
/*Line 96 - 'AtomFileUploader.js' */            var fd = new FormData();
/*Line 97 - 'AtomFileUploader.js' */            fd.append("fileToUpload", this._input.files[0]);

/*Line 99 - 'AtomFileUploader.js' */            xhr.open("POST", this._url);
/*Line 100 - 'AtomFileUploader.js' */            xhr.send(fd);
/*Line 101 - 'AtomFileUploader.js' */        }
/*Line 102 - 'AtomFileUploader.js' */    },


/*Line 105 - 'AtomFileUploader.js' */    onError: function () {
        
/*Line 107 - 'AtomFileUploader.js' */    },
/*Line 108 - 'AtomFileUploader.js' */    onProgress: function (evt) {
/*Line 109 - 'AtomFileUploader.js' */        if (evt.lengthComputable) {
/*Line 110 - 'AtomFileUploader.js' */            var percentComplete = Math.round(evt.loaded * 100 / evt.total);
/*Line 111 - 'AtomFileUploader.js' */            var width = $(this._element).width();
/*Line 112 - 'AtomFileUploader.js' */            width = Math.round(percentComplete * width / 100);
/*Line 113 - 'AtomFileUploader.js' */            $(this._progress).width(width);
/*Line 114 - 'AtomFileUploader.js' */        }
/*Line 115 - 'AtomFileUploader.js' */    },
/*Line 116 - 'AtomFileUploader.js' */    onComplete: function (evt) {
/*Line 117 - 'AtomFileUploader.js' */        var result = null;
/*Line 118 - 'AtomFileUploader.js' */        if (evt.target) {
/*Line 119 - 'AtomFileUploader.js' */            result = evt.target.responseText;
/*Line 120 - 'AtomFileUploader.js' */        }else {
/*Line 121 - 'AtomFileUploader.js' */            result = evt.result;
/*Line 122 - 'AtomFileUploader.js' */        }

/*Line 124 - 'AtomFileUploader.js' */        if (this._nextUploader) {
/*Line 125 - 'AtomFileUploader.js' */            this._nextUploader.uploadFile();
/*Line 126 - 'AtomFileUploader.js' */        }

/*Line 128 - 'AtomFileUploader.js' */    },

/*Line 130 - 'AtomFileUploader.js' */    initialize: function () {
/*Line 131 - 'AtomFileUploader.js' */        NeuroSpeech.WebAtoms.AtomFileUploader.callBaseMethod(this, "initialize");
/*Line 132 - 'AtomFileUploader.js' */        this._element.style.height = "25px";
/*Line 133 - 'AtomFileUploader.js' */        if (this.isFlashSupported()) {
/*Line 134 - 'AtomFileUploader.js' */            this.createPlayer("/resources/NeuroSpeech.WebAtoms/NeuroSpeech.WebAtoms.Content.Flash.SingleFileUploader.swf", {});
/*Line 135 - 'AtomFileUploader.js' */        } else {
/*Line 136 - 'AtomFileUploader.js' */            this._input = document.createElement("INPUT");
/*Line 137 - 'AtomFileUploader.js' */            $(this._input).attr("type", "file");
/*Line 138 - 'AtomFileUploader.js' */            this._element.appendChild(this._input);
/*Line 139 - 'AtomFileUploader.js' */            this.bindEvent(this._input, "change", "onFileSelected");
/*Line 140 - 'AtomFileUploader.js' */        }
/*Line 141 - 'AtomFileUploader.js' */    }
/*Line 142 - 'AtomFileUploader.js' */};

/*Line 144 - 'AtomFileUploader.js' */NeuroSpeech.WebAtoms.AtomFileUploader.registerClass("NeuroSpeech.WebAtoms.AtomFileUploader", NeuroSpeech.WebAtoms.AtomRichControl);
/*Line 0 - 'AtomHBox.js' */


/*Line 3 - 'AtomHBox.js' */NeuroSpeech.WebAtoms.AtomHBox = function (element) {
/*Line 4 - 'AtomHBox.js' */    NeuroSpeech.WebAtoms.AtomHBox.initializeBase(this, [element]);
/*Line 5 - 'AtomHBox.js' */};

/*Line 7 - 'AtomHBox.js' */NeuroSpeech.WebAtoms.AtomHBox.prototype = {

/*Line 9 - 'AtomHBox.js' */    updateUI: function () {
/*Line 10 - 'AtomHBox.js' */        var element = this.get_element();
/*Line 11 - 'AtomHBox.js' */        AtomUI.setUI(element, null, "atom-hbox");
/*Line 12 - 'AtomHBox.js' */    },

/*Line 14 - 'AtomHBox.js' */    initialize: function () {

/*Line 16 - 'AtomHBox.js' */        var element = this.get_element();
/*Line 17 - 'AtomHBox.js' */        this.updateUI();

/*Line 19 - 'AtomHBox.js' */        NeuroSpeech.WebAtoms.AtomHBox.callBaseMethod(this, "initialize");
/*Line 20 - 'AtomHBox.js' */    }
/*Line 21 - 'AtomHBox.js' */};

/*Line 23 - 'AtomHBox.js' */NeuroSpeech.WebAtoms.AtomHBox.registerClass("NeuroSpeech.WebAtoms.AtomHBox", NeuroSpeech.WebAtoms.AtomControl);

/*Line 0 - 'AtomLinkBar.js' */

/*Line 2 - 'AtomLinkBar.js' */NeuroSpeech.WebAtoms.AtomLinkBar = function (element) {
/*Line 3 - 'AtomLinkBar.js' */    NeuroSpeech.WebAtoms.AtomLinkBar.initializeBase(this, [element]);
/*Line 4 - 'AtomLinkBar.js' */    this._allowSelectFirst = false;
/*Line 5 - 'AtomLinkBar.js' */};

/*Line 7 - 'AtomLinkBar.js' */NeuroSpeech.WebAtoms.AtomLinkBar.prototype = {
/*Line 8 - 'AtomLinkBar.js' */    initialize: function () {
/*Line 9 - 'AtomLinkBar.js' */        //this._value = location.pathname;
/*Line 10 - 'AtomLinkBar.js' */        NeuroSpeech.WebAtoms.AtomLinkBar.callBaseMethod(this, "initialize");
/*Line 11 - 'AtomLinkBar.js' */    },

/*Line 13 - 'AtomLinkBar.js' */    onClick: function (event) {
/*Line 14 - 'AtomLinkBar.js' */        NeuroSpeech.WebAtoms.AtomLinkBar.callBaseMethod(this, "onClick", [event]);

/*Line 16 - 'AtomLinkBar.js' */        window.location = this.get_value();
/*Line 17 - 'AtomLinkBar.js' */    },
    
/*Line 19 - 'AtomLinkBar.js' */    onCollectionChanged: function (mode, index, item) {

/*Line 21 - 'AtomLinkBar.js' */        NeuroSpeech.WebAtoms.AtomLinkBar.callBaseMethod(this,"onCollectionChanged",[mode, index, item]);

/*Line 23 - 'AtomLinkBar.js' */        if (!this._items)
/*Line 24 - 'AtomLinkBar.js' */            return;

/*Line 26 - 'AtomLinkBar.js' */        AtomBinder.setValue(this, "value", location.pathname);

/*Line 28 - 'AtomLinkBar.js' */        if (this.get_selectedIndex() != -1)
/*Line 29 - 'AtomLinkBar.js' */            return;

/*Line 31 - 'AtomLinkBar.js' */        var ae = new AtomEnumerator(this._items);
/*Line 32 - 'AtomLinkBar.js' */        var link;
/*Line 33 - 'AtomLinkBar.js' */        var val;
/*Line 34 - 'AtomLinkBar.js' */        while (ae.next()) {
/*Line 35 - 'AtomLinkBar.js' */            link = ae.current();
/*Line 36 - 'AtomLinkBar.js' */            val = link;
/*Line 37 - 'AtomLinkBar.js' */            if (this._valuePath) {
/*Line 38 - 'AtomLinkBar.js' */                val = link[this._valuePath];
/*Line 39 - 'AtomLinkBar.js' */            }
/*Line 40 - 'AtomLinkBar.js' */            if (location.pathname.indexOf(val) == 0) {
/*Line 41 - 'AtomLinkBar.js' */                var caller = this;
/*Line 42 - 'AtomLinkBar.js' */                AtomBinder.setValue(caller, "selectedItem", link);
/*Line 43 - 'AtomLinkBar.js' */                return;
/*Line 44 - 'AtomLinkBar.js' */            }
/*Line 45 - 'AtomLinkBar.js' */        }
/*Line 46 - 'AtomLinkBar.js' */    }
/*Line 47 - 'AtomLinkBar.js' */};

/*Line 49 - 'AtomLinkBar.js' */NeuroSpeech.WebAtoms.AtomLinkBar.registerClass("NeuroSpeech.WebAtoms.AtomLinkBar", NeuroSpeech.WebAtoms.AtomToggleButtonBar);
/*Line 0 - 'AtomMultiButtonList.js' */

/*Line 2 - 'AtomMultiButtonList.js' */NeuroSpeech.WebAtoms.AtomMultiButtonList = function (element) {
/*Line 3 - 'AtomMultiButtonList.js' */    NeuroSpeech.WebAtoms.AtomMultiButtonList.initializeBase(this, [element]);
/*Line 4 - 'AtomMultiButtonList.js' */    this._dataElements = [];
/*Line 5 - 'AtomMultiButtonList.js' */    this._labelPath = "label";
/*Line 6 - 'AtomMultiButtonList.js' */    this._valuePath = "value";
/*Line 7 - 'AtomMultiButtonList.js' */};

/*Line 9 - 'AtomMultiButtonList.js' */NeuroSpeech.WebAtoms.AtomMultiButtonList.prototype = {

/*Line 11 - 'AtomMultiButtonList.js' */    get_options: function () {
/*Line 12 - 'AtomMultiButtonList.js' */        return this._options;
/*Line 13 - 'AtomMultiButtonList.js' */    },
/*Line 14 - 'AtomMultiButtonList.js' */    set_options: function (v) {
/*Line 15 - 'AtomMultiButtonList.js' */        this._options = v;
/*Line 16 - 'AtomMultiButtonList.js' */        if (v) {
/*Line 17 - 'AtomMultiButtonList.js' */            this.onCollectionChangedInternal("refresh", -1, null);
/*Line 18 - 'AtomMultiButtonList.js' */        }
/*Line 19 - 'AtomMultiButtonList.js' */    },
/*Line 20 - 'AtomMultiButtonList.js' */    get_labelPath: function () {
/*Line 21 - 'AtomMultiButtonList.js' */        return this._labelPath;
/*Line 22 - 'AtomMultiButtonList.js' */    },
/*Line 23 - 'AtomMultiButtonList.js' */    set_labelPath: function (lp) {
/*Line 24 - 'AtomMultiButtonList.js' */        this._labelPath = lp;
/*Line 25 - 'AtomMultiButtonList.js' */    },
/*Line 26 - 'AtomMultiButtonList.js' */    get_valuePath: function () {
/*Line 27 - 'AtomMultiButtonList.js' */        return this._valuePath;
/*Line 28 - 'AtomMultiButtonList.js' */    },
/*Line 29 - 'AtomMultiButtonList.js' */    set_valuePath: function (vp) {
/*Line 30 - 'AtomMultiButtonList.js' */        this._valuePath = vp;
/*Line 31 - 'AtomMultiButtonList.js' */    },
/*Line 32 - 'AtomMultiButtonList.js' */    get_value: function () {
/*Line 33 - 'AtomMultiButtonList.js' */        return this._value;
/*Line 34 - 'AtomMultiButtonList.js' */    },
/*Line 35 - 'AtomMultiButtonList.js' */    set_value: function (v) {
/*Line 36 - 'AtomMultiButtonList.js' */        this._value = v;
/*Line 37 - 'AtomMultiButtonList.js' */        this.updateSelections();
/*Line 38 - 'AtomMultiButtonList.js' */    },
/*Line 39 - 'AtomMultiButtonList.js' */    get_isRadio: function () {
/*Line 40 - 'AtomMultiButtonList.js' */        return this._isRadio;
/*Line 41 - 'AtomMultiButtonList.js' */    },
/*Line 42 - 'AtomMultiButtonList.js' */    set_isRadio: function (v) {
/*Line 43 - 'AtomMultiButtonList.js' */        this._isRadio = v;
/*Line 44 - 'AtomMultiButtonList.js' */    },
/*Line 45 - 'AtomMultiButtonList.js' */    get_items: function () {
/*Line 46 - 'AtomMultiButtonList.js' */        return this._items;
/*Line 47 - 'AtomMultiButtonList.js' */    },
/*Line 48 - 'AtomMultiButtonList.js' */    set_items: function (v) {
/*Line 49 - 'AtomMultiButtonList.js' */        if (this._items) {
/*Line 50 - 'AtomMultiButtonList.js' */            this.unbindEvent(this._items, "CollectionChanged", "onCollectionChangedInternal");
/*Line 51 - 'AtomMultiButtonList.js' */        }
/*Line 52 - 'AtomMultiButtonList.js' */        this._items = v;

/*Line 54 - 'AtomMultiButtonList.js' */        // try starting observing....
/*Line 55 - 'AtomMultiButtonList.js' */        if (v != null) {
/*Line 56 - 'AtomMultiButtonList.js' */            this.bindEvent(this._items, "CollectionChanged", "onCollectionChangedInternal");
/*Line 57 - 'AtomMultiButtonList.js' */            this.onCollectionChangedInternal("refresh", -1, null);
/*Line 58 - 'AtomMultiButtonList.js' */        }
/*Line 59 - 'AtomMultiButtonList.js' */    },

/*Line 61 - 'AtomMultiButtonList.js' */    onCollectionChangedInternal: function (mode, index, item) {
/*Line 62 - 'AtomMultiButtonList.js' */        var value = this.get_value();

/*Line 64 - 'AtomMultiButtonList.js' */        this.onCollectionChanged(mode, index, item);

/*Line 66 - 'AtomMultiButtonList.js' */        // update selections !!!
/*Line 67 - 'AtomMultiButtonList.js' */        this.set_value(value);
/*Line 68 - 'AtomMultiButtonList.js' */    },
/*Line 69 - 'AtomMultiButtonList.js' */    onCollectionChanged: function (mode, index, item) {
/*Line 70 - 'AtomMultiButtonList.js' */        if (!this._items || !this._options)
/*Line 71 - 'AtomMultiButtonList.js' */            return;
/*Line 72 - 'AtomMultiButtonList.js' */        this._dataElements = [];
/*Line 73 - 'AtomMultiButtonList.js' */        this.unbindEvent(null, "change", "onDataChange");
/*Line 74 - 'AtomMultiButtonList.js' */        var ae = new AtomEnumerator(this._items);
/*Line 75 - 'AtomMultiButtonList.js' */        while (ae.next()) {
/*Line 76 - 'AtomMultiButtonList.js' */            var data = ae.current();
/*Line 77 - 'AtomMultiButtonList.js' */            this.createChildElement(this._element, data);
/*Line 78 - 'AtomMultiButtonList.js' */        }

/*Line 80 - 'AtomMultiButtonList.js' */        this.updateUI();
/*Line 81 - 'AtomMultiButtonList.js' */    },

/*Line 83 - 'AtomMultiButtonList.js' */    updateSelections: function () {

/*Line 85 - 'AtomMultiButtonList.js' */        if (!this._dataElements || this._dataElements.length == 0)
/*Line 86 - 'AtomMultiButtonList.js' */            return;

/*Line 88 - 'AtomMultiButtonList.js' */        if (!this._value)
/*Line 89 - 'AtomMultiButtonList.js' */            return;

/*Line 91 - 'AtomMultiButtonList.js' */        var ae;
/*Line 92 - 'AtomMultiButtonList.js' */        var ace;
/*Line 93 - 'AtomMultiButtonList.js' */        var item;
/*Line 94 - 'AtomMultiButtonList.js' */        var selections = this._value.split(",");

/*Line 96 - 'AtomMultiButtonList.js' */        ace = new AtomEnumerator(this._dataElements);
/*Line 97 - 'AtomMultiButtonList.js' */        var cb;
/*Line 98 - 'AtomMultiButtonList.js' */        while (ace.next()) {
/*Line 99 - 'AtomMultiButtonList.js' */            cb = ace.current();
/*Line 100 - 'AtomMultiButtonList.js' */            $(cb).removeAttr("checked");
/*Line 101 - 'AtomMultiButtonList.js' */            ae = new AtomEnumerator(selections);
/*Line 102 - 'AtomMultiButtonList.js' */            while (ae.next()) {
/*Line 103 - 'AtomMultiButtonList.js' */                item = ae.current();
/*Line 104 - 'AtomMultiButtonList.js' */                item = $.trim(item);
/*Line 105 - 'AtomMultiButtonList.js' */                if ($(cb).val() == item) {
/*Line 106 - 'AtomMultiButtonList.js' */                    $(cb).attr("checked", "true");
/*Line 107 - 'AtomMultiButtonList.js' */                }
/*Line 108 - 'AtomMultiButtonList.js' */            }
/*Line 109 - 'AtomMultiButtonList.js' */        }
/*Line 110 - 'AtomMultiButtonList.js' */    },

/*Line 112 - 'AtomMultiButtonList.js' */    onDataChange: function () {
/*Line 113 - 'AtomMultiButtonList.js' */        var ae = new AtomEnumerator(this._dataElements);
/*Line 114 - 'AtomMultiButtonList.js' */        var add = [];
/*Line 115 - 'AtomMultiButtonList.js' */        while (ae.next()) {
/*Line 116 - 'AtomMultiButtonList.js' */            var item = ae.current();
/*Line 117 - 'AtomMultiButtonList.js' */            var dataItem = $(item).val();
/*Line 118 - 'AtomMultiButtonList.js' */            var checked = $(item).attr("checked");
/*Line 119 - 'AtomMultiButtonList.js' */            if (checked) {
/*Line 120 - 'AtomMultiButtonList.js' */                add.push(dataItem);
/*Line 121 - 'AtomMultiButtonList.js' */            }
/*Line 122 - 'AtomMultiButtonList.js' */        }
/*Line 123 - 'AtomMultiButtonList.js' */        this._value = add.join(", ");
/*Line 124 - 'AtomMultiButtonList.js' */        AtomBinder.refreshValue(this, "value");
/*Line 125 - 'AtomMultiButtonList.js' */    },

/*Line 127 - 'AtomMultiButtonList.js' */    createChildElement: function (parentElement, data) {
/*Line 128 - 'AtomMultiButtonList.js' */        var span = document.createElement("SPAN");
/*Line 129 - 'AtomMultiButtonList.js' */        parentElement.appendChild(span);

/*Line 131 - 'AtomMultiButtonList.js' */        parentElement = span;
/*Line 132 - 'AtomMultiButtonList.js' */        span = document.createElement("SPAN");
/*Line 133 - 'AtomMultiButtonList.js' */        var lp = this.get_labelPath();
/*Line 134 - 'AtomMultiButtonList.js' */        var vp = this.get_valuePath();
/*Line 135 - 'AtomMultiButtonList.js' */        l = data;
/*Line 136 - 'AtomMultiButtonList.js' */        v = data;
/*Line 137 - 'AtomMultiButtonList.js' */        if (lp)
/*Line 138 - 'AtomMultiButtonList.js' */            l = data[lp];
/*Line 139 - 'AtomMultiButtonList.js' */        if (vp)
/*Line 140 - 'AtomMultiButtonList.js' */            v = data[vp];

        
/*Line 143 - 'AtomMultiButtonList.js' */        var gpName = null;
/*Line 144 - 'AtomMultiButtonList.js' */        if (this._isRadio) {
/*Line 145 - 'AtomMultiButtonList.js' */            gpName = "_g" + AtomUI.getNewIndex();
/*Line 146 - 'AtomMultiButtonList.js' */        }

/*Line 148 - 'AtomMultiButtonList.js' */        parentElement.appendChild(span);

/*Line 150 - 'AtomMultiButtonList.js' */        var options = new AtomEnumerator(this._options);
/*Line 151 - 'AtomMultiButtonList.js' */        while (options.next()) {
/*Line 152 - 'AtomMultiButtonList.js' */            var op = options.current();
/*Line 153 - 'AtomMultiButtonList.js' */            if (vp) {
/*Line 154 - 'AtomMultiButtonList.js' */                op = op[vp];
/*Line 155 - 'AtomMultiButtonList.js' */            }

/*Line 157 - 'AtomMultiButtonList.js' */            var val = v + "." + op;

/*Line 159 - 'AtomMultiButtonList.js' */            var cb = document.createElement("INPUT");
/*Line 160 - 'AtomMultiButtonList.js' */            if (this._isRadio) {
/*Line 161 - 'AtomMultiButtonList.js' */                $(cb).attr("type", "radio");
/*Line 162 - 'AtomMultiButtonList.js' */                $(cb).attr("name", gpName);
/*Line 163 - 'AtomMultiButtonList.js' */            }else {
/*Line 164 - 'AtomMultiButtonList.js' */                $(cb).attr("type", "checkbox");
/*Line 165 - 'AtomMultiButtonList.js' */            }
/*Line 166 - 'AtomMultiButtonList.js' */            $(cb).val(val);
/*Line 167 - 'AtomMultiButtonList.js' */            span.appendChild(cb);
/*Line 168 - 'AtomMultiButtonList.js' */            this.bindEvent(cb, "change", "onDataChange");
/*Line 169 - 'AtomMultiButtonList.js' */            this._dataElements.push(cb);
/*Line 170 - 'AtomMultiButtonList.js' */        }

/*Line 172 - 'AtomMultiButtonList.js' */        span = document.createElement("SPAN");
/*Line 173 - 'AtomMultiButtonList.js' */        parentElement.appendChild(span);
/*Line 174 - 'AtomMultiButtonList.js' */        // Create Label First..
/*Line 175 - 'AtomMultiButtonList.js' */        var txt = document.createTextNode(l);
/*Line 176 - 'AtomMultiButtonList.js' */        span.appendChild(txt);
/*Line 177 - 'AtomMultiButtonList.js' */        //span.style.float = "left";

/*Line 179 - 'AtomMultiButtonList.js' */    },

/*Line 181 - 'AtomMultiButtonList.js' */    initialize: function () {
/*Line 182 - 'AtomMultiButtonList.js' */        NeuroSpeech.WebAtoms.AtomMultiButtonList.callBaseMethod(this, "initialize");
/*Line 183 - 'AtomMultiButtonList.js' */    }
/*Line 184 - 'AtomMultiButtonList.js' */};

/*Line 186 - 'AtomMultiButtonList.js' */NeuroSpeech.WebAtoms.AtomMultiButtonList.registerClass("NeuroSpeech.WebAtoms.AtomMultiButtonList", NeuroSpeech.WebAtoms.AtomControl);
/*Line 0 - 'AtomNumberComboBox.js' */

/*Line 2 - 'AtomNumberComboBox.js' */NeuroSpeech.WebAtoms.AtomNumberComboBox = function (element) {
/*Line 3 - 'AtomNumberComboBox.js' */    NeuroSpeech.WebAtoms.AtomNumberComboBox.initializeBase(this, [element]);
/*Line 4 - 'AtomNumberComboBox.js' */    this._labelPath = "label";
/*Line 5 - 'AtomNumberComboBox.js' */    this._valuePath = "value";
/*Line 6 - 'AtomNumberComboBox.js' */    this._step = 1;
/*Line 7 - 'AtomNumberComboBox.js' */};

/*Line 9 - 'AtomNumberComboBox.js' */NeuroSpeech.WebAtoms.AtomNumberComboBox.prototype = {

/*Line 11 - 'AtomNumberComboBox.js' */    get_startNumber: function () {
/*Line 12 - 'AtomNumberComboBox.js' */        return this._startNumber;
/*Line 13 - 'AtomNumberComboBox.js' */    },
/*Line 14 - 'AtomNumberComboBox.js' */    set_startNumber: function (v) {
/*Line 15 - 'AtomNumberComboBox.js' */        this._startNumber = v;
/*Line 16 - 'AtomNumberComboBox.js' */        this.resetNumbers();
/*Line 17 - 'AtomNumberComboBox.js' */    },

/*Line 19 - 'AtomNumberComboBox.js' */    get_endNumber: function () {
/*Line 20 - 'AtomNumberComboBox.js' */        return this._endNumber;
/*Line 21 - 'AtomNumberComboBox.js' */    },
/*Line 22 - 'AtomNumberComboBox.js' */    set_endNumber: function (v) {
/*Line 23 - 'AtomNumberComboBox.js' */        this._endNumber = v;
/*Line 24 - 'AtomNumberComboBox.js' */        this.resetNumbers();
/*Line 25 - 'AtomNumberComboBox.js' */    },

/*Line 27 - 'AtomNumberComboBox.js' */    get_step: function () {
/*Line 28 - 'AtomNumberComboBox.js' */        return this._step;
/*Line 29 - 'AtomNumberComboBox.js' */    },
/*Line 30 - 'AtomNumberComboBox.js' */    set_step: function (v) {
/*Line 31 - 'AtomNumberComboBox.js' */        this._step = v;
/*Line 32 - 'AtomNumberComboBox.js' */        this.resetNumbers();
/*Line 33 - 'AtomNumberComboBox.js' */    },

/*Line 35 - 'AtomNumberComboBox.js' */    onLoaded: function () {
/*Line 36 - 'AtomNumberComboBox.js' */        this.resetNumbers();
/*Line 37 - 'AtomNumberComboBox.js' */    },

/*Line 39 - 'AtomNumberComboBox.js' */    resetNumbers: function () {
/*Line 40 - 'AtomNumberComboBox.js' */        if (!this._created)
/*Line 41 - 'AtomNumberComboBox.js' */            return;
/*Line 42 - 'AtomNumberComboBox.js' */        if (!this._startNumber || !this._endNumber)
/*Line 43 - 'AtomNumberComboBox.js' */            return;
/*Line 44 - 'AtomNumberComboBox.js' */        var sn = this._startNumber;
/*Line 45 - 'AtomNumberComboBox.js' */        var en = this._endNumber;
/*Line 46 - 'AtomNumberComboBox.js' */        var numbers = [];
/*Line 47 - 'AtomNumberComboBox.js' */        for (; sn <= en; sn+=this._step) {
/*Line 48 - 'AtomNumberComboBox.js' */            numbers.push({ label: sn, value: sn } );
/*Line 49 - 'AtomNumberComboBox.js' */        }

/*Line 51 - 'AtomNumberComboBox.js' */        this.set_items(numbers);
/*Line 52 - 'AtomNumberComboBox.js' */    },

/*Line 54 - 'AtomNumberComboBox.js' */    initialize: function () {
/*Line 55 - 'AtomNumberComboBox.js' */        NeuroSpeech.WebAtoms.AtomNumberComboBox.callBaseMethod(this, "initialize");
/*Line 56 - 'AtomNumberComboBox.js' */    }
/*Line 57 - 'AtomNumberComboBox.js' */};

/*Line 59 - 'AtomNumberComboBox.js' */NeuroSpeech.WebAtoms.AtomNumberComboBox.registerClass("NeuroSpeech.WebAtoms.AtomNumberComboBox", NeuroSpeech.WebAtoms.AtomComboBox);
/*Line 0 - 'AtomPhoneControl.js' */



/*Line 4 - 'AtomPhoneControl.js' */NeuroSpeech.WebAtoms.AtomPhoneControl = function (element) {
/*Line 5 - 'AtomPhoneControl.js' */    NeuroSpeech.WebAtoms.AtomPhoneControl.initializeBase(this, [element]);

/*Line 7 - 'AtomPhoneControl.js' */    // create text boxes and drop down box for countries
/*Line 8 - 'AtomPhoneControl.js' */    this._value = "";
/*Line 9 - 'AtomPhoneControl.js' */};

/*Line 11 - 'AtomPhoneControl.js' */NeuroSpeech.WebAtoms.AtomPhoneControl.prototype = {
/*Line 12 - 'AtomPhoneControl.js' */    get_value: function () {
/*Line 13 - 'AtomPhoneControl.js' */        return this._value;
/*Line 14 - 'AtomPhoneControl.js' */    },
/*Line 15 - 'AtomPhoneControl.js' */    set_value: function (v) {
/*Line 16 - 'AtomPhoneControl.js' */        this._value = v;
/*Line 17 - 'AtomPhoneControl.js' */        if (this._countries) {
/*Line 18 - 'AtomPhoneControl.js' */            this.setupValues();
/*Line 19 - 'AtomPhoneControl.js' */        }
/*Line 20 - 'AtomPhoneControl.js' */    },

/*Line 22 - 'AtomPhoneControl.js' */    setupValues: function () {
/*Line 23 - 'AtomPhoneControl.js' */        if (!this._value) {
/*Line 24 - 'AtomPhoneControl.js' */            $(this.num1).val("");
/*Line 25 - 'AtomPhoneControl.js' */            $(this.num2).val("");
/*Line 26 - 'AtomPhoneControl.js' */            $(this.num3).val("");
/*Line 27 - 'AtomPhoneControl.js' */            $(this.ext).val("");
/*Line 28 - 'AtomPhoneControl.js' */            $(this.msg).val("");
/*Line 29 - 'AtomPhoneControl.js' */            return;
/*Line 30 - 'AtomPhoneControl.js' */        }
/*Line 31 - 'AtomPhoneControl.js' */        var tokens = this._value.split(":", 6);

/*Line 33 - 'AtomPhoneControl.js' */        var cc = tokens[1];

/*Line 35 - 'AtomPhoneControl.js' */        var ae = new AtomEnumerator(this._countries);
/*Line 36 - 'AtomPhoneControl.js' */        while (ae.next()) {
/*Line 37 - 'AtomPhoneControl.js' */            var ci = ae.current();
/*Line 38 - 'AtomPhoneControl.js' */            if (ci.country == cc) {
/*Line 39 - 'AtomPhoneControl.js' */                this.cs.selectedIndex = ae.currentIndex();
/*Line 40 - 'AtomPhoneControl.js' */                break;
/*Line 41 - 'AtomPhoneControl.js' */            }
/*Line 42 - 'AtomPhoneControl.js' */        }

/*Line 44 - 'AtomPhoneControl.js' */        var num = tokens[3];
/*Line 45 - 'AtomPhoneControl.js' */        var nums = num.split(".", 3);
/*Line 46 - 'AtomPhoneControl.js' */        $(this.num1).val(nums[0]);
/*Line 47 - 'AtomPhoneControl.js' */        $(this.num2).val(nums[1]);
/*Line 48 - 'AtomPhoneControl.js' */        $(this.num3).val(nums[2]);
/*Line 49 - 'AtomPhoneControl.js' */        $(this.ext).val(tokens[4]);
/*Line 50 - 'AtomPhoneControl.js' */        $(this.msg).val(tokens[5]);
/*Line 51 - 'AtomPhoneControl.js' */        this.onFormat();
/*Line 52 - 'AtomPhoneControl.js' */    },

/*Line 54 - 'AtomPhoneControl.js' */    onDataChange: function () {
/*Line 55 - 'AtomPhoneControl.js' */        var value = "v2:";
/*Line 56 - 'AtomPhoneControl.js' */        var si = this.cs.selectedIndex;
/*Line 57 - 'AtomPhoneControl.js' */        var ci = this._countries[si];
/*Line 58 - 'AtomPhoneControl.js' */        value += ci.country + ":" + ci.code;
/*Line 59 - 'AtomPhoneControl.js' */        value += ":" + $(this.num1).val();
/*Line 60 - 'AtomPhoneControl.js' */        value += "." + $(this.num2).val();
/*Line 61 - 'AtomPhoneControl.js' */        value += "." + $(this.num3).val();
/*Line 62 - 'AtomPhoneControl.js' */        value += ":" + $(this.ext).val();
/*Line 63 - 'AtomPhoneControl.js' */        value += ":" + $(this.msg).val();

/*Line 65 - 'AtomPhoneControl.js' */        this._value = value;

/*Line 67 - 'AtomPhoneControl.js' */        AtomBinder.refreshValue(this, "value");
/*Line 68 - 'AtomPhoneControl.js' */    },

/*Line 70 - 'AtomPhoneControl.js' */    setCountries: function (r) {
/*Line 71 - 'AtomPhoneControl.js' */        this._countries = r;
/*Line 72 - 'AtomPhoneControl.js' */        var options = this.cs.options;
/*Line 73 - 'AtomPhoneControl.js' */        options.length = 0;
/*Line 74 - 'AtomPhoneControl.js' */        var ae = new AtomEnumerator(r);
/*Line 75 - 'AtomPhoneControl.js' */        while (ae.next()) {
/*Line 76 - 'AtomPhoneControl.js' */            var ci = ae.current();
/*Line 77 - 'AtomPhoneControl.js' */            if (!ci.value) {
/*Line 78 - 'AtomPhoneControl.js' */                ci.label = ci.ConfigName;
/*Line 79 - 'AtomPhoneControl.js' */                ci.value = ae.currentIndex();
/*Line 80 - 'AtomPhoneControl.js' */                var obj = eval("(" + ci.ConfigValue + ")");
/*Line 81 - 'AtomPhoneControl.js' */                ci.country = obj.country;
/*Line 82 - 'AtomPhoneControl.js' */                ci.code = obj.code;
/*Line 83 - 'AtomPhoneControl.js' */                ci.format = obj.format;
/*Line 84 - 'AtomPhoneControl.js' */            }
/*Line 85 - 'AtomPhoneControl.js' */            options[ae.currentIndex()] = new Option(ci.label, ci.value, false, false);
/*Line 86 - 'AtomPhoneControl.js' */        }

/*Line 88 - 'AtomPhoneControl.js' */        this.setupValues();
/*Line 89 - 'AtomPhoneControl.js' */        this.onFormat();
/*Line 90 - 'AtomPhoneControl.js' */    },

/*Line 92 - 'AtomPhoneControl.js' */    updateUI: function () {
/*Line 93 - 'AtomPhoneControl.js' */        this._element.style.height = "25px";
/*Line 94 - 'AtomPhoneControl.js' */    },

/*Line 96 - 'AtomPhoneControl.js' */    onCountryChange: function () {
/*Line 97 - 'AtomPhoneControl.js' */        this.onDataChange();
/*Line 98 - 'AtomPhoneControl.js' */        this.onFormat();
/*Line 99 - 'AtomPhoneControl.js' */    },

/*Line 101 - 'AtomPhoneControl.js' */    onFormat: function () {
/*Line 102 - 'AtomPhoneControl.js' */        var cs = this.cs;
/*Line 103 - 'AtomPhoneControl.js' */        if (cs.selectedIndex == -1)
/*Line 104 - 'AtomPhoneControl.js' */            return;
/*Line 105 - 'AtomPhoneControl.js' */        var ci = this._countries[cs.selectedIndex];

/*Line 107 - 'AtomPhoneControl.js' */        if (ci.format && ci.format.length && ci.format.length > 0) {
/*Line 108 - 'AtomPhoneControl.js' */            var ae = new AtomEnumerator(ci.format);
/*Line 109 - 'AtomPhoneControl.js' */            while (ae.next()) {
/*Line 110 - 'AtomPhoneControl.js' */                var length = ae.current();
/*Line 111 - 'AtomPhoneControl.js' */                var index = ae.currentIndex();
/*Line 112 - 'AtomPhoneControl.js' */                var t = this.num[index];
/*Line 113 - 'AtomPhoneControl.js' */                $(t).attr("atom-max-char", length);
/*Line 114 - 'AtomPhoneControl.js' */            }
/*Line 115 - 'AtomPhoneControl.js' */        }
/*Line 116 - 'AtomPhoneControl.js' */    },

/*Line 118 - 'AtomPhoneControl.js' */    onKeyUp: function (eventObject) {
/*Line 119 - 'AtomPhoneControl.js' */        var target = eventObject.target;
/*Line 120 - 'AtomPhoneControl.js' */        var max = $(target).attr("atom-max-char");
/*Line 121 - 'AtomPhoneControl.js' */        if (!max)
/*Line 122 - 'AtomPhoneControl.js' */            return;
/*Line 123 - 'AtomPhoneControl.js' */        var val = $(target).val();
/*Line 124 - 'AtomPhoneControl.js' */        if (val.length >= max) {
/*Line 125 - 'AtomPhoneControl.js' */            // focus 

/*Line 127 - 'AtomPhoneControl.js' */            var ae = new AtomEnumerator(this.num);
/*Line 128 - 'AtomPhoneControl.js' */            while (ae.next()) {
/*Line 129 - 'AtomPhoneControl.js' */                var item = ae.current();
/*Line 130 - 'AtomPhoneControl.js' */                if (item == target) {
/*Line 131 - 'AtomPhoneControl.js' */                    if (ae.next()) {
/*Line 132 - 'AtomPhoneControl.js' */                        item = ae.current();
/*Line 133 - 'AtomPhoneControl.js' */                        $(item).focus();
/*Line 134 - 'AtomPhoneControl.js' */                        this.onDataChange();
/*Line 135 - 'AtomPhoneControl.js' */                        return;
/*Line 136 - 'AtomPhoneControl.js' */                    }
/*Line 137 - 'AtomPhoneControl.js' */                }
/*Line 138 - 'AtomPhoneControl.js' */            }

/*Line 140 - 'AtomPhoneControl.js' */        }
/*Line 141 - 'AtomPhoneControl.js' */    },

/*Line 143 - 'AtomPhoneControl.js' */    initialize: function () {
/*Line 144 - 'AtomPhoneControl.js' */        this.cs = document.createElement("SELECT");
/*Line 145 - 'AtomPhoneControl.js' */        this.cs.style.float = "left";
/*Line 146 - 'AtomPhoneControl.js' */        this.num1 = document.createElement("INPUT");
/*Line 147 - 'AtomPhoneControl.js' */        this.num1.type = "text";
/*Line 148 - 'AtomPhoneControl.js' */        this.num1.style.width = "50px";
/*Line 149 - 'AtomPhoneControl.js' */        this.num1.style.float = "left";
/*Line 150 - 'AtomPhoneControl.js' */        this.num2 = document.createElement("INPUT");
/*Line 151 - 'AtomPhoneControl.js' */        this.num2.type = "text";
/*Line 152 - 'AtomPhoneControl.js' */        this.num2.style.width = "50px";
/*Line 153 - 'AtomPhoneControl.js' */        this.num2.style.float = "left";
/*Line 154 - 'AtomPhoneControl.js' */        this.num3 = document.createElement("INPUT");
/*Line 155 - 'AtomPhoneControl.js' */        this.num3.type = "text";
/*Line 156 - 'AtomPhoneControl.js' */        this.num3.style.width = "50px";
/*Line 157 - 'AtomPhoneControl.js' */        this.num3.style.float = "left";
/*Line 158 - 'AtomPhoneControl.js' */        this.ext = document.createElement("INPUT");
/*Line 159 - 'AtomPhoneControl.js' */        this.num = [this.num1, this.num2, this.num3, this.ext];
/*Line 160 - 'AtomPhoneControl.js' */        this.ext.type = "text";
/*Line 161 - 'AtomPhoneControl.js' */        this.ext.style.width = "30px";
/*Line 162 - 'AtomPhoneControl.js' */        this.ext.style.float = "left";
/*Line 163 - 'AtomPhoneControl.js' */        this.msg = document.createElement("INPUT");
/*Line 164 - 'AtomPhoneControl.js' */        this.msg.type = "text";
/*Line 165 - 'AtomPhoneControl.js' */        this.msg.style.width = "100px";
/*Line 166 - 'AtomPhoneControl.js' */        this.msg.style.float = "left";

/*Line 168 - 'AtomPhoneControl.js' */        var element = this.get_element();
/*Line 169 - 'AtomPhoneControl.js' */        element.style.width = "400px";
/*Line 170 - 'AtomPhoneControl.js' */        element.appendChild(this.cs);
/*Line 171 - 'AtomPhoneControl.js' */        element.appendChild(this.num1);
/*Line 172 - 'AtomPhoneControl.js' */        element.appendChild(this.num2);
/*Line 173 - 'AtomPhoneControl.js' */        element.appendChild(this.num3);
/*Line 174 - 'AtomPhoneControl.js' */        element.appendChild(this.ext);
/*Line 175 - 'AtomPhoneControl.js' */        element.appendChild(this.msg);

/*Line 177 - 'AtomPhoneControl.js' */        this.bindEvent(this.cs, "change", "onCountryChange");
/*Line 178 - 'AtomPhoneControl.js' */        this.bindEvent(this.num1, "change", "onDataChange");
/*Line 179 - 'AtomPhoneControl.js' */        this.bindEvent(this.num1, "keyup", "onKeyUp");
/*Line 180 - 'AtomPhoneControl.js' */        this.bindEvent(this.num2, "change", "onDataChange");
/*Line 181 - 'AtomPhoneControl.js' */        this.bindEvent(this.num2, "keyup", "onKeyUp");
/*Line 182 - 'AtomPhoneControl.js' */        this.bindEvent(this.num3, "change", "onDataChange");
/*Line 183 - 'AtomPhoneControl.js' */        this.bindEvent(this.num3, "keyup", "onKeyUp");
/*Line 184 - 'AtomPhoneControl.js' */        this.bindEvent(this.ext, "change", "onDataChange");
/*Line 185 - 'AtomPhoneControl.js' */        this.bindEvent(this.msg, "change", "onDataChange");

/*Line 187 - 'AtomPhoneControl.js' */        var phone = this;

/*Line 189 - 'AtomPhoneControl.js' */        NeuroSpeech.WebAtoms.CachedData.loadItems("/Config/PhoneCountries", function (r) {
/*Line 190 - 'AtomPhoneControl.js' */            phone.setCountries(r);
/*Line 191 - 'AtomPhoneControl.js' */        });


/*Line 194 - 'AtomPhoneControl.js' */        NeuroSpeech.WebAtoms.AtomPhoneControl.callBaseMethod(this, "initialize");
/*Line 195 - 'AtomPhoneControl.js' */    }
/*Line 196 - 'AtomPhoneControl.js' */};

/*Line 198 - 'AtomPhoneControl.js' */NeuroSpeech.WebAtoms.AtomPhoneControl.registerClass("NeuroSpeech.WebAtoms.AtomPhoneControl", NeuroSpeech.WebAtoms.AtomControl);
/*Line 0 - 'AtomRadioButtonList.js' */

/*Line 2 - 'AtomRadioButtonList.js' */NeuroSpeech.WebAtoms.AtomRadioButtonList = function (element) {
/*Line 3 - 'AtomRadioButtonList.js' */    NeuroSpeech.WebAtoms.AtomRadioButtonList.initializeBase(this, [element]);
/*Line 4 - 'AtomRadioButtonList.js' */    this._allowMultipleSelection = false;
/*Line 5 - 'AtomRadioButtonList.js' */};

/*Line 7 - 'AtomRadioButtonList.js' */NeuroSpeech.WebAtoms.AtomRadioButtonList.prototype = {

/*Line 9 - 'AtomRadioButtonList.js' */    updateChildSelections: function () {
/*Line 10 - 'AtomRadioButtonList.js' */        var dataItems = this.get_dataItems();
/*Line 11 - 'AtomRadioButtonList.js' */        var ae = new AtomEnumerator(dataItems);
/*Line 12 - 'AtomRadioButtonList.js' */        var children = this._dataElements;
/*Line 13 - 'AtomRadioButtonList.js' */        while (ae.next()) {
/*Line 14 - 'AtomRadioButtonList.js' */            var dataItem = ae.current();
/*Line 15 - 'AtomRadioButtonList.js' */            var item = children[ae.currentIndex()];
/*Line 16 - 'AtomRadioButtonList.js' */            if (this.isSelected(dataItem)) {
/*Line 17 - 'AtomRadioButtonList.js' */                $(item).attr("checked", "true");
/*Line 18 - 'AtomRadioButtonList.js' */            } else {
/*Line 19 - 'AtomRadioButtonList.js' */                $(item).removeAttr("checked");
/*Line 20 - 'AtomRadioButtonList.js' */            }
/*Line 21 - 'AtomRadioButtonList.js' */        }
/*Line 22 - 'AtomRadioButtonList.js' */    },


/*Line 25 - 'AtomRadioButtonList.js' */    onDataChange: function (event) {
/*Line 26 - 'AtomRadioButtonList.js' */        this._onUIChanged = true;

/*Line 28 - 'AtomRadioButtonList.js' */        var item = event.target;
/*Line 29 - 'AtomRadioButtonList.js' */        var dataItem = item;
/*Line 30 - 'AtomRadioButtonList.js' */        if (this.hasItems())
/*Line 31 - 'AtomRadioButtonList.js' */            dataItem = $(item).data("atom-data-item");
/*Line 32 - 'AtomRadioButtonList.js' */        var checked = $(item).attr("checked");

/*Line 34 - 'AtomRadioButtonList.js' */        AtomBinder.clear(this._selectedItems);

/*Line 36 - 'AtomRadioButtonList.js' */        if (this.isSelected(dataItem)) {
/*Line 37 - 'AtomRadioButtonList.js' */            if (!checked) {
/*Line 38 - 'AtomRadioButtonList.js' */                AtomBinder.removeItem(this._selectedItems, dataItem);
/*Line 39 - 'AtomRadioButtonList.js' */            }
/*Line 40 - 'AtomRadioButtonList.js' */        }
/*Line 41 - 'AtomRadioButtonList.js' */        else {
/*Line 42 - 'AtomRadioButtonList.js' */            if (checked) {
/*Line 43 - 'AtomRadioButtonList.js' */                AtomBinder.addItem(this._selectedItems, dataItem);
/*Line 44 - 'AtomRadioButtonList.js' */            }
/*Line 45 - 'AtomRadioButtonList.js' */        }

/*Line 47 - 'AtomRadioButtonList.js' */        this._onUIChanged = false;

/*Line 49 - 'AtomRadioButtonList.js' */    },

/*Line 51 - 'AtomRadioButtonList.js' */    createChildElement: function (parentElement, data) {
/*Line 52 - 'AtomRadioButtonList.js' */        var span = document.createElement("SPAN");
/*Line 53 - 'AtomRadioButtonList.js' */        var cb = document.createElement("INPUT");
/*Line 54 - 'AtomRadioButtonList.js' */        $(cb).attr("type", "radio");
/*Line 55 - 'AtomRadioButtonList.js' */        $(cb).attr("name", this._groupName);
/*Line 56 - 'AtomRadioButtonList.js' */        var lp = this.get_labelPath();
/*Line 57 - 'AtomRadioButtonList.js' */        var vp = this.get_valuePath();
/*Line 58 - 'AtomRadioButtonList.js' */        l = data;
/*Line 59 - 'AtomRadioButtonList.js' */        v = data;
/*Line 60 - 'AtomRadioButtonList.js' */        if (lp)
/*Line 61 - 'AtomRadioButtonList.js' */            l = data[lp];
/*Line 62 - 'AtomRadioButtonList.js' */        if (vp)
/*Line 63 - 'AtomRadioButtonList.js' */            v = data[vp];
/*Line 64 - 'AtomRadioButtonList.js' */        $(cb).data("atom-data", v);
/*Line 65 - 'AtomRadioButtonList.js' */        $(cb).data("atom-data-item",data);
/*Line 66 - 'AtomRadioButtonList.js' */        $(cb).val(l);
/*Line 67 - 'AtomRadioButtonList.js' */        span.appendChild(cb);
/*Line 68 - 'AtomRadioButtonList.js' */        var txt = document.createTextNode(l);
/*Line 69 - 'AtomRadioButtonList.js' */        span.appendChild(txt);
/*Line 70 - 'AtomRadioButtonList.js' */        parentElement.appendChild(span);
/*Line 71 - 'AtomRadioButtonList.js' */        this.bindEvent(cb, "change", "onDataChange");
/*Line 72 - 'AtomRadioButtonList.js' */        return cb;
/*Line 73 - 'AtomRadioButtonList.js' */    },

/*Line 75 - 'AtomRadioButtonList.js' */    initialize: function () {
/*Line 76 - 'AtomRadioButtonList.js' */        this._groupName = "__g" + AtomUI.getNewIndex();
/*Line 77 - 'AtomRadioButtonList.js' */        NeuroSpeech.WebAtoms.AtomRadioButtonList.callBaseMethod(this, "initialize");
/*Line 78 - 'AtomRadioButtonList.js' */    }
/*Line 79 - 'AtomRadioButtonList.js' */};

/*Line 81 - 'AtomRadioButtonList.js' */NeuroSpeech.WebAtoms.AtomRadioButtonList.registerClass("NeuroSpeech.WebAtoms.AtomRadioButtonList", NeuroSpeech.WebAtoms.AtomCheckBoxList);
/*Line 0 - 'AtomVideoButtonBar.js' */


/*Line 3 - 'AtomVideoButtonBar.js' */NeuroSpeech.WebAtoms.AtomVideoButtonBar = function (element) {
/*Line 4 - 'AtomVideoButtonBar.js' */    NeuroSpeech.WebAtoms.AtomVideoButtonBar.initializeBase(this, [element]);
/*Line 5 - 'AtomVideoButtonBar.js' */    this._allowSelectFirst = false;
/*Line 6 - 'AtomVideoButtonBar.js' */    this._allowMultipleSelection = false;
/*Line 7 - 'AtomVideoButtonBar.js' */};
/*Line 8 - 'AtomVideoButtonBar.js' */NeuroSpeech.WebAtoms.AtomVideoButtonBar.registerClass("NeuroSpeech.WebAtoms.AtomVideoButtonBar", NeuroSpeech.WebAtoms.AtomToggleButtonBar);
/*Line 0 - 'AtomViewStack.js' */


/*Line 3 - 'AtomViewStack.js' */NeuroSpeech.WebAtoms.AtomViewStack = function (element) {
/*Line 4 - 'AtomViewStack.js' */    NeuroSpeech.WebAtoms.AtomViewStack.initializeBase(this, [element]);
/*Line 5 - 'AtomViewStack.js' */    this._source = null;
/*Line 6 - 'AtomViewStack.js' */    this._indexChangedHandler = null;
/*Line 7 - 'AtomViewStack.js' */};

/*Line 9 - 'AtomViewStack.js' */NeuroSpeech.WebAtoms.AtomViewStack.prototype = {

/*Line 11 - 'AtomViewStack.js' */    get_source: function () {
/*Line 12 - 'AtomViewStack.js' */        return this._source;
/*Line 13 - 'AtomViewStack.js' */    },
/*Line 14 - 'AtomViewStack.js' */    set_source: function (src) {
/*Line 15 - 'AtomViewStack.js' */        var old = this._source;
/*Line 16 - 'AtomViewStack.js' */        if (old != null) {
/*Line 17 - 'AtomViewStack.js' */            old.remove_selectionChanged(this._indexChangedHandler);
/*Line 18 - 'AtomViewStack.js' */        }
/*Line 19 - 'AtomViewStack.js' */        this._source = src;
/*Line 20 - 'AtomViewStack.js' */        if (src != null) {
/*Line 21 - 'AtomViewStack.js' */            src.add_selectionChanged(this._indexChangedHandler);
/*Line 22 - 'AtomViewStack.js' */        }
/*Line 23 - 'AtomViewStack.js' */        this.onSourceIndexChanged(src, null);
/*Line 24 - 'AtomViewStack.js' */    },
/*Line 25 - 'AtomViewStack.js' */    onSourceIndexChanged: function (sender, args) {
/*Line 26 - 'AtomViewStack.js' */        if (!this._source)
/*Line 27 - 'AtomViewStack.js' */            return;
/*Line 28 - 'AtomViewStack.js' */        if (this.hasItems() && this._source.hasItems()) {
/*Line 29 - 'AtomViewStack.js' */            AtomBinder.setValue(this, "selectedItem", AtomBinder.getValue(this._source, "selectedItem"));
/*Line 30 - 'AtomViewStack.js' */        } else {
/*Line 31 - 'AtomViewStack.js' */            AtomBinder.setValue(this, "selectedIndex", AtomBinder.getValue(this._source, "selectedIndex"));
/*Line 32 - 'AtomViewStack.js' */        }
/*Line 33 - 'AtomViewStack.js' */    },
/*Line 34 - 'AtomViewStack.js' */    onUpdateUI: function () {
/*Line 35 - 'AtomViewStack.js' */        var element = this.get_element();
/*Line 36 - 'AtomViewStack.js' */        var children = $(element).children();
/*Line 37 - 'AtomViewStack.js' */        var childEn = new AtomEnumerator(children);

/*Line 39 - 'AtomViewStack.js' */        var selectedChild = this.get_selectedChild();

/*Line 41 - 'AtomViewStack.js' */        while (childEn.next()) {
/*Line 42 - 'AtomViewStack.js' */            var item = childEn.current();
/*Line 43 - 'AtomViewStack.js' */            if (item == selectedChild) {

/*Line 45 - 'AtomViewStack.js' */                item.style.visibility = "inherit";

/*Line 47 - 'AtomViewStack.js' */                item.style.width = element.style.width;
/*Line 48 - 'AtomViewStack.js' */                item.style.height = element.style.height;


/*Line 51 - 'AtomViewStack.js' */                if (item.atomControl) {
/*Line 52 - 'AtomViewStack.js' */                    item.atomControl.updateUI();
/*Line 53 - 'AtomViewStack.js' */                }
/*Line 54 - 'AtomViewStack.js' */            } else {

/*Line 56 - 'AtomViewStack.js' */                if (item.style.visibility != "hidden") {
/*Line 57 - 'AtomViewStack.js' */                    item.style.visibility = "hidden";

/*Line 59 - 'AtomViewStack.js' */                    $(item).find("[atom-type=AtomVideoPlayer]").each(function () {
/*Line 60 - 'AtomViewStack.js' */                        var ctrl = this.atomControl;
/*Line 61 - 'AtomViewStack.js' */                        if (ctrl != null && ctrl != undefined) {
/*Line 62 - 'AtomViewStack.js' */                            ctrl.stop();
/*Line 63 - 'AtomViewStack.js' */                        }
/*Line 64 - 'AtomViewStack.js' */                    });
/*Line 65 - 'AtomViewStack.js' */                }
/*Line 66 - 'AtomViewStack.js' */            }
/*Line 67 - 'AtomViewStack.js' */        }
/*Line 68 - 'AtomViewStack.js' */    },
/*Line 69 - 'AtomViewStack.js' */    initialize: function () {
/*Line 70 - 'AtomViewStack.js' */        var element = this.get_element();
/*Line 71 - 'AtomViewStack.js' */        $(element).addClass("atom-view-stack");
/*Line 72 - 'AtomViewStack.js' */        this._indexChangedHandler = Function.createDelegate(this, this.onSourceIndexChanged);
/*Line 73 - 'AtomViewStack.js' */        NeuroSpeech.WebAtoms.AtomViewStack.callBaseMethod(this, "initialize");
/*Line 74 - 'AtomViewStack.js' */        //this.updateUI();
/*Line 75 - 'AtomViewStack.js' */    }
/*Line 76 - 'AtomViewStack.js' */};

/*Line 78 - 'AtomViewStack.js' */NeuroSpeech.WebAtoms.AtomViewStack.registerClass("NeuroSpeech.WebAtoms.AtomViewStack", NeuroSpeech.WebAtoms.AtomItemsControl);
/*Line 0 - 'AtomYesNoControl.js' */

/*Line 2 - 'AtomYesNoControl.js' */NeuroSpeech.WebAtoms.AtomYesNoControl = function (element) {
/*Line 3 - 'AtomYesNoControl.js' */    NeuroSpeech.WebAtoms.AtomYesNoControl.initializeBase(this, [element]);
/*Line 4 - 'AtomYesNoControl.js' */    this._allowSelectFirst = false;
/*Line 5 - 'AtomYesNoControl.js' */};

/*Line 7 - 'AtomYesNoControl.js' */NeuroSpeech.WebAtoms.AtomYesNoControl.prototype = {
/*Line 8 - 'AtomYesNoControl.js' */    initialize: function () {
/*Line 9 - 'AtomYesNoControl.js' */        this._labelPath = "ConfigName";
/*Line 10 - 'AtomYesNoControl.js' */        this._valuePath = "ConfigValue";
/*Line 11 - 'AtomYesNoControl.js' */        this._template = "<li atom-text='[data.ConfigName]'></li>";
/*Line 12 - 'AtomYesNoControl.js' */        this._element.style.height = "26px";
/*Line 13 - 'AtomYesNoControl.js' */        NeuroSpeech.WebAtoms.AtomYesNoControl.callBaseMethod(this, "initialize");
/*Line 14 - 'AtomYesNoControl.js' */        this.loadProperty("items", "/Config/YesNo");
/*Line 15 - 'AtomYesNoControl.js' */    }
/*Line 16 - 'AtomYesNoControl.js' */};

/*Line 18 - 'AtomYesNoControl.js' */NeuroSpeech.WebAtoms.AtomYesNoControl.registerClass("NeuroSpeech.WebAtoms.AtomYesNoControl", NeuroSpeech.WebAtoms.AtomToggleButtonBar);
/*Line 0 - 'AtomYesNoCustom.js' */

/*Line 2 - 'AtomYesNoCustom.js' */NeuroSpeech.WebAtoms.AtomYesNoCustom = function (element) {
/*Line 3 - 'AtomYesNoCustom.js' */    NeuroSpeech.WebAtoms.AtomYesNoCustom.initializeBase(this, [element]);
/*Line 4 - 'AtomYesNoCustom.js' */};

/*Line 6 - 'AtomYesNoCustom.js' */NeuroSpeech.WebAtoms.AtomYesNoCustom.prototype = {

/*Line 8 - 'AtomYesNoCustom.js' */    get_value: function () {
/*Line 9 - 'AtomYesNoCustom.js' */        return this._value;
/*Line 10 - 'AtomYesNoCustom.js' */    },
/*Line 11 - 'AtomYesNoCustom.js' */    set_value: function (v) {
/*Line 12 - 'AtomYesNoCustom.js' */        this._value = v;
/*Line 13 - 'AtomYesNoCustom.js' */        if (this._onUIChanged)
/*Line 14 - 'AtomYesNoCustom.js' */            return;

/*Line 16 - 'AtomYesNoCustom.js' */        if (this._value) {
/*Line 17 - 'AtomYesNoCustom.js' */            AtomBinder.setValue(this._yesNo, "value", true);
/*Line 18 - 'AtomYesNoCustom.js' */            $(this._input).val(this._value);
/*Line 19 - 'AtomYesNoCustom.js' */        }else {
/*Line 20 - 'AtomYesNoCustom.js' */            AtomBinder.setValue(this._yesNo, "value", false);
/*Line 21 - 'AtomYesNoCustom.js' */        }
/*Line 22 - 'AtomYesNoCustom.js' */    },
/*Line 23 - 'AtomYesNoCustom.js' */    onSelectionChanged: function () {
/*Line 24 - 'AtomYesNoCustom.js' */        var val = this._yesNo.get_value();
/*Line 25 - 'AtomYesNoCustom.js' */        if (val) {
/*Line 26 - 'AtomYesNoCustom.js' */            $(this._input).removeAttr("disabled");
/*Line 27 - 'AtomYesNoCustom.js' */            $(this._input).focus();
/*Line 28 - 'AtomYesNoCustom.js' */        }else {
/*Line 29 - 'AtomYesNoCustom.js' */            $(this._input).attr("disabled","disabled");
/*Line 30 - 'AtomYesNoCustom.js' */        }
/*Line 31 - 'AtomYesNoCustom.js' */    },
/*Line 32 - 'AtomYesNoCustom.js' */    onValueChange: function () {
/*Line 33 - 'AtomYesNoCustom.js' */        this._onUIChanged = true;
/*Line 34 - 'AtomYesNoCustom.js' */        var val = $(this._input).val();
/*Line 35 - 'AtomYesNoCustom.js' */        AtomBinder.setValue(this, "value", val);
/*Line 36 - 'AtomYesNoCustom.js' */        this._onUIChanged = false;
/*Line 37 - 'AtomYesNoCustom.js' */    },

/*Line 39 - 'AtomYesNoCustom.js' */    initialize: function () {
        
/*Line 41 - 'AtomYesNoCustom.js' */        var element = this._element;

/*Line 43 - 'AtomYesNoCustom.js' */        var ul = document.createElement("UL");
/*Line 44 - 'AtomYesNoCustom.js' */        $(ul).attr("atom-type", "AtomYesNoControl");
/*Line 45 - 'AtomYesNoCustom.js' */        var t = AtomUI.createControl(ul);
/*Line 46 - 'AtomYesNoCustom.js' */        this._yesNo = t;

/*Line 48 - 'AtomYesNoCustom.js' */        var input = document.createElement("INPUT");
/*Line 49 - 'AtomYesNoCustom.js' */        this._input = input;
/*Line 50 - 'AtomYesNoCustom.js' */        $(input).attr("disabled", "disabled");
/*Line 51 - 'AtomYesNoCustom.js' */        $(input).attr("type", "text");

/*Line 53 - 'AtomYesNoCustom.js' */        element.appendChild(ul);
/*Line 54 - 'AtomYesNoCustom.js' */        element.appendChild(input);

/*Line 56 - 'AtomYesNoCustom.js' */        this.bindEvent(input, "change", "onValueChange");

/*Line 58 - 'AtomYesNoCustom.js' */        //t.initialize();

/*Line 60 - 'AtomYesNoCustom.js' */        NeuroSpeech.WebAtoms.AtomYesNoCustom.callBaseMethod(this, "initialize");

/*Line 62 - 'AtomYesNoCustom.js' */        this.bindEvent(t, "selectionChanged", "onSelectionChanged");
/*Line 63 - 'AtomYesNoCustom.js' */    }
/*Line 64 - 'AtomYesNoCustom.js' */};

/*Line 66 - 'AtomYesNoCustom.js' */NeuroSpeech.WebAtoms.AtomYesNoCustom.registerClass("NeuroSpeech.WebAtoms.AtomYesNoCustom", NeuroSpeech.WebAtoms.AtomControl);
/*Line 0 - 'AtomApplication.js' */

/*Line 2 - 'AtomApplication.js' */NeuroSpeech.WebAtoms.AtomApplication = function (element) {
/*Line 3 - 'AtomApplication.js' */    NeuroSpeech.WebAtoms.AtomApplication.initializeBase(this, [element]);

/*Line 5 - 'AtomApplication.js' */    this._scope = { __application: this };
/*Line 6 - 'AtomApplication.js' */};

/*Line 8 - 'AtomApplication.js' */NeuroSpeech.WebAtoms.AtomApplication.prototype = {

/*Line 10 - 'AtomApplication.js' */    updateUI: function () {
/*Line 11 - 'AtomApplication.js' */        var element = this.get_element();
/*Line 12 - 'AtomApplication.js' */        var ep = element.parentNode;
/*Line 13 - 'AtomApplication.js' */        var pw = $(ep).outerWidth();
/*Line 14 - 'AtomApplication.js' */        var left = (pw - $(element).width()) / 2;
/*Line 15 - 'AtomApplication.js' */        element.style.left = left + "px";
/*Line 16 - 'AtomApplication.js' */        element.style.position = "relative";

/*Line 18 - 'AtomApplication.js' */        NeuroSpeech.WebAtoms.AtomApplication.callBaseMethod(this, "updateUI");

/*Line 20 - 'AtomApplication.js' */    },

/*Line 22 - 'AtomApplication.js' */    invokeUpdateUI: function () {
/*Line 23 - 'AtomApplication.js' */        var container = this;
/*Line 24 - 'AtomApplication.js' */        var f = this.updateUI;
/*Line 25 - 'AtomApplication.js' */        window.setTimeout(function () {
/*Line 26 - 'AtomApplication.js' */            return f.apply(container, arguments);
/*Line 27 - 'AtomApplication.js' */        }, 5);
/*Line 28 - 'AtomApplication.js' */    },

/*Line 30 - 'AtomApplication.js' */    initialize: function () {
/*Line 31 - 'AtomApplication.js' */        this.bindEvent(window, "resize", "invokeUpdateUI");

/*Line 33 - 'AtomApplication.js' */        NeuroSpeech.WebAtoms.AtomApplication.callBaseMethod(this, "initialize");
/*Line 34 - 'AtomApplication.js' */    }
/*Line 35 - 'AtomApplication.js' */};

/*Line 37 - 'AtomApplication.js' */NeuroSpeech.WebAtoms.AtomApplication.registerClass("NeuroSpeech.WebAtoms.AtomApplication", NeuroSpeech.WebAtoms.AtomDockPanel);
/*Line 0 - 'AtomValidationRule.js' */
/*Line 0 - 'AtomForm.js' */



/*Line 4 - 'AtomForm.js' */NeuroSpeech.WebAtoms.AtomForm = function (element) {
/*Line 5 - 'AtomForm.js' */    NeuroSpeech.WebAtoms.AtomForm.initializeBase(this, [element]);
/*Line 6 - 'AtomForm.js' */    this._url = null;
/*Line 7 - 'AtomForm.js' */    this._appendUrl = null;
/*Line 8 - 'AtomForm.js' */    this._successMessage = null;
/*Line 9 - 'AtomForm.js' */    this._success = null;
/*Line 10 - 'AtomForm.js' */    this._submit = null;
/*Line 11 - 'AtomForm.js' */    this._error = null;
/*Line 12 - 'AtomForm.js' */    this._mergeResult = true;
/*Line 13 - 'AtomForm.js' */    this._next = null;
/*Line 14 - 'AtomForm.js' */}

/*Line 16 - 'AtomForm.js' */NeuroSpeech.WebAtoms.AtomForm.prototype = {

/*Line 18 - 'AtomForm.js' */    updateUI: function () {
/*Line 19 - 'AtomForm.js' */        NeuroSpeech.WebAtoms.AtomForm.callBaseMethod(this, "updateUI");
/*Line 20 - 'AtomForm.js' */        this.resetLabelWidth();
/*Line 21 - 'AtomForm.js' */    },

/*Line 23 - 'AtomForm.js' */    resetLabelWidth: function () {
/*Line 24 - 'AtomForm.js' */        var labelWidth = 0;
/*Line 25 - 'AtomForm.js' */        var element = this.get_element();
/*Line 26 - 'AtomForm.js' */        var ae = new AtomEnumerator($(element).find(":not(template)"));
/*Line 27 - 'AtomForm.js' */        while (ae.next()) {
/*Line 28 - 'AtomForm.js' */            var field = ae.current().atomControl;
/*Line 29 - 'AtomForm.js' */            if (field && field instanceof NeuroSpeech.WebAtoms.AtomFormField) {
/*Line 30 - 'AtomForm.js' */                var lw = field.get_labelWidth();
/*Line 31 - 'AtomForm.js' */                if (lw > labelWidth)
/*Line 32 - 'AtomForm.js' */                    labelWidth = lw;
/*Line 33 - 'AtomForm.js' */            }
/*Line 34 - 'AtomForm.js' */        }

/*Line 36 - 'AtomForm.js' */        ae.reset();

/*Line 38 - 'AtomForm.js' */        while (ae.next()) {
/*Line 39 - 'AtomForm.js' */            var field = ae.current().atomControl;
/*Line 40 - 'AtomForm.js' */            if (field && field instanceof NeuroSpeech.WebAtoms.AtomFormField) {
/*Line 41 - 'AtomForm.js' */                field.set_labelWidth(labelWidth);
/*Line 42 - 'AtomForm.js' */            }
/*Line 43 - 'AtomForm.js' */        }

/*Line 45 - 'AtomForm.js' */        return;
/*Line 46 - 'AtomForm.js' */    },

/*Line 48 - 'AtomForm.js' */    get_result: function () {
/*Line 49 - 'AtomForm.js' */        return this._result;
/*Line 50 - 'AtomForm.js' */    },
/*Line 51 - 'AtomForm.js' */    set_result: function (r) {
/*Line 52 - 'AtomForm.js' */        this._result = r;
/*Line 53 - 'AtomForm.js' */    },
/*Line 54 - 'AtomForm.js' */    get_next: function () {
/*Line 55 - 'AtomForm.js' */        return this._next;
/*Line 56 - 'AtomForm.js' */    },
/*Line 57 - 'AtomForm.js' */    set_next: function (n) {
/*Line 58 - 'AtomForm.js' */        this._next = n;
/*Line 59 - 'AtomForm.js' */    },

/*Line 61 - 'AtomForm.js' */    get_mergeResult: function () {
/*Line 62 - 'AtomForm.js' */        return this._mergeResult;
/*Line 63 - 'AtomForm.js' */    },
/*Line 64 - 'AtomForm.js' */    set_mergeResult: function (r) {
/*Line 65 - 'AtomForm.js' */        this._mergeResult = r;
/*Line 66 - 'AtomForm.js' */    },

/*Line 68 - 'AtomForm.js' */    get_appendUrl: function () {
/*Line 69 - 'AtomForm.js' */        return this._appendUrl;
/*Line 70 - 'AtomForm.js' */    },
/*Line 71 - 'AtomForm.js' */    set_appendUrl: function (url) {
/*Line 72 - 'AtomForm.js' */        this._appendUrl = url;
/*Line 73 - 'AtomForm.js' */    },
/*Line 74 - 'AtomForm.js' */    get_loadUrl: function () {
/*Line 75 - 'AtomForm.js' */        return this._loadUrl;
/*Line 76 - 'AtomForm.js' */    },
/*Line 77 - 'AtomForm.js' */    set_loadUrl: function (url) {
/*Line 78 - 'AtomForm.js' */        this._loadUrl = url;
/*Line 79 - 'AtomForm.js' */    },
/*Line 80 - 'AtomForm.js' */    get_postUrl: function () {
/*Line 81 - 'AtomForm.js' */        return this._postUrl;
/*Line 82 - 'AtomForm.js' */    },
/*Line 83 - 'AtomForm.js' */    set_postUrl: function (url) {
/*Line 84 - 'AtomForm.js' */        this._postUrl = url;
/*Line 85 - 'AtomForm.js' */    },
/*Line 86 - 'AtomForm.js' */    get_successMessage: function () {
/*Line 87 - 'AtomForm.js' */        return this._successMessage;
/*Line 88 - 'AtomForm.js' */    },
/*Line 89 - 'AtomForm.js' */    set_successMessage: function (msg) {
/*Line 90 - 'AtomForm.js' */        this._successMessage = msg;
/*Line 91 - 'AtomForm.js' */    },

/*Line 93 - 'AtomForm.js' */    onSubmit: function () {


/*Line 96 - 'AtomForm.js' */        // for all nested children...
/*Line 97 - 'AtomForm.js' */        if (!this.isValid()) {
/*Line 98 - 'AtomForm.js' */            //alert("Invalid Form");
/*Line 99 - 'AtomForm.js' */            return;
/*Line 100 - 'AtomForm.js' */        }


/*Line 103 - 'AtomForm.js' */        var element = this.get_element();
/*Line 104 - 'AtomForm.js' */        var data = {};
/*Line 105 - 'AtomForm.js' */        if (this.get_data() == null) {
/*Line 106 - 'AtomForm.js' */            var ae = new AtomEnumerator($(element).find("input,textarea"));
/*Line 107 - 'AtomForm.js' */            var item;
/*Line 108 - 'AtomForm.js' */            var key;
/*Line 109 - 'AtomForm.js' */            while (ae.next()) {
/*Line 110 - 'AtomForm.js' */                item = ae.current();
/*Line 111 - 'AtomForm.js' */                key = item.id;
/*Line 112 - 'AtomForm.js' */                if (key == undefined || key == null || key == "") {
/*Line 113 - 'AtomForm.js' */                    key = item.name ? item.name : item.type;
/*Line 114 - 'AtomForm.js' */                }
/*Line 115 - 'AtomForm.js' */                data[key] = item.value;
/*Line 116 - 'AtomForm.js' */            }
/*Line 117 - 'AtomForm.js' */        } else {
/*Line 118 - 'AtomForm.js' */            data = this.get_data();
/*Line 119 - 'AtomForm.js' */        }
/*Line 120 - 'AtomForm.js' */        var self = this;

/*Line 122 - 'AtomForm.js' */        var url = this.getUrl(this._postUrl);

/*Line 124 - 'AtomForm.js' */        data = AtomBinder.getClone(data);

/*Line 126 - 'AtomForm.js' */        this.invokeAjax(url, "POST", data, self._success);

/*Line 128 - 'AtomForm.js' */    },

/*Line 130 - 'AtomForm.js' */    onSuccess: function (result) {

/*Line 132 - 'AtomForm.js' */        AtomBinder.setValue(this, "result", result);

/*Line 134 - 'AtomForm.js' */        if (this._mergeResult) {
/*Line 135 - 'AtomForm.js' */            // merge...
/*Line 136 - 'AtomForm.js' */            // AtomBinder.setValue(this, "data", result);
/*Line 137 - 'AtomForm.js' */            var data = this.get_data();
/*Line 138 - 'AtomForm.js' */            for (var index in result) {
/*Line 139 - 'AtomForm.js' */                AtomBinder.setValue(data, index, result[index]);
/*Line 140 - 'AtomForm.js' */            }
/*Line 141 - 'AtomForm.js' */        }

/*Line 143 - 'AtomForm.js' */        if (this._successMessage) {
/*Line 144 - 'AtomForm.js' */            alert(this._successMessage);
/*Line 145 - 'AtomForm.js' */        }

/*Line 147 - 'AtomForm.js' */        this.invokeAction(this._next);

/*Line 149 - 'AtomForm.js' */    },

/*Line 151 - 'AtomForm.js' */    initialize: function () {
/*Line 152 - 'AtomForm.js' */        NeuroSpeech.WebAtoms.AtomForm.callBaseMethod(this, "initialize");
/*Line 153 - 'AtomForm.js' */        this._success = Function.createDelegate(this, this.onSuccess);
/*Line 154 - 'AtomForm.js' */        this._submit = Function.createDelegate(this, this.onSubmit);
/*Line 155 - 'AtomForm.js' */        var element = this.get_element();
/*Line 156 - 'AtomForm.js' */        $(element).find("input[type=submit]").bind("click", null, this._submit);
/*Line 157 - 'AtomForm.js' */    }
/*Line 158 - 'AtomForm.js' */};

/*Line 160 - 'AtomForm.js' */NeuroSpeech.WebAtoms.AtomForm.registerClass("NeuroSpeech.WebAtoms.AtomForm", NeuroSpeech.WebAtoms.AtomFormLayout);

/*Line 0 - 'AtomFormField.js' */


/*Line 3 - 'AtomFormField.js' */NeuroSpeech.WebAtoms.Label = {

/*Line 5 - 'AtomFormField.js' */    getSizeDiv: function () {
/*Line 6 - 'AtomFormField.js' */        var div = null;
/*Line 7 - 'AtomFormField.js' */        if (this.div) {
/*Line 8 - 'AtomFormField.js' */            div = this.div;
/*Line 9 - 'AtomFormField.js' */        } else {
/*Line 10 - 'AtomFormField.js' */            div = document.createElement("DIV");
/*Line 11 - 'AtomFormField.js' */            div.style.position = "absolute";
/*Line 12 - 'AtomFormField.js' */            div.style.width = "800px";
/*Line 13 - 'AtomFormField.js' */            div.style.height = "500px";
/*Line 14 - 'AtomFormField.js' */            div.style.left = "-1000px";
/*Line 15 - 'AtomFormField.js' */            document.body.appendChild(div);
/*Line 16 - 'AtomFormField.js' */            this.div = div;
/*Line 17 - 'AtomFormField.js' */        }

/*Line 19 - 'AtomFormField.js' */        return div;
/*Line 20 - 'AtomFormField.js' */    },

/*Line 22 - 'AtomFormField.js' */    getWidth: function (text) {
/*Line 23 - 'AtomFormField.js' */        var label = null;
/*Line 24 - 'AtomFormField.js' */        if (this.label) {
/*Line 25 - 'AtomFormField.js' */            label = this.label;
/*Line 26 - 'AtomFormField.js' */        } else {
/*Line 27 - 'AtomFormField.js' */            label = document.createElement("LABEL");
/*Line 28 - 'AtomFormField.js' */            var div = this.getSizeDiv();
/*Line 29 - 'AtomFormField.js' */            div.appendChild(label);
/*Line 30 - 'AtomFormField.js' */            this.label = label;
/*Line 31 - 'AtomFormField.js' */        }

/*Line 33 - 'AtomFormField.js' */        $(label).text(text);

/*Line 35 - 'AtomFormField.js' */        return label.offsetWidth;

/*Line 37 - 'AtomFormField.js' */    }
/*Line 38 - 'AtomFormField.js' */};

/*Line 40 - 'AtomFormField.js' */NeuroSpeech.WebAtoms.AtomFormField = function (element) {

/*Line 42 - 'AtomFormField.js' */    if (element == undefined || element == null) {
/*Line 43 - 'AtomFormField.js' */        element = document.createElement("DIV");
/*Line 44 - 'AtomFormField.js' */    }

/*Line 46 - 'AtomFormField.js' */    NeuroSpeech.WebAtoms.AtomFormField.initializeBase(this, [element]);
/*Line 47 - 'AtomFormField.js' */    this._label = null;
/*Line 48 - 'AtomFormField.js' */    this._labelWidth = "75px";
/*Line 49 - 'AtomFormField.js' */    this._required = false;
/*Line 50 - 'AtomFormField.js' */    this._description = null;
/*Line 51 - 'AtomFormField.js' */    this._title = null;
/*Line 52 - 'AtomFormField.js' */    this._error = "";
/*Line 53 - 'AtomFormField.js' */    this._container = {};
/*Line 54 - 'AtomFormField.js' */    this._resizeOnChildResized = true;
/*Line 55 - 'AtomFormField.js' */};

/*Line 57 - 'AtomFormField.js' */NeuroSpeech.WebAtoms.AtomFormField.prototype = {

/*Line 59 - 'AtomFormField.js' */    setItem: function (type, dock, content, elementType) {
/*Line 60 - 'AtomFormField.js' */        var child = null;
/*Line 61 - 'AtomFormField.js' */        var e;
/*Line 62 - 'AtomFormField.js' */        if (!this._container.hasOwnProperty(type)) {
/*Line 63 - 'AtomFormField.js' */            if (elementType == undefined || elementType == null)
/*Line 64 - 'AtomFormField.js' */                elementType = "DIV";
/*Line 65 - 'AtomFormField.js' */            child = document.createElement(elementType);
/*Line 66 - 'AtomFormField.js' */            this._container[type] = child;
/*Line 67 - 'AtomFormField.js' */            e = this.get_element();
/*Line 68 - 'AtomFormField.js' */            $(e).append(child);
/*Line 69 - 'AtomFormField.js' */        } else {
/*Line 70 - 'AtomFormField.js' */            child = this._container[type];
/*Line 71 - 'AtomFormField.js' */        }
/*Line 72 - 'AtomFormField.js' */        $(child).attr("atom-dock", dock);
/*Line 73 - 'AtomFormField.js' */        $(child).text(content);
/*Line 74 - 'AtomFormField.js' */        if (type == "error") {
/*Line 75 - 'AtomFormField.js' */            if (content) {
/*Line 76 - 'AtomFormField.js' */                child.style.display = "block";
/*Line 77 - 'AtomFormField.js' */            } else {
/*Line 78 - 'AtomFormField.js' */                child.style.display = "none";
/*Line 79 - 'AtomFormField.js' */            }
/*Line 80 - 'AtomFormField.js' */        }
/*Line 81 - 'AtomFormField.js' */        //if(this._created)
/*Line 82 - 'AtomFormField.js' */        this.updateUI();
/*Line 83 - 'AtomFormField.js' */        return child;
/*Line 84 - 'AtomFormField.js' */    },

/*Line 86 - 'AtomFormField.js' */    updateLabelWidth: function (width) {
/*Line 87 - 'AtomFormField.js' */        // get to parent...
/*Line 88 - 'AtomFormField.js' */        var form = this.getForm(this.get_element());
/*Line 89 - 'AtomFormField.js' */        form.resetLabelWidth();
/*Line 90 - 'AtomFormField.js' */    },

/*Line 92 - 'AtomFormField.js' */    getForm: function (element) {
/*Line 93 - 'AtomFormField.js' */        if (element.atomControl && element.atomControl instanceof NeuroSpeech.WebAtoms.AtomForm) {
/*Line 94 - 'AtomFormField.js' */            return element.atomControl;
/*Line 95 - 'AtomFormField.js' */        }
/*Line 96 - 'AtomFormField.js' */        var p = element.parentNode;
/*Line 97 - 'AtomFormField.js' */        if (p == document || p == window)
/*Line 98 - 'AtomFormField.js' */            return null;
/*Line 99 - 'AtomFormField.js' */        return this.getForm(p);
/*Line 100 - 'AtomFormField.js' */    },

/*Line 102 - 'AtomFormField.js' */    get_error: function () {
/*Line 103 - 'AtomFormField.js' */        return this._error;
/*Line 104 - 'AtomFormField.js' */    },
/*Line 105 - 'AtomFormField.js' */    set_error: function (e) {
/*Line 106 - 'AtomFormField.js' */        this._error = e;
/*Line 107 - 'AtomFormField.js' */        this.setItem("error", "Right", e);
/*Line 108 - 'AtomFormField.js' */    },

/*Line 110 - 'AtomFormField.js' */    get_labelWidth: function () {
/*Line 111 - 'AtomFormField.js' */        return NeuroSpeech.WebAtoms.Label.getWidth(this.get_label());
/*Line 112 - 'AtomFormField.js' */        ///return $(this._container.label).width();
/*Line 113 - 'AtomFormField.js' */    },
/*Line 114 - 'AtomFormField.js' */    set_labelWidth: function (lw) {
/*Line 115 - 'AtomFormField.js' */        var l = this._container.label;
/*Line 116 - 'AtomFormField.js' */        $(l).width(lw);
/*Line 117 - 'AtomFormField.js' */        var lwn = ($(l).width() + 8) + "px";
/*Line 118 - 'AtomFormField.js' */        if (this._container.description) {
/*Line 119 - 'AtomFormField.js' */            this._container.description.style.marginLeft = lwn;
/*Line 120 - 'AtomFormField.js' */        }
/*Line 121 - 'AtomFormField.js' */        if (this._container.title) {
/*Line 122 - 'AtomFormField.js' */            this._container.title.style.marginLeft = lwn;
/*Line 123 - 'AtomFormField.js' */        }
/*Line 124 - 'AtomFormField.js' */        this.updateUI();
/*Line 125 - 'AtomFormField.js' */    },

/*Line 127 - 'AtomFormField.js' */    get_label: function () {
/*Line 128 - 'AtomFormField.js' */        return this._label;
/*Line 129 - 'AtomFormField.js' */    },
/*Line 130 - 'AtomFormField.js' */    set_label: function (l) {
/*Line 131 - 'AtomFormField.js' */        this._label = l;
/*Line 132 - 'AtomFormField.js' */        this.setItem("label", "Left", l);
/*Line 133 - 'AtomFormField.js' */    },

/*Line 135 - 'AtomFormField.js' */    get_required: function () {
/*Line 136 - 'AtomFormField.js' */        return this._required;
/*Line 137 - 'AtomFormField.js' */    },
/*Line 138 - 'AtomFormField.js' */    set_required: function (r) {
/*Line 139 - 'AtomFormField.js' */        this._required = r;
/*Line 140 - 'AtomFormField.js' */        this.setItem("required", "Left", r ? "*" : "");
/*Line 141 - 'AtomFormField.js' */    },

/*Line 143 - 'AtomFormField.js' */    get_field: function () {
/*Line 144 - 'AtomFormField.js' */        return this._field;
/*Line 145 - 'AtomFormField.js' */    },
/*Line 146 - 'AtomFormField.js' */    set_field: function (f) {
/*Line 147 - 'AtomFormField.js' */        this._field = f;
/*Line 148 - 'AtomFormField.js' */    },

/*Line 150 - 'AtomFormField.js' */    get_regex: function () {
/*Line 151 - 'AtomFormField.js' */        return this._regex;
/*Line 152 - 'AtomFormField.js' */    },
/*Line 153 - 'AtomFormField.js' */    set_regex: function (r) {
/*Line 154 - 'AtomFormField.js' */        this._regex = r;
/*Line 155 - 'AtomFormField.js' */    },

/*Line 157 - 'AtomFormField.js' */    get_description: function () {
/*Line 158 - 'AtomFormField.js' */        return this._description;
/*Line 159 - 'AtomFormField.js' */    },
/*Line 160 - 'AtomFormField.js' */    set_description: function (d) {
/*Line 161 - 'AtomFormField.js' */        this._description = d;
/*Line 162 - 'AtomFormField.js' */        this.setItem("description", "Bottom", d);
/*Line 163 - 'AtomFormField.js' */    },

/*Line 165 - 'AtomFormField.js' */    get_dataType: function () {
/*Line 166 - 'AtomFormField.js' */        return this._dataType;
/*Line 167 - 'AtomFormField.js' */    },
/*Line 168 - 'AtomFormField.js' */    set_dataType: function (v) {
/*Line 169 - 'AtomFormField.js' */        this._dataType = v;
/*Line 170 - 'AtomFormField.js' */    },

/*Line 172 - 'AtomFormField.js' */    get_title: function () {
/*Line 173 - 'AtomFormField.js' */        return this._title;
/*Line 174 - 'AtomFormField.js' */    },
/*Line 175 - 'AtomFormField.js' */    set_title: function (t) {
/*Line 176 - 'AtomFormField.js' */        this._title = t;
/*Line 177 - 'AtomFormField.js' */        this.setItem("title", "Top", t);
/*Line 178 - 'AtomFormField.js' */    },

/*Line 180 - 'AtomFormField.js' */    setChild: function (c) {
/*Line 181 - 'AtomFormField.js' */        var e = this.get_element();
/*Line 182 - 'AtomFormField.js' */        $(c).attr("atom-dock", "Fill");
/*Line 183 - 'AtomFormField.js' */        //if (c.parentNode == null) {
/*Line 184 - 'AtomFormField.js' */        $(e).append(c);
/*Line 185 - 'AtomFormField.js' */        //}

/*Line 187 - 'AtomFormField.js' */        this.copyAttribute(c, e, "label");
/*Line 188 - 'AtomFormField.js' */        this.copyAttribute(c, e, "description");
/*Line 189 - 'AtomFormField.js' */        this.copyAttribute(c, e, "title");
/*Line 190 - 'AtomFormField.js' */        this.copyAttribute(c, e, "required");
/*Line 191 - 'AtomFormField.js' */        this.copyAttribute(c, e, "field");
/*Line 192 - 'AtomFormField.js' */        this.copyAttribute(c, e, "regex");
/*Line 193 - 'AtomFormField.js' */        this.copyAttribute(c, e, "data-type");
/*Line 194 - 'AtomFormField.js' */        if (!($(c).attr("id"))) {
/*Line 195 - 'AtomFormField.js' */            c.id = "__id_" + AtomUI.getNewIndex();
/*Line 196 - 'AtomFormField.js' */        }
/*Line 197 - 'AtomFormField.js' */        this.controlElementID = c.id;

/*Line 199 - 'AtomFormField.js' */        //$(c).bind("blur", null, AtomUI.createDelegate(this, "validate"));
/*Line 200 - 'AtomFormField.js' */        this.bindEvent(c, "blur", "validate");

/*Line 202 - 'AtomFormField.js' */        this.editor = c;

/*Line 204 - 'AtomFormField.js' */    },

/*Line 206 - 'AtomFormField.js' */    validate: function () {
/*Line 207 - 'AtomFormField.js' */        if (!this.editor)
/*Line 208 - 'AtomFormField.js' */            return;
/*Line 209 - 'AtomFormField.js' */        var data = this.get_data();
/*Line 210 - 'AtomFormField.js' */        if (!data)
/*Line 211 - 'AtomFormField.js' */            return;
/*Line 212 - 'AtomFormField.js' */        var value = null;
/*Line 213 - 'AtomFormField.js' */        var field = this._field;
/*Line 214 - 'AtomFormField.js' */        if (field) {
/*Line 215 - 'AtomFormField.js' */            value = data[this._field];
/*Line 216 - 'AtomFormField.js' */        }
/*Line 217 - 'AtomFormField.js' */        else {
/*Line 218 - 'AtomFormField.js' */            // get editor's selected value...
/*Line 219 - 'AtomFormField.js' */            if (this.editor.atomControl) {
/*Line 220 - 'AtomFormField.js' */                value = AtomBinder.getValue(this.editor.atomControl, "value");
/*Line 221 - 'AtomFormField.js' */            } else {
/*Line 222 - 'AtomFormField.js' */                value = $(this.editor).val();
/*Line 223 - 'AtomFormField.js' */            }
/*Line 224 - 'AtomFormField.js' */        }
/*Line 225 - 'AtomFormField.js' */        if (this._required && !value) {
/*Line 226 - 'AtomFormField.js' */            // error...
/*Line 227 - 'AtomFormField.js' */            if (field) {
/*Line 228 - 'AtomFormField.js' */                AtomBinder.setError(data, field, "Required");
/*Line 229 - 'AtomFormField.js' */            } else {
/*Line 230 - 'AtomFormField.js' */                this.set_error("Required");
/*Line 231 - 'AtomFormField.js' */            }
/*Line 232 - 'AtomFormField.js' */            return;
/*Line 233 - 'AtomFormField.js' */        }

/*Line 235 - 'AtomFormField.js' */        var re = this._regex;
/*Line 236 - 'AtomFormField.js' */        if (!re) {
/*Line 237 - 'AtomFormField.js' */            if (this._dataType) {
/*Line 238 - 'AtomFormField.js' */                switch (this._dataType) {
/*Line 239 - 'AtomFormField.js' */                    case "email":
/*Line 240 - 'AtomFormField.js' */                        re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
/*Line 241 - 'AtomFormField.js' */                        break;
/*Line 242 - 'AtomFormField.js' */                }
/*Line 243 - 'AtomFormField.js' */            }
/*Line 244 - 'AtomFormField.js' */        } else {
/*Line 245 - 'AtomFormField.js' */            re = eval("(" + re + ")");
/*Line 246 - 'AtomFormField.js' */        }

/*Line 248 - 'AtomFormField.js' */        if (re) {
/*Line 249 - 'AtomFormField.js' */            //var re = eval("(" + this._regex + ")");
/*Line 250 - 'AtomFormField.js' */            if (!re.test(value)) {
/*Line 251 - 'AtomFormField.js' */                if (field) {
/*Line 252 - 'AtomFormField.js' */                    AtomBinder.setError(data, field, "Invalid");
/*Line 253 - 'AtomFormField.js' */                } else {
/*Line 254 - 'AtomFormField.js' */                    this.set_error("Invalid");
/*Line 255 - 'AtomFormField.js' */                }
/*Line 256 - 'AtomFormField.js' */                return;
/*Line 257 - 'AtomFormField.js' */            }
/*Line 258 - 'AtomFormField.js' */        }
/*Line 259 - 'AtomFormField.js' */        if (field) {
/*Line 260 - 'AtomFormField.js' */            AtomBinder.setError(data, field, "");
/*Line 261 - 'AtomFormField.js' */        } else {
/*Line 262 - 'AtomFormField.js' */            this.set_error("");
/*Line 263 - 'AtomFormField.js' */        }
/*Line 264 - 'AtomFormField.js' */    },

/*Line 266 - 'AtomFormField.js' */    copyAttribute: function (from, e, name) {
/*Line 267 - 'AtomFormField.js' */        var at = $(from).attr("atom-" + name);
/*Line 268 - 'AtomFormField.js' */        if (at == undefined || at == null)
/*Line 269 - 'AtomFormField.js' */            return;
/*Line 270 - 'AtomFormField.js' */        $(e).attr("atom-" + name, at);
/*Line 271 - 'AtomFormField.js' */    },

/*Line 273 - 'AtomFormField.js' */    //    onCreationComplete: function () {

/*Line 275 - 'AtomFormField.js' */    //        NeuroSpeech.WebAtoms.AtomFormField.callBaseMethod(this, "onCreationComplete");
/*Line 276 - 'AtomFormField.js' */    //    },

/*Line 278 - 'AtomFormField.js' */    initialize: function () {
/*Line 279 - 'AtomFormField.js' */        var element = this.get_element();

/*Line 281 - 'AtomFormField.js' */        // create label
/*Line 282 - 'AtomFormField.js' */        var l = this.setItem("label", "Left", "", "LABEL");
/*Line 283 - 'AtomFormField.js' */        $(l).addClass("atom-form-label");
/*Line 284 - 'AtomFormField.js' */        //l.style.width = "75px";
/*Line 285 - 'AtomFormField.js' */        l.htmlFor = this.controlElementID;

/*Line 287 - 'AtomFormField.js' */        // create required
/*Line 288 - 'AtomFormField.js' */        var r = this.setItem("required", "Left", "");
/*Line 289 - 'AtomFormField.js' */        r.style.color = "red";
/*Line 290 - 'AtomFormField.js' */        r.style.width = "8px";

/*Line 292 - 'AtomFormField.js' */        // create error
/*Line 293 - 'AtomFormField.js' */        var e = this.setItem("error", "Right", "");
/*Line 294 - 'AtomFormField.js' */        e.style.color = "red";
/*Line 295 - 'AtomFormField.js' */        e.style.overflow = "hidden";
/*Line 296 - 'AtomFormField.js' */        e.style.width = "90px";
/*Line 297 - 'AtomFormField.js' */        e.style.marginLeft = "5px";
/*Line 298 - 'AtomFormField.js' */        e.style.marginRight = "5px";
/*Line 299 - 'AtomFormField.js' */        e.style.display = "none";
/*Line 300 - 'AtomFormField.js' */        NeuroSpeech.WebAtoms.AtomFormField.callBaseMethod(this, "initialize");

/*Line 302 - 'AtomFormField.js' */        element.style.overflow = "hidden";
/*Line 303 - 'AtomFormField.js' */        element.style.display = "block";
/*Line 304 - 'AtomFormField.js' */        element.style.position = "relative";
/*Line 305 - 'AtomFormField.js' */        element.style.margin = "2px";

/*Line 307 - 'AtomFormField.js' */    }
/*Line 308 - 'AtomFormField.js' */};

/*Line 310 - 'AtomFormField.js' */NeuroSpeech.WebAtoms.AtomFormField.registerClass("NeuroSpeech.WebAtoms.AtomFormField", NeuroSpeech.WebAtoms.AtomDockPanel);
/*Line 0 - 'AtomTableLayout.js' */

/*Line 2 - 'AtomTableLayout.js' */NeuroSpeech.WebAtoms.AtomTableLayout = function (columns,cellWidth,cellHeight) {
/*Line 3 - 'AtomTableLayout.js' */    NeuroSpeech.WebAtoms.AtomTableLayout.initializeBase(this);
/*Line 4 - 'AtomTableLayout.js' */    this._cellWidth = cellWidth;
/*Line 5 - 'AtomTableLayout.js' */    this._cellHeight = cellHeight;
/*Line 6 - 'AtomTableLayout.js' */    this._columns = columns;
/*Line 7 - 'AtomTableLayout.js' */};

/*Line 9 - 'AtomTableLayout.js' */NeuroSpeech.WebAtoms.AtomTableLayout.prototype = {
/*Line 10 - 'AtomTableLayout.js' */    doLayout: function (element) {
/*Line 11 - 'AtomTableLayout.js' */        var ae = new AtomEnumerator($(element).children());
/*Line 12 - 'AtomTableLayout.js' */        var item;

/*Line 14 - 'AtomTableLayout.js' */        var left = 0;
/*Line 15 - 'AtomTableLayout.js' */        var top = 0;

/*Line 17 - 'AtomTableLayout.js' */        var maxRows = Math.ceil(ae._array.length / this._columns) - 1;
/*Line 18 - 'AtomTableLayout.js' */        var rows = maxRows;

/*Line 20 - 'AtomTableLayout.js' */        var width = this._columns * this._cellWidth;
/*Line 21 - 'AtomTableLayout.js' */        var height = this._cellHeight * ( maxRows + 1);

/*Line 23 - 'AtomTableLayout.js' */        element.style.position = "relative";
/*Line 24 - 'AtomTableLayout.js' */        element.style.width = width + "px";
/*Line 25 - 'AtomTableLayout.js' */        element.style.height = height + "px";

/*Line 27 - 'AtomTableLayout.js' */        element.maxRows = maxRows;

/*Line 29 - 'AtomTableLayout.js' */        while (ae.next()) {
/*Line 30 - 'AtomTableLayout.js' */            item = ae.current();

/*Line 32 - 'AtomTableLayout.js' */            item.style.position = "absolute";
/*Line 33 - 'AtomTableLayout.js' */            item.style.left = left + "px";
/*Line 34 - 'AtomTableLayout.js' */            item.style.top = top + "px";

/*Line 36 - 'AtomTableLayout.js' */            item.style.width = this._cellWidth + "px";

/*Line 38 - 'AtomTableLayout.js' */            if (rows<=0) {
/*Line 39 - 'AtomTableLayout.js' */                rows = maxRows;
/*Line 40 - 'AtomTableLayout.js' */                left += this._cellWidth + 10;
/*Line 41 - 'AtomTableLayout.js' */                top = 0;
/*Line 42 - 'AtomTableLayout.js' */            }else {
/*Line 43 - 'AtomTableLayout.js' */                rows--;
/*Line 44 - 'AtomTableLayout.js' */                top += this._cellHeight;
/*Line 45 - 'AtomTableLayout.js' */            }
/*Line 46 - 'AtomTableLayout.js' */        }
/*Line 47 - 'AtomTableLayout.js' */    }
/*Line 48 - 'AtomTableLayout.js' */};

/*Line 50 - 'AtomTableLayout.js' */NeuroSpeech.WebAtoms.AtomTableLayout.registerClass("NeuroSpeech.WebAtoms.AtomTableLayout", NeuroSpeech.WebAtoms.AtomLayout);
/*Line 0 - 'AtomPhotoPlayer.js' */


/*Line 3 - 'AtomPhotoPlayer.js' */NeuroSpeech.WebAtoms.AtomPhotoPlayer = function (element) {
/*Line 4 - 'AtomPhotoPlayer.js' */    NeuroSpeech.WebAtoms.AtomPhotoPlayer.initializeBase(this, [element]);
/*Line 5 - 'AtomPhotoPlayer.js' */    this._img = null;
/*Line 6 - 'AtomPhotoPlayer.js' */};

/*Line 8 - 'AtomPhotoPlayer.js' */NeuroSpeech.WebAtoms.AtomPhotoPlayer.prototype = {
/*Line 9 - 'AtomPhotoPlayer.js' */    play: function (url) {
/*Line 10 - 'AtomPhotoPlayer.js' */        this._img.src = url;
/*Line 11 - 'AtomPhotoPlayer.js' */    },
/*Line 12 - 'AtomPhotoPlayer.js' */    stop: function () {
/*Line 13 - 'AtomPhotoPlayer.js' */    },
/*Line 14 - 'AtomPhotoPlayer.js' */    initialize: function () {
/*Line 15 - 'AtomPhotoPlayer.js' */        var element = this.get_element();
/*Line 16 - 'AtomPhotoPlayer.js' */        element.style.textAlign = "center";
/*Line 17 - 'AtomPhotoPlayer.js' */        var img = document.createElement("img");
/*Line 18 - 'AtomPhotoPlayer.js' */        img.style.maxWidth = "100%";
/*Line 19 - 'AtomPhotoPlayer.js' */        img.style.maxHeight = "100%";
/*Line 20 - 'AtomPhotoPlayer.js' */        img.style.verticalAlign = "middle";
/*Line 21 - 'AtomPhotoPlayer.js' */        element.appendChild(img);
/*Line 22 - 'AtomPhotoPlayer.js' */        NeuroSpeech.WebAtoms.AtomPhotoPlayer.callBaseMethod(this, "initialize");
/*Line 23 - 'AtomPhotoPlayer.js' */        this._img = img;
/*Line 24 - 'AtomPhotoPlayer.js' */    }
/*Line 25 - 'AtomPhotoPlayer.js' */};

/*Line 27 - 'AtomPhotoPlayer.js' */NeuroSpeech.WebAtoms.AtomPhotoPlayer.registerClass("NeuroSpeech.WebAtoms.AtomPhotoPlayer", NeuroSpeech.WebAtoms.AtomPlayer);
/*Line 0 - 'AtomVideoPlayer.js' */


/*Line 3 - 'AtomVideoPlayer.js' */NeuroSpeech.WebAtoms.AtomVideoPlayer = function (element) {
/*Line 4 - 'AtomVideoPlayer.js' */    NeuroSpeech.WebAtoms.AtomVideoPlayer.initializeBase(this, [element]);
/*Line 5 - 'AtomVideoPlayer.js' */    this._isFlash = false;
/*Line 6 - 'AtomVideoPlayer.js' */    this._fpID = null;
/*Line 7 - 'AtomVideoPlayer.js' */    this._divID = null;
/*Line 8 - 'AtomVideoPlayer.js' */    this._playerReady = false;
/*Line 9 - 'AtomVideoPlayer.js' */    this._timeoutCallback = null;
/*Line 10 - 'AtomVideoPlayer.js' */    this._playerID = null;
/*Line 11 - 'AtomVideoPlayer.js' */    this._srcID = null;
/*Line 12 - 'AtomVideoPlayer.js' */    this._video = null;
/*Line 13 - 'AtomVideoPlayer.js' */    this._src = null;
/*Line 14 - 'AtomVideoPlayer.js' */    this._errorHandler = null;
/*Line 15 - 'AtomVideoPlayer.js' */    this._autoCreate = false;
/*Line 16 - 'AtomVideoPlayer.js' */    this._playerCreated = false;
/*Line 17 - 'AtomVideoPlayer.js' */};

/*Line 19 - 'AtomVideoPlayer.js' */NeuroSpeech.WebAtoms.AtomVideoPlayer.prototype = {

/*Line 21 - 'AtomVideoPlayer.js' */    get_autoCreate: function () {
/*Line 22 - 'AtomVideoPlayer.js' */        return this._autoCreate;
/*Line 23 - 'AtomVideoPlayer.js' */    },
/*Line 24 - 'AtomVideoPlayer.js' */    set_autoCreate: function (v) {
/*Line 25 - 'AtomVideoPlayer.js' */        this._autoCreate = v;
/*Line 26 - 'AtomVideoPlayer.js' */    },

/*Line 28 - 'AtomVideoPlayer.js' */    onError: function () {
/*Line 29 - 'AtomVideoPlayer.js' */        alert("something went wrong with video");
/*Line 30 - 'AtomVideoPlayer.js' */    },

/*Line 32 - 'AtomVideoPlayer.js' */    get_player: function (appName) {
/*Line 33 - 'AtomVideoPlayer.js' */        if (navigator.appName.indexOf("Microsoft") != -1) {
/*Line 34 - 'AtomVideoPlayer.js' */            return window[appName];
/*Line 35 - 'AtomVideoPlayer.js' */        } else {
/*Line 36 - 'AtomVideoPlayer.js' */            return document[appName];
/*Line 37 - 'AtomVideoPlayer.js' */        }
/*Line 38 - 'AtomVideoPlayer.js' */    },

/*Line 40 - 'AtomVideoPlayer.js' */    get_playerReady: function () {
/*Line 41 - 'AtomVideoPlayer.js' */        return this._playerReady;
/*Line 42 - 'AtomVideoPlayer.js' */    },
/*Line 43 - 'AtomVideoPlayer.js' */    set_playerReady: function (b) {
/*Line 44 - 'AtomVideoPlayer.js' */        this._playerReady = b;
/*Line 45 - 'AtomVideoPlayer.js' */    },

/*Line 47 - 'AtomVideoPlayer.js' */    play: function (url) {
/*Line 48 - 'AtomVideoPlayer.js' */        this._url = url;
/*Line 49 - 'AtomVideoPlayer.js' */        var element = this.get_element();
/*Line 50 - 'AtomVideoPlayer.js' */        this.create();
/*Line 51 - 'AtomVideoPlayer.js' */        if (this._isFlash) {
/*Line 52 - 'AtomVideoPlayer.js' */            this.onTimeout();
/*Line 53 - 'AtomVideoPlayer.js' */            return;
/*Line 54 - 'AtomVideoPlayer.js' */        } else {
/*Line 55 - 'AtomVideoPlayer.js' */            if (this._src) {
/*Line 56 - 'AtomVideoPlayer.js' */                this._video.pause();
/*Line 57 - 'AtomVideoPlayer.js' */                this._video.removeChild(this._src);
/*Line 58 - 'AtomVideoPlayer.js' */            }
/*Line 59 - 'AtomVideoPlayer.js' */            this._src = document.createElement("source");
/*Line 60 - 'AtomVideoPlayer.js' */            this._src.type = "video/mp4";
/*Line 61 - 'AtomVideoPlayer.js' */            this._src.src = url;
/*Line 62 - 'AtomVideoPlayer.js' */            $(this._video).attr("controls", function () {
/*Line 63 - 'AtomVideoPlayer.js' */                return "controls";
/*Line 64 - 'AtomVideoPlayer.js' */            });
/*Line 65 - 'AtomVideoPlayer.js' */            this._video.appendChild(this._src);
/*Line 66 - 'AtomVideoPlayer.js' */            //this._video.controls = "controls";
/*Line 67 - 'AtomVideoPlayer.js' */            this._video.play();
/*Line 68 - 'AtomVideoPlayer.js' */        }
/*Line 69 - 'AtomVideoPlayer.js' */    },

/*Line 71 - 'AtomVideoPlayer.js' */    stop: function () {
/*Line 72 - 'AtomVideoPlayer.js' */        if (!this._playerCreated)
/*Line 73 - 'AtomVideoPlayer.js' */            return;
/*Line 74 - 'AtomVideoPlayer.js' */        var element = this.get_element();
/*Line 75 - 'AtomVideoPlayer.js' */        if (this._isFlash) {
/*Line 76 - 'AtomVideoPlayer.js' */            if (this._playerReady) {
/*Line 77 - 'AtomVideoPlayer.js' */                var vpc = this.get_player(this._fpID);
/*Line 78 - 'AtomVideoPlayer.js' */                vpc.pauseVideo();
/*Line 79 - 'AtomVideoPlayer.js' */            } else {
/*Line 80 - 'AtomVideoPlayer.js' */                //this._url = null;
/*Line 81 - 'AtomVideoPlayer.js' */            }
/*Line 82 - 'AtomVideoPlayer.js' */        } else {
/*Line 83 - 'AtomVideoPlayer.js' */            if (this._video) {
/*Line 84 - 'AtomVideoPlayer.js' */                this._video.pause();
/*Line 85 - 'AtomVideoPlayer.js' */            }
/*Line 86 - 'AtomVideoPlayer.js' */        }
/*Line 87 - 'AtomVideoPlayer.js' */    },

/*Line 89 - 'AtomVideoPlayer.js' */    onTimeout: function () {
/*Line 90 - 'AtomVideoPlayer.js' */        var element = this.get_element();
/*Line 91 - 'AtomVideoPlayer.js' */        if (element.style.visibility == "hidden") {
/*Line 92 - 'AtomVideoPlayer.js' */            // cancel... stop here...
/*Line 93 - 'AtomVideoPlayer.js' */            return;
/*Line 94 - 'AtomVideoPlayer.js' */        }
/*Line 95 - 'AtomVideoPlayer.js' */        if (this._playerReady) {
/*Line 96 - 'AtomVideoPlayer.js' */            var vpc = this.get_player(this._fpID);
/*Line 97 - 'AtomVideoPlayer.js' */            vpc.playVideo(this._url);
/*Line 98 - 'AtomVideoPlayer.js' */        } else {
/*Line 99 - 'AtomVideoPlayer.js' */            window.setTimeout(this._timeoutCallback, 100);
/*Line 100 - 'AtomVideoPlayer.js' */        }
/*Line 101 - 'AtomVideoPlayer.js' */    },

/*Line 103 - 'AtomVideoPlayer.js' */    supportsMP4: function () {
/*Line 104 - 'AtomVideoPlayer.js' */        var ua = window.navigator.userAgent.toLowerCase();
/*Line 105 - 'AtomVideoPlayer.js' */        if (ua.indexOf("ios") != -1)
/*Line 106 - 'AtomVideoPlayer.js' */            return true;
/*Line 107 - 'AtomVideoPlayer.js' */        if (ua.indexOf("safari") != -1)
/*Line 108 - 'AtomVideoPlayer.js' */            return true;
/*Line 109 - 'AtomVideoPlayer.js' */        if (ua.indexOf("android") != -1)
/*Line 110 - 'AtomVideoPlayer.js' */            return true;
/*Line 111 - 'AtomVideoPlayer.js' */        return false;
/*Line 112 - 'AtomVideoPlayer.js' */    },

/*Line 114 - 'AtomVideoPlayer.js' */    create: function () {
/*Line 115 - 'AtomVideoPlayer.js' */        if (this._playerCreated)
/*Line 116 - 'AtomVideoPlayer.js' */            return;
/*Line 117 - 'AtomVideoPlayer.js' */        this._playerCreated = true;
/*Line 118 - 'AtomVideoPlayer.js' */        this._timeoutCallback = Function.createDelegate(this, this.onTimeout);
/*Line 119 - 'AtomVideoPlayer.js' */        var element = this.get_element();
/*Line 120 - 'AtomVideoPlayer.js' */        if (element.id == undefined || element.id == null || element.id == "") {
/*Line 121 - 'AtomVideoPlayer.js' */            element.id = "__uniqueID" + AtomUI.getNewIndex();
/*Line 122 - 'AtomVideoPlayer.js' */            allControls[element.id] = this;
/*Line 123 - 'AtomVideoPlayer.js' */        }


/*Line 126 - 'AtomVideoPlayer.js' */        this._divID = element.id + "_Player";

/*Line 128 - 'AtomVideoPlayer.js' */        var childDiv = document.createElement("div");
/*Line 129 - 'AtomVideoPlayer.js' */        childDiv.id = this._divID;

/*Line 131 - 'AtomVideoPlayer.js' */        $(element).append(childDiv);

/*Line 133 - 'AtomVideoPlayer.js' */        if (!this.supportsMP4()) {
/*Line 134 - 'AtomVideoPlayer.js' */            this._fpID = this._divID + "_Flash";
/*Line 135 - 'AtomVideoPlayer.js' */            createVideoPlayer(element.id, this._divID, this._fpID);
/*Line 136 - 'AtomVideoPlayer.js' */            this._isFlash = true;
/*Line 137 - 'AtomVideoPlayer.js' */        } else {
/*Line 138 - 'AtomVideoPlayer.js' */            this._video = document.createElement("video");
/*Line 139 - 'AtomVideoPlayer.js' */            this._playerID = this._divID + "_Video";
/*Line 140 - 'AtomVideoPlayer.js' */            this._video.id = this._playerID;
/*Line 141 - 'AtomVideoPlayer.js' */            $("#" + this._divID).append(this._video);
/*Line 142 - 'AtomVideoPlayer.js' */            this._video.style.width = "100%";
/*Line 143 - 'AtomVideoPlayer.js' */            this._video.style.height = "100%";
/*Line 144 - 'AtomVideoPlayer.js' */            this._video.autobuffer = true;
/*Line 145 - 'AtomVideoPlayer.js' */            this._video.autoplay = true;
/*Line 146 - 'AtomVideoPlayer.js' */            this._video.allowfullscreen = true;
/*Line 147 - 'AtomVideoPlayer.js' */        }
/*Line 148 - 'AtomVideoPlayer.js' */    },

/*Line 150 - 'AtomVideoPlayer.js' */    initialize: function () {
/*Line 151 - 'AtomVideoPlayer.js' */        var element = this.get_element();
/*Line 152 - 'AtomVideoPlayer.js' */        $(element).addClass("atom-video-player");
/*Line 153 - 'AtomVideoPlayer.js' */        if (this._autoCreate) {
/*Line 154 - 'AtomVideoPlayer.js' */            this.create();
/*Line 155 - 'AtomVideoPlayer.js' */        }
/*Line 156 - 'AtomVideoPlayer.js' */        NeuroSpeech.WebAtoms.AtomVideoPlayer.callBaseMethod(this, "initialize");
/*Line 157 - 'AtomVideoPlayer.js' */    }
/*Line 158 - 'AtomVideoPlayer.js' */};

/*Line 160 - 'AtomVideoPlayer.js' */NeuroSpeech.WebAtoms.AtomVideoPlayer.registerClass("NeuroSpeech.WebAtoms.AtomVideoPlayer", NeuroSpeech.WebAtoms.AtomPlayer);
/*Line 0 - 'AtomWindow.js' */


/*Line 3 - 'AtomWindow.js' */NeuroSpeech.WebAtoms.AtomWindow = function (element) {
/*Line 4 - 'AtomWindow.js' */    NeuroSpeech.WebAtoms.AtomWindow.initializeBase(this, [element]);
/*Line 5 - 'AtomWindow.js' */    this._opener = null;
/*Line 6 - 'AtomWindow.js' */};


/*Line 9 - 'AtomWindow.js' */NeuroSpeech.WebAtoms.AtomWindow.prototype = {

/*Line 11 - 'AtomWindow.js' */    add_open: function () {
/*Line 12 - 'AtomWindow.js' */        this.get_events().addHandler("open", handler);
/*Line 13 - 'AtomWindow.js' */    },
/*Line 14 - 'AtomWindow.js' */    remove_open: function () {
/*Line 15 - 'AtomWindow.js' */        this.get_events().removeHandler("open", handler);
/*Line 16 - 'AtomWindow.js' */    },

/*Line 18 - 'AtomWindow.js' */    get_opener: function () {
/*Line 19 - 'AtomWindow.js' */        return this._opener;
/*Line 20 - 'AtomWindow.js' */    },
/*Line 21 - 'AtomWindow.js' */    set_opener: function (value) {
/*Line 22 - 'AtomWindow.js' */        this._opener = value;
/*Line 23 - 'AtomWindow.js' */    },

/*Line 25 - 'AtomWindow.js' */    close: function () {
/*Line 26 - 'AtomWindow.js' */        var element = this.get_element();
/*Line 27 - 'AtomWindow.js' */        $(element).removeClass("atom-visible");
/*Line 28 - 'AtomWindow.js' */        $(element).addClass("atom-hidden");
/*Line 29 - 'AtomWindow.js' */    },
/*Line 30 - 'AtomWindow.js' */    show: function (opener) {
/*Line 31 - 'AtomWindow.js' */        if (opener != null && opener != undefined) {
/*Line 32 - 'AtomWindow.js' */            this._opener = opener;
/*Line 33 - 'AtomWindow.js' */        }
/*Line 34 - 'AtomWindow.js' */        var element = this.get_element();


/*Line 37 - 'AtomWindow.js' */        var width = $(window).width();
/*Line 38 - 'AtomWindow.js' */        var height = $(window).height();
/*Line 39 - 'AtomWindow.js' */        var ew = $(element).innerWidth();
/*Line 40 - 'AtomWindow.js' */        var eh = $(element).innerHeight();
/*Line 41 - 'AtomWindow.js' */        var left = (width - ew) / 2;
/*Line 42 - 'AtomWindow.js' */        var top = (height - eh) / 2;
/*Line 43 - 'AtomWindow.js' */        element.style.top = top + "px";
/*Line 44 - 'AtomWindow.js' */        element.style.left = left + "px";
/*Line 45 - 'AtomWindow.js' */        $(element).removeClass("atom-hidden");
/*Line 46 - 'AtomWindow.js' */        $(element).addClass("atom-visible");

/*Line 48 - 'AtomWindow.js' */        element.style.zIndex = 0;


/*Line 51 - 'AtomWindow.js' */        var h = this.get_events().getHandler("open");
/*Line 52 - 'AtomWindow.js' */        if (h) h(this, Sys.EventArgs.Empty);

/*Line 54 - 'AtomWindow.js' */        AtomUI.setUI(element, "AtomWindow", "atom-window");
/*Line 55 - 'AtomWindow.js' */    },

/*Line 57 - 'AtomWindow.js' */    initialize: function () {
/*Line 58 - 'AtomWindow.js' */        var element = this.get_element();
/*Line 59 - 'AtomWindow.js' */        NeuroSpeech.WebAtoms.AtomWindow.callBaseMethod(this, "initialize");
/*Line 60 - 'AtomWindow.js' */    }
/*Line 61 - 'AtomWindow.js' */};

/*Line 63 - 'AtomWindow.js' */NeuroSpeech.WebAtoms.AtomWindow.registerClass("NeuroSpeech.WebAtoms.AtomWindow", NeuroSpeech.WebAtoms.AtomControl);

/*Line 0 - 'AtomWindowButton.js' */

/*Line 2 - 'AtomWindowButton.js' */NeuroSpeech.WebAtoms.AtomWindowButton = function (element) {
/*Line 3 - 'AtomWindowButton.js' */    NeuroSpeech.WebAtoms.AtomWindowButton.initializeBase(this, [element]);
/*Line 4 - 'AtomWindowButton.js' */    this._source = null;
/*Line 5 - 'AtomWindowButton.js' */    this._mode = "close";
/*Line 6 - 'AtomWindowButton.js' */};

/*Line 8 - 'AtomWindowButton.js' */NeuroSpeech.WebAtoms.AtomWindowButton.prototype = {

/*Line 10 - 'AtomWindowButton.js' */    updateUI: function () {
/*Line 11 - 'AtomWindowButton.js' */    },

/*Line 13 - 'AtomWindowButton.js' */    get_mode: function () {
/*Line 14 - 'AtomWindowButton.js' */        return this._mode;
/*Line 15 - 'AtomWindowButton.js' */    },
/*Line 16 - 'AtomWindowButton.js' */    set_mode: function (s) {
/*Line 17 - 'AtomWindowButton.js' */        this._mode = s;
/*Line 18 - 'AtomWindowButton.js' */    },

/*Line 20 - 'AtomWindowButton.js' */    get_source: function () {
/*Line 21 - 'AtomWindowButton.js' */        return this._source;
/*Line 22 - 'AtomWindowButton.js' */    },
/*Line 23 - 'AtomWindowButton.js' */    set_source: function (s) {
/*Line 24 - 'AtomWindowButton.js' */        this._source = s;
/*Line 25 - 'AtomWindowButton.js' */    },

/*Line 27 - 'AtomWindowButton.js' */    onClickHandler: function () {
/*Line 28 - 'AtomWindowButton.js' */        NeuroSpeech.WebAtoms.AtomWindowButton.callBaseMethod(this, "onClickHandler");
/*Line 29 - 'AtomWindowButton.js' */        var s = this._source;
/*Line 30 - 'AtomWindowButton.js' */        if (s == null)
/*Line 31 - 'AtomWindowButton.js' */            return;
/*Line 32 - 'AtomWindowButton.js' */        if (this._mode == "close") {
/*Line 33 - 'AtomWindowButton.js' */            s.close();
/*Line 34 - 'AtomWindowButton.js' */        } else if (this._mode == "show") {
/*Line 35 - 'AtomWindowButton.js' */            s.show();
/*Line 36 - 'AtomWindowButton.js' */        }
/*Line 37 - 'AtomWindowButton.js' */    },

/*Line 39 - 'AtomWindowButton.js' */    initialize: function () {
/*Line 40 - 'AtomWindowButton.js' */        var element = this.get_element();

/*Line 42 - 'AtomWindowButton.js' */        NeuroSpeech.WebAtoms.AtomWindowButton.callBaseMethod(this, "initialize");
/*Line 43 - 'AtomWindowButton.js' */    }
/*Line 44 - 'AtomWindowButton.js' */};

/*Line 46 - 'AtomWindowButton.js' */NeuroSpeech.WebAtoms.AtomWindowButton.registerClass("NeuroSpeech.WebAtoms.AtomWindowButton", NeuroSpeech.WebAtoms.AtomButton);
/*Line 0 - 'jquery.event.drag.js' *//*!
/*Line 1 - 'jquery.event.drag.js' */ * Touch enabled jQuery.event.drag
/*Line 2 - 'jquery.event.drag.js' */ * http://www.shamasis.net/projects/jquery-drag-touch/
/*Line 3 - 'jquery.event.drag.js' */ * @license Open Source MIT
/*Line 4 - 'jquery.event.drag.js' */ * @author Shamasis Bhattacharya <http://www.shamasis.net/>
/*Line 5 - 'jquery.event.drag.js' */ * @release 2.0.1
/*Line 6 - 'jquery.event.drag.js' */ *
/*Line 7 - 'jquery.event.drag.js' */ * @original-license
/*Line 8 - 'jquery.event.drag.js' */ * jquery.event.drag - v 2.0.0
/*Line 9 - 'jquery.event.drag.js' */ * Copyright (c) 2010 Three Dub Media - http://threedubmedia.com
/*Line 10 - 'jquery.event.drag.js' */ * Open Source MIT License - http://threedubmedia.com/code/license
/*Line 11 - 'jquery.event.drag.js' */ */
/*Line 12 - 'jquery.event.drag.js' */(function ($) {

/*Line 14 - 'jquery.event.drag.js' */    // add the jquery instance method
/*Line 15 - 'jquery.event.drag.js' */    $.fn.drag = function (str, arg, opts) {
/*Line 16 - 'jquery.event.drag.js' */        // figure out the event type
/*Line 17 - 'jquery.event.drag.js' */        var type = typeof str == "string" ? str : "",
/*Line 18 - 'jquery.event.drag.js' */        // figure out the event handler...
/*Line 19 - 'jquery.event.drag.js' */        fn = $.isFunction(str) ? str : $.isFunction(arg) ? arg : null;
/*Line 20 - 'jquery.event.drag.js' */        // fix the event type
/*Line 21 - 'jquery.event.drag.js' */        if (type.indexOf("drag") !== 0)
/*Line 22 - 'jquery.event.drag.js' */            type = "drag" + type;
/*Line 23 - 'jquery.event.drag.js' */        // were options passed
/*Line 24 - 'jquery.event.drag.js' */        opts = (str == fn ? arg : opts) || {};
/*Line 25 - 'jquery.event.drag.js' */        // trigger or bind event handler
/*Line 26 - 'jquery.event.drag.js' */        return fn ? this.bind(type, opts, fn) : this.trigger(type);
/*Line 27 - 'jquery.event.drag.js' */    };

/*Line 29 - 'jquery.event.drag.js' */    // local refs (increase compression)
/*Line 30 - 'jquery.event.drag.js' */    var $event = $.event,
/*Line 31 - 'jquery.event.drag.js' */    hasTouch = 'ontouchstart' in document.documentElement,
/*Line 32 - 'jquery.event.drag.js' */    initBindings = hasTouch ? 'touchstart' : 'mousedown',
/*Line 33 - 'jquery.event.drag.js' */    dragBindings = hasTouch ? 'touchmove touchend' : 'mousemove mouseup',
/*Line 34 - 'jquery.event.drag.js' */    touchEventXY = function (event, dd) {
/*Line 35 - 'jquery.event.drag.js' */        if (!dd.touchXY || !event.originalEvent) {
/*Line 36 - 'jquery.event.drag.js' */            return event;
/*Line 37 - 'jquery.event.drag.js' */        }

/*Line 39 - 'jquery.event.drag.js' */        // check whether mouse click or screentap
/*Line 40 - 'jquery.event.drag.js' */        var touches = event.originalEvent.changedTouches ||
/*Line 41 - 'jquery.event.drag.js' */        event.originalEvent.touches;
/*Line 42 - 'jquery.event.drag.js' */        if (touches && touches.length) {
/*Line 43 - 'jquery.event.drag.js' */            $.extend(event, touches[0]);
/*Line 44 - 'jquery.event.drag.js' */        }
/*Line 45 - 'jquery.event.drag.js' */        return event;
/*Line 46 - 'jquery.event.drag.js' */    },

/*Line 48 - 'jquery.event.drag.js' */    $special = $event.special,
/*Line 49 - 'jquery.event.drag.js' */    // configure the drag special event
/*Line 50 - 'jquery.event.drag.js' */    drag = $special.drag = {

/*Line 52 - 'jquery.event.drag.js' */    // these are the default settings
/*Line 53 - 'jquery.event.drag.js' */        defaults: {
/*Line 54 - 'jquery.event.drag.js' */            which: 1, // mouse button pressed to start drag sequence
/*Line 55 - 'jquery.event.drag.js' */            distance: 0, // distance dragged before dragstart
/*Line 56 - 'jquery.event.drag.js' */            not: ':input', // selector to suppress dragging on target elements
/*Line 57 - 'jquery.event.drag.js' */            handle: null, // selector to match handle target elements
/*Line 58 - 'jquery.event.drag.js' */            relative: false, // true to use "position", false to use "offset"
/*Line 59 - 'jquery.event.drag.js' */            drop: false, // false to suppress drop events, true or selector to allow
/*Line 60 - 'jquery.event.drag.js' */            click: false, // false to suppress click events after dragend (no proxy)
/*Line 61 - 'jquery.event.drag.js' */            touchXY: true // Make touch XY match event XY
/*Line 62 - 'jquery.event.drag.js' */        },

/*Line 64 - 'jquery.event.drag.js' */        // the key name for stored drag data
/*Line 65 - 'jquery.event.drag.js' */        datakey: "dragdata",

/*Line 67 - 'jquery.event.drag.js' */        // the namespace for internal live events
/*Line 68 - 'jquery.event.drag.js' */        livekey: "livedrag",

/*Line 70 - 'jquery.event.drag.js' */        // count bound related events
/*Line 71 - 'jquery.event.drag.js' */        add: function (obj) {
/*Line 72 - 'jquery.event.drag.js' */            // read the interaction data
/*Line 73 - 'jquery.event.drag.js' */            var data = $.data(this, drag.datakey),
/*Line 74 - 'jquery.event.drag.js' */            // read any passed options
/*Line 75 - 'jquery.event.drag.js' */            opts = obj.data || {};
/*Line 76 - 'jquery.event.drag.js' */            // count another realted event
/*Line 77 - 'jquery.event.drag.js' */            data.related += 1;
/*Line 78 - 'jquery.event.drag.js' */            // bind the live "draginit" delegator
/*Line 79 - 'jquery.event.drag.js' */            if (!data.live && obj.selector) {
/*Line 80 - 'jquery.event.drag.js' */                data.live = true;
/*Line 81 - 'jquery.event.drag.js' */                $event.add(this, "draginit." + drag.livekey, drag.delegate);
/*Line 82 - 'jquery.event.drag.js' */            }
/*Line 83 - 'jquery.event.drag.js' */            // extend data options bound with this event
/*Line 84 - 'jquery.event.drag.js' */            // don't iterate "opts" in case it is a node
/*Line 85 - 'jquery.event.drag.js' */            $.each(drag.defaults, function (key, def) {
/*Line 86 - 'jquery.event.drag.js' */                if (opts[key] !== undefined)
/*Line 87 - 'jquery.event.drag.js' */                    data[key] = opts[key];
/*Line 88 - 'jquery.event.drag.js' */            });
/*Line 89 - 'jquery.event.drag.js' */        },

/*Line 91 - 'jquery.event.drag.js' */        // forget unbound related events
/*Line 92 - 'jquery.event.drag.js' */        remove: function () {
/*Line 93 - 'jquery.event.drag.js' */            $.data(this, drag.datakey).related -= 1;
/*Line 94 - 'jquery.event.drag.js' */        },

/*Line 96 - 'jquery.event.drag.js' */        // configure interaction, capture settings
/*Line 97 - 'jquery.event.drag.js' */        setup: function () {
/*Line 98 - 'jquery.event.drag.js' */            // check for related events
/*Line 99 - 'jquery.event.drag.js' */            if ($.data(this, drag.datakey))
/*Line 100 - 'jquery.event.drag.js' */                return;
/*Line 101 - 'jquery.event.drag.js' */            // initialize the drag data with copied defaults
/*Line 102 - 'jquery.event.drag.js' */            var data = $.extend({
/*Line 103 - 'jquery.event.drag.js' */                related: 0
/*Line 104 - 'jquery.event.drag.js' */            }, drag.defaults);
/*Line 105 - 'jquery.event.drag.js' */            // store the interaction data
/*Line 106 - 'jquery.event.drag.js' */            $.data(this, drag.datakey, data);
/*Line 107 - 'jquery.event.drag.js' */            // bind the mousedown event, which starts drag interactions
/*Line 108 - 'jquery.event.drag.js' */            $event.add(this, initBindings, drag.init, data);
/*Line 109 - 'jquery.event.drag.js' */            // prevent image dragging in IE...
/*Line 110 - 'jquery.event.drag.js' */            if (this.attachEvent)
/*Line 111 - 'jquery.event.drag.js' */                this.attachEvent("ondragstart", drag.dontstart);
/*Line 112 - 'jquery.event.drag.js' */        },

/*Line 114 - 'jquery.event.drag.js' */        // destroy configured interaction
/*Line 115 - 'jquery.event.drag.js' */        teardown: function () {
/*Line 116 - 'jquery.event.drag.js' */            // check for related events
/*Line 117 - 'jquery.event.drag.js' */            if ($.data(this, drag.datakey).related)
/*Line 118 - 'jquery.event.drag.js' */                return;
/*Line 119 - 'jquery.event.drag.js' */            // remove the stored data
/*Line 120 - 'jquery.event.drag.js' */            $.removeData(this, drag.datakey);
/*Line 121 - 'jquery.event.drag.js' */            // remove the mousedown event
/*Line 122 - 'jquery.event.drag.js' */            $event.remove(this, initBindings, drag.init);
/*Line 123 - 'jquery.event.drag.js' */            // remove the "live" delegation
/*Line 124 - 'jquery.event.drag.js' */            $event.remove(this, "draginit", drag.delegate);
/*Line 125 - 'jquery.event.drag.js' */            // enable text selection
/*Line 126 - 'jquery.event.drag.js' */            drag.textselect(true);
/*Line 127 - 'jquery.event.drag.js' */            // un-prevent image dragging in IE...
/*Line 128 - 'jquery.event.drag.js' */            if (this.detachEvent)
/*Line 129 - 'jquery.event.drag.js' */                this.detachEvent("ondragstart", drag.dontstart);
/*Line 130 - 'jquery.event.drag.js' */        },

/*Line 132 - 'jquery.event.drag.js' */        // initialize the interaction
/*Line 133 - 'jquery.event.drag.js' */        init: function (event) {
/*Line 134 - 'jquery.event.drag.js' */            // the drag/drop interaction data
/*Line 135 - 'jquery.event.drag.js' */            var dd = event.data, results,
/*Line 136 - 'jquery.event.drag.js' */            touches = event.originalEvent ? event.originalEvent.changedTouches ||
/*Line 137 - 'jquery.event.drag.js' */            event.originalEvent.touches : [];

/*Line 139 - 'jquery.event.drag.js' */            // check whether mouse click or screentap
/*Line 140 - 'jquery.event.drag.js' */            if (touches && touches.length) {
/*Line 141 - 'jquery.event.drag.js' */                // let the system handle multitouch operations like two finger scroll
/*Line 142 - 'jquery.event.drag.js' */                // and pinching
/*Line 143 - 'jquery.event.drag.js' */                if (touches.length > 1) {
/*Line 144 - 'jquery.event.drag.js' */                    return;
/*Line 145 - 'jquery.event.drag.js' */                }
/*Line 146 - 'jquery.event.drag.js' */            }
/*Line 147 - 'jquery.event.drag.js' */            else {
/*Line 148 - 'jquery.event.drag.js' */                // check the which directive
/*Line 149 - 'jquery.event.drag.js' */                if (dd.which > 0 && event.which != dd.which) {
/*Line 150 - 'jquery.event.drag.js' */                    return;
/*Line 151 - 'jquery.event.drag.js' */                }
/*Line 152 - 'jquery.event.drag.js' */            }

/*Line 154 - 'jquery.event.drag.js' */            // check for suppressed selector
/*Line 155 - 'jquery.event.drag.js' */            if ($(event.target).is(dd.not))
/*Line 156 - 'jquery.event.drag.js' */                return;
/*Line 157 - 'jquery.event.drag.js' */            // check for handle selector
/*Line 158 - 'jquery.event.drag.js' */            if (dd.handle && !$(event.target).closest(dd.handle, event.currentTarget).length)
/*Line 159 - 'jquery.event.drag.js' */                return;
/*Line 160 - 'jquery.event.drag.js' */            // store/reset some initial attributes
/*Line 161 - 'jquery.event.drag.js' */            dd.propagates = 1;
/*Line 162 - 'jquery.event.drag.js' */            dd.interactions = [drag.interaction(this, dd)];
/*Line 163 - 'jquery.event.drag.js' */            dd.target = event.target;
/*Line 164 - 'jquery.event.drag.js' */            dd.pageX = event.pageX;
/*Line 165 - 'jquery.event.drag.js' */            dd.pageY = event.pageY;
/*Line 166 - 'jquery.event.drag.js' */            dd.dragging = null;
/*Line 167 - 'jquery.event.drag.js' */            // handle draginit event...
/*Line 168 - 'jquery.event.drag.js' */            results = drag.hijack(event, "draginit", dd);
/*Line 169 - 'jquery.event.drag.js' */            //if ()
/*Line 170 - 'jquery.event.drag.js' */            // early cancel
/*Line 171 - 'jquery.event.drag.js' */            if (!dd.propagates)
/*Line 172 - 'jquery.event.drag.js' */                return;
/*Line 173 - 'jquery.event.drag.js' */            // flatten the result set
/*Line 174 - 'jquery.event.drag.js' */            results = drag.flatten(results);
/*Line 175 - 'jquery.event.drag.js' */            // insert new interaction elements
/*Line 176 - 'jquery.event.drag.js' */            if (results && results.length) {
/*Line 177 - 'jquery.event.drag.js' */                dd.interactions = [];
/*Line 178 - 'jquery.event.drag.js' */                $.each(results, function () {
/*Line 179 - 'jquery.event.drag.js' */                    dd.interactions.push(drag.interaction(this, dd));
/*Line 180 - 'jquery.event.drag.js' */                });
/*Line 181 - 'jquery.event.drag.js' */            }
/*Line 182 - 'jquery.event.drag.js' */            // remember how many interactions are propagating
/*Line 183 - 'jquery.event.drag.js' */            dd.propagates = dd.interactions.length;
/*Line 184 - 'jquery.event.drag.js' */            // locate and init the drop targets
/*Line 185 - 'jquery.event.drag.js' */            if (dd.drop !== false && $special.drop)
/*Line 186 - 'jquery.event.drag.js' */                $special.drop.handler(event, dd);
/*Line 187 - 'jquery.event.drag.js' */            // disable text selection
/*Line 188 - 'jquery.event.drag.js' */            drag.textselect(false);
/*Line 189 - 'jquery.event.drag.js' */            // bind additional events...
/*Line 190 - 'jquery.event.drag.js' */            $event.add(document, dragBindings, drag.handler, dd);
/*Line 191 - 'jquery.event.drag.js' */            // helps prevent text selection
/*Line 192 - 'jquery.event.drag.js' */            if (!hasTouch) {
/*Line 193 - 'jquery.event.drag.js' */                return false;
/*Line 194 - 'jquery.event.drag.js' */            }
/*Line 195 - 'jquery.event.drag.js' */        },
/*Line 196 - 'jquery.event.drag.js' */        // returns an interaction object
/*Line 197 - 'jquery.event.drag.js' */        interaction: function (elem, dd) {
/*Line 198 - 'jquery.event.drag.js' */            return {
/*Line 199 - 'jquery.event.drag.js' */                drag: elem,
/*Line 200 - 'jquery.event.drag.js' */                callback: new drag.callback(),
/*Line 201 - 'jquery.event.drag.js' */                droppable: [],
/*Line 202 - 'jquery.event.drag.js' */                offset: $(elem)[dd.relative ? "position" : "offset"]() || {
/*Line 203 - 'jquery.event.drag.js' */                    top: 0,
/*Line 204 - 'jquery.event.drag.js' */                    left: 0
/*Line 205 - 'jquery.event.drag.js' */                }
/*Line 206 - 'jquery.event.drag.js' */            };
/*Line 207 - 'jquery.event.drag.js' */        },
/*Line 208 - 'jquery.event.drag.js' */        // handle drag-releatd DOM events
/*Line 209 - 'jquery.event.drag.js' */        handler: function (event) {
/*Line 210 - 'jquery.event.drag.js' */            // read the data before hijacking anything
/*Line 211 - 'jquery.event.drag.js' */            var dd = event.data;
/*Line 212 - 'jquery.event.drag.js' */            // mousemove, check distance, start dragging
/*Line 213 - 'jquery.event.drag.js' */            if (!dd.dragging && (event.type === 'mousemove' || event.type === 'touchmove')) {
/*Line 214 - 'jquery.event.drag.js' */                //  drag tolerance, x² + y² = distance²
/*Line 215 - 'jquery.event.drag.js' */                if (Math.pow(event.pageX - dd.pageX, 2) + Math.pow(event.pageY - dd.pageY, 2) < Math.pow(dd.distance, 2))
/*Line 216 - 'jquery.event.drag.js' */                    return; // distance tolerance not reached
/*Line 217 - 'jquery.event.drag.js' */                event.target = dd.target; // force target from "mousedown" event (fix distance issue)
/*Line 218 - 'jquery.event.drag.js' */                drag.hijack(event, "dragstart", dd); // trigger "dragstart"
/*Line 219 - 'jquery.event.drag.js' */                if (dd.propagates) // "dragstart" not rejected
/*Line 220 - 'jquery.event.drag.js' */                    dd.dragging = true; // activate interaction
/*Line 221 - 'jquery.event.drag.js' */            }
/*Line 222 - 'jquery.event.drag.js' */            // handle various events
/*Line 223 - 'jquery.event.drag.js' */            switch (event.type) {
/*Line 224 - 'jquery.event.drag.js' */                // mousemove, dragging
/*Line 225 - 'jquery.event.drag.js' */                case 'touchmove':
/*Line 226 - 'jquery.event.drag.js' */                    // prevent touch device screen scrolling.
/*Line 227 - 'jquery.event.drag.js' */                    if (dd.dragging) {
/*Line 228 - 'jquery.event.drag.js' */                        event.preventDefault();
/*Line 229 - 'jquery.event.drag.js' */                        touchEventXY(event, dd);
/*Line 230 - 'jquery.event.drag.js' */                    }

/*Line 232 - 'jquery.event.drag.js' */                case 'mousemove':
/*Line 233 - 'jquery.event.drag.js' */                    if (dd.dragging) {
/*Line 234 - 'jquery.event.drag.js' */                        // trigger "drag"
/*Line 235 - 'jquery.event.drag.js' */                        drag.hijack(event, "drag", dd);
/*Line 236 - 'jquery.event.drag.js' */                        if (dd.propagates) {
/*Line 237 - 'jquery.event.drag.js' */                            // manage drop events
/*Line 238 - 'jquery.event.drag.js' */                            if (dd.drop !== false && $special.drop)
/*Line 239 - 'jquery.event.drag.js' */                                $special.drop.handler(event, dd); // "dropstart", "dropend"
/*Line 240 - 'jquery.event.drag.js' */                            break; // "drag" not rejected, stop
/*Line 241 - 'jquery.event.drag.js' */                        }
/*Line 242 - 'jquery.event.drag.js' */                        event.type = "mouseup"; // helps "drop" handler behave
/*Line 243 - 'jquery.event.drag.js' */                    }
/*Line 244 - 'jquery.event.drag.js' */                // mouseup, stop dragging
/*Line 245 - 'jquery.event.drag.js' */                case 'mouseup':
/*Line 246 - 'jquery.event.drag.js' */                case 'touchend':
/*Line 247 - 'jquery.event.drag.js' */                    $event.remove(document, dragBindings, drag.handler); // remove page events
/*Line 248 - 'jquery.event.drag.js' */                    if (dd.dragging) {
/*Line 249 - 'jquery.event.drag.js' */                        if (dd.drop !== false && $special.drop)
/*Line 250 - 'jquery.event.drag.js' */                            $special.drop.handler(event, dd); // "drop"
/*Line 251 - 'jquery.event.drag.js' */                        drag.hijack(event, "dragend", dd); // trigger "dragend"
/*Line 252 - 'jquery.event.drag.js' */                    }
/*Line 253 - 'jquery.event.drag.js' */                    drag.textselect(true); // enable text selection

/*Line 255 - 'jquery.event.drag.js' */                    // if suppressing click events...
/*Line 256 - 'jquery.event.drag.js' */                    if (dd.click === false && dd.dragging) {
/*Line 257 - 'jquery.event.drag.js' */                        jQuery.event.triggered = true;
/*Line 258 - 'jquery.event.drag.js' */                        setTimeout(function () {
/*Line 259 - 'jquery.event.drag.js' */                            jQuery.event.triggered = false;
/*Line 260 - 'jquery.event.drag.js' */                        }, 20);
/*Line 261 - 'jquery.event.drag.js' */                        dd.dragging = false; // deactivate element
/*Line 262 - 'jquery.event.drag.js' */                    }
/*Line 263 - 'jquery.event.drag.js' */                    break;
/*Line 264 - 'jquery.event.drag.js' */            }
/*Line 265 - 'jquery.event.drag.js' */        },

/*Line 267 - 'jquery.event.drag.js' */        // identify potential delegate elements
/*Line 268 - 'jquery.event.drag.js' */        delegate: function (event) {
/*Line 269 - 'jquery.event.drag.js' */            // local refs
/*Line 270 - 'jquery.event.drag.js' */            var elems = [], target,
/*Line 271 - 'jquery.event.drag.js' */            // element event structure
/*Line 272 - 'jquery.event.drag.js' */            events = $.data(this, "events") || {};
/*Line 273 - 'jquery.event.drag.js' */            // query live events
/*Line 274 - 'jquery.event.drag.js' */            $.each(events.live || [], function (i, obj) {
/*Line 275 - 'jquery.event.drag.js' */                // no event type matches
/*Line 276 - 'jquery.event.drag.js' */                if (obj.preType.indexOf("drag") !== 0)
/*Line 277 - 'jquery.event.drag.js' */                    return;
/*Line 278 - 'jquery.event.drag.js' */                // locate the element to delegate
/*Line 279 - 'jquery.event.drag.js' */                target = $(event.target).closest(obj.selector, event.currentTarget)[0];
/*Line 280 - 'jquery.event.drag.js' */                // no element found
/*Line 281 - 'jquery.event.drag.js' */                if (!target)
/*Line 282 - 'jquery.event.drag.js' */                    return;
/*Line 283 - 'jquery.event.drag.js' */                // add an event handler
/*Line 284 - 'jquery.event.drag.js' */                $event.add(target, obj.origType + '.' + drag.livekey, obj.origHandler, obj.data);
/*Line 285 - 'jquery.event.drag.js' */                // remember new elements
/*Line 286 - 'jquery.event.drag.js' */                if ($.inArray(target, elems) < 0)
/*Line 287 - 'jquery.event.drag.js' */                    elems.push(target);
/*Line 288 - 'jquery.event.drag.js' */            });
/*Line 289 - 'jquery.event.drag.js' */            // if there are no elements, break
/*Line 290 - 'jquery.event.drag.js' */            if (!elems.length)
/*Line 291 - 'jquery.event.drag.js' */                return false;
/*Line 292 - 'jquery.event.drag.js' */            // return the matched results, and clenup when complete
/*Line 293 - 'jquery.event.drag.js' */            return $(elems).bind("dragend." + drag.livekey, function () {
/*Line 294 - 'jquery.event.drag.js' */                $event.remove(this, "." + drag.livekey); // cleanup delegation
/*Line 295 - 'jquery.event.drag.js' */            });
/*Line 296 - 'jquery.event.drag.js' */        },

/*Line 298 - 'jquery.event.drag.js' */        // re-use event object for custom events
/*Line 299 - 'jquery.event.drag.js' */        hijack: function (event, type, dd, x, elem) {
/*Line 300 - 'jquery.event.drag.js' */            // not configured
/*Line 301 - 'jquery.event.drag.js' */            if (!dd)
/*Line 302 - 'jquery.event.drag.js' */                return;
/*Line 303 - 'jquery.event.drag.js' */            // remember the original event and type
/*Line 304 - 'jquery.event.drag.js' */            var orig = {
/*Line 305 - 'jquery.event.drag.js' */                event: event.originalEvent,
/*Line 306 - 'jquery.event.drag.js' */                type: event.type
/*Line 307 - 'jquery.event.drag.js' */            },
/*Line 308 - 'jquery.event.drag.js' */            // is the event drag related or drog related?
/*Line 309 - 'jquery.event.drag.js' */            mode = type.indexOf("drop") ? "drag" : "drop",
/*Line 310 - 'jquery.event.drag.js' */            // iteration vars
/*Line 311 - 'jquery.event.drag.js' */            result, i = x || 0, ia, $elems, callback,
/*Line 312 - 'jquery.event.drag.js' */            len = !isNaN(x) ? x : dd.interactions.length;
/*Line 313 - 'jquery.event.drag.js' */            // modify the event type
/*Line 314 - 'jquery.event.drag.js' */            event.type = type;
/*Line 315 - 'jquery.event.drag.js' */            // copy the originalEvent as 'source event'
/*Line 316 - 'jquery.event.drag.js' */            event.sourceEvent = orig.event;
/*Line 317 - 'jquery.event.drag.js' */            // remove the original event
/*Line 318 - 'jquery.event.drag.js' */            event.originalEvent = null;
/*Line 319 - 'jquery.event.drag.js' */            // initialize the results
/*Line 320 - 'jquery.event.drag.js' */            dd.results = [];
/*Line 321 - 'jquery.event.drag.js' */            // handle each interacted element
/*Line 322 - 'jquery.event.drag.js' */            do if (ia = dd.interactions[i]) {
/*Line 323 - 'jquery.event.drag.js' */                    // validate the interaction
/*Line 324 - 'jquery.event.drag.js' */                    if (type !== "dragend" && ia.cancelled)
/*Line 325 - 'jquery.event.drag.js' */                        continue;
/*Line 326 - 'jquery.event.drag.js' */                    // set the dragdrop properties on the event object
/*Line 327 - 'jquery.event.drag.js' */                    callback = drag.properties(event, dd, ia);
/*Line 328 - 'jquery.event.drag.js' */                    // prepare for more results
/*Line 329 - 'jquery.event.drag.js' */                    ia.results = [];
/*Line 330 - 'jquery.event.drag.js' */                    // handle each element
/*Line 331 - 'jquery.event.drag.js' */                    $(elem || ia[mode] || dd.droppable).each(function (p, subject) {
/*Line 332 - 'jquery.event.drag.js' */                        // identify drag or drop targets individually
/*Line 333 - 'jquery.event.drag.js' */                        callback.target = subject;
/*Line 334 - 'jquery.event.drag.js' */                        // handle the event
/*Line 335 - 'jquery.event.drag.js' */                        result = subject ? $event.handle.call(subject, event, callback) : null;
/*Line 336 - 'jquery.event.drag.js' */                        // stop the drag interaction for this element
/*Line 337 - 'jquery.event.drag.js' */                        if (result === false) {
/*Line 338 - 'jquery.event.drag.js' */                            if (mode == "drag") {
/*Line 339 - 'jquery.event.drag.js' */                                ia.cancelled = true;
/*Line 340 - 'jquery.event.drag.js' */                                dd.propagates -= 1;
/*Line 341 - 'jquery.event.drag.js' */                            }
/*Line 342 - 'jquery.event.drag.js' */                            if (type == "drop") {
/*Line 343 - 'jquery.event.drag.js' */                                ia[mode][p] = null;
/*Line 344 - 'jquery.event.drag.js' */                            }
/*Line 345 - 'jquery.event.drag.js' */                        }
/*Line 346 - 'jquery.event.drag.js' */                        // assign any dropinit elements
/*Line 347 - 'jquery.event.drag.js' */                        else if (type == "dropinit")
/*Line 348 - 'jquery.event.drag.js' */                            ia.droppable.push(drag.element(result) || subject);
/*Line 349 - 'jquery.event.drag.js' */                        // accept a returned proxy element
/*Line 350 - 'jquery.event.drag.js' */                        if (type == "dragstart")
/*Line 351 - 'jquery.event.drag.js' */                            ia.proxy = $(drag.element(result) || ia.drag)[0];
/*Line 352 - 'jquery.event.drag.js' */                        // remember this result
/*Line 353 - 'jquery.event.drag.js' */                        ia.results.push(result);
/*Line 354 - 'jquery.event.drag.js' */                        // forget the event result, for recycling
/*Line 355 - 'jquery.event.drag.js' */                        delete event.result;
/*Line 356 - 'jquery.event.drag.js' */                        // break on cancelled handler
/*Line 357 - 'jquery.event.drag.js' */                        if (type !== "dropinit")
/*Line 358 - 'jquery.event.drag.js' */                            return result;
/*Line 359 - 'jquery.event.drag.js' */                    });
/*Line 360 - 'jquery.event.drag.js' */                    // flatten the results
/*Line 361 - 'jquery.event.drag.js' */                    dd.results[i] = drag.flatten(ia.results);
/*Line 362 - 'jquery.event.drag.js' */                    // accept a set of valid drop targets
/*Line 363 - 'jquery.event.drag.js' */                    if (type == "dropinit")
/*Line 364 - 'jquery.event.drag.js' */                        ia.droppable = drag.flatten(ia.droppable);
/*Line 365 - 'jquery.event.drag.js' */                    // locate drop targets
/*Line 366 - 'jquery.event.drag.js' */                    if (type == "dragstart" && !ia.cancelled)
/*Line 367 - 'jquery.event.drag.js' */                        callback.update();
/*Line 368 - 'jquery.event.drag.js' */                }
/*Line 369 - 'jquery.event.drag.js' */            while (++i < len)
/*Line 370 - 'jquery.event.drag.js' */            // restore the original event & type
/*Line 371 - 'jquery.event.drag.js' */            event.type = orig.type;
/*Line 372 - 'jquery.event.drag.js' */            event.originalEvent = orig.event;
/*Line 373 - 'jquery.event.drag.js' */            // return all handler results
/*Line 374 - 'jquery.event.drag.js' */            return drag.flatten(dd.results);
/*Line 375 - 'jquery.event.drag.js' */        },

/*Line 377 - 'jquery.event.drag.js' */        // extend the callback object with drag/drop properties...
/*Line 378 - 'jquery.event.drag.js' */        properties: function (event, dd, ia) {
/*Line 379 - 'jquery.event.drag.js' */            var obj = ia.callback;
/*Line 380 - 'jquery.event.drag.js' */            // elements
/*Line 381 - 'jquery.event.drag.js' */            obj.drag = ia.drag;
/*Line 382 - 'jquery.event.drag.js' */            obj.proxy = ia.proxy || ia.drag;
/*Line 383 - 'jquery.event.drag.js' */            // starting mouse position
/*Line 384 - 'jquery.event.drag.js' */            obj.startX = dd.pageX;
/*Line 385 - 'jquery.event.drag.js' */            obj.startY = dd.pageY;
/*Line 386 - 'jquery.event.drag.js' */            // current distance dragged
/*Line 387 - 'jquery.event.drag.js' */            obj.deltaX = event.pageX - dd.pageX;
/*Line 388 - 'jquery.event.drag.js' */            obj.deltaY = event.pageY - dd.pageY;
/*Line 389 - 'jquery.event.drag.js' */            // original element position
/*Line 390 - 'jquery.event.drag.js' */            obj.originalX = ia.offset.left;
/*Line 391 - 'jquery.event.drag.js' */            obj.originalY = ia.offset.top;
/*Line 392 - 'jquery.event.drag.js' */            // adjusted element position
/*Line 393 - 'jquery.event.drag.js' */            obj.offsetX = event.pageX - (dd.pageX - obj.originalX);
/*Line 394 - 'jquery.event.drag.js' */            obj.offsetY = event.pageY - (dd.pageY - obj.originalY);
/*Line 395 - 'jquery.event.drag.js' */            // assign the drop targets information
/*Line 396 - 'jquery.event.drag.js' */            obj.drop = drag.flatten((ia.drop || []).slice());
/*Line 397 - 'jquery.event.drag.js' */            obj.available = drag.flatten((ia.droppable || []).slice());
/*Line 398 - 'jquery.event.drag.js' */            return obj;
/*Line 399 - 'jquery.event.drag.js' */        },

/*Line 401 - 'jquery.event.drag.js' */        // determine is the argument is an element or jquery instance
/*Line 402 - 'jquery.event.drag.js' */        element: function (arg) {
/*Line 403 - 'jquery.event.drag.js' */            if (arg && (arg.jquery || arg.nodeType == 1))
/*Line 404 - 'jquery.event.drag.js' */                return arg;
/*Line 405 - 'jquery.event.drag.js' */        },

/*Line 407 - 'jquery.event.drag.js' */        // flatten nested jquery objects and arrays into a single dimension array
/*Line 408 - 'jquery.event.drag.js' */        flatten: function (arr) {
/*Line 409 - 'jquery.event.drag.js' */            return $.map(arr, function (member) {
/*Line 410 - 'jquery.event.drag.js' */                return member && member.jquery ? $.makeArray(member) :
/*Line 411 - 'jquery.event.drag.js' */                member && member.length ? drag.flatten(member) : member;
/*Line 412 - 'jquery.event.drag.js' */            });
/*Line 413 - 'jquery.event.drag.js' */        },

/*Line 415 - 'jquery.event.drag.js' */        // toggles text selection attributes ON (true) or OFF (false)
/*Line 416 - 'jquery.event.drag.js' */        textselect: function (bool) {
/*Line 417 - 'jquery.event.drag.js' */            $(document)[bool ? "unbind" : "bind"]("selectstart", drag.dontstart)
/*Line 418 - 'jquery.event.drag.js' */            .attr("unselectable", bool ? "off" : "on")
/*Line 419 - 'jquery.event.drag.js' */            .css("MozUserSelect", bool ? "" : "none");
/*Line 420 - 'jquery.event.drag.js' */        },

/*Line 422 - 'jquery.event.drag.js' */        // suppress "selectstart" and "ondragstart" events
/*Line 423 - 'jquery.event.drag.js' */        dontstart: function () {
/*Line 424 - 'jquery.event.drag.js' */            return false;
/*Line 425 - 'jquery.event.drag.js' */        },

/*Line 427 - 'jquery.event.drag.js' */        // a callback instance contructor
/*Line 428 - 'jquery.event.drag.js' */        callback: function (){ }

/*Line 430 - 'jquery.event.drag.js' */    };

/*Line 432 - 'jquery.event.drag.js' */    // callback methods
/*Line 433 - 'jquery.event.drag.js' */    drag.callback.prototype = {
/*Line 434 - 'jquery.event.drag.js' */        update: function () {
/*Line 435 - 'jquery.event.drag.js' */            if ($special.drop && this.available.length)
/*Line 436 - 'jquery.event.drag.js' */                $.each(this.available, function (i) {
/*Line 437 - 'jquery.event.drag.js' */                    $special.drop.locate(this, i);
/*Line 438 - 'jquery.event.drag.js' */                });
/*Line 439 - 'jquery.event.drag.js' */        }
/*Line 440 - 'jquery.event.drag.js' */    };

/*Line 442 - 'jquery.event.drag.js' */    // share the same special event configuration with related events...
/*Line 443 - 'jquery.event.drag.js' */    $special.draginit = $special.dragstart = $special.dragend = drag;
/*Line 444 - 'jquery.event.drag.js' */})(jQuery);
/*Line 0 - 'ZZZZZInitializer.js' */


/*Line 3 - 'ZZZZZInitializer.js' */$(document).ready(function () {


/*Line 6 - 'ZZZZZInitializer.js' */    NeuroSpeech.WebAtoms.dispatcher.setupControls();

/*Line 8 - 'ZZZZZInitializer.js' */    NeuroSpeech.WebAtoms.dispatcher.start();


/*Line 11 - 'ZZZZZInitializer.js' */    $(window).error(function () {
/*Line 12 - 'ZZZZZInitializer.js' */        alert("something went wrong");
/*Line 13 - 'ZZZZZInitializer.js' */    });
/*Line 14 - 'ZZZZZInitializer.js' */});
